/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */
var saveAs =
  saveAs ||
  (function (e) {
    "use strict";
    if (
      typeof e === "undefined" ||
      (typeof navigator !== "undefined" &&
        /MSIE [1-9]\./.test(navigator.userAgent))
    ) {
      return;
    }
    var t = e.document,
      n = function () {
        return e.URL || e.webkitURL || e;
      },
      r = t.createElementNS("http://www.w3.org/1999/xhtml", "a"),
      o = "download" in r,
      a = function (e) {
        var t = new MouseEvent("click");
        e.dispatchEvent(t);
      },
      i = /constructor/i.test(e.HTMLElement) || e.safari,
      f = /CriOS\/[\d]+/.test(navigator.userAgent),
      u = function (t) {
        (e.setImmediate || e.setTimeout)(function () {
          throw t;
        }, 0);
      },
      s = "application/octet-stream",
      d = 1e3 * 40,
      c = function (e) {
        var t = function () {
          if (typeof e === "string") {
            n().revokeObjectURL(e);
          } else {
            e.remove();
          }
        };
        setTimeout(t, d);
      },
      l = function (e, t, n) {
        t = [].concat(t);
        var r = t.length;
        while (r--) {
          var o = e["on" + t[r]];
          if (typeof o === "function") {
            try {
              o.call(e, n || e);
            } catch (a) {
              u(a);
            }
          }
        }
      },
      p = function (e) {
        if (
          /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(
            e.type
          )
        ) {
          return new Blob([String.fromCharCode(65279), e], { type: e.type });
        }
        return e;
      },
      v = function (t, u, d) {
        if (!d) {
          t = p(t);
        }
        var v = this,
          w = t.type,
          m = w === s,
          y,
          h = function () {
            l(v, "writestart progress write writeend".split(" "));
          },
          S = function () {
            if ((f || (m && i)) && e.FileReader) {
              var r = new FileReader();
              r.onloadend = function () {
                var t = f
                  ? r.result
                  : r.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                var n = e.open(t, "_blank");
                if (!n) e.location.href = t;
                t = undefined;
                v.readyState = v.DONE;
                h();
              };
              r.readAsDataURL(t);
              v.readyState = v.INIT;
              return;
            }
            if (!y) {
              y = n().createObjectURL(t);
            }
            if (m) {
              e.location.href = y;
            } else {
              var o = e.open(y, "_blank");
              if (!o) {
                e.location.href = y;
              }
            }
            v.readyState = v.DONE;
            h();
            c(y);
          };
        v.readyState = v.INIT;
        if (o) {
          y = n().createObjectURL(t);
          setTimeout(function () {
            r.href = y;
            r.download = u;
            a(r);
            h();
            c(y);
            v.readyState = v.DONE;
          });
          return;
        }
        S();
      },
      w = v.prototype,
      m = function (e, t, n) {
        return new v(e, t || e.name || "download", n);
      };
    if (typeof navigator !== "undefined" && navigator.msSaveOrOpenBlob) {
      return function (e, t, n) {
        t = t || e.name || "download";
        if (!n) {
          e = p(e);
        }
        return navigator.msSaveOrOpenBlob(e, t);
      };
    }
    w.abort = function () {};
    w.readyState = w.INIT = 0;
    w.WRITING = 1;
    w.DONE = 2;
    w.error =
      w.onwritestart =
      w.onprogress =
      w.onwrite =
      w.onabort =
      w.onerror =
      w.onwriteend =
        null;
    return m;
  })(
    (typeof self !== "undefined" && self) ||
      (typeof window !== "undefined" && window) ||
      this.content
  );
if (typeof module !== "undefined" && module.exports) {
  module.exports.saveAs = saveAs;
} else if (
  typeof define !== "undefined" &&
  define !== null &&
  define.amd !== null
) {
  define("FileSaver.js", function () {
    return saveAs;
  });
}
/*
 * RetargetMouseScroll JavaScript Library v0.0.2
 * 2009-07-30
 * By Eli Grey, http://eligrey.com
 *
 * http://github.com/eligrey/RetargetMouseScroll/tree/master
 *
 * Licensed under the MIT License
 *   See https://github.com/eligrey/RetargetMouseScroll/blob/master/LICENSE.md
 */

/*! @source http://purl.eligrey.com/github/RetargetMouseScroll/blob/master/
 *          RetargetMouseScroll.js
 */

if (typeof this.RetargetMouseScroll !== "function")
  (function () {
    var mouseScrollEvents = ["DOMMouseScroll", "mousewheel"];

    function handleScroll(evt, target, preventDefault, scrollMultiplier) {
      if (preventDefault) {
        if (evt.preventDefault) {
          evt.preventDefault();
        } else {
          event.returnValue = false;
        }
      }

      var scrollAmount = evt.detail || -evt.wheelDelta / 40; // convert wheelData to lines
      scrollAmount *= 19; // convert lines to pixels

      if (typeof scrollMultiplier === "number" && !isNaN(scrollMultiplier))
        scrollAmount *= scrollMultiplier;

      if (
        evt.wheelDeltaX ||
        ("axis" in evt &&
          "HORIZONTAL_AXIS" in evt &&
          evt.axis == evt.HORIZONTAL_AXIS)
      )
        if (target.scrollBy)
          // horizontal scroll
          target.scrollBy(scrollAmount, 0);
        else target.scrollLeft += scrollAmount;
      // vertical scroll
      else if (target.scrollBy) target.scrollBy(0, scrollAmount);
      else target.scrollTop += scrollAmount;
    }

    this.RetargetMouseScroll = function (
      elem,
      target,
      preventDefault,
      scrollMultiplier,
      preventRetarget
    ) {
      if (!elem) elem = document;

      if (!target) target = window;

      if (typeof preventDefault !== "boolean") preventDefault = true;

      if (typeof preventRetarget !== "function") preventRetarget = null;

      var addListener,
        removeListener,
        restoreFn,
        handler = function (evt) {
          evt = evt || window.event;
          if (preventRetarget && preventRetarget.call(this, evt)) return;
          handleScroll(evt, target, preventDefault, scrollMultiplier);
        };

      if ((addListener = elem.addEventListener)) {
        addListener.call(elem, mouseScrollEvents[0], handler, false);
        addListener.call(elem, mouseScrollEvents[1], handler, false);
      } else if ((addListener = elem.attachEvent))
        addListener.call(elem, "on" + mouseScrollEvents[1], handler);

      if ((removeListener = elem.removeEventListener))
        restoreFn = function () {
          removeListener.call(elem, mouseScrollEvents[0], handler, false);
          removeListener.call(elem, mouseScrollEvents[1], handler, false);
        };
      else if ((removeListener = elem.detachEvent))
        restoreFn = function () {
          removeListener.call(elem, "on" + mouseScrollEvents[1], handler);
        };

      return {
        restore: restoreFn,
      };
    };
  }.call(this));
(function (a) {
  a["encoding-indexes"] = {
    big5: [
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      17392,
      19506,
      17923,
      17830,
      17784,
      160359,
      19831,
      17843,
      162993,
      19682,
      163013,
      15253,
      18230,
      18244,
      19527,
      19520,
      148159,
      144919,
      160594,
      159371,
      159954,
      19543,
      172881,
      18255,
      17882,
      19589,
      162924,
      19719,
      19108,
      18081,
      158499,
      29221,
      154196,
      137827,
      146950,
      147297,
      26189,
      22267,
      null,
      32149,
      22813,
      166841,
      15860,
      38708,
      162799,
      23515,
      138590,
      23204,
      13861,
      171696,
      23249,
      23479,
      23804,
      26478,
      34195,
      170309,
      29793,
      29853,
      14453,
      138579,
      145054,
      155681,
      16108,
      153822,
      15093,
      31484,
      40855,
      147809,
      166157,
      143850,
      133770,
      143966,
      17162,
      33924,
      40854,
      37935,
      18736,
      34323,
      22678,
      38730,
      37400,
      31184,
      31282,
      26208,
      27177,
      34973,
      29772,
      31685,
      26498,
      31276,
      21071,
      36934,
      13542,
      29636,
      155065,
      29894,
      40903,
      22451,
      18735,
      21580,
      16689,
      145038,
      22552,
      31346,
      162661,
      35727,
      18094,
      159368,
      16769,
      155033,
      31662,
      140476,
      40904,
      140481,
      140489,
      140492,
      40905,
      34052,
      144827,
      16564,
      40906,
      17633,
      175615,
      25281,
      28782,
      40907,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      12736,
      12737,
      12738,
      12739,
      12740,
      131340,
      12741,
      131281,
      131277,
      12742,
      12743,
      131275,
      139240,
      12744,
      131274,
      12745,
      12746,
      12747,
      12748,
      131342,
      12749,
      12750,
      256,
      193,
      461,
      192,
      274,
      201,
      282,
      200,
      332,
      211,
      465,
      210,
      null,
      7870,
      null,
      7872,
      202,
      257,
      225,
      462,
      224,
      593,
      275,
      233,
      283,
      232,
      299,
      237,
      464,
      236,
      333,
      243,
      466,
      242,
      363,
      250,
      468,
      249,
      470,
      472,
      474,
      476,
      252,
      null,
      7871,
      null,
      7873,
      234,
      609,
      9178,
      9179,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      172969,
      135493,
      null,
      25866,
      null,
      null,
      20029,
      28381,
      40270,
      37343,
      null,
      null,
      161589,
      25745,
      20250,
      20264,
      20392,
      20822,
      20852,
      20892,
      20964,
      21153,
      21160,
      21307,
      21326,
      21457,
      21464,
      22242,
      22768,
      22788,
      22791,
      22834,
      22836,
      23398,
      23454,
      23455,
      23706,
      24198,
      24635,
      25993,
      26622,
      26628,
      26725,
      27982,
      28860,
      30005,
      32420,
      32428,
      32442,
      32455,
      32463,
      32479,
      32518,
      32567,
      33402,
      33487,
      33647,
      35270,
      35774,
      35810,
      36710,
      36711,
      36718,
      29713,
      31996,
      32205,
      26950,
      31433,
      21031,
      null,
      null,
      null,
      null,
      37260,
      30904,
      37214,
      32956,
      null,
      36107,
      33014,
      133607,
      null,
      null,
      32927,
      40647,
      19661,
      40393,
      40460,
      19518,
      171510,
      159758,
      40458,
      172339,
      13761,
      null,
      28314,
      33342,
      29977,
      null,
      18705,
      39532,
      39567,
      40857,
      31111,
      164972,
      138698,
      132560,
      142054,
      20004,
      20097,
      20096,
      20103,
      20159,
      20203,
      20279,
      13388,
      20413,
      15944,
      20483,
      20616,
      13437,
      13459,
      13477,
      20870,
      22789,
      20955,
      20988,
      20997,
      20105,
      21113,
      21136,
      21287,
      13767,
      21417,
      13649,
      21424,
      13651,
      21442,
      21539,
      13677,
      13682,
      13953,
      21651,
      21667,
      21684,
      21689,
      21712,
      21743,
      21784,
      21795,
      21800,
      13720,
      21823,
      13733,
      13759,
      21975,
      13765,
      163204,
      21797,
      null,
      134210,
      134421,
      151851,
      21904,
      142534,
      14828,
      131905,
      36422,
      150968,
      169189,
      16467,
      164030,
      30586,
      142392,
      14900,
      18389,
      164189,
      158194,
      151018,
      25821,
      134524,
      135092,
      134357,
      135412,
      25741,
      36478,
      134806,
      134155,
      135012,
      142505,
      164438,
      148691,
      null,
      134470,
      170573,
      164073,
      18420,
      151207,
      142530,
      39602,
      14951,
      169460,
      16365,
      13574,
      152263,
      169940,
      161992,
      142660,
      40302,
      38933,
      null,
      17369,
      155813,
      25780,
      21731,
      142668,
      142282,
      135287,
      14843,
      135279,
      157402,
      157462,
      162208,
      25834,
      151634,
      134211,
      36456,
      139681,
      166732,
      132913,
      null,
      18443,
      131497,
      16378,
      22643,
      142733,
      null,
      148936,
      132348,
      155799,
      134988,
      134550,
      21881,
      16571,
      17338,
      null,
      19124,
      141926,
      135325,
      33194,
      39157,
      134556,
      25465,
      14846,
      141173,
      36288,
      22177,
      25724,
      15939,
      null,
      173569,
      134665,
      142031,
      142537,
      null,
      135368,
      145858,
      14738,
      14854,
      164507,
      13688,
      155209,
      139463,
      22098,
      134961,
      142514,
      169760,
      13500,
      27709,
      151099,
      null,
      null,
      161140,
      142987,
      139784,
      173659,
      167117,
      134778,
      134196,
      157724,
      32659,
      135375,
      141315,
      141625,
      13819,
      152035,
      134796,
      135053,
      134826,
      16275,
      134960,
      134471,
      135503,
      134732,
      null,
      134827,
      134057,
      134472,
      135360,
      135485,
      16377,
      140950,
      25650,
      135085,
      144372,
      161337,
      142286,
      134526,
      134527,
      142417,
      142421,
      14872,
      134808,
      135367,
      134958,
      173618,
      158544,
      167122,
      167321,
      167114,
      38314,
      21708,
      33476,
      21945,
      null,
      171715,
      39974,
      39606,
      161630,
      142830,
      28992,
      33133,
      33004,
      23580,
      157042,
      33076,
      14231,
      21343,
      164029,
      37302,
      134906,
      134671,
      134775,
      134907,
      13789,
      151019,
      13833,
      134358,
      22191,
      141237,
      135369,
      134672,
      134776,
      135288,
      135496,
      164359,
      136277,
      134777,
      151120,
      142756,
      23124,
      135197,
      135198,
      135413,
      135414,
      22428,
      134673,
      161428,
      164557,
      135093,
      134779,
      151934,
      14083,
      135094,
      135552,
      152280,
      172733,
      149978,
      137274,
      147831,
      164476,
      22681,
      21096,
      13850,
      153405,
      31666,
      23400,
      18432,
      19244,
      40743,
      18919,
      39967,
      39821,
      154484,
      143677,
      22011,
      13810,
      22153,
      20008,
      22786,
      138177,
      194680,
      38737,
      131206,
      20059,
      20155,
      13630,
      23587,
      24401,
      24516,
      14586,
      25164,
      25909,
      27514,
      27701,
      27706,
      28780,
      29227,
      20012,
      29357,
      149737,
      32594,
      31035,
      31993,
      32595,
      156266,
      13505,
      null,
      156491,
      32770,
      32896,
      157202,
      158033,
      21341,
      34916,
      35265,
      161970,
      35744,
      36125,
      38021,
      38264,
      38271,
      38376,
      167439,
      38886,
      39029,
      39118,
      39134,
      39267,
      170000,
      40060,
      40479,
      40644,
      27503,
      63751,
      20023,
      131207,
      38429,
      25143,
      38050,
      null,
      20539,
      28158,
      171123,
      40870,
      15817,
      34959,
      147790,
      28791,
      23797,
      19232,
      152013,
      13657,
      154928,
      24866,
      166450,
      36775,
      37366,
      29073,
      26393,
      29626,
      144001,
      172295,
      15499,
      137600,
      19216,
      30948,
      29698,
      20910,
      165647,
      16393,
      27235,
      172730,
      16931,
      34319,
      133743,
      31274,
      170311,
      166634,
      38741,
      28749,
      21284,
      139390,
      37876,
      30425,
      166371,
      40871,
      30685,
      20131,
      20464,
      20668,
      20015,
      20247,
      40872,
      21556,
      32139,
      22674,
      22736,
      138678,
      24210,
      24217,
      24514,
      141074,
      25995,
      144377,
      26905,
      27203,
      146531,
      27903,
      null,
      29184,
      148741,
      29580,
      16091,
      150035,
      23317,
      29881,
      35715,
      154788,
      153237,
      31379,
      31724,
      31939,
      32364,
      33528,
      34199,
      40873,
      34960,
      40874,
      36537,
      40875,
      36815,
      34143,
      39392,
      37409,
      40876,
      167353,
      136255,
      16497,
      17058,
      23066,
      null,
      null,
      null,
      39016,
      26475,
      17014,
      22333,
      null,
      34262,
      149883,
      33471,
      160013,
      19585,
      159092,
      23931,
      158485,
      159678,
      40877,
      40878,
      23446,
      40879,
      26343,
      32347,
      28247,
      31178,
      15752,
      17603,
      143958,
      141206,
      17306,
      17718,
      null,
      23765,
      146202,
      35577,
      23672,
      15634,
      144721,
      23928,
      40882,
      29015,
      17752,
      147692,
      138787,
      19575,
      14712,
      13386,
      131492,
      158785,
      35532,
      20404,
      131641,
      22975,
      33132,
      38998,
      170234,
      24379,
      134047,
      null,
      139713,
      166253,
      16642,
      18107,
      168057,
      16135,
      40883,
      172469,
      16632,
      14294,
      18167,
      158790,
      16764,
      165554,
      160767,
      17773,
      14548,
      152730,
      17761,
      17691,
      19849,
      19579,
      19830,
      17898,
      16328,
      150287,
      13921,
      17630,
      17597,
      16877,
      23870,
      23880,
      23894,
      15868,
      14351,
      23972,
      23993,
      14368,
      14392,
      24130,
      24253,
      24357,
      24451,
      14600,
      14612,
      14655,
      14669,
      24791,
      24893,
      23781,
      14729,
      25015,
      25017,
      25039,
      14776,
      25132,
      25232,
      25317,
      25368,
      14840,
      22193,
      14851,
      25570,
      25595,
      25607,
      25690,
      14923,
      25792,
      23829,
      22049,
      40863,
      14999,
      25990,
      15037,
      26111,
      26195,
      15090,
      26258,
      15138,
      26390,
      15170,
      26532,
      26624,
      15192,
      26698,
      26756,
      15218,
      15217,
      15227,
      26889,
      26947,
      29276,
      26980,
      27039,
      27013,
      15292,
      27094,
      15325,
      27237,
      27252,
      27249,
      27266,
      15340,
      27289,
      15346,
      27307,
      27317,
      27348,
      27382,
      27521,
      27585,
      27626,
      27765,
      27818,
      15563,
      27906,
      27910,
      27942,
      28033,
      15599,
      28068,
      28081,
      28181,
      28184,
      28201,
      28294,
      166336,
      28347,
      28386,
      28378,
      40831,
      28392,
      28393,
      28452,
      28468,
      15686,
      147265,
      28545,
      28606,
      15722,
      15733,
      29111,
      23705,
      15754,
      28716,
      15761,
      28752,
      28756,
      28783,
      28799,
      28809,
      131877,
      17345,
      13809,
      134872,
      147159,
      22462,
      159443,
      28990,
      153568,
      13902,
      27042,
      166889,
      23412,
      31305,
      153825,
      169177,
      31333,
      31357,
      154028,
      31419,
      31408,
      31426,
      31427,
      29137,
      156813,
      16842,
      31450,
      31453,
      31466,
      16879,
      21682,
      154625,
      31499,
      31573,
      31529,
      152334,
      154878,
      31650,
      31599,
      33692,
      154548,
      158847,
      31696,
      33825,
      31634,
      31672,
      154912,
      15789,
      154725,
      33938,
      31738,
      31750,
      31797,
      154817,
      31812,
      31875,
      149634,
      31910,
      26237,
      148856,
      31945,
      31943,
      31974,
      31860,
      31987,
      31989,
      31950,
      32359,
      17693,
      159300,
      32093,
      159446,
      29837,
      32137,
      32171,
      28981,
      32179,
      32210,
      147543,
      155689,
      32228,
      15635,
      32245,
      137209,
      32229,
      164717,
      32285,
      155937,
      155994,
      32366,
      32402,
      17195,
      37996,
      32295,
      32576,
      32577,
      32583,
      31030,
      156368,
      39393,
      32663,
      156497,
      32675,
      136801,
      131176,
      17756,
      145254,
      17667,
      164666,
      32762,
      156809,
      32773,
      32776,
      32797,
      32808,
      32815,
      172167,
      158915,
      32827,
      32828,
      32865,
      141076,
      18825,
      157222,
      146915,
      157416,
      26405,
      32935,
      166472,
      33031,
      33050,
      22704,
      141046,
      27775,
      156824,
      151480,
      25831,
      136330,
      33304,
      137310,
      27219,
      150117,
      150165,
      17530,
      33321,
      133901,
      158290,
      146814,
      20473,
      136445,
      34018,
      33634,
      158474,
      149927,
      144688,
      137075,
      146936,
      33450,
      26907,
      194964,
      16859,
      34123,
      33488,
      33562,
      134678,
      137140,
      14017,
      143741,
      144730,
      33403,
      33506,
      33560,
      147083,
      159139,
      158469,
      158615,
      144846,
      15807,
      33565,
      21996,
      33669,
      17675,
      159141,
      33708,
      33729,
      33747,
      13438,
      159444,
      27223,
      34138,
      13462,
      159298,
      143087,
      33880,
      154596,
      33905,
      15827,
      17636,
      27303,
      33866,
      146613,
      31064,
      33960,
      158614,
      159351,
      159299,
      34014,
      33807,
      33681,
      17568,
      33939,
      34020,
      154769,
      16960,
      154816,
      17731,
      34100,
      23282,
      159385,
      17703,
      34163,
      17686,
      26559,
      34326,
      165413,
      165435,
      34241,
      159880,
      34306,
      136578,
      159949,
      194994,
      17770,
      34344,
      13896,
      137378,
      21495,
      160666,
      34430,
      34673,
      172280,
      34798,
      142375,
      34737,
      34778,
      34831,
      22113,
      34412,
      26710,
      17935,
      34885,
      34886,
      161248,
      146873,
      161252,
      34910,
      34972,
      18011,
      34996,
      34997,
      25537,
      35013,
      30583,
      161551,
      35207,
      35210,
      35238,
      35241,
      35239,
      35260,
      166437,
      35303,
      162084,
      162493,
      35484,
      30611,
      37374,
      35472,
      162393,
      31465,
      162618,
      147343,
      18195,
      162616,
      29052,
      35596,
      35615,
      152624,
      152933,
      35647,
      35660,
      35661,
      35497,
      150138,
      35728,
      35739,
      35503,
      136927,
      17941,
      34895,
      35995,
      163156,
      163215,
      195028,
      14117,
      163155,
      36054,
      163224,
      163261,
      36114,
      36099,
      137488,
      36059,
      28764,
      36113,
      150729,
      16080,
      36215,
      36265,
      163842,
      135188,
      149898,
      15228,
      164284,
      160012,
      31463,
      36525,
      36534,
      36547,
      37588,
      36633,
      36653,
      164709,
      164882,
      36773,
      37635,
      172703,
      133712,
      36787,
      18730,
      166366,
      165181,
      146875,
      24312,
      143970,
      36857,
      172052,
      165564,
      165121,
      140069,
      14720,
      159447,
      36919,
      165180,
      162494,
      36961,
      165228,
      165387,
      37032,
      165651,
      37060,
      165606,
      37038,
      37117,
      37223,
      15088,
      37289,
      37316,
      31916,
      166195,
      138889,
      37390,
      27807,
      37441,
      37474,
      153017,
      37561,
      166598,
      146587,
      166668,
      153051,
      134449,
      37676,
      37739,
      166625,
      166891,
      28815,
      23235,
      166626,
      166629,
      18789,
      37444,
      166892,
      166969,
      166911,
      37747,
      37979,
      36540,
      38277,
      38310,
      37926,
      38304,
      28662,
      17081,
      140922,
      165592,
      135804,
      146990,
      18911,
      27676,
      38523,
      38550,
      16748,
      38563,
      159445,
      25050,
      38582,
      30965,
      166624,
      38589,
      21452,
      18849,
      158904,
      131700,
      156688,
      168111,
      168165,
      150225,
      137493,
      144138,
      38705,
      34370,
      38710,
      18959,
      17725,
      17797,
      150249,
      28789,
      23361,
      38683,
      38748,
      168405,
      38743,
      23370,
      168427,
      38751,
      37925,
      20688,
      143543,
      143548,
      38793,
      38815,
      38833,
      38846,
      38848,
      38866,
      38880,
      152684,
      38894,
      29724,
      169011,
      38911,
      38901,
      168989,
      162170,
      19153,
      38964,
      38963,
      38987,
      39014,
      15118,
      160117,
      15697,
      132656,
      147804,
      153350,
      39114,
      39095,
      39112,
      39111,
      19199,
      159015,
      136915,
      21936,
      39137,
      39142,
      39148,
      37752,
      39225,
      150057,
      19314,
      170071,
      170245,
      39413,
      39436,
      39483,
      39440,
      39512,
      153381,
      14020,
      168113,
      170965,
      39648,
      39650,
      170757,
      39668,
      19470,
      39700,
      39725,
      165376,
      20532,
      39732,
      158120,
      14531,
      143485,
      39760,
      39744,
      171326,
      23109,
      137315,
      39822,
      148043,
      39938,
      39935,
      39948,
      171624,
      40404,
      171959,
      172434,
      172459,
      172257,
      172323,
      172511,
      40318,
      40323,
      172340,
      40462,
      26760,
      40388,
      139611,
      172435,
      172576,
      137531,
      172595,
      40249,
      172217,
      172724,
      40592,
      40597,
      40606,
      40610,
      19764,
      40618,
      40623,
      148324,
      40641,
      15200,
      14821,
      15645,
      20274,
      14270,
      166955,
      40706,
      40712,
      19350,
      37924,
      159138,
      40727,
      40726,
      40761,
      22175,
      22154,
      40773,
      39352,
      168075,
      38898,
      33919,
      40802,
      40809,
      31452,
      40846,
      29206,
      19390,
      149877,
      149947,
      29047,
      150008,
      148296,
      150097,
      29598,
      166874,
      137466,
      31135,
      166270,
      167478,
      37737,
      37875,
      166468,
      37612,
      37761,
      37835,
      166252,
      148665,
      29207,
      16107,
      30578,
      31299,
      28880,
      148595,
      148472,
      29054,
      137199,
      28835,
      137406,
      144793,
      16071,
      137349,
      152623,
      137208,
      14114,
      136955,
      137273,
      14049,
      137076,
      137425,
      155467,
      14115,
      136896,
      22363,
      150053,
      136190,
      135848,
      136134,
      136374,
      34051,
      145062,
      34051,
      33877,
      149908,
      160101,
      146993,
      152924,
      147195,
      159826,
      17652,
      145134,
      170397,
      159526,
      26617,
      14131,
      15381,
      15847,
      22636,
      137506,
      26640,
      16471,
      145215,
      147681,
      147595,
      147727,
      158753,
      21707,
      22174,
      157361,
      22162,
      135135,
      134056,
      134669,
      37830,
      166675,
      37788,
      20216,
      20779,
      14361,
      148534,
      20156,
      132197,
      131967,
      20299,
      20362,
      153169,
      23144,
      131499,
      132043,
      14745,
      131850,
      132116,
      13365,
      20265,
      131776,
      167603,
      131701,
      35546,
      131596,
      20120,
      20685,
      20749,
      20386,
      20227,
      150030,
      147082,
      20290,
      20526,
      20588,
      20609,
      20428,
      20453,
      20568,
      20732,
      20825,
      20827,
      20829,
      20830,
      28278,
      144789,
      147001,
      147135,
      28018,
      137348,
      147081,
      20904,
      20931,
      132576,
      17629,
      132259,
      132242,
      132241,
      36218,
      166556,
      132878,
      21081,
      21156,
      133235,
      21217,
      37742,
      18042,
      29068,
      148364,
      134176,
      149932,
      135396,
      27089,
      134685,
      29817,
      16094,
      29849,
      29716,
      29782,
      29592,
      19342,
      150204,
      147597,
      21456,
      13700,
      29199,
      147657,
      21940,
      131909,
      21709,
      134086,
      22301,
      37469,
      38644,
      37734,
      22493,
      22413,
      22399,
      13886,
      22731,
      23193,
      166470,
      136954,
      137071,
      136976,
      23084,
      22968,
      37519,
      23166,
      23247,
      23058,
      153926,
      137715,
      137313,
      148117,
      14069,
      27909,
      29763,
      23073,
      155267,
      23169,
      166871,
      132115,
      37856,
      29836,
      135939,
      28933,
      18802,
      37896,
      166395,
      37821,
      14240,
      23582,
      23710,
      24158,
      24136,
      137622,
      137596,
      146158,
      24269,
      23375,
      137475,
      137476,
      14081,
      137376,
      14045,
      136958,
      14035,
      33066,
      166471,
      138682,
      144498,
      166312,
      24332,
      24334,
      137511,
      137131,
      23147,
      137019,
      23364,
      34324,
      161277,
      34912,
      24702,
      141408,
      140843,
      24539,
      16056,
      140719,
      140734,
      168072,
      159603,
      25024,
      131134,
      131142,
      140827,
      24985,
      24984,
      24693,
      142491,
      142599,
      149204,
      168269,
      25713,
      149093,
      142186,
      14889,
      142114,
      144464,
      170218,
      142968,
      25399,
      173147,
      25782,
      25393,
      25553,
      149987,
      142695,
      25252,
      142497,
      25659,
      25963,
      26994,
      15348,
      143502,
      144045,
      149897,
      144043,
      21773,
      144096,
      137433,
      169023,
      26318,
      144009,
      143795,
      15072,
      16784,
      152964,
      166690,
      152975,
      136956,
      152923,
      152613,
      30958,
      143619,
      137258,
      143924,
      13412,
      143887,
      143746,
      148169,
      26254,
      159012,
      26219,
      19347,
      26160,
      161904,
      138731,
      26211,
      144082,
      144097,
      26142,
      153714,
      14545,
      145466,
      145340,
      15257,
      145314,
      144382,
      29904,
      15254,
      26511,
      149034,
      26806,
      26654,
      15300,
      27326,
      14435,
      145365,
      148615,
      27187,
      27218,
      27337,
      27397,
      137490,
      25873,
      26776,
      27212,
      15319,
      27258,
      27479,
      147392,
      146586,
      37792,
      37618,
      166890,
      166603,
      37513,
      163870,
      166364,
      37991,
      28069,
      28427,
      149996,
      28007,
      147327,
      15759,
      28164,
      147516,
      23101,
      28170,
      22599,
      27940,
      30786,
      28987,
      148250,
      148086,
      28913,
      29264,
      29319,
      29332,
      149391,
      149285,
      20857,
      150180,
      132587,
      29818,
      147192,
      144991,
      150090,
      149783,
      155617,
      16134,
      16049,
      150239,
      166947,
      147253,
      24743,
      16115,
      29900,
      29756,
      37767,
      29751,
      17567,
      159210,
      17745,
      30083,
      16227,
      150745,
      150790,
      16216,
      30037,
      30323,
      173510,
      15129,
      29800,
      166604,
      149931,
      149902,
      15099,
      15821,
      150094,
      16127,
      149957,
      149747,
      37370,
      22322,
      37698,
      166627,
      137316,
      20703,
      152097,
      152039,
      30584,
      143922,
      30478,
      30479,
      30587,
      149143,
      145281,
      14942,
      149744,
      29752,
      29851,
      16063,
      150202,
      150215,
      16584,
      150166,
      156078,
      37639,
      152961,
      30750,
      30861,
      30856,
      30930,
      29648,
      31065,
      161601,
      153315,
      16654,
      31131,
      33942,
      31141,
      27181,
      147194,
      31290,
      31220,
      16750,
      136934,
      16690,
      37429,
      31217,
      134476,
      149900,
      131737,
      146874,
      137070,
      13719,
      21867,
      13680,
      13994,
      131540,
      134157,
      31458,
      23129,
      141045,
      154287,
      154268,
      23053,
      131675,
      30960,
      23082,
      154566,
      31486,
      16889,
      31837,
      31853,
      16913,
      154547,
      155324,
      155302,
      31949,
      150009,
      137136,
      31886,
      31868,
      31918,
      27314,
      32220,
      32263,
      32211,
      32590,
      156257,
      155996,
      162632,
      32151,
      155266,
      17002,
      158581,
      133398,
      26582,
      131150,
      144847,
      22468,
      156690,
      156664,
      149858,
      32733,
      31527,
      133164,
      154345,
      154947,
      31500,
      155150,
      39398,
      34373,
      39523,
      27164,
      144447,
      14818,
      150007,
      157101,
      39455,
      157088,
      33920,
      160039,
      158929,
      17642,
      33079,
      17410,
      32966,
      33033,
      33090,
      157620,
      39107,
      158274,
      33378,
      33381,
      158289,
      33875,
      159143,
      34320,
      160283,
      23174,
      16767,
      137280,
      23339,
      137377,
      23268,
      137432,
      34464,
      195004,
      146831,
      34861,
      160802,
      23042,
      34926,
      20293,
      34951,
      35007,
      35046,
      35173,
      35149,
      153219,
      35156,
      161669,
      161668,
      166901,
      166873,
      166812,
      166393,
      16045,
      33955,
      18165,
      18127,
      14322,
      35389,
      35356,
      169032,
      24397,
      37419,
      148100,
      26068,
      28969,
      28868,
      137285,
      40301,
      35999,
      36073,
      163292,
      22938,
      30659,
      23024,
      17262,
      14036,
      36394,
      36519,
      150537,
      36656,
      36682,
      17140,
      27736,
      28603,
      140065,
      18587,
      28537,
      28299,
      137178,
      39913,
      14005,
      149807,
      37051,
      37015,
      21873,
      18694,
      37307,
      37892,
      166475,
      16482,
      166652,
      37927,
      166941,
      166971,
      34021,
      35371,
      38297,
      38311,
      38295,
      38294,
      167220,
      29765,
      16066,
      149759,
      150082,
      148458,
      16103,
      143909,
      38543,
      167655,
      167526,
      167525,
      16076,
      149997,
      150136,
      147438,
      29714,
      29803,
      16124,
      38721,
      168112,
      26695,
      18973,
      168083,
      153567,
      38749,
      37736,
      166281,
      166950,
      166703,
      156606,
      37562,
      23313,
      35689,
      18748,
      29689,
      147995,
      38811,
      38769,
      39224,
      134950,
      24001,
      166853,
      150194,
      38943,
      169178,
      37622,
      169431,
      37349,
      17600,
      166736,
      150119,
      166756,
      39132,
      166469,
      16128,
      37418,
      18725,
      33812,
      39227,
      39245,
      162566,
      15869,
      39323,
      19311,
      39338,
      39516,
      166757,
      153800,
      27279,
      39457,
      23294,
      39471,
      170225,
      19344,
      170312,
      39356,
      19389,
      19351,
      37757,
      22642,
      135938,
      22562,
      149944,
      136424,
      30788,
      141087,
      146872,
      26821,
      15741,
      37976,
      14631,
      24912,
      141185,
      141675,
      24839,
      40015,
      40019,
      40059,
      39989,
      39952,
      39807,
      39887,
      171565,
      39839,
      172533,
      172286,
      40225,
      19630,
      147716,
      40472,
      19632,
      40204,
      172468,
      172269,
      172275,
      170287,
      40357,
      33981,
      159250,
      159711,
      158594,
      34300,
      17715,
      159140,
      159364,
      159216,
      33824,
      34286,
      159232,
      145367,
      155748,
      31202,
      144796,
      144960,
      18733,
      149982,
      15714,
      37851,
      37566,
      37704,
      131775,
      30905,
      37495,
      37965,
      20452,
      13376,
      36964,
      152925,
      30781,
      30804,
      30902,
      30795,
      137047,
      143817,
      149825,
      13978,
      20338,
      28634,
      28633,
      28702,
      28702,
      21524,
      147893,
      22459,
      22771,
      22410,
      40214,
      22487,
      28980,
      13487,
      147884,
      29163,
      158784,
      151447,
      23336,
      137141,
      166473,
      24844,
      23246,
      23051,
      17084,
      148616,
      14124,
      19323,
      166396,
      37819,
      37816,
      137430,
      134941,
      33906,
      158912,
      136211,
      148218,
      142374,
      148417,
      22932,
      146871,
      157505,
      32168,
      155995,
      155812,
      149945,
      149899,
      166394,
      37605,
      29666,
      16105,
      29876,
      166755,
      137375,
      16097,
      150195,
      27352,
      29683,
      29691,
      16086,
      150078,
      150164,
      137177,
      150118,
      132007,
      136228,
      149989,
      29768,
      149782,
      28837,
      149878,
      37508,
      29670,
      37727,
      132350,
      37681,
      166606,
      166422,
      37766,
      166887,
      153045,
      18741,
      166530,
      29035,
      149827,
      134399,
      22180,
      132634,
      134123,
      134328,
      21762,
      31172,
      137210,
      32254,
      136898,
      150096,
      137298,
      17710,
      37889,
      14090,
      166592,
      149933,
      22960,
      137407,
      137347,
      160900,
      23201,
      14050,
      146779,
      14000,
      37471,
      23161,
      166529,
      137314,
      37748,
      15565,
      133812,
      19094,
      14730,
      20724,
      15721,
      15692,
      136092,
      29045,
      17147,
      164376,
      28175,
      168164,
      17643,
      27991,
      163407,
      28775,
      27823,
      15574,
      147437,
      146989,
      28162,
      28428,
      15727,
      132085,
      30033,
      14012,
      13512,
      18048,
      16090,
      18545,
      22980,
      37486,
      18750,
      36673,
      166940,
      158656,
      22546,
      22472,
      14038,
      136274,
      28926,
      148322,
      150129,
      143331,
      135856,
      140221,
      26809,
      26983,
      136088,
      144613,
      162804,
      145119,
      166531,
      145366,
      144378,
      150687,
      27162,
      145069,
      158903,
      33854,
      17631,
      17614,
      159014,
      159057,
      158850,
      159710,
      28439,
      160009,
      33597,
      137018,
      33773,
      158848,
      159827,
      137179,
      22921,
      23170,
      137139,
      23137,
      23153,
      137477,
      147964,
      14125,
      23023,
      137020,
      14023,
      29070,
      37776,
      26266,
      148133,
      23150,
      23083,
      148115,
      27179,
      147193,
      161590,
      148571,
      148170,
      28957,
      148057,
      166369,
      20400,
      159016,
      23746,
      148686,
      163405,
      148413,
      27148,
      148054,
      135940,
      28838,
      28979,
      148457,
      15781,
      27871,
      194597,
      150095,
      32357,
      23019,
      23855,
      15859,
      24412,
      150109,
      137183,
      32164,
      33830,
      21637,
      146170,
      144128,
      131604,
      22398,
      133333,
      132633,
      16357,
      139166,
      172726,
      28675,
      168283,
      23920,
      29583,
      31955,
      166489,
      168992,
      20424,
      32743,
      29389,
      29456,
      162548,
      29496,
      29497,
      153334,
      29505,
      29512,
      16041,
      162584,
      36972,
      29173,
      149746,
      29665,
      33270,
      16074,
      30476,
      16081,
      27810,
      22269,
      29721,
      29726,
      29727,
      16098,
      16112,
      16116,
      16122,
      29907,
      16142,
      16211,
      30018,
      30061,
      30066,
      30093,
      16252,
      30152,
      30172,
      16320,
      30285,
      16343,
      30324,
      16348,
      30330,
      151388,
      29064,
      22051,
      35200,
      22633,
      16413,
      30531,
      16441,
      26465,
      16453,
      13787,
      30616,
      16490,
      16495,
      23646,
      30654,
      30667,
      22770,
      30744,
      28857,
      30748,
      16552,
      30777,
      30791,
      30801,
      30822,
      33864,
      152885,
      31027,
      26627,
      31026,
      16643,
      16649,
      31121,
      31129,
      36795,
      31238,
      36796,
      16743,
      31377,
      16818,
      31420,
      33401,
      16836,
      31439,
      31451,
      16847,
      20001,
      31586,
      31596,
      31611,
      31762,
      31771,
      16992,
      17018,
      31867,
      31900,
      17036,
      31928,
      17044,
      31981,
      36755,
      28864,
      134351,
      32207,
      32212,
      32208,
      32253,
      32686,
      32692,
      29343,
      17303,
      32800,
      32805,
      31545,
      32814,
      32817,
      32852,
      15820,
      22452,
      28832,
      32951,
      33001,
      17389,
      33036,
      29482,
      33038,
      33042,
      30048,
      33044,
      17409,
      15161,
      33110,
      33113,
      33114,
      17427,
      22586,
      33148,
      33156,
      17445,
      33171,
      17453,
      33189,
      22511,
      33217,
      33252,
      33364,
      17551,
      33446,
      33398,
      33482,
      33496,
      33535,
      17584,
      33623,
      38505,
      27018,
      33797,
      28917,
      33892,
      24803,
      33928,
      17668,
      33982,
      34017,
      34040,
      34064,
      34104,
      34130,
      17723,
      34159,
      34160,
      34272,
      17783,
      34418,
      34450,
      34482,
      34543,
      38469,
      34699,
      17926,
      17943,
      34990,
      35071,
      35108,
      35143,
      35217,
      162151,
      35369,
      35384,
      35476,
      35508,
      35921,
      36052,
      36082,
      36124,
      18328,
      22623,
      36291,
      18413,
      20206,
      36410,
      21976,
      22356,
      36465,
      22005,
      36528,
      18487,
      36558,
      36578,
      36580,
      36589,
      36594,
      36791,
      36801,
      36810,
      36812,
      36915,
      39364,
      18605,
      39136,
      37395,
      18718,
      37416,
      37464,
      37483,
      37553,
      37550,
      37567,
      37603,
      37611,
      37619,
      37620,
      37629,
      37699,
      37764,
      37805,
      18757,
      18769,
      40639,
      37911,
      21249,
      37917,
      37933,
      37950,
      18794,
      37972,
      38009,
      38189,
      38306,
      18855,
      38388,
      38451,
      18917,
      26528,
      18980,
      38720,
      18997,
      38834,
      38850,
      22100,
      19172,
      24808,
      39097,
      19225,
      39153,
      22596,
      39182,
      39193,
      20916,
      39196,
      39223,
      39234,
      39261,
      39266,
      19312,
      39365,
      19357,
      39484,
      39695,
      31363,
      39785,
      39809,
      39901,
      39921,
      39924,
      19565,
      39968,
      14191,
      138178,
      40265,
      39994,
      40702,
      22096,
      40339,
      40381,
      40384,
      40444,
      38134,
      36790,
      40571,
      40620,
      40625,
      40637,
      40646,
      38108,
      40674,
      40689,
      40696,
      31432,
      40772,
      131220,
      131767,
      132000,
      26906,
      38083,
      22956,
      132311,
      22592,
      38081,
      14265,
      132565,
      132629,
      132726,
      136890,
      22359,
      29043,
      133826,
      133837,
      134079,
      21610,
      194619,
      134091,
      21662,
      134139,
      134203,
      134227,
      134245,
      134268,
      24807,
      134285,
      22138,
      134325,
      134365,
      134381,
      134511,
      134578,
      134600,
      26965,
      39983,
      34725,
      134660,
      134670,
      134871,
      135056,
      134957,
      134771,
      23584,
      135100,
      24075,
      135260,
      135247,
      135286,
      26398,
      135291,
      135304,
      135318,
      13895,
      135359,
      135379,
      135471,
      135483,
      21348,
      33965,
      135907,
      136053,
      135990,
      35713,
      136567,
      136729,
      137155,
      137159,
      20088,
      28859,
      137261,
      137578,
      137773,
      137797,
      138282,
      138352,
      138412,
      138952,
      25283,
      138965,
      139029,
      29080,
      26709,
      139333,
      27113,
      14024,
      139900,
      140247,
      140282,
      141098,
      141425,
      141647,
      33533,
      141671,
      141715,
      142037,
      35237,
      142056,
      36768,
      142094,
      38840,
      142143,
      38983,
      39613,
      142412,
      null,
      142472,
      142519,
      154600,
      142600,
      142610,
      142775,
      142741,
      142914,
      143220,
      143308,
      143411,
      143462,
      144159,
      144350,
      24497,
      26184,
      26303,
      162425,
      144743,
      144883,
      29185,
      149946,
      30679,
      144922,
      145174,
      32391,
      131910,
      22709,
      26382,
      26904,
      146087,
      161367,
      155618,
      146961,
      147129,
      161278,
      139418,
      18640,
      19128,
      147737,
      166554,
      148206,
      148237,
      147515,
      148276,
      148374,
      150085,
      132554,
      20946,
      132625,
      22943,
      138920,
      15294,
      146687,
      148484,
      148694,
      22408,
      149108,
      14747,
      149295,
      165352,
      170441,
      14178,
      139715,
      35678,
      166734,
      39382,
      149522,
      149755,
      150037,
      29193,
      150208,
      134264,
      22885,
      151205,
      151430,
      132985,
      36570,
      151596,
      21135,
      22335,
      29041,
      152217,
      152601,
      147274,
      150183,
      21948,
      152646,
      152686,
      158546,
      37332,
      13427,
      152895,
      161330,
      152926,
      18200,
      152930,
      152934,
      153543,
      149823,
      153693,
      20582,
      13563,
      144332,
      24798,
      153859,
      18300,
      166216,
      154286,
      154505,
      154630,
      138640,
      22433,
      29009,
      28598,
      155906,
      162834,
      36950,
      156082,
      151450,
      35682,
      156674,
      156746,
      23899,
      158711,
      36662,
      156804,
      137500,
      35562,
      150006,
      156808,
      147439,
      156946,
      19392,
      157119,
      157365,
      141083,
      37989,
      153569,
      24981,
      23079,
      194765,
      20411,
      22201,
      148769,
      157436,
      20074,
      149812,
      38486,
      28047,
      158909,
      13848,
      35191,
      157593,
      157806,
      156689,
      157790,
      29151,
      157895,
      31554,
      168128,
      133649,
      157990,
      37124,
      158009,
      31301,
      40432,
      158202,
      39462,
      158253,
      13919,
      156777,
      131105,
      31107,
      158260,
      158555,
      23852,
      144665,
      33743,
      158621,
      18128,
      158884,
      30011,
      34917,
      159150,
      22710,
      14108,
      140685,
      159819,
      160205,
      15444,
      160384,
      160389,
      37505,
      139642,
      160395,
      37680,
      160486,
      149968,
      27705,
      38047,
      160848,
      134904,
      34855,
      35061,
      141606,
      164979,
      137137,
      28344,
      150058,
      137248,
      14756,
      14009,
      23568,
      31203,
      17727,
      26294,
      171181,
      170148,
      35139,
      161740,
      161880,
      22230,
      16607,
      136714,
      14753,
      145199,
      164072,
      136133,
      29101,
      33638,
      162269,
      168360,
      23143,
      19639,
      159919,
      166315,
      162301,
      162314,
      162571,
      163174,
      147834,
      31555,
      31102,
      163849,
      28597,
      172767,
      27139,
      164632,
      21410,
      159239,
      37823,
      26678,
      38749,
      164207,
      163875,
      158133,
      136173,
      143919,
      163912,
      23941,
      166960,
      163971,
      22293,
      38947,
      166217,
      23979,
      149896,
      26046,
      27093,
      21458,
      150181,
      147329,
      15377,
      26422,
      163984,
      164084,
      164142,
      139169,
      164175,
      164233,
      164271,
      164378,
      164614,
      164655,
      164746,
      13770,
      164968,
      165546,
      18682,
      25574,
      166230,
      30728,
      37461,
      166328,
      17394,
      166375,
      17375,
      166376,
      166726,
      166868,
      23032,
      166921,
      36619,
      167877,
      168172,
      31569,
      168208,
      168252,
      15863,
      168286,
      150218,
      36816,
      29327,
      22155,
      169191,
      169449,
      169392,
      169400,
      169778,
      170193,
      170313,
      170346,
      170435,
      170536,
      170766,
      171354,
      171419,
      32415,
      171768,
      171811,
      19620,
      38215,
      172691,
      29090,
      172799,
      19857,
      36882,
      173515,
      19868,
      134300,
      36798,
      21953,
      36794,
      140464,
      36793,
      150163,
      17673,
      32383,
      28502,
      27313,
      20202,
      13540,
      166700,
      161949,
      14138,
      36480,
      137205,
      163876,
      166764,
      166809,
      162366,
      157359,
      15851,
      161365,
      146615,
      153141,
      153942,
      20122,
      155265,
      156248,
      22207,
      134765,
      36366,
      23405,
      147080,
      150686,
      25566,
      25296,
      137206,
      137339,
      25904,
      22061,
      154698,
      21530,
      152337,
      15814,
      171416,
      19581,
      22050,
      22046,
      32585,
      155352,
      22901,
      146752,
      34672,
      19996,
      135146,
      134473,
      145082,
      33047,
      40286,
      36120,
      30267,
      40005,
      30286,
      30649,
      37701,
      21554,
      33096,
      33527,
      22053,
      33074,
      33816,
      32957,
      21994,
      31074,
      22083,
      21526,
      134813,
      13774,
      22021,
      22001,
      26353,
      164578,
      13869,
      30004,
      22000,
      21946,
      21655,
      21874,
      134209,
      134294,
      24272,
      151880,
      134774,
      142434,
      134818,
      40619,
      32090,
      21982,
      135285,
      25245,
      38765,
      21652,
      36045,
      29174,
      37238,
      25596,
      25529,
      25598,
      21865,
      142147,
      40050,
      143027,
      20890,
      13535,
      134567,
      20903,
      21581,
      21790,
      21779,
      30310,
      36397,
      157834,
      30129,
      32950,
      34820,
      34694,
      35015,
      33206,
      33820,
      135361,
      17644,
      29444,
      149254,
      23440,
      33547,
      157843,
      22139,
      141044,
      163119,
      147875,
      163187,
      159440,
      160438,
      37232,
      135641,
      37384,
      146684,
      173737,
      134828,
      134905,
      29286,
      138402,
      18254,
      151490,
      163833,
      135147,
      16634,
      40029,
      25887,
      142752,
      18675,
      149472,
      171388,
      135148,
      134666,
      24674,
      161187,
      135149,
      null,
      155720,
      135559,
      29091,
      32398,
      40272,
      19994,
      19972,
      13687,
      23309,
      27826,
      21351,
      13996,
      14812,
      21373,
      13989,
      149016,
      22682,
      150382,
      33325,
      21579,
      22442,
      154261,
      133497,
      null,
      14930,
      140389,
      29556,
      171692,
      19721,
      39917,
      146686,
      171824,
      19547,
      151465,
      169374,
      171998,
      33884,
      146870,
      160434,
      157619,
      145184,
      25390,
      32037,
      147191,
      146988,
      14890,
      36872,
      21196,
      15988,
      13946,
      17897,
      132238,
      30272,
      23280,
      134838,
      30842,
      163630,
      22695,
      16575,
      22140,
      39819,
      23924,
      30292,
      173108,
      40581,
      19681,
      30201,
      14331,
      24857,
      143578,
      148466,
      null,
      22109,
      135849,
      22439,
      149859,
      171526,
      21044,
      159918,
      13741,
      27722,
      40316,
      31830,
      39737,
      22494,
      137068,
      23635,
      25811,
      169168,
      156469,
      160100,
      34477,
      134440,
      159010,
      150242,
      134513,
      null,
      20990,
      139023,
      23950,
      38659,
      138705,
      40577,
      36940,
      31519,
      39682,
      23761,
      31651,
      25192,
      25397,
      39679,
      31695,
      39722,
      31870,
      39726,
      31810,
      31878,
      39957,
      31740,
      39689,
      40727,
      39963,
      149822,
      40794,
      21875,
      23491,
      20477,
      40600,
      20466,
      21088,
      15878,
      21201,
      22375,
      20566,
      22967,
      24082,
      38856,
      40363,
      36700,
      21609,
      38836,
      39232,
      38842,
      21292,
      24880,
      26924,
      21466,
      39946,
      40194,
      19515,
      38465,
      27008,
      20646,
      30022,
      137069,
      39386,
      21107,
      null,
      37209,
      38529,
      37212,
      null,
      37201,
      167575,
      25471,
      159011,
      27338,
      22033,
      37262,
      30074,
      25221,
      132092,
      29519,
      31856,
      154657,
      146685,
      null,
      149785,
      30422,
      39837,
      20010,
      134356,
      33726,
      34882,
      null,
      23626,
      27072,
      20717,
      22394,
      21023,
      24053,
      20174,
      27697,
      131570,
      20281,
      21660,
      21722,
      21146,
      36226,
      13822,
      24332,
      13811,
      null,
      27474,
      37244,
      40869,
      39831,
      38958,
      39092,
      39610,
      40616,
      40580,
      29050,
      31508,
      null,
      27642,
      34840,
      32632,
      null,
      22048,
      173642,
      36471,
      40787,
      null,
      36308,
      36431,
      40476,
      36353,
      25218,
      164733,
      36392,
      36469,
      31443,
      150135,
      31294,
      30936,
      27882,
      35431,
      30215,
      166490,
      40742,
      27854,
      34774,
      30147,
      172722,
      30803,
      194624,
      36108,
      29410,
      29553,
      35629,
      29442,
      29937,
      36075,
      150203,
      34351,
      24506,
      34976,
      17591,
      null,
      137275,
      159237,
      null,
      35454,
      140571,
      null,
      24829,
      30311,
      39639,
      40260,
      37742,
      39823,
      34805,
      null,
      34831,
      36087,
      29484,
      38689,
      39856,
      13782,
      29362,
      19463,
      31825,
      39242,
      155993,
      24921,
      19460,
      40598,
      24957,
      null,
      22367,
      24943,
      25254,
      25145,
      25294,
      14940,
      25058,
      21418,
      144373,
      25444,
      26626,
      13778,
      23895,
      166850,
      36826,
      167481,
      null,
      20697,
      138566,
      30982,
      21298,
      38456,
      134971,
      16485,
      null,
      30718,
      null,
      31938,
      155418,
      31962,
      31277,
      32870,
      32867,
      32077,
      29957,
      29938,
      35220,
      33306,
      26380,
      32866,
      160902,
      32859,
      29936,
      33027,
      30500,
      35209,
      157644,
      30035,
      159441,
      34729,
      34766,
      33224,
      34700,
      35401,
      36013,
      35651,
      30507,
      29944,
      34010,
      13877,
      27058,
      36262,
      null,
      35241,
      29800,
      28089,
      34753,
      147473,
      29927,
      15835,
      29046,
      24740,
      24988,
      15569,
      29026,
      24695,
      null,
      32625,
      166701,
      29264,
      24809,
      19326,
      21024,
      15384,
      146631,
      155351,
      161366,
      152881,
      137540,
      135934,
      170243,
      159196,
      159917,
      23745,
      156077,
      166415,
      145015,
      131310,
      157766,
      151310,
      17762,
      23327,
      156492,
      40784,
      40614,
      156267,
      12288,
      65292,
      12289,
      12290,
      65294,
      8231,
      65307,
      65306,
      65311,
      65281,
      65072,
      8230,
      8229,
      65104,
      65105,
      65106,
      183,
      65108,
      65109,
      65110,
      65111,
      65372,
      8211,
      65073,
      8212,
      65075,
      9588,
      65076,
      65103,
      65288,
      65289,
      65077,
      65078,
      65371,
      65373,
      65079,
      65080,
      12308,
      12309,
      65081,
      65082,
      12304,
      12305,
      65083,
      65084,
      12298,
      12299,
      65085,
      65086,
      12296,
      12297,
      65087,
      65088,
      12300,
      12301,
      65089,
      65090,
      12302,
      12303,
      65091,
      65092,
      65113,
      65114,
      65115,
      65116,
      65117,
      65118,
      8216,
      8217,
      8220,
      8221,
      12317,
      12318,
      8245,
      8242,
      65283,
      65286,
      65290,
      8251,
      167,
      12291,
      9675,
      9679,
      9651,
      9650,
      9678,
      9734,
      9733,
      9671,
      9670,
      9633,
      9632,
      9661,
      9660,
      12963,
      8453,
      175,
      65507,
      65343,
      717,
      65097,
      65098,
      65101,
      65102,
      65099,
      65100,
      65119,
      65120,
      65121,
      65291,
      65293,
      215,
      247,
      177,
      8730,
      65308,
      65310,
      65309,
      8806,
      8807,
      8800,
      8734,
      8786,
      8801,
      65122,
      65123,
      65124,
      65125,
      65126,
      65374,
      8745,
      8746,
      8869,
      8736,
      8735,
      8895,
      13266,
      13265,
      8747,
      8750,
      8757,
      8756,
      9792,
      9794,
      8853,
      8857,
      8593,
      8595,
      8592,
      8594,
      8598,
      8599,
      8601,
      8600,
      8741,
      8739,
      65295,
      65340,
      8725,
      65128,
      65284,
      65509,
      12306,
      65504,
      65505,
      65285,
      65312,
      8451,
      8457,
      65129,
      65130,
      65131,
      13269,
      13212,
      13213,
      13214,
      13262,
      13217,
      13198,
      13199,
      13252,
      176,
      20825,
      20827,
      20830,
      20829,
      20833,
      20835,
      21991,
      29929,
      31950,
      9601,
      9602,
      9603,
      9604,
      9605,
      9606,
      9607,
      9608,
      9615,
      9614,
      9613,
      9612,
      9611,
      9610,
      9609,
      9532,
      9524,
      9516,
      9508,
      9500,
      9620,
      9472,
      9474,
      9621,
      9484,
      9488,
      9492,
      9496,
      9581,
      9582,
      9584,
      9583,
      9552,
      9566,
      9578,
      9569,
      9698,
      9699,
      9701,
      9700,
      9585,
      9586,
      9587,
      65296,
      65297,
      65298,
      65299,
      65300,
      65301,
      65302,
      65303,
      65304,
      65305,
      8544,
      8545,
      8546,
      8547,
      8548,
      8549,
      8550,
      8551,
      8552,
      8553,
      12321,
      12322,
      12323,
      12324,
      12325,
      12326,
      12327,
      12328,
      12329,
      21313,
      21316,
      21317,
      65313,
      65314,
      65315,
      65316,
      65317,
      65318,
      65319,
      65320,
      65321,
      65322,
      65323,
      65324,
      65325,
      65326,
      65327,
      65328,
      65329,
      65330,
      65331,
      65332,
      65333,
      65334,
      65335,
      65336,
      65337,
      65338,
      65345,
      65346,
      65347,
      65348,
      65349,
      65350,
      65351,
      65352,
      65353,
      65354,
      65355,
      65356,
      65357,
      65358,
      65359,
      65360,
      65361,
      65362,
      65363,
      65364,
      65365,
      65366,
      65367,
      65368,
      65369,
      65370,
      913,
      914,
      915,
      916,
      917,
      918,
      919,
      920,
      921,
      922,
      923,
      924,
      925,
      926,
      927,
      928,
      929,
      931,
      932,
      933,
      934,
      935,
      936,
      937,
      945,
      946,
      947,
      948,
      949,
      950,
      951,
      952,
      953,
      954,
      955,
      956,
      957,
      958,
      959,
      960,
      961,
      963,
      964,
      965,
      966,
      967,
      968,
      969,
      12549,
      12550,
      12551,
      12552,
      12553,
      12554,
      12555,
      12556,
      12557,
      12558,
      12559,
      12560,
      12561,
      12562,
      12563,
      12564,
      12565,
      12566,
      12567,
      12568,
      12569,
      12570,
      12571,
      12572,
      12573,
      12574,
      12575,
      12576,
      12577,
      12578,
      12579,
      12580,
      12581,
      12582,
      12583,
      12584,
      12585,
      729,
      713,
      714,
      711,
      715,
      9216,
      9217,
      9218,
      9219,
      9220,
      9221,
      9222,
      9223,
      9224,
      9225,
      9226,
      9227,
      9228,
      9229,
      9230,
      9231,
      9232,
      9233,
      9234,
      9235,
      9236,
      9237,
      9238,
      9239,
      9240,
      9241,
      9242,
      9243,
      9244,
      9245,
      9246,
      9247,
      9249,
      8364,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      19968,
      20057,
      19969,
      19971,
      20035,
      20061,
      20102,
      20108,
      20154,
      20799,
      20837,
      20843,
      20960,
      20992,
      20993,
      21147,
      21269,
      21313,
      21340,
      21448,
      19977,
      19979,
      19976,
      19978,
      20011,
      20024,
      20961,
      20037,
      20040,
      20063,
      20062,
      20110,
      20129,
      20800,
      20995,
      21242,
      21315,
      21449,
      21475,
      22303,
      22763,
      22805,
      22823,
      22899,
      23376,
      23377,
      23379,
      23544,
      23567,
      23586,
      23608,
      23665,
      24029,
      24037,
      24049,
      24050,
      24051,
      24062,
      24178,
      24318,
      24331,
      24339,
      25165,
      19985,
      19984,
      19981,
      20013,
      20016,
      20025,
      20043,
      23609,
      20104,
      20113,
      20117,
      20114,
      20116,
      20130,
      20161,
      20160,
      20163,
      20166,
      20167,
      20173,
      20170,
      20171,
      20164,
      20803,
      20801,
      20839,
      20845,
      20846,
      20844,
      20887,
      20982,
      20998,
      20999,
      21000,
      21243,
      21246,
      21247,
      21270,
      21305,
      21320,
      21319,
      21317,
      21342,
      21380,
      21451,
      21450,
      21453,
      22764,
      22825,
      22827,
      22826,
      22829,
      23380,
      23569,
      23588,
      23610,
      23663,
      24052,
      24187,
      24319,
      24340,
      24341,
      24515,
      25096,
      25142,
      25163,
      25166,
      25903,
      25991,
      26007,
      26020,
      26041,
      26085,
      26352,
      26376,
      26408,
      27424,
      27490,
      27513,
      27595,
      27604,
      27611,
      27663,
      27700,
      28779,
      29226,
      29238,
      29243,
      29255,
      29273,
      29275,
      29356,
      29579,
      19993,
      19990,
      19989,
      19988,
      19992,
      20027,
      20045,
      20047,
      20046,
      20197,
      20184,
      20180,
      20181,
      20182,
      20183,
      20195,
      20196,
      20185,
      20190,
      20805,
      20804,
      20873,
      20874,
      20908,
      20985,
      20986,
      20984,
      21002,
      21152,
      21151,
      21253,
      21254,
      21271,
      21277,
      20191,
      21322,
      21321,
      21345,
      21344,
      21359,
      21358,
      21435,
      21487,
      21476,
      21491,
      21484,
      21486,
      21481,
      21480,
      21500,
      21496,
      21493,
      21483,
      21478,
      21482,
      21490,
      21489,
      21488,
      21477,
      21485,
      21499,
      22235,
      22234,
      22806,
      22830,
      22833,
      22900,
      22902,
      23381,
      23427,
      23612,
      24040,
      24039,
      24038,
      24066,
      24067,
      24179,
      24188,
      24321,
      24344,
      24343,
      24517,
      25098,
      25171,
      25172,
      25170,
      25169,
      26021,
      26086,
      26414,
      26412,
      26410,
      26411,
      26413,
      27491,
      27597,
      27665,
      27664,
      27704,
      27713,
      27712,
      27710,
      29359,
      29572,
      29577,
      29916,
      29926,
      29976,
      29983,
      29992,
      29993,
      30000,
      30001,
      30002,
      30003,
      30091,
      30333,
      30382,
      30399,
      30446,
      30683,
      30690,
      30707,
      31034,
      31166,
      31348,
      31435,
      19998,
      19999,
      20050,
      20051,
      20073,
      20121,
      20132,
      20134,
      20133,
      20223,
      20233,
      20249,
      20234,
      20245,
      20237,
      20240,
      20241,
      20239,
      20210,
      20214,
      20219,
      20208,
      20211,
      20221,
      20225,
      20235,
      20809,
      20807,
      20806,
      20808,
      20840,
      20849,
      20877,
      20912,
      21015,
      21009,
      21010,
      21006,
      21014,
      21155,
      21256,
      21281,
      21280,
      21360,
      21361,
      21513,
      21519,
      21516,
      21514,
      21520,
      21505,
      21515,
      21508,
      21521,
      21517,
      21512,
      21507,
      21518,
      21510,
      21522,
      22240,
      22238,
      22237,
      22323,
      22320,
      22312,
      22317,
      22316,
      22319,
      22313,
      22809,
      22810,
      22839,
      22840,
      22916,
      22904,
      22915,
      22909,
      22905,
      22914,
      22913,
      23383,
      23384,
      23431,
      23432,
      23429,
      23433,
      23546,
      23574,
      23673,
      24030,
      24070,
      24182,
      24180,
      24335,
      24347,
      24537,
      24534,
      25102,
      25100,
      25101,
      25104,
      25187,
      25179,
      25176,
      25910,
      26089,
      26088,
      26092,
      26093,
      26354,
      26355,
      26377,
      26429,
      26420,
      26417,
      26421,
      27425,
      27492,
      27515,
      27670,
      27741,
      27735,
      27737,
      27743,
      27744,
      27728,
      27733,
      27745,
      27739,
      27725,
      27726,
      28784,
      29279,
      29277,
      30334,
      31481,
      31859,
      31992,
      32566,
      32650,
      32701,
      32769,
      32771,
      32780,
      32786,
      32819,
      32895,
      32905,
      32907,
      32908,
      33251,
      33258,
      33267,
      33276,
      33292,
      33307,
      33311,
      33390,
      33394,
      33406,
      34411,
      34880,
      34892,
      34915,
      35199,
      38433,
      20018,
      20136,
      20301,
      20303,
      20295,
      20311,
      20318,
      20276,
      20315,
      20309,
      20272,
      20304,
      20305,
      20285,
      20282,
      20280,
      20291,
      20308,
      20284,
      20294,
      20323,
      20316,
      20320,
      20271,
      20302,
      20278,
      20313,
      20317,
      20296,
      20314,
      20812,
      20811,
      20813,
      20853,
      20918,
      20919,
      21029,
      21028,
      21033,
      21034,
      21032,
      21163,
      21161,
      21162,
      21164,
      21283,
      21363,
      21365,
      21533,
      21549,
      21534,
      21566,
      21542,
      21582,
      21543,
      21574,
      21571,
      21555,
      21576,
      21570,
      21531,
      21545,
      21578,
      21561,
      21563,
      21560,
      21550,
      21557,
      21558,
      21536,
      21564,
      21568,
      21553,
      21547,
      21535,
      21548,
      22250,
      22256,
      22244,
      22251,
      22346,
      22353,
      22336,
      22349,
      22343,
      22350,
      22334,
      22352,
      22351,
      22331,
      22767,
      22846,
      22941,
      22930,
      22952,
      22942,
      22947,
      22937,
      22934,
      22925,
      22948,
      22931,
      22922,
      22949,
      23389,
      23388,
      23386,
      23387,
      23436,
      23435,
      23439,
      23596,
      23616,
      23617,
      23615,
      23614,
      23696,
      23697,
      23700,
      23692,
      24043,
      24076,
      24207,
      24199,
      24202,
      24311,
      24324,
      24351,
      24420,
      24418,
      24439,
      24441,
      24536,
      24524,
      24535,
      24525,
      24561,
      24555,
      24568,
      24554,
      25106,
      25105,
      25220,
      25239,
      25238,
      25216,
      25206,
      25225,
      25197,
      25226,
      25212,
      25214,
      25209,
      25203,
      25234,
      25199,
      25240,
      25198,
      25237,
      25235,
      25233,
      25222,
      25913,
      25915,
      25912,
      26097,
      26356,
      26463,
      26446,
      26447,
      26448,
      26449,
      26460,
      26454,
      26462,
      26441,
      26438,
      26464,
      26451,
      26455,
      27493,
      27599,
      27714,
      27742,
      27801,
      27777,
      27784,
      27785,
      27781,
      27803,
      27754,
      27770,
      27792,
      27760,
      27788,
      27752,
      27798,
      27794,
      27773,
      27779,
      27762,
      27774,
      27764,
      27782,
      27766,
      27789,
      27796,
      27800,
      27778,
      28790,
      28796,
      28797,
      28792,
      29282,
      29281,
      29280,
      29380,
      29378,
      29590,
      29996,
      29995,
      30007,
      30008,
      30338,
      30447,
      30691,
      31169,
      31168,
      31167,
      31350,
      31995,
      32597,
      32918,
      32915,
      32925,
      32920,
      32923,
      32922,
      32946,
      33391,
      33426,
      33419,
      33421,
      35211,
      35282,
      35328,
      35895,
      35910,
      35925,
      35997,
      36196,
      36208,
      36275,
      36523,
      36554,
      36763,
      36784,
      36802,
      36806,
      36805,
      36804,
      24033,
      37009,
      37026,
      37034,
      37030,
      37027,
      37193,
      37318,
      37324,
      38450,
      38446,
      38449,
      38442,
      38444,
      20006,
      20054,
      20083,
      20107,
      20123,
      20126,
      20139,
      20140,
      20335,
      20381,
      20365,
      20339,
      20351,
      20332,
      20379,
      20363,
      20358,
      20355,
      20336,
      20341,
      20360,
      20329,
      20347,
      20374,
      20350,
      20367,
      20369,
      20346,
      20820,
      20818,
      20821,
      20841,
      20855,
      20854,
      20856,
      20925,
      20989,
      21051,
      21048,
      21047,
      21050,
      21040,
      21038,
      21046,
      21057,
      21182,
      21179,
      21330,
      21332,
      21331,
      21329,
      21350,
      21367,
      21368,
      21369,
      21462,
      21460,
      21463,
      21619,
      21621,
      21654,
      21624,
      21653,
      21632,
      21627,
      21623,
      21636,
      21650,
      21638,
      21628,
      21648,
      21617,
      21622,
      21644,
      21658,
      21602,
      21608,
      21643,
      21629,
      21646,
      22266,
      22403,
      22391,
      22378,
      22377,
      22369,
      22374,
      22372,
      22396,
      22812,
      22857,
      22855,
      22856,
      22852,
      22868,
      22974,
      22971,
      22996,
      22969,
      22958,
      22993,
      22982,
      22992,
      22989,
      22987,
      22995,
      22986,
      22959,
      22963,
      22994,
      22981,
      23391,
      23396,
      23395,
      23447,
      23450,
      23448,
      23452,
      23449,
      23451,
      23578,
      23624,
      23621,
      23622,
      23735,
      23713,
      23736,
      23721,
      23723,
      23729,
      23731,
      24088,
      24090,
      24086,
      24085,
      24091,
      24081,
      24184,
      24218,
      24215,
      24220,
      24213,
      24214,
      24310,
      24358,
      24359,
      24361,
      24448,
      24449,
      24447,
      24444,
      24541,
      24544,
      24573,
      24565,
      24575,
      24591,
      24596,
      24623,
      24629,
      24598,
      24618,
      24597,
      24609,
      24615,
      24617,
      24619,
      24603,
      25110,
      25109,
      25151,
      25150,
      25152,
      25215,
      25289,
      25292,
      25284,
      25279,
      25282,
      25273,
      25298,
      25307,
      25259,
      25299,
      25300,
      25291,
      25288,
      25256,
      25277,
      25276,
      25296,
      25305,
      25287,
      25293,
      25269,
      25306,
      25265,
      25304,
      25302,
      25303,
      25286,
      25260,
      25294,
      25918,
      26023,
      26044,
      26106,
      26132,
      26131,
      26124,
      26118,
      26114,
      26126,
      26112,
      26127,
      26133,
      26122,
      26119,
      26381,
      26379,
      26477,
      26507,
      26517,
      26481,
      26524,
      26483,
      26487,
      26503,
      26525,
      26519,
      26479,
      26480,
      26495,
      26505,
      26494,
      26512,
      26485,
      26522,
      26515,
      26492,
      26474,
      26482,
      27427,
      27494,
      27495,
      27519,
      27667,
      27675,
      27875,
      27880,
      27891,
      27825,
      27852,
      27877,
      27827,
      27837,
      27838,
      27836,
      27874,
      27819,
      27861,
      27859,
      27832,
      27844,
      27833,
      27841,
      27822,
      27863,
      27845,
      27889,
      27839,
      27835,
      27873,
      27867,
      27850,
      27820,
      27887,
      27868,
      27862,
      27872,
      28821,
      28814,
      28818,
      28810,
      28825,
      29228,
      29229,
      29240,
      29256,
      29287,
      29289,
      29376,
      29390,
      29401,
      29399,
      29392,
      29609,
      29608,
      29599,
      29611,
      29605,
      30013,
      30109,
      30105,
      30106,
      30340,
      30402,
      30450,
      30452,
      30693,
      30717,
      31038,
      31040,
      31041,
      31177,
      31176,
      31354,
      31353,
      31482,
      31998,
      32596,
      32652,
      32651,
      32773,
      32954,
      32933,
      32930,
      32945,
      32929,
      32939,
      32937,
      32948,
      32938,
      32943,
      33253,
      33278,
      33293,
      33459,
      33437,
      33433,
      33453,
      33469,
      33439,
      33465,
      33457,
      33452,
      33445,
      33455,
      33464,
      33443,
      33456,
      33470,
      33463,
      34382,
      34417,
      21021,
      34920,
      36555,
      36814,
      36820,
      36817,
      37045,
      37048,
      37041,
      37046,
      37319,
      37329,
      38263,
      38272,
      38428,
      38464,
      38463,
      38459,
      38468,
      38466,
      38585,
      38632,
      38738,
      38750,
      20127,
      20141,
      20142,
      20449,
      20405,
      20399,
      20415,
      20448,
      20433,
      20431,
      20445,
      20419,
      20406,
      20440,
      20447,
      20426,
      20439,
      20398,
      20432,
      20420,
      20418,
      20442,
      20430,
      20446,
      20407,
      20823,
      20882,
      20881,
      20896,
      21070,
      21059,
      21066,
      21069,
      21068,
      21067,
      21063,
      21191,
      21193,
      21187,
      21185,
      21261,
      21335,
      21371,
      21402,
      21467,
      21676,
      21696,
      21672,
      21710,
      21705,
      21688,
      21670,
      21683,
      21703,
      21698,
      21693,
      21674,
      21697,
      21700,
      21704,
      21679,
      21675,
      21681,
      21691,
      21673,
      21671,
      21695,
      22271,
      22402,
      22411,
      22432,
      22435,
      22434,
      22478,
      22446,
      22419,
      22869,
      22865,
      22863,
      22862,
      22864,
      23004,
      23000,
      23039,
      23011,
      23016,
      23043,
      23013,
      23018,
      23002,
      23014,
      23041,
      23035,
      23401,
      23459,
      23462,
      23460,
      23458,
      23461,
      23553,
      23630,
      23631,
      23629,
      23627,
      23769,
      23762,
      24055,
      24093,
      24101,
      24095,
      24189,
      24224,
      24230,
      24314,
      24328,
      24365,
      24421,
      24456,
      24453,
      24458,
      24459,
      24455,
      24460,
      24457,
      24594,
      24605,
      24608,
      24613,
      24590,
      24616,
      24653,
      24688,
      24680,
      24674,
      24646,
      24643,
      24684,
      24683,
      24682,
      24676,
      25153,
      25308,
      25366,
      25353,
      25340,
      25325,
      25345,
      25326,
      25341,
      25351,
      25329,
      25335,
      25327,
      25324,
      25342,
      25332,
      25361,
      25346,
      25919,
      25925,
      26027,
      26045,
      26082,
      26149,
      26157,
      26144,
      26151,
      26159,
      26143,
      26152,
      26161,
      26148,
      26359,
      26623,
      26579,
      26609,
      26580,
      26576,
      26604,
      26550,
      26543,
      26613,
      26601,
      26607,
      26564,
      26577,
      26548,
      26586,
      26597,
      26552,
      26575,
      26590,
      26611,
      26544,
      26585,
      26594,
      26589,
      26578,
      27498,
      27523,
      27526,
      27573,
      27602,
      27607,
      27679,
      27849,
      27915,
      27954,
      27946,
      27969,
      27941,
      27916,
      27953,
      27934,
      27927,
      27963,
      27965,
      27966,
      27958,
      27931,
      27893,
      27961,
      27943,
      27960,
      27945,
      27950,
      27957,
      27918,
      27947,
      28843,
      28858,
      28851,
      28844,
      28847,
      28845,
      28856,
      28846,
      28836,
      29232,
      29298,
      29295,
      29300,
      29417,
      29408,
      29409,
      29623,
      29642,
      29627,
      29618,
      29645,
      29632,
      29619,
      29978,
      29997,
      30031,
      30028,
      30030,
      30027,
      30123,
      30116,
      30117,
      30114,
      30115,
      30328,
      30342,
      30343,
      30344,
      30408,
      30406,
      30403,
      30405,
      30465,
      30457,
      30456,
      30473,
      30475,
      30462,
      30460,
      30471,
      30684,
      30722,
      30740,
      30732,
      30733,
      31046,
      31049,
      31048,
      31047,
      31161,
      31162,
      31185,
      31186,
      31179,
      31359,
      31361,
      31487,
      31485,
      31869,
      32002,
      32005,
      32000,
      32009,
      32007,
      32004,
      32006,
      32568,
      32654,
      32703,
      32772,
      32784,
      32781,
      32785,
      32822,
      32982,
      32997,
      32986,
      32963,
      32964,
      32972,
      32993,
      32987,
      32974,
      32990,
      32996,
      32989,
      33268,
      33314,
      33511,
      33539,
      33541,
      33507,
      33499,
      33510,
      33540,
      33509,
      33538,
      33545,
      33490,
      33495,
      33521,
      33537,
      33500,
      33492,
      33489,
      33502,
      33491,
      33503,
      33519,
      33542,
      34384,
      34425,
      34427,
      34426,
      34893,
      34923,
      35201,
      35284,
      35336,
      35330,
      35331,
      35998,
      36000,
      36212,
      36211,
      36276,
      36557,
      36556,
      36848,
      36838,
      36834,
      36842,
      36837,
      36845,
      36843,
      36836,
      36840,
      37066,
      37070,
      37057,
      37059,
      37195,
      37194,
      37325,
      38274,
      38480,
      38475,
      38476,
      38477,
      38754,
      38761,
      38859,
      38893,
      38899,
      38913,
      39080,
      39131,
      39135,
      39318,
      39321,
      20056,
      20147,
      20492,
      20493,
      20515,
      20463,
      20518,
      20517,
      20472,
      20521,
      20502,
      20486,
      20540,
      20511,
      20506,
      20498,
      20497,
      20474,
      20480,
      20500,
      20520,
      20465,
      20513,
      20491,
      20505,
      20504,
      20467,
      20462,
      20525,
      20522,
      20478,
      20523,
      20489,
      20860,
      20900,
      20901,
      20898,
      20941,
      20940,
      20934,
      20939,
      21078,
      21084,
      21076,
      21083,
      21085,
      21290,
      21375,
      21407,
      21405,
      21471,
      21736,
      21776,
      21761,
      21815,
      21756,
      21733,
      21746,
      21766,
      21754,
      21780,
      21737,
      21741,
      21729,
      21769,
      21742,
      21738,
      21734,
      21799,
      21767,
      21757,
      21775,
      22275,
      22276,
      22466,
      22484,
      22475,
      22467,
      22537,
      22799,
      22871,
      22872,
      22874,
      23057,
      23064,
      23068,
      23071,
      23067,
      23059,
      23020,
      23072,
      23075,
      23081,
      23077,
      23052,
      23049,
      23403,
      23640,
      23472,
      23475,
      23478,
      23476,
      23470,
      23477,
      23481,
      23480,
      23556,
      23633,
      23637,
      23632,
      23789,
      23805,
      23803,
      23786,
      23784,
      23792,
      23798,
      23809,
      23796,
      24046,
      24109,
      24107,
      24235,
      24237,
      24231,
      24369,
      24466,
      24465,
      24464,
      24665,
      24675,
      24677,
      24656,
      24661,
      24685,
      24681,
      24687,
      24708,
      24735,
      24730,
      24717,
      24724,
      24716,
      24709,
      24726,
      25159,
      25331,
      25352,
      25343,
      25422,
      25406,
      25391,
      25429,
      25410,
      25414,
      25423,
      25417,
      25402,
      25424,
      25405,
      25386,
      25387,
      25384,
      25421,
      25420,
      25928,
      25929,
      26009,
      26049,
      26053,
      26178,
      26185,
      26191,
      26179,
      26194,
      26188,
      26181,
      26177,
      26360,
      26388,
      26389,
      26391,
      26657,
      26680,
      26696,
      26694,
      26707,
      26681,
      26690,
      26708,
      26665,
      26803,
      26647,
      26700,
      26705,
      26685,
      26612,
      26704,
      26688,
      26684,
      26691,
      26666,
      26693,
      26643,
      26648,
      26689,
      27530,
      27529,
      27575,
      27683,
      27687,
      27688,
      27686,
      27684,
      27888,
      28010,
      28053,
      28040,
      28039,
      28006,
      28024,
      28023,
      27993,
      28051,
      28012,
      28041,
      28014,
      27994,
      28020,
      28009,
      28044,
      28042,
      28025,
      28037,
      28005,
      28052,
      28874,
      28888,
      28900,
      28889,
      28872,
      28879,
      29241,
      29305,
      29436,
      29433,
      29437,
      29432,
      29431,
      29574,
      29677,
      29705,
      29678,
      29664,
      29674,
      29662,
      30036,
      30045,
      30044,
      30042,
      30041,
      30142,
      30149,
      30151,
      30130,
      30131,
      30141,
      30140,
      30137,
      30146,
      30136,
      30347,
      30384,
      30410,
      30413,
      30414,
      30505,
      30495,
      30496,
      30504,
      30697,
      30768,
      30759,
      30776,
      30749,
      30772,
      30775,
      30757,
      30765,
      30752,
      30751,
      30770,
      31061,
      31056,
      31072,
      31071,
      31062,
      31070,
      31069,
      31063,
      31066,
      31204,
      31203,
      31207,
      31199,
      31206,
      31209,
      31192,
      31364,
      31368,
      31449,
      31494,
      31505,
      31881,
      32033,
      32023,
      32011,
      32010,
      32032,
      32034,
      32020,
      32016,
      32021,
      32026,
      32028,
      32013,
      32025,
      32027,
      32570,
      32607,
      32660,
      32709,
      32705,
      32774,
      32792,
      32789,
      32793,
      32791,
      32829,
      32831,
      33009,
      33026,
      33008,
      33029,
      33005,
      33012,
      33030,
      33016,
      33011,
      33032,
      33021,
      33034,
      33020,
      33007,
      33261,
      33260,
      33280,
      33296,
      33322,
      33323,
      33320,
      33324,
      33467,
      33579,
      33618,
      33620,
      33610,
      33592,
      33616,
      33609,
      33589,
      33588,
      33615,
      33586,
      33593,
      33590,
      33559,
      33600,
      33585,
      33576,
      33603,
      34388,
      34442,
      34474,
      34451,
      34468,
      34473,
      34444,
      34467,
      34460,
      34928,
      34935,
      34945,
      34946,
      34941,
      34937,
      35352,
      35344,
      35342,
      35340,
      35349,
      35338,
      35351,
      35347,
      35350,
      35343,
      35345,
      35912,
      35962,
      35961,
      36001,
      36002,
      36215,
      36524,
      36562,
      36564,
      36559,
      36785,
      36865,
      36870,
      36855,
      36864,
      36858,
      36852,
      36867,
      36861,
      36869,
      36856,
      37013,
      37089,
      37085,
      37090,
      37202,
      37197,
      37196,
      37336,
      37341,
      37335,
      37340,
      37337,
      38275,
      38498,
      38499,
      38497,
      38491,
      38493,
      38500,
      38488,
      38494,
      38587,
      39138,
      39340,
      39592,
      39640,
      39717,
      39730,
      39740,
      20094,
      20602,
      20605,
      20572,
      20551,
      20547,
      20556,
      20570,
      20553,
      20581,
      20598,
      20558,
      20565,
      20597,
      20596,
      20599,
      20559,
      20495,
      20591,
      20589,
      20828,
      20885,
      20976,
      21098,
      21103,
      21202,
      21209,
      21208,
      21205,
      21264,
      21263,
      21273,
      21311,
      21312,
      21310,
      21443,
      26364,
      21830,
      21866,
      21862,
      21828,
      21854,
      21857,
      21827,
      21834,
      21809,
      21846,
      21839,
      21845,
      21807,
      21860,
      21816,
      21806,
      21852,
      21804,
      21859,
      21811,
      21825,
      21847,
      22280,
      22283,
      22281,
      22495,
      22533,
      22538,
      22534,
      22496,
      22500,
      22522,
      22530,
      22581,
      22519,
      22521,
      22816,
      22882,
      23094,
      23105,
      23113,
      23142,
      23146,
      23104,
      23100,
      23138,
      23130,
      23110,
      23114,
      23408,
      23495,
      23493,
      23492,
      23490,
      23487,
      23494,
      23561,
      23560,
      23559,
      23648,
      23644,
      23645,
      23815,
      23814,
      23822,
      23835,
      23830,
      23842,
      23825,
      23849,
      23828,
      23833,
      23844,
      23847,
      23831,
      24034,
      24120,
      24118,
      24115,
      24119,
      24247,
      24248,
      24246,
      24245,
      24254,
      24373,
      24375,
      24407,
      24428,
      24425,
      24427,
      24471,
      24473,
      24478,
      24472,
      24481,
      24480,
      24476,
      24703,
      24739,
      24713,
      24736,
      24744,
      24779,
      24756,
      24806,
      24765,
      24773,
      24763,
      24757,
      24796,
      24764,
      24792,
      24789,
      24774,
      24799,
      24760,
      24794,
      24775,
      25114,
      25115,
      25160,
      25504,
      25511,
      25458,
      25494,
      25506,
      25509,
      25463,
      25447,
      25496,
      25514,
      25457,
      25513,
      25481,
      25475,
      25499,
      25451,
      25512,
      25476,
      25480,
      25497,
      25505,
      25516,
      25490,
      25487,
      25472,
      25467,
      25449,
      25448,
      25466,
      25949,
      25942,
      25937,
      25945,
      25943,
      21855,
      25935,
      25944,
      25941,
      25940,
      26012,
      26011,
      26028,
      26063,
      26059,
      26060,
      26062,
      26205,
      26202,
      26212,
      26216,
      26214,
      26206,
      26361,
      21207,
      26395,
      26753,
      26799,
      26786,
      26771,
      26805,
      26751,
      26742,
      26801,
      26791,
      26775,
      26800,
      26755,
      26820,
      26797,
      26758,
      26757,
      26772,
      26781,
      26792,
      26783,
      26785,
      26754,
      27442,
      27578,
      27627,
      27628,
      27691,
      28046,
      28092,
      28147,
      28121,
      28082,
      28129,
      28108,
      28132,
      28155,
      28154,
      28165,
      28103,
      28107,
      28079,
      28113,
      28078,
      28126,
      28153,
      28088,
      28151,
      28149,
      28101,
      28114,
      28186,
      28085,
      28122,
      28139,
      28120,
      28138,
      28145,
      28142,
      28136,
      28102,
      28100,
      28074,
      28140,
      28095,
      28134,
      28921,
      28937,
      28938,
      28925,
      28911,
      29245,
      29309,
      29313,
      29468,
      29467,
      29462,
      29459,
      29465,
      29575,
      29701,
      29706,
      29699,
      29702,
      29694,
      29709,
      29920,
      29942,
      29943,
      29980,
      29986,
      30053,
      30054,
      30050,
      30064,
      30095,
      30164,
      30165,
      30133,
      30154,
      30157,
      30350,
      30420,
      30418,
      30427,
      30519,
      30526,
      30524,
      30518,
      30520,
      30522,
      30827,
      30787,
      30798,
      31077,
      31080,
      31085,
      31227,
      31378,
      31381,
      31520,
      31528,
      31515,
      31532,
      31526,
      31513,
      31518,
      31534,
      31890,
      31895,
      31893,
      32070,
      32067,
      32113,
      32046,
      32057,
      32060,
      32064,
      32048,
      32051,
      32068,
      32047,
      32066,
      32050,
      32049,
      32573,
      32670,
      32666,
      32716,
      32718,
      32722,
      32796,
      32842,
      32838,
      33071,
      33046,
      33059,
      33067,
      33065,
      33072,
      33060,
      33282,
      33333,
      33335,
      33334,
      33337,
      33678,
      33694,
      33688,
      33656,
      33698,
      33686,
      33725,
      33707,
      33682,
      33674,
      33683,
      33673,
      33696,
      33655,
      33659,
      33660,
      33670,
      33703,
      34389,
      24426,
      34503,
      34496,
      34486,
      34500,
      34485,
      34502,
      34507,
      34481,
      34479,
      34505,
      34899,
      34974,
      34952,
      34987,
      34962,
      34966,
      34957,
      34955,
      35219,
      35215,
      35370,
      35357,
      35363,
      35365,
      35377,
      35373,
      35359,
      35355,
      35362,
      35913,
      35930,
      36009,
      36012,
      36011,
      36008,
      36010,
      36007,
      36199,
      36198,
      36286,
      36282,
      36571,
      36575,
      36889,
      36877,
      36890,
      36887,
      36899,
      36895,
      36893,
      36880,
      36885,
      36894,
      36896,
      36879,
      36898,
      36886,
      36891,
      36884,
      37096,
      37101,
      37117,
      37207,
      37326,
      37365,
      37350,
      37347,
      37351,
      37357,
      37353,
      38281,
      38506,
      38517,
      38515,
      38520,
      38512,
      38516,
      38518,
      38519,
      38508,
      38592,
      38634,
      38633,
      31456,
      31455,
      38914,
      38915,
      39770,
      40165,
      40565,
      40575,
      40613,
      40635,
      20642,
      20621,
      20613,
      20633,
      20625,
      20608,
      20630,
      20632,
      20634,
      26368,
      20977,
      21106,
      21108,
      21109,
      21097,
      21214,
      21213,
      21211,
      21338,
      21413,
      21883,
      21888,
      21927,
      21884,
      21898,
      21917,
      21912,
      21890,
      21916,
      21930,
      21908,
      21895,
      21899,
      21891,
      21939,
      21934,
      21919,
      21822,
      21938,
      21914,
      21947,
      21932,
      21937,
      21886,
      21897,
      21931,
      21913,
      22285,
      22575,
      22570,
      22580,
      22564,
      22576,
      22577,
      22561,
      22557,
      22560,
      22777,
      22778,
      22880,
      23159,
      23194,
      23167,
      23186,
      23195,
      23207,
      23411,
      23409,
      23506,
      23500,
      23507,
      23504,
      23562,
      23563,
      23601,
      23884,
      23888,
      23860,
      23879,
      24061,
      24133,
      24125,
      24128,
      24131,
      24190,
      24266,
      24257,
      24258,
      24260,
      24380,
      24429,
      24489,
      24490,
      24488,
      24785,
      24801,
      24754,
      24758,
      24800,
      24860,
      24867,
      24826,
      24853,
      24816,
      24827,
      24820,
      24936,
      24817,
      24846,
      24822,
      24841,
      24832,
      24850,
      25119,
      25161,
      25507,
      25484,
      25551,
      25536,
      25577,
      25545,
      25542,
      25549,
      25554,
      25571,
      25552,
      25569,
      25558,
      25581,
      25582,
      25462,
      25588,
      25578,
      25563,
      25682,
      25562,
      25593,
      25950,
      25958,
      25954,
      25955,
      26001,
      26000,
      26031,
      26222,
      26224,
      26228,
      26230,
      26223,
      26257,
      26234,
      26238,
      26231,
      26366,
      26367,
      26399,
      26397,
      26874,
      26837,
      26848,
      26840,
      26839,
      26885,
      26847,
      26869,
      26862,
      26855,
      26873,
      26834,
      26866,
      26851,
      26827,
      26829,
      26893,
      26898,
      26894,
      26825,
      26842,
      26990,
      26875,
      27454,
      27450,
      27453,
      27544,
      27542,
      27580,
      27631,
      27694,
      27695,
      27692,
      28207,
      28216,
      28244,
      28193,
      28210,
      28263,
      28234,
      28192,
      28197,
      28195,
      28187,
      28251,
      28248,
      28196,
      28246,
      28270,
      28205,
      28198,
      28271,
      28212,
      28237,
      28218,
      28204,
      28227,
      28189,
      28222,
      28363,
      28297,
      28185,
      28238,
      28259,
      28228,
      28274,
      28265,
      28255,
      28953,
      28954,
      28966,
      28976,
      28961,
      28982,
      29038,
      28956,
      29260,
      29316,
      29312,
      29494,
      29477,
      29492,
      29481,
      29754,
      29738,
      29747,
      29730,
      29733,
      29749,
      29750,
      29748,
      29743,
      29723,
      29734,
      29736,
      29989,
      29990,
      30059,
      30058,
      30178,
      30171,
      30179,
      30169,
      30168,
      30174,
      30176,
      30331,
      30332,
      30358,
      30355,
      30388,
      30428,
      30543,
      30701,
      30813,
      30828,
      30831,
      31245,
      31240,
      31243,
      31237,
      31232,
      31384,
      31383,
      31382,
      31461,
      31459,
      31561,
      31574,
      31558,
      31568,
      31570,
      31572,
      31565,
      31563,
      31567,
      31569,
      31903,
      31909,
      32094,
      32080,
      32104,
      32085,
      32043,
      32110,
      32114,
      32097,
      32102,
      32098,
      32112,
      32115,
      21892,
      32724,
      32725,
      32779,
      32850,
      32901,
      33109,
      33108,
      33099,
      33105,
      33102,
      33081,
      33094,
      33086,
      33100,
      33107,
      33140,
      33298,
      33308,
      33769,
      33795,
      33784,
      33805,
      33760,
      33733,
      33803,
      33729,
      33775,
      33777,
      33780,
      33879,
      33802,
      33776,
      33804,
      33740,
      33789,
      33778,
      33738,
      33848,
      33806,
      33796,
      33756,
      33799,
      33748,
      33759,
      34395,
      34527,
      34521,
      34541,
      34516,
      34523,
      34532,
      34512,
      34526,
      34903,
      35009,
      35010,
      34993,
      35203,
      35222,
      35387,
      35424,
      35413,
      35422,
      35388,
      35393,
      35412,
      35419,
      35408,
      35398,
      35380,
      35386,
      35382,
      35414,
      35937,
      35970,
      36015,
      36028,
      36019,
      36029,
      36033,
      36027,
      36032,
      36020,
      36023,
      36022,
      36031,
      36024,
      36234,
      36229,
      36225,
      36302,
      36317,
      36299,
      36314,
      36305,
      36300,
      36315,
      36294,
      36603,
      36600,
      36604,
      36764,
      36910,
      36917,
      36913,
      36920,
      36914,
      36918,
      37122,
      37109,
      37129,
      37118,
      37219,
      37221,
      37327,
      37396,
      37397,
      37411,
      37385,
      37406,
      37389,
      37392,
      37383,
      37393,
      38292,
      38287,
      38283,
      38289,
      38291,
      38290,
      38286,
      38538,
      38542,
      38539,
      38525,
      38533,
      38534,
      38541,
      38514,
      38532,
      38593,
      38597,
      38596,
      38598,
      38599,
      38639,
      38642,
      38860,
      38917,
      38918,
      38920,
      39143,
      39146,
      39151,
      39145,
      39154,
      39149,
      39342,
      39341,
      40643,
      40653,
      40657,
      20098,
      20653,
      20661,
      20658,
      20659,
      20677,
      20670,
      20652,
      20663,
      20667,
      20655,
      20679,
      21119,
      21111,
      21117,
      21215,
      21222,
      21220,
      21218,
      21219,
      21295,
      21983,
      21992,
      21971,
      21990,
      21966,
      21980,
      21959,
      21969,
      21987,
      21988,
      21999,
      21978,
      21985,
      21957,
      21958,
      21989,
      21961,
      22290,
      22291,
      22622,
      22609,
      22616,
      22615,
      22618,
      22612,
      22635,
      22604,
      22637,
      22602,
      22626,
      22610,
      22603,
      22887,
      23233,
      23241,
      23244,
      23230,
      23229,
      23228,
      23219,
      23234,
      23218,
      23913,
      23919,
      24140,
      24185,
      24265,
      24264,
      24338,
      24409,
      24492,
      24494,
      24858,
      24847,
      24904,
      24863,
      24819,
      24859,
      24825,
      24833,
      24840,
      24910,
      24908,
      24900,
      24909,
      24894,
      24884,
      24871,
      24845,
      24838,
      24887,
      25121,
      25122,
      25619,
      25662,
      25630,
      25642,
      25645,
      25661,
      25644,
      25615,
      25628,
      25620,
      25613,
      25654,
      25622,
      25623,
      25606,
      25964,
      26015,
      26032,
      26263,
      26249,
      26247,
      26248,
      26262,
      26244,
      26264,
      26253,
      26371,
      27028,
      26989,
      26970,
      26999,
      26976,
      26964,
      26997,
      26928,
      27010,
      26954,
      26984,
      26987,
      26974,
      26963,
      27001,
      27014,
      26973,
      26979,
      26971,
      27463,
      27506,
      27584,
      27583,
      27603,
      27645,
      28322,
      28335,
      28371,
      28342,
      28354,
      28304,
      28317,
      28359,
      28357,
      28325,
      28312,
      28348,
      28346,
      28331,
      28369,
      28310,
      28316,
      28356,
      28372,
      28330,
      28327,
      28340,
      29006,
      29017,
      29033,
      29028,
      29001,
      29031,
      29020,
      29036,
      29030,
      29004,
      29029,
      29022,
      28998,
      29032,
      29014,
      29242,
      29266,
      29495,
      29509,
      29503,
      29502,
      29807,
      29786,
      29781,
      29791,
      29790,
      29761,
      29759,
      29785,
      29787,
      29788,
      30070,
      30072,
      30208,
      30192,
      30209,
      30194,
      30193,
      30202,
      30207,
      30196,
      30195,
      30430,
      30431,
      30555,
      30571,
      30566,
      30558,
      30563,
      30585,
      30570,
      30572,
      30556,
      30565,
      30568,
      30562,
      30702,
      30862,
      30896,
      30871,
      30872,
      30860,
      30857,
      30844,
      30865,
      30867,
      30847,
      31098,
      31103,
      31105,
      33836,
      31165,
      31260,
      31258,
      31264,
      31252,
      31263,
      31262,
      31391,
      31392,
      31607,
      31680,
      31584,
      31598,
      31591,
      31921,
      31923,
      31925,
      32147,
      32121,
      32145,
      32129,
      32143,
      32091,
      32622,
      32617,
      32618,
      32626,
      32681,
      32680,
      32676,
      32854,
      32856,
      32902,
      32900,
      33137,
      33136,
      33144,
      33125,
      33134,
      33139,
      33131,
      33145,
      33146,
      33126,
      33285,
      33351,
      33922,
      33911,
      33853,
      33841,
      33909,
      33894,
      33899,
      33865,
      33900,
      33883,
      33852,
      33845,
      33889,
      33891,
      33897,
      33901,
      33862,
      34398,
      34396,
      34399,
      34553,
      34579,
      34568,
      34567,
      34560,
      34558,
      34555,
      34562,
      34563,
      34566,
      34570,
      34905,
      35039,
      35028,
      35033,
      35036,
      35032,
      35037,
      35041,
      35018,
      35029,
      35026,
      35228,
      35299,
      35435,
      35442,
      35443,
      35430,
      35433,
      35440,
      35463,
      35452,
      35427,
      35488,
      35441,
      35461,
      35437,
      35426,
      35438,
      35436,
      35449,
      35451,
      35390,
      35432,
      35938,
      35978,
      35977,
      36042,
      36039,
      36040,
      36036,
      36018,
      36035,
      36034,
      36037,
      36321,
      36319,
      36328,
      36335,
      36339,
      36346,
      36330,
      36324,
      36326,
      36530,
      36611,
      36617,
      36606,
      36618,
      36767,
      36786,
      36939,
      36938,
      36947,
      36930,
      36948,
      36924,
      36949,
      36944,
      36935,
      36943,
      36942,
      36941,
      36945,
      36926,
      36929,
      37138,
      37143,
      37228,
      37226,
      37225,
      37321,
      37431,
      37463,
      37432,
      37437,
      37440,
      37438,
      37467,
      37451,
      37476,
      37457,
      37428,
      37449,
      37453,
      37445,
      37433,
      37439,
      37466,
      38296,
      38552,
      38548,
      38549,
      38605,
      38603,
      38601,
      38602,
      38647,
      38651,
      38649,
      38646,
      38742,
      38772,
      38774,
      38928,
      38929,
      38931,
      38922,
      38930,
      38924,
      39164,
      39156,
      39165,
      39166,
      39347,
      39345,
      39348,
      39649,
      40169,
      40578,
      40718,
      40723,
      40736,
      20711,
      20718,
      20709,
      20694,
      20717,
      20698,
      20693,
      20687,
      20689,
      20721,
      20686,
      20713,
      20834,
      20979,
      21123,
      21122,
      21297,
      21421,
      22014,
      22016,
      22043,
      22039,
      22013,
      22036,
      22022,
      22025,
      22029,
      22030,
      22007,
      22038,
      22047,
      22024,
      22032,
      22006,
      22296,
      22294,
      22645,
      22654,
      22659,
      22675,
      22666,
      22649,
      22661,
      22653,
      22781,
      22821,
      22818,
      22820,
      22890,
      22889,
      23265,
      23270,
      23273,
      23255,
      23254,
      23256,
      23267,
      23413,
      23518,
      23527,
      23521,
      23525,
      23526,
      23528,
      23522,
      23524,
      23519,
      23565,
      23650,
      23940,
      23943,
      24155,
      24163,
      24149,
      24151,
      24148,
      24275,
      24278,
      24330,
      24390,
      24432,
      24505,
      24903,
      24895,
      24907,
      24951,
      24930,
      24931,
      24927,
      24922,
      24920,
      24949,
      25130,
      25735,
      25688,
      25684,
      25764,
      25720,
      25695,
      25722,
      25681,
      25703,
      25652,
      25709,
      25723,
      25970,
      26017,
      26071,
      26070,
      26274,
      26280,
      26269,
      27036,
      27048,
      27029,
      27073,
      27054,
      27091,
      27083,
      27035,
      27063,
      27067,
      27051,
      27060,
      27088,
      27085,
      27053,
      27084,
      27046,
      27075,
      27043,
      27465,
      27468,
      27699,
      28467,
      28436,
      28414,
      28435,
      28404,
      28457,
      28478,
      28448,
      28460,
      28431,
      28418,
      28450,
      28415,
      28399,
      28422,
      28465,
      28472,
      28466,
      28451,
      28437,
      28459,
      28463,
      28552,
      28458,
      28396,
      28417,
      28402,
      28364,
      28407,
      29076,
      29081,
      29053,
      29066,
      29060,
      29074,
      29246,
      29330,
      29334,
      29508,
      29520,
      29796,
      29795,
      29802,
      29808,
      29805,
      29956,
      30097,
      30247,
      30221,
      30219,
      30217,
      30227,
      30433,
      30435,
      30596,
      30589,
      30591,
      30561,
      30913,
      30879,
      30887,
      30899,
      30889,
      30883,
      31118,
      31119,
      31117,
      31278,
      31281,
      31402,
      31401,
      31469,
      31471,
      31649,
      31637,
      31627,
      31605,
      31639,
      31645,
      31636,
      31631,
      31672,
      31623,
      31620,
      31929,
      31933,
      31934,
      32187,
      32176,
      32156,
      32189,
      32190,
      32160,
      32202,
      32180,
      32178,
      32177,
      32186,
      32162,
      32191,
      32181,
      32184,
      32173,
      32210,
      32199,
      32172,
      32624,
      32736,
      32737,
      32735,
      32862,
      32858,
      32903,
      33104,
      33152,
      33167,
      33160,
      33162,
      33151,
      33154,
      33255,
      33274,
      33287,
      33300,
      33310,
      33355,
      33993,
      33983,
      33990,
      33988,
      33945,
      33950,
      33970,
      33948,
      33995,
      33976,
      33984,
      34003,
      33936,
      33980,
      34001,
      33994,
      34623,
      34588,
      34619,
      34594,
      34597,
      34612,
      34584,
      34645,
      34615,
      34601,
      35059,
      35074,
      35060,
      35065,
      35064,
      35069,
      35048,
      35098,
      35055,
      35494,
      35468,
      35486,
      35491,
      35469,
      35489,
      35475,
      35492,
      35498,
      35493,
      35496,
      35480,
      35473,
      35482,
      35495,
      35946,
      35981,
      35980,
      36051,
      36049,
      36050,
      36203,
      36249,
      36245,
      36348,
      36628,
      36626,
      36629,
      36627,
      36771,
      36960,
      36952,
      36956,
      36963,
      36953,
      36958,
      36962,
      36957,
      36955,
      37145,
      37144,
      37150,
      37237,
      37240,
      37239,
      37236,
      37496,
      37504,
      37509,
      37528,
      37526,
      37499,
      37523,
      37532,
      37544,
      37500,
      37521,
      38305,
      38312,
      38313,
      38307,
      38309,
      38308,
      38553,
      38556,
      38555,
      38604,
      38610,
      38656,
      38780,
      38789,
      38902,
      38935,
      38936,
      39087,
      39089,
      39171,
      39173,
      39180,
      39177,
      39361,
      39599,
      39600,
      39654,
      39745,
      39746,
      40180,
      40182,
      40179,
      40636,
      40763,
      40778,
      20740,
      20736,
      20731,
      20725,
      20729,
      20738,
      20744,
      20745,
      20741,
      20956,
      21127,
      21128,
      21129,
      21133,
      21130,
      21232,
      21426,
      22062,
      22075,
      22073,
      22066,
      22079,
      22068,
      22057,
      22099,
      22094,
      22103,
      22132,
      22070,
      22063,
      22064,
      22656,
      22687,
      22686,
      22707,
      22684,
      22702,
      22697,
      22694,
      22893,
      23305,
      23291,
      23307,
      23285,
      23308,
      23304,
      23534,
      23532,
      23529,
      23531,
      23652,
      23653,
      23965,
      23956,
      24162,
      24159,
      24161,
      24290,
      24282,
      24287,
      24285,
      24291,
      24288,
      24392,
      24433,
      24503,
      24501,
      24950,
      24935,
      24942,
      24925,
      24917,
      24962,
      24956,
      24944,
      24939,
      24958,
      24999,
      24976,
      25003,
      24974,
      25004,
      24986,
      24996,
      24980,
      25006,
      25134,
      25705,
      25711,
      25721,
      25758,
      25778,
      25736,
      25744,
      25776,
      25765,
      25747,
      25749,
      25769,
      25746,
      25774,
      25773,
      25771,
      25754,
      25772,
      25753,
      25762,
      25779,
      25973,
      25975,
      25976,
      26286,
      26283,
      26292,
      26289,
      27171,
      27167,
      27112,
      27137,
      27166,
      27161,
      27133,
      27169,
      27155,
      27146,
      27123,
      27138,
      27141,
      27117,
      27153,
      27472,
      27470,
      27556,
      27589,
      27590,
      28479,
      28540,
      28548,
      28497,
      28518,
      28500,
      28550,
      28525,
      28507,
      28536,
      28526,
      28558,
      28538,
      28528,
      28516,
      28567,
      28504,
      28373,
      28527,
      28512,
      28511,
      29087,
      29100,
      29105,
      29096,
      29270,
      29339,
      29518,
      29527,
      29801,
      29835,
      29827,
      29822,
      29824,
      30079,
      30240,
      30249,
      30239,
      30244,
      30246,
      30241,
      30242,
      30362,
      30394,
      30436,
      30606,
      30599,
      30604,
      30609,
      30603,
      30923,
      30917,
      30906,
      30922,
      30910,
      30933,
      30908,
      30928,
      31295,
      31292,
      31296,
      31293,
      31287,
      31291,
      31407,
      31406,
      31661,
      31665,
      31684,
      31668,
      31686,
      31687,
      31681,
      31648,
      31692,
      31946,
      32224,
      32244,
      32239,
      32251,
      32216,
      32236,
      32221,
      32232,
      32227,
      32218,
      32222,
      32233,
      32158,
      32217,
      32242,
      32249,
      32629,
      32631,
      32687,
      32745,
      32806,
      33179,
      33180,
      33181,
      33184,
      33178,
      33176,
      34071,
      34109,
      34074,
      34030,
      34092,
      34093,
      34067,
      34065,
      34083,
      34081,
      34068,
      34028,
      34085,
      34047,
      34054,
      34690,
      34676,
      34678,
      34656,
      34662,
      34680,
      34664,
      34649,
      34647,
      34636,
      34643,
      34907,
      34909,
      35088,
      35079,
      35090,
      35091,
      35093,
      35082,
      35516,
      35538,
      35527,
      35524,
      35477,
      35531,
      35576,
      35506,
      35529,
      35522,
      35519,
      35504,
      35542,
      35533,
      35510,
      35513,
      35547,
      35916,
      35918,
      35948,
      36064,
      36062,
      36070,
      36068,
      36076,
      36077,
      36066,
      36067,
      36060,
      36074,
      36065,
      36205,
      36255,
      36259,
      36395,
      36368,
      36381,
      36386,
      36367,
      36393,
      36383,
      36385,
      36382,
      36538,
      36637,
      36635,
      36639,
      36649,
      36646,
      36650,
      36636,
      36638,
      36645,
      36969,
      36974,
      36968,
      36973,
      36983,
      37168,
      37165,
      37159,
      37169,
      37255,
      37257,
      37259,
      37251,
      37573,
      37563,
      37559,
      37610,
      37548,
      37604,
      37569,
      37555,
      37564,
      37586,
      37575,
      37616,
      37554,
      38317,
      38321,
      38660,
      38662,
      38663,
      38665,
      38752,
      38797,
      38795,
      38799,
      38945,
      38955,
      38940,
      39091,
      39178,
      39187,
      39186,
      39192,
      39389,
      39376,
      39391,
      39387,
      39377,
      39381,
      39378,
      39385,
      39607,
      39662,
      39663,
      39719,
      39749,
      39748,
      39799,
      39791,
      40198,
      40201,
      40195,
      40617,
      40638,
      40654,
      22696,
      40786,
      20754,
      20760,
      20756,
      20752,
      20757,
      20864,
      20906,
      20957,
      21137,
      21139,
      21235,
      22105,
      22123,
      22137,
      22121,
      22116,
      22136,
      22122,
      22120,
      22117,
      22129,
      22127,
      22124,
      22114,
      22134,
      22721,
      22718,
      22727,
      22725,
      22894,
      23325,
      23348,
      23416,
      23536,
      23566,
      24394,
      25010,
      24977,
      25001,
      24970,
      25037,
      25014,
      25022,
      25034,
      25032,
      25136,
      25797,
      25793,
      25803,
      25787,
      25788,
      25818,
      25796,
      25799,
      25794,
      25805,
      25791,
      25810,
      25812,
      25790,
      25972,
      26310,
      26313,
      26297,
      26308,
      26311,
      26296,
      27197,
      27192,
      27194,
      27225,
      27243,
      27224,
      27193,
      27204,
      27234,
      27233,
      27211,
      27207,
      27189,
      27231,
      27208,
      27481,
      27511,
      27653,
      28610,
      28593,
      28577,
      28611,
      28580,
      28609,
      28583,
      28595,
      28608,
      28601,
      28598,
      28582,
      28576,
      28596,
      29118,
      29129,
      29136,
      29138,
      29128,
      29141,
      29113,
      29134,
      29145,
      29148,
      29123,
      29124,
      29544,
      29852,
      29859,
      29848,
      29855,
      29854,
      29922,
      29964,
      29965,
      30260,
      30264,
      30266,
      30439,
      30437,
      30624,
      30622,
      30623,
      30629,
      30952,
      30938,
      30956,
      30951,
      31142,
      31309,
      31310,
      31302,
      31308,
      31307,
      31418,
      31705,
      31761,
      31689,
      31716,
      31707,
      31713,
      31721,
      31718,
      31957,
      31958,
      32266,
      32273,
      32264,
      32283,
      32291,
      32286,
      32285,
      32265,
      32272,
      32633,
      32690,
      32752,
      32753,
      32750,
      32808,
      33203,
      33193,
      33192,
      33275,
      33288,
      33368,
      33369,
      34122,
      34137,
      34120,
      34152,
      34153,
      34115,
      34121,
      34157,
      34154,
      34142,
      34691,
      34719,
      34718,
      34722,
      34701,
      34913,
      35114,
      35122,
      35109,
      35115,
      35105,
      35242,
      35238,
      35558,
      35578,
      35563,
      35569,
      35584,
      35548,
      35559,
      35566,
      35582,
      35585,
      35586,
      35575,
      35565,
      35571,
      35574,
      35580,
      35947,
      35949,
      35987,
      36084,
      36420,
      36401,
      36404,
      36418,
      36409,
      36405,
      36667,
      36655,
      36664,
      36659,
      36776,
      36774,
      36981,
      36980,
      36984,
      36978,
      36988,
      36986,
      37172,
      37266,
      37664,
      37686,
      37624,
      37683,
      37679,
      37666,
      37628,
      37675,
      37636,
      37658,
      37648,
      37670,
      37665,
      37653,
      37678,
      37657,
      38331,
      38567,
      38568,
      38570,
      38613,
      38670,
      38673,
      38678,
      38669,
      38675,
      38671,
      38747,
      38748,
      38758,
      38808,
      38960,
      38968,
      38971,
      38967,
      38957,
      38969,
      38948,
      39184,
      39208,
      39198,
      39195,
      39201,
      39194,
      39405,
      39394,
      39409,
      39608,
      39612,
      39675,
      39661,
      39720,
      39825,
      40213,
      40227,
      40230,
      40232,
      40210,
      40219,
      40664,
      40660,
      40845,
      40860,
      20778,
      20767,
      20769,
      20786,
      21237,
      22158,
      22144,
      22160,
      22149,
      22151,
      22159,
      22741,
      22739,
      22737,
      22734,
      23344,
      23338,
      23332,
      23418,
      23607,
      23656,
      23996,
      23994,
      23997,
      23992,
      24171,
      24396,
      24509,
      25033,
      25026,
      25031,
      25062,
      25035,
      25138,
      25140,
      25806,
      25802,
      25816,
      25824,
      25840,
      25830,
      25836,
      25841,
      25826,
      25837,
      25986,
      25987,
      26329,
      26326,
      27264,
      27284,
      27268,
      27298,
      27292,
      27355,
      27299,
      27262,
      27287,
      27280,
      27296,
      27484,
      27566,
      27610,
      27656,
      28632,
      28657,
      28639,
      28640,
      28635,
      28644,
      28651,
      28655,
      28544,
      28652,
      28641,
      28649,
      28629,
      28654,
      28656,
      29159,
      29151,
      29166,
      29158,
      29157,
      29165,
      29164,
      29172,
      29152,
      29237,
      29254,
      29552,
      29554,
      29865,
      29872,
      29862,
      29864,
      30278,
      30274,
      30284,
      30442,
      30643,
      30634,
      30640,
      30636,
      30631,
      30637,
      30703,
      30967,
      30970,
      30964,
      30959,
      30977,
      31143,
      31146,
      31319,
      31423,
      31751,
      31757,
      31742,
      31735,
      31756,
      31712,
      31968,
      31964,
      31966,
      31970,
      31967,
      31961,
      31965,
      32302,
      32318,
      32326,
      32311,
      32306,
      32323,
      32299,
      32317,
      32305,
      32325,
      32321,
      32308,
      32313,
      32328,
      32309,
      32319,
      32303,
      32580,
      32755,
      32764,
      32881,
      32882,
      32880,
      32879,
      32883,
      33222,
      33219,
      33210,
      33218,
      33216,
      33215,
      33213,
      33225,
      33214,
      33256,
      33289,
      33393,
      34218,
      34180,
      34174,
      34204,
      34193,
      34196,
      34223,
      34203,
      34183,
      34216,
      34186,
      34407,
      34752,
      34769,
      34739,
      34770,
      34758,
      34731,
      34747,
      34746,
      34760,
      34763,
      35131,
      35126,
      35140,
      35128,
      35133,
      35244,
      35598,
      35607,
      35609,
      35611,
      35594,
      35616,
      35613,
      35588,
      35600,
      35905,
      35903,
      35955,
      36090,
      36093,
      36092,
      36088,
      36091,
      36264,
      36425,
      36427,
      36424,
      36426,
      36676,
      36670,
      36674,
      36677,
      36671,
      36991,
      36989,
      36996,
      36993,
      36994,
      36992,
      37177,
      37283,
      37278,
      37276,
      37709,
      37762,
      37672,
      37749,
      37706,
      37733,
      37707,
      37656,
      37758,
      37740,
      37723,
      37744,
      37722,
      37716,
      38346,
      38347,
      38348,
      38344,
      38342,
      38577,
      38584,
      38614,
      38684,
      38686,
      38816,
      38867,
      38982,
      39094,
      39221,
      39425,
      39423,
      39854,
      39851,
      39850,
      39853,
      40251,
      40255,
      40587,
      40655,
      40670,
      40668,
      40669,
      40667,
      40766,
      40779,
      21474,
      22165,
      22190,
      22745,
      22744,
      23352,
      24413,
      25059,
      25139,
      25844,
      25842,
      25854,
      25862,
      25850,
      25851,
      25847,
      26039,
      26332,
      26406,
      27315,
      27308,
      27331,
      27323,
      27320,
      27330,
      27310,
      27311,
      27487,
      27512,
      27567,
      28681,
      28683,
      28670,
      28678,
      28666,
      28689,
      28687,
      29179,
      29180,
      29182,
      29176,
      29559,
      29557,
      29863,
      29887,
      29973,
      30294,
      30296,
      30290,
      30653,
      30655,
      30651,
      30652,
      30990,
      31150,
      31329,
      31330,
      31328,
      31428,
      31429,
      31787,
      31783,
      31786,
      31774,
      31779,
      31777,
      31975,
      32340,
      32341,
      32350,
      32346,
      32353,
      32338,
      32345,
      32584,
      32761,
      32763,
      32887,
      32886,
      33229,
      33231,
      33290,
      34255,
      34217,
      34253,
      34256,
      34249,
      34224,
      34234,
      34233,
      34214,
      34799,
      34796,
      34802,
      34784,
      35206,
      35250,
      35316,
      35624,
      35641,
      35628,
      35627,
      35920,
      36101,
      36441,
      36451,
      36454,
      36452,
      36447,
      36437,
      36544,
      36681,
      36685,
      36999,
      36995,
      37000,
      37291,
      37292,
      37328,
      37780,
      37770,
      37782,
      37794,
      37811,
      37806,
      37804,
      37808,
      37784,
      37786,
      37783,
      38356,
      38358,
      38352,
      38357,
      38626,
      38620,
      38617,
      38619,
      38622,
      38692,
      38819,
      38822,
      38829,
      38905,
      38989,
      38991,
      38988,
      38990,
      38995,
      39098,
      39230,
      39231,
      39229,
      39214,
      39333,
      39438,
      39617,
      39683,
      39686,
      39759,
      39758,
      39757,
      39882,
      39881,
      39933,
      39880,
      39872,
      40273,
      40285,
      40288,
      40672,
      40725,
      40748,
      20787,
      22181,
      22750,
      22751,
      22754,
      23541,
      40848,
      24300,
      25074,
      25079,
      25078,
      25077,
      25856,
      25871,
      26336,
      26333,
      27365,
      27357,
      27354,
      27347,
      28699,
      28703,
      28712,
      28698,
      28701,
      28693,
      28696,
      29190,
      29197,
      29272,
      29346,
      29560,
      29562,
      29885,
      29898,
      29923,
      30087,
      30086,
      30303,
      30305,
      30663,
      31001,
      31153,
      31339,
      31337,
      31806,
      31807,
      31800,
      31805,
      31799,
      31808,
      32363,
      32365,
      32377,
      32361,
      32362,
      32645,
      32371,
      32694,
      32697,
      32696,
      33240,
      34281,
      34269,
      34282,
      34261,
      34276,
      34277,
      34295,
      34811,
      34821,
      34829,
      34809,
      34814,
      35168,
      35167,
      35158,
      35166,
      35649,
      35676,
      35672,
      35657,
      35674,
      35662,
      35663,
      35654,
      35673,
      36104,
      36106,
      36476,
      36466,
      36487,
      36470,
      36460,
      36474,
      36468,
      36692,
      36686,
      36781,
      37002,
      37003,
      37297,
      37294,
      37857,
      37841,
      37855,
      37827,
      37832,
      37852,
      37853,
      37846,
      37858,
      37837,
      37848,
      37860,
      37847,
      37864,
      38364,
      38580,
      38627,
      38698,
      38695,
      38753,
      38876,
      38907,
      39006,
      39000,
      39003,
      39100,
      39237,
      39241,
      39446,
      39449,
      39693,
      39912,
      39911,
      39894,
      39899,
      40329,
      40289,
      40306,
      40298,
      40300,
      40594,
      40599,
      40595,
      40628,
      21240,
      22184,
      22199,
      22198,
      22196,
      22204,
      22756,
      23360,
      23363,
      23421,
      23542,
      24009,
      25080,
      25082,
      25880,
      25876,
      25881,
      26342,
      26407,
      27372,
      28734,
      28720,
      28722,
      29200,
      29563,
      29903,
      30306,
      30309,
      31014,
      31018,
      31020,
      31019,
      31431,
      31478,
      31820,
      31811,
      31821,
      31983,
      31984,
      36782,
      32381,
      32380,
      32386,
      32588,
      32768,
      33242,
      33382,
      34299,
      34297,
      34321,
      34298,
      34310,
      34315,
      34311,
      34314,
      34836,
      34837,
      35172,
      35258,
      35320,
      35696,
      35692,
      35686,
      35695,
      35679,
      35691,
      36111,
      36109,
      36489,
      36481,
      36485,
      36482,
      37300,
      37323,
      37912,
      37891,
      37885,
      38369,
      38704,
      39108,
      39250,
      39249,
      39336,
      39467,
      39472,
      39479,
      39477,
      39955,
      39949,
      40569,
      40629,
      40680,
      40751,
      40799,
      40803,
      40801,
      20791,
      20792,
      22209,
      22208,
      22210,
      22804,
      23660,
      24013,
      25084,
      25086,
      25885,
      25884,
      26005,
      26345,
      27387,
      27396,
      27386,
      27570,
      28748,
      29211,
      29351,
      29910,
      29908,
      30313,
      30675,
      31824,
      32399,
      32396,
      32700,
      34327,
      34349,
      34330,
      34851,
      34850,
      34849,
      34847,
      35178,
      35180,
      35261,
      35700,
      35703,
      35709,
      36115,
      36490,
      36493,
      36491,
      36703,
      36783,
      37306,
      37934,
      37939,
      37941,
      37946,
      37944,
      37938,
      37931,
      38370,
      38712,
      38713,
      38706,
      38911,
      39015,
      39013,
      39255,
      39493,
      39491,
      39488,
      39486,
      39631,
      39764,
      39761,
      39981,
      39973,
      40367,
      40372,
      40386,
      40376,
      40605,
      40687,
      40729,
      40796,
      40806,
      40807,
      20796,
      20795,
      22216,
      22218,
      22217,
      23423,
      24020,
      24018,
      24398,
      25087,
      25892,
      27402,
      27489,
      28753,
      28760,
      29568,
      29924,
      30090,
      30318,
      30316,
      31155,
      31840,
      31839,
      32894,
      32893,
      33247,
      35186,
      35183,
      35324,
      35712,
      36118,
      36119,
      36497,
      36499,
      36705,
      37192,
      37956,
      37969,
      37970,
      38717,
      38718,
      38851,
      38849,
      39019,
      39253,
      39509,
      39501,
      39634,
      39706,
      40009,
      39985,
      39998,
      39995,
      40403,
      40407,
      40756,
      40812,
      40810,
      40852,
      22220,
      24022,
      25088,
      25891,
      25899,
      25898,
      26348,
      27408,
      29914,
      31434,
      31844,
      31843,
      31845,
      32403,
      32406,
      32404,
      33250,
      34360,
      34367,
      34865,
      35722,
      37008,
      37007,
      37987,
      37984,
      37988,
      38760,
      39023,
      39260,
      39514,
      39515,
      39511,
      39635,
      39636,
      39633,
      40020,
      40023,
      40022,
      40421,
      40607,
      40692,
      22225,
      22761,
      25900,
      28766,
      30321,
      30322,
      30679,
      32592,
      32648,
      34870,
      34873,
      34914,
      35731,
      35730,
      35734,
      33399,
      36123,
      37312,
      37994,
      38722,
      38728,
      38724,
      38854,
      39024,
      39519,
      39714,
      39768,
      40031,
      40441,
      40442,
      40572,
      40573,
      40711,
      40823,
      40818,
      24307,
      27414,
      28771,
      31852,
      31854,
      34875,
      35264,
      36513,
      37313,
      38002,
      38000,
      39025,
      39262,
      39638,
      39715,
      40652,
      28772,
      30682,
      35738,
      38007,
      38857,
      39522,
      39525,
      32412,
      35740,
      36522,
      37317,
      38013,
      38014,
      38012,
      40055,
      40056,
      40695,
      35924,
      38015,
      40474,
      29224,
      39530,
      39729,
      40475,
      40478,
      31858,
      9312,
      9313,
      9314,
      9315,
      9316,
      9317,
      9318,
      9319,
      9320,
      9321,
      9332,
      9333,
      9334,
      9335,
      9336,
      9337,
      9338,
      9339,
      9340,
      9341,
      8560,
      8561,
      8562,
      8563,
      8564,
      8565,
      8566,
      8567,
      8568,
      8569,
      20022,
      20031,
      20101,
      20128,
      20866,
      20886,
      20907,
      21241,
      21304,
      21353,
      21430,
      22794,
      23424,
      24027,
      12083,
      24191,
      24308,
      24400,
      24417,
      25908,
      26080,
      30098,
      30326,
      36789,
      38582,
      168,
      710,
      12541,
      12542,
      12445,
      12446,
      12291,
      20189,
      12293,
      12294,
      12295,
      12540,
      65339,
      65341,
      10045,
      12353,
      12354,
      12355,
      12356,
      12357,
      12358,
      12359,
      12360,
      12361,
      12362,
      12363,
      12364,
      12365,
      12366,
      12367,
      12368,
      12369,
      12370,
      12371,
      12372,
      12373,
      12374,
      12375,
      12376,
      12377,
      12378,
      12379,
      12380,
      12381,
      12382,
      12383,
      12384,
      12385,
      12386,
      12387,
      12388,
      12389,
      12390,
      12391,
      12392,
      12393,
      12394,
      12395,
      12396,
      12397,
      12398,
      12399,
      12400,
      12401,
      12402,
      12403,
      12404,
      12405,
      12406,
      12407,
      12408,
      12409,
      12410,
      12411,
      12412,
      12413,
      12414,
      12415,
      12416,
      12417,
      12418,
      12419,
      12420,
      12421,
      12422,
      12423,
      12424,
      12425,
      12426,
      12427,
      12428,
      12429,
      12430,
      12431,
      12432,
      12433,
      12434,
      12435,
      12449,
      12450,
      12451,
      12452,
      12453,
      12454,
      12455,
      12456,
      12457,
      12458,
      12459,
      12460,
      12461,
      12462,
      12463,
      12464,
      12465,
      12466,
      12467,
      12468,
      12469,
      12470,
      12471,
      12472,
      12473,
      12474,
      12475,
      12476,
      12477,
      12478,
      12479,
      12480,
      12481,
      12482,
      12483,
      12484,
      12485,
      12486,
      12487,
      12488,
      12489,
      12490,
      12491,
      12492,
      12493,
      12494,
      12495,
      12496,
      12497,
      12498,
      12499,
      12500,
      12501,
      12502,
      12503,
      12504,
      12505,
      12506,
      12507,
      12508,
      12509,
      12510,
      12511,
      12512,
      12513,
      12514,
      12515,
      12516,
      12517,
      12518,
      12519,
      12520,
      12521,
      12522,
      12523,
      12524,
      12525,
      12526,
      12527,
      12528,
      12529,
      12530,
      12531,
      12532,
      12533,
      12534,
      1040,
      1041,
      1042,
      1043,
      1044,
      1045,
      1025,
      1046,
      1047,
      1048,
      1049,
      1050,
      1051,
      1052,
      1053,
      1054,
      1055,
      1056,
      1057,
      1058,
      1059,
      1060,
      1061,
      1062,
      1063,
      1064,
      1065,
      1066,
      1067,
      1068,
      1069,
      1070,
      1071,
      1072,
      1073,
      1074,
      1075,
      1076,
      1077,
      1105,
      1078,
      1079,
      1080,
      1081,
      1082,
      1083,
      1084,
      1085,
      1086,
      1087,
      1088,
      1089,
      1090,
      1091,
      1092,
      1093,
      1094,
      1095,
      1096,
      1097,
      1098,
      1099,
      1100,
      1101,
      1102,
      1103,
      8679,
      8632,
      8633,
      12751,
      131276,
      20058,
      131210,
      20994,
      17553,
      40880,
      20872,
      40881,
      161287,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      65506,
      65508,
      65287,
      65282,
      12849,
      8470,
      8481,
      12443,
      12444,
      11904,
      11908,
      11910,
      11911,
      11912,
      11914,
      11916,
      11917,
      11925,
      11932,
      11933,
      11941,
      11943,
      11946,
      11948,
      11950,
      11958,
      11964,
      11966,
      11974,
      11978,
      11980,
      11981,
      11983,
      11990,
      11991,
      11998,
      12003,
      null,
      null,
      null,
      643,
      592,
      603,
      596,
      629,
      339,
      248,
      331,
      650,
      618,
      20034,
      20060,
      20981,
      21274,
      21378,
      19975,
      19980,
      20039,
      20109,
      22231,
      64012,
      23662,
      24435,
      19983,
      20871,
      19982,
      20014,
      20115,
      20162,
      20169,
      20168,
      20888,
      21244,
      21356,
      21433,
      22304,
      22787,
      22828,
      23568,
      24063,
      26081,
      27571,
      27596,
      27668,
      29247,
      20017,
      20028,
      20200,
      20188,
      20201,
      20193,
      20189,
      20186,
      21004,
      21276,
      21324,
      22306,
      22307,
      22807,
      22831,
      23425,
      23428,
      23570,
      23611,
      23668,
      23667,
      24068,
      24192,
      24194,
      24521,
      25097,
      25168,
      27669,
      27702,
      27715,
      27711,
      27707,
      29358,
      29360,
      29578,
      31160,
      32906,
      38430,
      20238,
      20248,
      20268,
      20213,
      20244,
      20209,
      20224,
      20215,
      20232,
      20253,
      20226,
      20229,
      20258,
      20243,
      20228,
      20212,
      20242,
      20913,
      21011,
      21001,
      21008,
      21158,
      21282,
      21279,
      21325,
      21386,
      21511,
      22241,
      22239,
      22318,
      22314,
      22324,
      22844,
      22912,
      22908,
      22917,
      22907,
      22910,
      22903,
      22911,
      23382,
      23573,
      23589,
      23676,
      23674,
      23675,
      23678,
      24031,
      24181,
      24196,
      24322,
      24346,
      24436,
      24533,
      24532,
      24527,
      25180,
      25182,
      25188,
      25185,
      25190,
      25186,
      25177,
      25184,
      25178,
      25189,
      26095,
      26094,
      26430,
      26425,
      26424,
      26427,
      26426,
      26431,
      26428,
      26419,
      27672,
      27718,
      27730,
      27740,
      27727,
      27722,
      27732,
      27723,
      27724,
      28785,
      29278,
      29364,
      29365,
      29582,
      29994,
      30335,
      31349,
      32593,
      33400,
      33404,
      33408,
      33405,
      33407,
      34381,
      35198,
      37017,
      37015,
      37016,
      37019,
      37012,
      38434,
      38436,
      38432,
      38435,
      20310,
      20283,
      20322,
      20297,
      20307,
      20324,
      20286,
      20327,
      20306,
      20319,
      20289,
      20312,
      20269,
      20275,
      20287,
      20321,
      20879,
      20921,
      21020,
      21022,
      21025,
      21165,
      21166,
      21257,
      21347,
      21362,
      21390,
      21391,
      21552,
      21559,
      21546,
      21588,
      21573,
      21529,
      21532,
      21541,
      21528,
      21565,
      21583,
      21569,
      21544,
      21540,
      21575,
      22254,
      22247,
      22245,
      22337,
      22341,
      22348,
      22345,
      22347,
      22354,
      22790,
      22848,
      22950,
      22936,
      22944,
      22935,
      22926,
      22946,
      22928,
      22927,
      22951,
      22945,
      23438,
      23442,
      23592,
      23594,
      23693,
      23695,
      23688,
      23691,
      23689,
      23698,
      23690,
      23686,
      23699,
      23701,
      24032,
      24074,
      24078,
      24203,
      24201,
      24204,
      24200,
      24205,
      24325,
      24349,
      24440,
      24438,
      24530,
      24529,
      24528,
      24557,
      24552,
      24558,
      24563,
      24545,
      24548,
      24547,
      24570,
      24559,
      24567,
      24571,
      24576,
      24564,
      25146,
      25219,
      25228,
      25230,
      25231,
      25236,
      25223,
      25201,
      25211,
      25210,
      25200,
      25217,
      25224,
      25207,
      25213,
      25202,
      25204,
      25911,
      26096,
      26100,
      26099,
      26098,
      26101,
      26437,
      26439,
      26457,
      26453,
      26444,
      26440,
      26461,
      26445,
      26458,
      26443,
      27600,
      27673,
      27674,
      27768,
      27751,
      27755,
      27780,
      27787,
      27791,
      27761,
      27759,
      27753,
      27802,
      27757,
      27783,
      27797,
      27804,
      27750,
      27763,
      27749,
      27771,
      27790,
      28788,
      28794,
      29283,
      29375,
      29373,
      29379,
      29382,
      29377,
      29370,
      29381,
      29589,
      29591,
      29587,
      29588,
      29586,
      30010,
      30009,
      30100,
      30101,
      30337,
      31037,
      32820,
      32917,
      32921,
      32912,
      32914,
      32924,
      33424,
      33423,
      33413,
      33422,
      33425,
      33427,
      33418,
      33411,
      33412,
      35960,
      36809,
      36799,
      37023,
      37025,
      37029,
      37022,
      37031,
      37024,
      38448,
      38440,
      38447,
      38445,
      20019,
      20376,
      20348,
      20357,
      20349,
      20352,
      20359,
      20342,
      20340,
      20361,
      20356,
      20343,
      20300,
      20375,
      20330,
      20378,
      20345,
      20353,
      20344,
      20368,
      20380,
      20372,
      20382,
      20370,
      20354,
      20373,
      20331,
      20334,
      20894,
      20924,
      20926,
      21045,
      21042,
      21043,
      21062,
      21041,
      21180,
      21258,
      21259,
      21308,
      21394,
      21396,
      21639,
      21631,
      21633,
      21649,
      21634,
      21640,
      21611,
      21626,
      21630,
      21605,
      21612,
      21620,
      21606,
      21645,
      21615,
      21601,
      21600,
      21656,
      21603,
      21607,
      21604,
      22263,
      22265,
      22383,
      22386,
      22381,
      22379,
      22385,
      22384,
      22390,
      22400,
      22389,
      22395,
      22387,
      22388,
      22370,
      22376,
      22397,
      22796,
      22853,
      22965,
      22970,
      22991,
      22990,
      22962,
      22988,
      22977,
      22966,
      22972,
      22979,
      22998,
      22961,
      22973,
      22976,
      22984,
      22964,
      22983,
      23394,
      23397,
      23443,
      23445,
      23620,
      23623,
      23726,
      23716,
      23712,
      23733,
      23727,
      23720,
      23724,
      23711,
      23715,
      23725,
      23714,
      23722,
      23719,
      23709,
      23717,
      23734,
      23728,
      23718,
      24087,
      24084,
      24089,
      24360,
      24354,
      24355,
      24356,
      24404,
      24450,
      24446,
      24445,
      24542,
      24549,
      24621,
      24614,
      24601,
      24626,
      24587,
      24628,
      24586,
      24599,
      24627,
      24602,
      24606,
      24620,
      24610,
      24589,
      24592,
      24622,
      24595,
      24593,
      24588,
      24585,
      24604,
      25108,
      25149,
      25261,
      25268,
      25297,
      25278,
      25258,
      25270,
      25290,
      25262,
      25267,
      25263,
      25275,
      25257,
      25264,
      25272,
      25917,
      26024,
      26043,
      26121,
      26108,
      26116,
      26130,
      26120,
      26107,
      26115,
      26123,
      26125,
      26117,
      26109,
      26129,
      26128,
      26358,
      26378,
      26501,
      26476,
      26510,
      26514,
      26486,
      26491,
      26520,
      26502,
      26500,
      26484,
      26509,
      26508,
      26490,
      26527,
      26513,
      26521,
      26499,
      26493,
      26497,
      26488,
      26489,
      26516,
      27429,
      27520,
      27518,
      27614,
      27677,
      27795,
      27884,
      27883,
      27886,
      27865,
      27830,
      27860,
      27821,
      27879,
      27831,
      27856,
      27842,
      27834,
      27843,
      27846,
      27885,
      27890,
      27858,
      27869,
      27828,
      27786,
      27805,
      27776,
      27870,
      27840,
      27952,
      27853,
      27847,
      27824,
      27897,
      27855,
      27881,
      27857,
      28820,
      28824,
      28805,
      28819,
      28806,
      28804,
      28817,
      28822,
      28802,
      28826,
      28803,
      29290,
      29398,
      29387,
      29400,
      29385,
      29404,
      29394,
      29396,
      29402,
      29388,
      29393,
      29604,
      29601,
      29613,
      29606,
      29602,
      29600,
      29612,
      29597,
      29917,
      29928,
      30015,
      30016,
      30014,
      30092,
      30104,
      30383,
      30451,
      30449,
      30448,
      30453,
      30712,
      30716,
      30713,
      30715,
      30714,
      30711,
      31042,
      31039,
      31173,
      31352,
      31355,
      31483,
      31861,
      31997,
      32821,
      32911,
      32942,
      32931,
      32952,
      32949,
      32941,
      33312,
      33440,
      33472,
      33451,
      33434,
      33432,
      33435,
      33461,
      33447,
      33454,
      33468,
      33438,
      33466,
      33460,
      33448,
      33441,
      33449,
      33474,
      33444,
      33475,
      33462,
      33442,
      34416,
      34415,
      34413,
      34414,
      35926,
      36818,
      36811,
      36819,
      36813,
      36822,
      36821,
      36823,
      37042,
      37044,
      37039,
      37043,
      37040,
      38457,
      38461,
      38460,
      38458,
      38467,
      20429,
      20421,
      20435,
      20402,
      20425,
      20427,
      20417,
      20436,
      20444,
      20441,
      20411,
      20403,
      20443,
      20423,
      20438,
      20410,
      20416,
      20409,
      20460,
      21060,
      21065,
      21184,
      21186,
      21309,
      21372,
      21399,
      21398,
      21401,
      21400,
      21690,
      21665,
      21677,
      21669,
      21711,
      21699,
      33549,
      21687,
      21678,
      21718,
      21686,
      21701,
      21702,
      21664,
      21616,
      21692,
      21666,
      21694,
      21618,
      21726,
      21680,
      22453,
      22430,
      22431,
      22436,
      22412,
      22423,
      22429,
      22427,
      22420,
      22424,
      22415,
      22425,
      22437,
      22426,
      22421,
      22772,
      22797,
      22867,
      23009,
      23006,
      23022,
      23040,
      23025,
      23005,
      23034,
      23037,
      23036,
      23030,
      23012,
      23026,
      23031,
      23003,
      23017,
      23027,
      23029,
      23008,
      23038,
      23028,
      23021,
      23464,
      23628,
      23760,
      23768,
      23756,
      23767,
      23755,
      23771,
      23774,
      23770,
      23753,
      23751,
      23754,
      23766,
      23763,
      23764,
      23759,
      23752,
      23750,
      23758,
      23775,
      23800,
      24057,
      24097,
      24098,
      24099,
      24096,
      24100,
      24240,
      24228,
      24226,
      24219,
      24227,
      24229,
      24327,
      24366,
      24406,
      24454,
      24631,
      24633,
      24660,
      24690,
      24670,
      24645,
      24659,
      24647,
      24649,
      24667,
      24652,
      24640,
      24642,
      24671,
      24612,
      24644,
      24664,
      24678,
      24686,
      25154,
      25155,
      25295,
      25357,
      25355,
      25333,
      25358,
      25347,
      25323,
      25337,
      25359,
      25356,
      25336,
      25334,
      25344,
      25363,
      25364,
      25338,
      25365,
      25339,
      25328,
      25921,
      25923,
      26026,
      26047,
      26166,
      26145,
      26162,
      26165,
      26140,
      26150,
      26146,
      26163,
      26155,
      26170,
      26141,
      26164,
      26169,
      26158,
      26383,
      26384,
      26561,
      26610,
      26568,
      26554,
      26588,
      26555,
      26616,
      26584,
      26560,
      26551,
      26565,
      26603,
      26596,
      26591,
      26549,
      26573,
      26547,
      26615,
      26614,
      26606,
      26595,
      26562,
      26553,
      26574,
      26599,
      26608,
      26546,
      26620,
      26566,
      26605,
      26572,
      26542,
      26598,
      26587,
      26618,
      26569,
      26570,
      26563,
      26602,
      26571,
      27432,
      27522,
      27524,
      27574,
      27606,
      27608,
      27616,
      27680,
      27681,
      27944,
      27956,
      27949,
      27935,
      27964,
      27967,
      27922,
      27914,
      27866,
      27955,
      27908,
      27929,
      27962,
      27930,
      27921,
      27904,
      27933,
      27970,
      27905,
      27928,
      27959,
      27907,
      27919,
      27968,
      27911,
      27936,
      27948,
      27912,
      27938,
      27913,
      27920,
      28855,
      28831,
      28862,
      28849,
      28848,
      28833,
      28852,
      28853,
      28841,
      29249,
      29257,
      29258,
      29292,
      29296,
      29299,
      29294,
      29386,
      29412,
      29416,
      29419,
      29407,
      29418,
      29414,
      29411,
      29573,
      29644,
      29634,
      29640,
      29637,
      29625,
      29622,
      29621,
      29620,
      29675,
      29631,
      29639,
      29630,
      29635,
      29638,
      29624,
      29643,
      29932,
      29934,
      29998,
      30023,
      30024,
      30119,
      30122,
      30329,
      30404,
      30472,
      30467,
      30468,
      30469,
      30474,
      30455,
      30459,
      30458,
      30695,
      30696,
      30726,
      30737,
      30738,
      30725,
      30736,
      30735,
      30734,
      30729,
      30723,
      30739,
      31050,
      31052,
      31051,
      31045,
      31044,
      31189,
      31181,
      31183,
      31190,
      31182,
      31360,
      31358,
      31441,
      31488,
      31489,
      31866,
      31864,
      31865,
      31871,
      31872,
      31873,
      32003,
      32008,
      32001,
      32600,
      32657,
      32653,
      32702,
      32775,
      32782,
      32783,
      32788,
      32823,
      32984,
      32967,
      32992,
      32977,
      32968,
      32962,
      32976,
      32965,
      32995,
      32985,
      32988,
      32970,
      32981,
      32969,
      32975,
      32983,
      32998,
      32973,
      33279,
      33313,
      33428,
      33497,
      33534,
      33529,
      33543,
      33512,
      33536,
      33493,
      33594,
      33515,
      33494,
      33524,
      33516,
      33505,
      33522,
      33525,
      33548,
      33531,
      33526,
      33520,
      33514,
      33508,
      33504,
      33530,
      33523,
      33517,
      34423,
      34420,
      34428,
      34419,
      34881,
      34894,
      34919,
      34922,
      34921,
      35283,
      35332,
      35335,
      36210,
      36835,
      36833,
      36846,
      36832,
      37105,
      37053,
      37055,
      37077,
      37061,
      37054,
      37063,
      37067,
      37064,
      37332,
      37331,
      38484,
      38479,
      38481,
      38483,
      38474,
      38478,
      20510,
      20485,
      20487,
      20499,
      20514,
      20528,
      20507,
      20469,
      20468,
      20531,
      20535,
      20524,
      20470,
      20471,
      20503,
      20508,
      20512,
      20519,
      20533,
      20527,
      20529,
      20494,
      20826,
      20884,
      20883,
      20938,
      20932,
      20933,
      20936,
      20942,
      21089,
      21082,
      21074,
      21086,
      21087,
      21077,
      21090,
      21197,
      21262,
      21406,
      21798,
      21730,
      21783,
      21778,
      21735,
      21747,
      21732,
      21786,
      21759,
      21764,
      21768,
      21739,
      21777,
      21765,
      21745,
      21770,
      21755,
      21751,
      21752,
      21728,
      21774,
      21763,
      21771,
      22273,
      22274,
      22476,
      22578,
      22485,
      22482,
      22458,
      22470,
      22461,
      22460,
      22456,
      22454,
      22463,
      22471,
      22480,
      22457,
      22465,
      22798,
      22858,
      23065,
      23062,
      23085,
      23086,
      23061,
      23055,
      23063,
      23050,
      23070,
      23091,
      23404,
      23463,
      23469,
      23468,
      23555,
      23638,
      23636,
      23788,
      23807,
      23790,
      23793,
      23799,
      23808,
      23801,
      24105,
      24104,
      24232,
      24238,
      24234,
      24236,
      24371,
      24368,
      24423,
      24669,
      24666,
      24679,
      24641,
      24738,
      24712,
      24704,
      24722,
      24705,
      24733,
      24707,
      24725,
      24731,
      24727,
      24711,
      24732,
      24718,
      25113,
      25158,
      25330,
      25360,
      25430,
      25388,
      25412,
      25413,
      25398,
      25411,
      25572,
      25401,
      25419,
      25418,
      25404,
      25385,
      25409,
      25396,
      25432,
      25428,
      25433,
      25389,
      25415,
      25395,
      25434,
      25425,
      25400,
      25431,
      25408,
      25416,
      25930,
      25926,
      26054,
      26051,
      26052,
      26050,
      26186,
      26207,
      26183,
      26193,
      26386,
      26387,
      26655,
      26650,
      26697,
      26674,
      26675,
      26683,
      26699,
      26703,
      26646,
      26673,
      26652,
      26677,
      26667,
      26669,
      26671,
      26702,
      26692,
      26676,
      26653,
      26642,
      26644,
      26662,
      26664,
      26670,
      26701,
      26682,
      26661,
      26656,
      27436,
      27439,
      27437,
      27441,
      27444,
      27501,
      32898,
      27528,
      27622,
      27620,
      27624,
      27619,
      27618,
      27623,
      27685,
      28026,
      28003,
      28004,
      28022,
      27917,
      28001,
      28050,
      27992,
      28002,
      28013,
      28015,
      28049,
      28045,
      28143,
      28031,
      28038,
      27998,
      28007,
      28000,
      28055,
      28016,
      28028,
      27999,
      28034,
      28056,
      27951,
      28008,
      28043,
      28030,
      28032,
      28036,
      27926,
      28035,
      28027,
      28029,
      28021,
      28048,
      28892,
      28883,
      28881,
      28893,
      28875,
      32569,
      28898,
      28887,
      28882,
      28894,
      28896,
      28884,
      28877,
      28869,
      28870,
      28871,
      28890,
      28878,
      28897,
      29250,
      29304,
      29303,
      29302,
      29440,
      29434,
      29428,
      29438,
      29430,
      29427,
      29435,
      29441,
      29651,
      29657,
      29669,
      29654,
      29628,
      29671,
      29667,
      29673,
      29660,
      29650,
      29659,
      29652,
      29661,
      29658,
      29655,
      29656,
      29672,
      29918,
      29919,
      29940,
      29941,
      29985,
      30043,
      30047,
      30128,
      30145,
      30139,
      30148,
      30144,
      30143,
      30134,
      30138,
      30346,
      30409,
      30493,
      30491,
      30480,
      30483,
      30482,
      30499,
      30481,
      30485,
      30489,
      30490,
      30498,
      30503,
      30755,
      30764,
      30754,
      30773,
      30767,
      30760,
      30766,
      30763,
      30753,
      30761,
      30771,
      30762,
      30769,
      31060,
      31067,
      31055,
      31068,
      31059,
      31058,
      31057,
      31211,
      31212,
      31200,
      31214,
      31213,
      31210,
      31196,
      31198,
      31197,
      31366,
      31369,
      31365,
      31371,
      31372,
      31370,
      31367,
      31448,
      31504,
      31492,
      31507,
      31493,
      31503,
      31496,
      31498,
      31502,
      31497,
      31506,
      31876,
      31889,
      31882,
      31884,
      31880,
      31885,
      31877,
      32030,
      32029,
      32017,
      32014,
      32024,
      32022,
      32019,
      32031,
      32018,
      32015,
      32012,
      32604,
      32609,
      32606,
      32608,
      32605,
      32603,
      32662,
      32658,
      32707,
      32706,
      32704,
      32790,
      32830,
      32825,
      33018,
      33010,
      33017,
      33013,
      33025,
      33019,
      33024,
      33281,
      33327,
      33317,
      33587,
      33581,
      33604,
      33561,
      33617,
      33573,
      33622,
      33599,
      33601,
      33574,
      33564,
      33570,
      33602,
      33614,
      33563,
      33578,
      33544,
      33596,
      33613,
      33558,
      33572,
      33568,
      33591,
      33583,
      33577,
      33607,
      33605,
      33612,
      33619,
      33566,
      33580,
      33611,
      33575,
      33608,
      34387,
      34386,
      34466,
      34472,
      34454,
      34445,
      34449,
      34462,
      34439,
      34455,
      34438,
      34443,
      34458,
      34437,
      34469,
      34457,
      34465,
      34471,
      34453,
      34456,
      34446,
      34461,
      34448,
      34452,
      34883,
      34884,
      34925,
      34933,
      34934,
      34930,
      34944,
      34929,
      34943,
      34927,
      34947,
      34942,
      34932,
      34940,
      35346,
      35911,
      35927,
      35963,
      36004,
      36003,
      36214,
      36216,
      36277,
      36279,
      36278,
      36561,
      36563,
      36862,
      36853,
      36866,
      36863,
      36859,
      36868,
      36860,
      36854,
      37078,
      37088,
      37081,
      37082,
      37091,
      37087,
      37093,
      37080,
      37083,
      37079,
      37084,
      37092,
      37200,
      37198,
      37199,
      37333,
      37346,
      37338,
      38492,
      38495,
      38588,
      39139,
      39647,
      39727,
      20095,
      20592,
      20586,
      20577,
      20574,
      20576,
      20563,
      20555,
      20573,
      20594,
      20552,
      20557,
      20545,
      20571,
      20554,
      20578,
      20501,
      20549,
      20575,
      20585,
      20587,
      20579,
      20580,
      20550,
      20544,
      20590,
      20595,
      20567,
      20561,
      20944,
      21099,
      21101,
      21100,
      21102,
      21206,
      21203,
      21293,
      21404,
      21877,
      21878,
      21820,
      21837,
      21840,
      21812,
      21802,
      21841,
      21858,
      21814,
      21813,
      21808,
      21842,
      21829,
      21772,
      21810,
      21861,
      21838,
      21817,
      21832,
      21805,
      21819,
      21824,
      21835,
      22282,
      22279,
      22523,
      22548,
      22498,
      22518,
      22492,
      22516,
      22528,
      22509,
      22525,
      22536,
      22520,
      22539,
      22515,
      22479,
      22535,
      22510,
      22499,
      22514,
      22501,
      22508,
      22497,
      22542,
      22524,
      22544,
      22503,
      22529,
      22540,
      22513,
      22505,
      22512,
      22541,
      22532,
      22876,
      23136,
      23128,
      23125,
      23143,
      23134,
      23096,
      23093,
      23149,
      23120,
      23135,
      23141,
      23148,
      23123,
      23140,
      23127,
      23107,
      23133,
      23122,
      23108,
      23131,
      23112,
      23182,
      23102,
      23117,
      23097,
      23116,
      23152,
      23145,
      23111,
      23121,
      23126,
      23106,
      23132,
      23410,
      23406,
      23489,
      23488,
      23641,
      23838,
      23819,
      23837,
      23834,
      23840,
      23820,
      23848,
      23821,
      23846,
      23845,
      23823,
      23856,
      23826,
      23843,
      23839,
      23854,
      24126,
      24116,
      24241,
      24244,
      24249,
      24242,
      24243,
      24374,
      24376,
      24475,
      24470,
      24479,
      24714,
      24720,
      24710,
      24766,
      24752,
      24762,
      24787,
      24788,
      24783,
      24804,
      24793,
      24797,
      24776,
      24753,
      24795,
      24759,
      24778,
      24767,
      24771,
      24781,
      24768,
      25394,
      25445,
      25482,
      25474,
      25469,
      25533,
      25502,
      25517,
      25501,
      25495,
      25515,
      25486,
      25455,
      25479,
      25488,
      25454,
      25519,
      25461,
      25500,
      25453,
      25518,
      25468,
      25508,
      25403,
      25503,
      25464,
      25477,
      25473,
      25489,
      25485,
      25456,
      25939,
      26061,
      26213,
      26209,
      26203,
      26201,
      26204,
      26210,
      26392,
      26745,
      26759,
      26768,
      26780,
      26733,
      26734,
      26798,
      26795,
      26966,
      26735,
      26787,
      26796,
      26793,
      26741,
      26740,
      26802,
      26767,
      26743,
      26770,
      26748,
      26731,
      26738,
      26794,
      26752,
      26737,
      26750,
      26779,
      26774,
      26763,
      26784,
      26761,
      26788,
      26744,
      26747,
      26769,
      26764,
      26762,
      26749,
      27446,
      27443,
      27447,
      27448,
      27537,
      27535,
      27533,
      27534,
      27532,
      27690,
      28096,
      28075,
      28084,
      28083,
      28276,
      28076,
      28137,
      28130,
      28087,
      28150,
      28116,
      28160,
      28104,
      28128,
      28127,
      28118,
      28094,
      28133,
      28124,
      28125,
      28123,
      28148,
      28106,
      28093,
      28141,
      28144,
      28090,
      28117,
      28098,
      28111,
      28105,
      28112,
      28146,
      28115,
      28157,
      28119,
      28109,
      28131,
      28091,
      28922,
      28941,
      28919,
      28951,
      28916,
      28940,
      28912,
      28932,
      28915,
      28944,
      28924,
      28927,
      28934,
      28947,
      28928,
      28920,
      28918,
      28939,
      28930,
      28942,
      29310,
      29307,
      29308,
      29311,
      29469,
      29463,
      29447,
      29457,
      29464,
      29450,
      29448,
      29439,
      29455,
      29470,
      29576,
      29686,
      29688,
      29685,
      29700,
      29697,
      29693,
      29703,
      29696,
      29690,
      29692,
      29695,
      29708,
      29707,
      29684,
      29704,
      30052,
      30051,
      30158,
      30162,
      30159,
      30155,
      30156,
      30161,
      30160,
      30351,
      30345,
      30419,
      30521,
      30511,
      30509,
      30513,
      30514,
      30516,
      30515,
      30525,
      30501,
      30523,
      30517,
      30792,
      30802,
      30793,
      30797,
      30794,
      30796,
      30758,
      30789,
      30800,
      31076,
      31079,
      31081,
      31082,
      31075,
      31083,
      31073,
      31163,
      31226,
      31224,
      31222,
      31223,
      31375,
      31380,
      31376,
      31541,
      31559,
      31540,
      31525,
      31536,
      31522,
      31524,
      31539,
      31512,
      31530,
      31517,
      31537,
      31531,
      31533,
      31535,
      31538,
      31544,
      31514,
      31523,
      31892,
      31896,
      31894,
      31907,
      32053,
      32061,
      32056,
      32054,
      32058,
      32069,
      32044,
      32041,
      32065,
      32071,
      32062,
      32063,
      32074,
      32059,
      32040,
      32611,
      32661,
      32668,
      32669,
      32667,
      32714,
      32715,
      32717,
      32720,
      32721,
      32711,
      32719,
      32713,
      32799,
      32798,
      32795,
      32839,
      32835,
      32840,
      33048,
      33061,
      33049,
      33051,
      33069,
      33055,
      33068,
      33054,
      33057,
      33045,
      33063,
      33053,
      33058,
      33297,
      33336,
      33331,
      33338,
      33332,
      33330,
      33396,
      33680,
      33699,
      33704,
      33677,
      33658,
      33651,
      33700,
      33652,
      33679,
      33665,
      33685,
      33689,
      33653,
      33684,
      33705,
      33661,
      33667,
      33676,
      33693,
      33691,
      33706,
      33675,
      33662,
      33701,
      33711,
      33672,
      33687,
      33712,
      33663,
      33702,
      33671,
      33710,
      33654,
      33690,
      34393,
      34390,
      34495,
      34487,
      34498,
      34497,
      34501,
      34490,
      34480,
      34504,
      34489,
      34483,
      34488,
      34508,
      34484,
      34491,
      34492,
      34499,
      34493,
      34494,
      34898,
      34953,
      34965,
      34984,
      34978,
      34986,
      34970,
      34961,
      34977,
      34975,
      34968,
      34983,
      34969,
      34971,
      34967,
      34980,
      34988,
      34956,
      34963,
      34958,
      35202,
      35286,
      35289,
      35285,
      35376,
      35367,
      35372,
      35358,
      35897,
      35899,
      35932,
      35933,
      35965,
      36005,
      36221,
      36219,
      36217,
      36284,
      36290,
      36281,
      36287,
      36289,
      36568,
      36574,
      36573,
      36572,
      36567,
      36576,
      36577,
      36900,
      36875,
      36881,
      36892,
      36876,
      36897,
      37103,
      37098,
      37104,
      37108,
      37106,
      37107,
      37076,
      37099,
      37100,
      37097,
      37206,
      37208,
      37210,
      37203,
      37205,
      37356,
      37364,
      37361,
      37363,
      37368,
      37348,
      37369,
      37354,
      37355,
      37367,
      37352,
      37358,
      38266,
      38278,
      38280,
      38524,
      38509,
      38507,
      38513,
      38511,
      38591,
      38762,
      38916,
      39141,
      39319,
      20635,
      20629,
      20628,
      20638,
      20619,
      20643,
      20611,
      20620,
      20622,
      20637,
      20584,
      20636,
      20626,
      20610,
      20615,
      20831,
      20948,
      21266,
      21265,
      21412,
      21415,
      21905,
      21928,
      21925,
      21933,
      21879,
      22085,
      21922,
      21907,
      21896,
      21903,
      21941,
      21889,
      21923,
      21906,
      21924,
      21885,
      21900,
      21926,
      21887,
      21909,
      21921,
      21902,
      22284,
      22569,
      22583,
      22553,
      22558,
      22567,
      22563,
      22568,
      22517,
      22600,
      22565,
      22556,
      22555,
      22579,
      22591,
      22582,
      22574,
      22585,
      22584,
      22573,
      22572,
      22587,
      22881,
      23215,
      23188,
      23199,
      23162,
      23202,
      23198,
      23160,
      23206,
      23164,
      23205,
      23212,
      23189,
      23214,
      23095,
      23172,
      23178,
      23191,
      23171,
      23179,
      23209,
      23163,
      23165,
      23180,
      23196,
      23183,
      23187,
      23197,
      23530,
      23501,
      23499,
      23508,
      23505,
      23498,
      23502,
      23564,
      23600,
      23863,
      23875,
      23915,
      23873,
      23883,
      23871,
      23861,
      23889,
      23886,
      23893,
      23859,
      23866,
      23890,
      23869,
      23857,
      23897,
      23874,
      23865,
      23881,
      23864,
      23868,
      23858,
      23862,
      23872,
      23877,
      24132,
      24129,
      24408,
      24486,
      24485,
      24491,
      24777,
      24761,
      24780,
      24802,
      24782,
      24772,
      24852,
      24818,
      24842,
      24854,
      24837,
      24821,
      24851,
      24824,
      24828,
      24830,
      24769,
      24835,
      24856,
      24861,
      24848,
      24831,
      24836,
      24843,
      25162,
      25492,
      25521,
      25520,
      25550,
      25573,
      25576,
      25583,
      25539,
      25757,
      25587,
      25546,
      25568,
      25590,
      25557,
      25586,
      25589,
      25697,
      25567,
      25534,
      25565,
      25564,
      25540,
      25560,
      25555,
      25538,
      25543,
      25548,
      25547,
      25544,
      25584,
      25559,
      25561,
      25906,
      25959,
      25962,
      25956,
      25948,
      25960,
      25957,
      25996,
      26013,
      26014,
      26030,
      26064,
      26066,
      26236,
      26220,
      26235,
      26240,
      26225,
      26233,
      26218,
      26226,
      26369,
      26892,
      26835,
      26884,
      26844,
      26922,
      26860,
      26858,
      26865,
      26895,
      26838,
      26871,
      26859,
      26852,
      26870,
      26899,
      26896,
      26867,
      26849,
      26887,
      26828,
      26888,
      26992,
      26804,
      26897,
      26863,
      26822,
      26900,
      26872,
      26832,
      26877,
      26876,
      26856,
      26891,
      26890,
      26903,
      26830,
      26824,
      26845,
      26846,
      26854,
      26868,
      26833,
      26886,
      26836,
      26857,
      26901,
      26917,
      26823,
      27449,
      27451,
      27455,
      27452,
      27540,
      27543,
      27545,
      27541,
      27581,
      27632,
      27634,
      27635,
      27696,
      28156,
      28230,
      28231,
      28191,
      28233,
      28296,
      28220,
      28221,
      28229,
      28258,
      28203,
      28223,
      28225,
      28253,
      28275,
      28188,
      28211,
      28235,
      28224,
      28241,
      28219,
      28163,
      28206,
      28254,
      28264,
      28252,
      28257,
      28209,
      28200,
      28256,
      28273,
      28267,
      28217,
      28194,
      28208,
      28243,
      28261,
      28199,
      28280,
      28260,
      28279,
      28245,
      28281,
      28242,
      28262,
      28213,
      28214,
      28250,
      28960,
      28958,
      28975,
      28923,
      28974,
      28977,
      28963,
      28965,
      28962,
      28978,
      28959,
      28968,
      28986,
      28955,
      29259,
      29274,
      29320,
      29321,
      29318,
      29317,
      29323,
      29458,
      29451,
      29488,
      29474,
      29489,
      29491,
      29479,
      29490,
      29485,
      29478,
      29475,
      29493,
      29452,
      29742,
      29740,
      29744,
      29739,
      29718,
      29722,
      29729,
      29741,
      29745,
      29732,
      29731,
      29725,
      29737,
      29728,
      29746,
      29947,
      29999,
      30063,
      30060,
      30183,
      30170,
      30177,
      30182,
      30173,
      30175,
      30180,
      30167,
      30357,
      30354,
      30426,
      30534,
      30535,
      30532,
      30541,
      30533,
      30538,
      30542,
      30539,
      30540,
      30686,
      30700,
      30816,
      30820,
      30821,
      30812,
      30829,
      30833,
      30826,
      30830,
      30832,
      30825,
      30824,
      30814,
      30818,
      31092,
      31091,
      31090,
      31088,
      31234,
      31242,
      31235,
      31244,
      31236,
      31385,
      31462,
      31460,
      31562,
      31547,
      31556,
      31560,
      31564,
      31566,
      31552,
      31576,
      31557,
      31906,
      31902,
      31912,
      31905,
      32088,
      32111,
      32099,
      32083,
      32086,
      32103,
      32106,
      32079,
      32109,
      32092,
      32107,
      32082,
      32084,
      32105,
      32081,
      32095,
      32078,
      32574,
      32575,
      32613,
      32614,
      32674,
      32672,
      32673,
      32727,
      32849,
      32847,
      32848,
      33022,
      32980,
      33091,
      33098,
      33106,
      33103,
      33095,
      33085,
      33101,
      33082,
      33254,
      33262,
      33271,
      33272,
      33273,
      33284,
      33340,
      33341,
      33343,
      33397,
      33595,
      33743,
      33785,
      33827,
      33728,
      33768,
      33810,
      33767,
      33764,
      33788,
      33782,
      33808,
      33734,
      33736,
      33771,
      33763,
      33727,
      33793,
      33757,
      33765,
      33752,
      33791,
      33761,
      33739,
      33742,
      33750,
      33781,
      33737,
      33801,
      33807,
      33758,
      33809,
      33798,
      33730,
      33779,
      33749,
      33786,
      33735,
      33745,
      33770,
      33811,
      33731,
      33772,
      33774,
      33732,
      33787,
      33751,
      33762,
      33819,
      33755,
      33790,
      34520,
      34530,
      34534,
      34515,
      34531,
      34522,
      34538,
      34525,
      34539,
      34524,
      34540,
      34537,
      34519,
      34536,
      34513,
      34888,
      34902,
      34901,
      35002,
      35031,
      35001,
      35000,
      35008,
      35006,
      34998,
      35004,
      34999,
      35005,
      34994,
      35073,
      35017,
      35221,
      35224,
      35223,
      35293,
      35290,
      35291,
      35406,
      35405,
      35385,
      35417,
      35392,
      35415,
      35416,
      35396,
      35397,
      35410,
      35400,
      35409,
      35402,
      35404,
      35407,
      35935,
      35969,
      35968,
      36026,
      36030,
      36016,
      36025,
      36021,
      36228,
      36224,
      36233,
      36312,
      36307,
      36301,
      36295,
      36310,
      36316,
      36303,
      36309,
      36313,
      36296,
      36311,
      36293,
      36591,
      36599,
      36602,
      36601,
      36582,
      36590,
      36581,
      36597,
      36583,
      36584,
      36598,
      36587,
      36593,
      36588,
      36596,
      36585,
      36909,
      36916,
      36911,
      37126,
      37164,
      37124,
      37119,
      37116,
      37128,
      37113,
      37115,
      37121,
      37120,
      37127,
      37125,
      37123,
      37217,
      37220,
      37215,
      37218,
      37216,
      37377,
      37386,
      37413,
      37379,
      37402,
      37414,
      37391,
      37388,
      37376,
      37394,
      37375,
      37373,
      37382,
      37380,
      37415,
      37378,
      37404,
      37412,
      37401,
      37399,
      37381,
      37398,
      38267,
      38285,
      38284,
      38288,
      38535,
      38526,
      38536,
      38537,
      38531,
      38528,
      38594,
      38600,
      38595,
      38641,
      38640,
      38764,
      38768,
      38766,
      38919,
      39081,
      39147,
      40166,
      40697,
      20099,
      20100,
      20150,
      20669,
      20671,
      20678,
      20654,
      20676,
      20682,
      20660,
      20680,
      20674,
      20656,
      20673,
      20666,
      20657,
      20683,
      20681,
      20662,
      20664,
      20951,
      21114,
      21112,
      21115,
      21116,
      21955,
      21979,
      21964,
      21968,
      21963,
      21962,
      21981,
      21952,
      21972,
      21956,
      21993,
      21951,
      21970,
      21901,
      21967,
      21973,
      21986,
      21974,
      21960,
      22002,
      21965,
      21977,
      21954,
      22292,
      22611,
      22632,
      22628,
      22607,
      22605,
      22601,
      22639,
      22613,
      22606,
      22621,
      22617,
      22629,
      22619,
      22589,
      22627,
      22641,
      22780,
      23239,
      23236,
      23243,
      23226,
      23224,
      23217,
      23221,
      23216,
      23231,
      23240,
      23227,
      23238,
      23223,
      23232,
      23242,
      23220,
      23222,
      23245,
      23225,
      23184,
      23510,
      23512,
      23513,
      23583,
      23603,
      23921,
      23907,
      23882,
      23909,
      23922,
      23916,
      23902,
      23912,
      23911,
      23906,
      24048,
      24143,
      24142,
      24138,
      24141,
      24139,
      24261,
      24268,
      24262,
      24267,
      24263,
      24384,
      24495,
      24493,
      24823,
      24905,
      24906,
      24875,
      24901,
      24886,
      24882,
      24878,
      24902,
      24879,
      24911,
      24873,
      24896,
      25120,
      37224,
      25123,
      25125,
      25124,
      25541,
      25585,
      25579,
      25616,
      25618,
      25609,
      25632,
      25636,
      25651,
      25667,
      25631,
      25621,
      25624,
      25657,
      25655,
      25634,
      25635,
      25612,
      25638,
      25648,
      25640,
      25665,
      25653,
      25647,
      25610,
      25626,
      25664,
      25637,
      25639,
      25611,
      25575,
      25627,
      25646,
      25633,
      25614,
      25967,
      26002,
      26067,
      26246,
      26252,
      26261,
      26256,
      26251,
      26250,
      26265,
      26260,
      26232,
      26400,
      26982,
      26975,
      26936,
      26958,
      26978,
      26993,
      26943,
      26949,
      26986,
      26937,
      26946,
      26967,
      26969,
      27002,
      26952,
      26953,
      26933,
      26988,
      26931,
      26941,
      26981,
      26864,
      27000,
      26932,
      26985,
      26944,
      26991,
      26948,
      26998,
      26968,
      26945,
      26996,
      26956,
      26939,
      26955,
      26935,
      26972,
      26959,
      26961,
      26930,
      26962,
      26927,
      27003,
      26940,
      27462,
      27461,
      27459,
      27458,
      27464,
      27457,
      27547,
      64013,
      27643,
      27644,
      27641,
      27639,
      27640,
      28315,
      28374,
      28360,
      28303,
      28352,
      28319,
      28307,
      28308,
      28320,
      28337,
      28345,
      28358,
      28370,
      28349,
      28353,
      28318,
      28361,
      28343,
      28336,
      28365,
      28326,
      28367,
      28338,
      28350,
      28355,
      28380,
      28376,
      28313,
      28306,
      28302,
      28301,
      28324,
      28321,
      28351,
      28339,
      28368,
      28362,
      28311,
      28334,
      28323,
      28999,
      29012,
      29010,
      29027,
      29024,
      28993,
      29021,
      29026,
      29042,
      29048,
      29034,
      29025,
      28994,
      29016,
      28995,
      29003,
      29040,
      29023,
      29008,
      29011,
      28996,
      29005,
      29018,
      29263,
      29325,
      29324,
      29329,
      29328,
      29326,
      29500,
      29506,
      29499,
      29498,
      29504,
      29514,
      29513,
      29764,
      29770,
      29771,
      29778,
      29777,
      29783,
      29760,
      29775,
      29776,
      29774,
      29762,
      29766,
      29773,
      29780,
      29921,
      29951,
      29950,
      29949,
      29981,
      30073,
      30071,
      27011,
      30191,
      30223,
      30211,
      30199,
      30206,
      30204,
      30201,
      30200,
      30224,
      30203,
      30198,
      30189,
      30197,
      30205,
      30361,
      30389,
      30429,
      30549,
      30559,
      30560,
      30546,
      30550,
      30554,
      30569,
      30567,
      30548,
      30553,
      30573,
      30688,
      30855,
      30874,
      30868,
      30863,
      30852,
      30869,
      30853,
      30854,
      30881,
      30851,
      30841,
      30873,
      30848,
      30870,
      30843,
      31100,
      31106,
      31101,
      31097,
      31249,
      31256,
      31257,
      31250,
      31255,
      31253,
      31266,
      31251,
      31259,
      31248,
      31395,
      31394,
      31390,
      31467,
      31590,
      31588,
      31597,
      31604,
      31593,
      31602,
      31589,
      31603,
      31601,
      31600,
      31585,
      31608,
      31606,
      31587,
      31922,
      31924,
      31919,
      32136,
      32134,
      32128,
      32141,
      32127,
      32133,
      32122,
      32142,
      32123,
      32131,
      32124,
      32140,
      32148,
      32132,
      32125,
      32146,
      32621,
      32619,
      32615,
      32616,
      32620,
      32678,
      32677,
      32679,
      32731,
      32732,
      32801,
      33124,
      33120,
      33143,
      33116,
      33129,
      33115,
      33122,
      33138,
      26401,
      33118,
      33142,
      33127,
      33135,
      33092,
      33121,
      33309,
      33353,
      33348,
      33344,
      33346,
      33349,
      34033,
      33855,
      33878,
      33910,
      33913,
      33935,
      33933,
      33893,
      33873,
      33856,
      33926,
      33895,
      33840,
      33869,
      33917,
      33882,
      33881,
      33908,
      33907,
      33885,
      34055,
      33886,
      33847,
      33850,
      33844,
      33914,
      33859,
      33912,
      33842,
      33861,
      33833,
      33753,
      33867,
      33839,
      33858,
      33837,
      33887,
      33904,
      33849,
      33870,
      33868,
      33874,
      33903,
      33989,
      33934,
      33851,
      33863,
      33846,
      33843,
      33896,
      33918,
      33860,
      33835,
      33888,
      33876,
      33902,
      33872,
      34571,
      34564,
      34551,
      34572,
      34554,
      34518,
      34549,
      34637,
      34552,
      34574,
      34569,
      34561,
      34550,
      34573,
      34565,
      35030,
      35019,
      35021,
      35022,
      35038,
      35035,
      35034,
      35020,
      35024,
      35205,
      35227,
      35295,
      35301,
      35300,
      35297,
      35296,
      35298,
      35292,
      35302,
      35446,
      35462,
      35455,
      35425,
      35391,
      35447,
      35458,
      35460,
      35445,
      35459,
      35457,
      35444,
      35450,
      35900,
      35915,
      35914,
      35941,
      35940,
      35942,
      35974,
      35972,
      35973,
      36044,
      36200,
      36201,
      36241,
      36236,
      36238,
      36239,
      36237,
      36243,
      36244,
      36240,
      36242,
      36336,
      36320,
      36332,
      36337,
      36334,
      36304,
      36329,
      36323,
      36322,
      36327,
      36338,
      36331,
      36340,
      36614,
      36607,
      36609,
      36608,
      36613,
      36615,
      36616,
      36610,
      36619,
      36946,
      36927,
      36932,
      36937,
      36925,
      37136,
      37133,
      37135,
      37137,
      37142,
      37140,
      37131,
      37134,
      37230,
      37231,
      37448,
      37458,
      37424,
      37434,
      37478,
      37427,
      37477,
      37470,
      37507,
      37422,
      37450,
      37446,
      37485,
      37484,
      37455,
      37472,
      37479,
      37487,
      37430,
      37473,
      37488,
      37425,
      37460,
      37475,
      37456,
      37490,
      37454,
      37459,
      37452,
      37462,
      37426,
      38303,
      38300,
      38302,
      38299,
      38546,
      38547,
      38545,
      38551,
      38606,
      38650,
      38653,
      38648,
      38645,
      38771,
      38775,
      38776,
      38770,
      38927,
      38925,
      38926,
      39084,
      39158,
      39161,
      39343,
      39346,
      39344,
      39349,
      39597,
      39595,
      39771,
      40170,
      40173,
      40167,
      40576,
      40701,
      20710,
      20692,
      20695,
      20712,
      20723,
      20699,
      20714,
      20701,
      20708,
      20691,
      20716,
      20720,
      20719,
      20707,
      20704,
      20952,
      21120,
      21121,
      21225,
      21227,
      21296,
      21420,
      22055,
      22037,
      22028,
      22034,
      22012,
      22031,
      22044,
      22017,
      22035,
      22018,
      22010,
      22045,
      22020,
      22015,
      22009,
      22665,
      22652,
      22672,
      22680,
      22662,
      22657,
      22655,
      22644,
      22667,
      22650,
      22663,
      22673,
      22670,
      22646,
      22658,
      22664,
      22651,
      22676,
      22671,
      22782,
      22891,
      23260,
      23278,
      23269,
      23253,
      23274,
      23258,
      23277,
      23275,
      23283,
      23266,
      23264,
      23259,
      23276,
      23262,
      23261,
      23257,
      23272,
      23263,
      23415,
      23520,
      23523,
      23651,
      23938,
      23936,
      23933,
      23942,
      23930,
      23937,
      23927,
      23946,
      23945,
      23944,
      23934,
      23932,
      23949,
      23929,
      23935,
      24152,
      24153,
      24147,
      24280,
      24273,
      24279,
      24270,
      24284,
      24277,
      24281,
      24274,
      24276,
      24388,
      24387,
      24431,
      24502,
      24876,
      24872,
      24897,
      24926,
      24945,
      24947,
      24914,
      24915,
      24946,
      24940,
      24960,
      24948,
      24916,
      24954,
      24923,
      24933,
      24891,
      24938,
      24929,
      24918,
      25129,
      25127,
      25131,
      25643,
      25677,
      25691,
      25693,
      25716,
      25718,
      25714,
      25715,
      25725,
      25717,
      25702,
      25766,
      25678,
      25730,
      25694,
      25692,
      25675,
      25683,
      25696,
      25680,
      25727,
      25663,
      25708,
      25707,
      25689,
      25701,
      25719,
      25971,
      26016,
      26273,
      26272,
      26271,
      26373,
      26372,
      26402,
      27057,
      27062,
      27081,
      27040,
      27086,
      27030,
      27056,
      27052,
      27068,
      27025,
      27033,
      27022,
      27047,
      27021,
      27049,
      27070,
      27055,
      27071,
      27076,
      27069,
      27044,
      27092,
      27065,
      27082,
      27034,
      27087,
      27059,
      27027,
      27050,
      27041,
      27038,
      27097,
      27031,
      27024,
      27074,
      27061,
      27045,
      27078,
      27466,
      27469,
      27467,
      27550,
      27551,
      27552,
      27587,
      27588,
      27646,
      28366,
      28405,
      28401,
      28419,
      28453,
      28408,
      28471,
      28411,
      28462,
      28425,
      28494,
      28441,
      28442,
      28455,
      28440,
      28475,
      28434,
      28397,
      28426,
      28470,
      28531,
      28409,
      28398,
      28461,
      28480,
      28464,
      28476,
      28469,
      28395,
      28423,
      28430,
      28483,
      28421,
      28413,
      28406,
      28473,
      28444,
      28412,
      28474,
      28447,
      28429,
      28446,
      28424,
      28449,
      29063,
      29072,
      29065,
      29056,
      29061,
      29058,
      29071,
      29051,
      29062,
      29057,
      29079,
      29252,
      29267,
      29335,
      29333,
      29331,
      29507,
      29517,
      29521,
      29516,
      29794,
      29811,
      29809,
      29813,
      29810,
      29799,
      29806,
      29952,
      29954,
      29955,
      30077,
      30096,
      30230,
      30216,
      30220,
      30229,
      30225,
      30218,
      30228,
      30392,
      30593,
      30588,
      30597,
      30594,
      30574,
      30592,
      30575,
      30590,
      30595,
      30898,
      30890,
      30900,
      30893,
      30888,
      30846,
      30891,
      30878,
      30885,
      30880,
      30892,
      30882,
      30884,
      31128,
      31114,
      31115,
      31126,
      31125,
      31124,
      31123,
      31127,
      31112,
      31122,
      31120,
      31275,
      31306,
      31280,
      31279,
      31272,
      31270,
      31400,
      31403,
      31404,
      31470,
      31624,
      31644,
      31626,
      31633,
      31632,
      31638,
      31629,
      31628,
      31643,
      31630,
      31621,
      31640,
      21124,
      31641,
      31652,
      31618,
      31931,
      31935,
      31932,
      31930,
      32167,
      32183,
      32194,
      32163,
      32170,
      32193,
      32192,
      32197,
      32157,
      32206,
      32196,
      32198,
      32203,
      32204,
      32175,
      32185,
      32150,
      32188,
      32159,
      32166,
      32174,
      32169,
      32161,
      32201,
      32627,
      32738,
      32739,
      32741,
      32734,
      32804,
      32861,
      32860,
      33161,
      33158,
      33155,
      33159,
      33165,
      33164,
      33163,
      33301,
      33943,
      33956,
      33953,
      33951,
      33978,
      33998,
      33986,
      33964,
      33966,
      33963,
      33977,
      33972,
      33985,
      33997,
      33962,
      33946,
      33969,
      34000,
      33949,
      33959,
      33979,
      33954,
      33940,
      33991,
      33996,
      33947,
      33961,
      33967,
      33960,
      34006,
      33944,
      33974,
      33999,
      33952,
      34007,
      34004,
      34002,
      34011,
      33968,
      33937,
      34401,
      34611,
      34595,
      34600,
      34667,
      34624,
      34606,
      34590,
      34593,
      34585,
      34587,
      34627,
      34604,
      34625,
      34622,
      34630,
      34592,
      34610,
      34602,
      34605,
      34620,
      34578,
      34618,
      34609,
      34613,
      34626,
      34598,
      34599,
      34616,
      34596,
      34586,
      34608,
      34577,
      35063,
      35047,
      35057,
      35058,
      35066,
      35070,
      35054,
      35068,
      35062,
      35067,
      35056,
      35052,
      35051,
      35229,
      35233,
      35231,
      35230,
      35305,
      35307,
      35304,
      35499,
      35481,
      35467,
      35474,
      35471,
      35478,
      35901,
      35944,
      35945,
      36053,
      36047,
      36055,
      36246,
      36361,
      36354,
      36351,
      36365,
      36349,
      36362,
      36355,
      36359,
      36358,
      36357,
      36350,
      36352,
      36356,
      36624,
      36625,
      36622,
      36621,
      37155,
      37148,
      37152,
      37154,
      37151,
      37149,
      37146,
      37156,
      37153,
      37147,
      37242,
      37234,
      37241,
      37235,
      37541,
      37540,
      37494,
      37531,
      37498,
      37536,
      37524,
      37546,
      37517,
      37542,
      37530,
      37547,
      37497,
      37527,
      37503,
      37539,
      37614,
      37518,
      37506,
      37525,
      37538,
      37501,
      37512,
      37537,
      37514,
      37510,
      37516,
      37529,
      37543,
      37502,
      37511,
      37545,
      37533,
      37515,
      37421,
      38558,
      38561,
      38655,
      38744,
      38781,
      38778,
      38782,
      38787,
      38784,
      38786,
      38779,
      38788,
      38785,
      38783,
      38862,
      38861,
      38934,
      39085,
      39086,
      39170,
      39168,
      39175,
      39325,
      39324,
      39363,
      39353,
      39355,
      39354,
      39362,
      39357,
      39367,
      39601,
      39651,
      39655,
      39742,
      39743,
      39776,
      39777,
      39775,
      40177,
      40178,
      40181,
      40615,
      20735,
      20739,
      20784,
      20728,
      20742,
      20743,
      20726,
      20734,
      20747,
      20748,
      20733,
      20746,
      21131,
      21132,
      21233,
      21231,
      22088,
      22082,
      22092,
      22069,
      22081,
      22090,
      22089,
      22086,
      22104,
      22106,
      22080,
      22067,
      22077,
      22060,
      22078,
      22072,
      22058,
      22074,
      22298,
      22699,
      22685,
      22705,
      22688,
      22691,
      22703,
      22700,
      22693,
      22689,
      22783,
      23295,
      23284,
      23293,
      23287,
      23286,
      23299,
      23288,
      23298,
      23289,
      23297,
      23303,
      23301,
      23311,
      23655,
      23961,
      23959,
      23967,
      23954,
      23970,
      23955,
      23957,
      23968,
      23964,
      23969,
      23962,
      23966,
      24169,
      24157,
      24160,
      24156,
      32243,
      24283,
      24286,
      24289,
      24393,
      24498,
      24971,
      24963,
      24953,
      25009,
      25008,
      24994,
      24969,
      24987,
      24979,
      25007,
      25005,
      24991,
      24978,
      25002,
      24993,
      24973,
      24934,
      25011,
      25133,
      25710,
      25712,
      25750,
      25760,
      25733,
      25751,
      25756,
      25743,
      25739,
      25738,
      25740,
      25763,
      25759,
      25704,
      25777,
      25752,
      25974,
      25978,
      25977,
      25979,
      26034,
      26035,
      26293,
      26288,
      26281,
      26290,
      26295,
      26282,
      26287,
      27136,
      27142,
      27159,
      27109,
      27128,
      27157,
      27121,
      27108,
      27168,
      27135,
      27116,
      27106,
      27163,
      27165,
      27134,
      27175,
      27122,
      27118,
      27156,
      27127,
      27111,
      27200,
      27144,
      27110,
      27131,
      27149,
      27132,
      27115,
      27145,
      27140,
      27160,
      27173,
      27151,
      27126,
      27174,
      27143,
      27124,
      27158,
      27473,
      27557,
      27555,
      27554,
      27558,
      27649,
      27648,
      27647,
      27650,
      28481,
      28454,
      28542,
      28551,
      28614,
      28562,
      28557,
      28553,
      28556,
      28514,
      28495,
      28549,
      28506,
      28566,
      28534,
      28524,
      28546,
      28501,
      28530,
      28498,
      28496,
      28503,
      28564,
      28563,
      28509,
      28416,
      28513,
      28523,
      28541,
      28519,
      28560,
      28499,
      28555,
      28521,
      28543,
      28565,
      28515,
      28535,
      28522,
      28539,
      29106,
      29103,
      29083,
      29104,
      29088,
      29082,
      29097,
      29109,
      29085,
      29093,
      29086,
      29092,
      29089,
      29098,
      29084,
      29095,
      29107,
      29336,
      29338,
      29528,
      29522,
      29534,
      29535,
      29536,
      29533,
      29531,
      29537,
      29530,
      29529,
      29538,
      29831,
      29833,
      29834,
      29830,
      29825,
      29821,
      29829,
      29832,
      29820,
      29817,
      29960,
      29959,
      30078,
      30245,
      30238,
      30233,
      30237,
      30236,
      30243,
      30234,
      30248,
      30235,
      30364,
      30365,
      30366,
      30363,
      30605,
      30607,
      30601,
      30600,
      30925,
      30907,
      30927,
      30924,
      30929,
      30926,
      30932,
      30920,
      30915,
      30916,
      30921,
      31130,
      31137,
      31136,
      31132,
      31138,
      31131,
      27510,
      31289,
      31410,
      31412,
      31411,
      31671,
      31691,
      31678,
      31660,
      31694,
      31663,
      31673,
      31690,
      31669,
      31941,
      31944,
      31948,
      31947,
      32247,
      32219,
      32234,
      32231,
      32215,
      32225,
      32259,
      32250,
      32230,
      32246,
      32241,
      32240,
      32238,
      32223,
      32630,
      32684,
      32688,
      32685,
      32749,
      32747,
      32746,
      32748,
      32742,
      32744,
      32868,
      32871,
      33187,
      33183,
      33182,
      33173,
      33186,
      33177,
      33175,
      33302,
      33359,
      33363,
      33362,
      33360,
      33358,
      33361,
      34084,
      34107,
      34063,
      34048,
      34089,
      34062,
      34057,
      34061,
      34079,
      34058,
      34087,
      34076,
      34043,
      34091,
      34042,
      34056,
      34060,
      34036,
      34090,
      34034,
      34069,
      34039,
      34027,
      34035,
      34044,
      34066,
      34026,
      34025,
      34070,
      34046,
      34088,
      34077,
      34094,
      34050,
      34045,
      34078,
      34038,
      34097,
      34086,
      34023,
      34024,
      34032,
      34031,
      34041,
      34072,
      34080,
      34096,
      34059,
      34073,
      34095,
      34402,
      34646,
      34659,
      34660,
      34679,
      34785,
      34675,
      34648,
      34644,
      34651,
      34642,
      34657,
      34650,
      34641,
      34654,
      34669,
      34666,
      34640,
      34638,
      34655,
      34653,
      34671,
      34668,
      34682,
      34670,
      34652,
      34661,
      34639,
      34683,
      34677,
      34658,
      34663,
      34665,
      34906,
      35077,
      35084,
      35092,
      35083,
      35095,
      35096,
      35097,
      35078,
      35094,
      35089,
      35086,
      35081,
      35234,
      35236,
      35235,
      35309,
      35312,
      35308,
      35535,
      35526,
      35512,
      35539,
      35537,
      35540,
      35541,
      35515,
      35543,
      35518,
      35520,
      35525,
      35544,
      35523,
      35514,
      35517,
      35545,
      35902,
      35917,
      35983,
      36069,
      36063,
      36057,
      36072,
      36058,
      36061,
      36071,
      36256,
      36252,
      36257,
      36251,
      36384,
      36387,
      36389,
      36388,
      36398,
      36373,
      36379,
      36374,
      36369,
      36377,
      36390,
      36391,
      36372,
      36370,
      36376,
      36371,
      36380,
      36375,
      36378,
      36652,
      36644,
      36632,
      36634,
      36640,
      36643,
      36630,
      36631,
      36979,
      36976,
      36975,
      36967,
      36971,
      37167,
      37163,
      37161,
      37162,
      37170,
      37158,
      37166,
      37253,
      37254,
      37258,
      37249,
      37250,
      37252,
      37248,
      37584,
      37571,
      37572,
      37568,
      37593,
      37558,
      37583,
      37617,
      37599,
      37592,
      37609,
      37591,
      37597,
      37580,
      37615,
      37570,
      37608,
      37578,
      37576,
      37582,
      37606,
      37581,
      37589,
      37577,
      37600,
      37598,
      37607,
      37585,
      37587,
      37557,
      37601,
      37574,
      37556,
      38268,
      38316,
      38315,
      38318,
      38320,
      38564,
      38562,
      38611,
      38661,
      38664,
      38658,
      38746,
      38794,
      38798,
      38792,
      38864,
      38863,
      38942,
      38941,
      38950,
      38953,
      38952,
      38944,
      38939,
      38951,
      39090,
      39176,
      39162,
      39185,
      39188,
      39190,
      39191,
      39189,
      39388,
      39373,
      39375,
      39379,
      39380,
      39374,
      39369,
      39382,
      39384,
      39371,
      39383,
      39372,
      39603,
      39660,
      39659,
      39667,
      39666,
      39665,
      39750,
      39747,
      39783,
      39796,
      39793,
      39782,
      39798,
      39797,
      39792,
      39784,
      39780,
      39788,
      40188,
      40186,
      40189,
      40191,
      40183,
      40199,
      40192,
      40185,
      40187,
      40200,
      40197,
      40196,
      40579,
      40659,
      40719,
      40720,
      20764,
      20755,
      20759,
      20762,
      20753,
      20958,
      21300,
      21473,
      22128,
      22112,
      22126,
      22131,
      22118,
      22115,
      22125,
      22130,
      22110,
      22135,
      22300,
      22299,
      22728,
      22717,
      22729,
      22719,
      22714,
      22722,
      22716,
      22726,
      23319,
      23321,
      23323,
      23329,
      23316,
      23315,
      23312,
      23318,
      23336,
      23322,
      23328,
      23326,
      23535,
      23980,
      23985,
      23977,
      23975,
      23989,
      23984,
      23982,
      23978,
      23976,
      23986,
      23981,
      23983,
      23988,
      24167,
      24168,
      24166,
      24175,
      24297,
      24295,
      24294,
      24296,
      24293,
      24395,
      24508,
      24989,
      25000,
      24982,
      25029,
      25012,
      25030,
      25025,
      25036,
      25018,
      25023,
      25016,
      24972,
      25815,
      25814,
      25808,
      25807,
      25801,
      25789,
      25737,
      25795,
      25819,
      25843,
      25817,
      25907,
      25983,
      25980,
      26018,
      26312,
      26302,
      26304,
      26314,
      26315,
      26319,
      26301,
      26299,
      26298,
      26316,
      26403,
      27188,
      27238,
      27209,
      27239,
      27186,
      27240,
      27198,
      27229,
      27245,
      27254,
      27227,
      27217,
      27176,
      27226,
      27195,
      27199,
      27201,
      27242,
      27236,
      27216,
      27215,
      27220,
      27247,
      27241,
      27232,
      27196,
      27230,
      27222,
      27221,
      27213,
      27214,
      27206,
      27477,
      27476,
      27478,
      27559,
      27562,
      27563,
      27592,
      27591,
      27652,
      27651,
      27654,
      28589,
      28619,
      28579,
      28615,
      28604,
      28622,
      28616,
      28510,
      28612,
      28605,
      28574,
      28618,
      28584,
      28676,
      28581,
      28590,
      28602,
      28588,
      28586,
      28623,
      28607,
      28600,
      28578,
      28617,
      28587,
      28621,
      28591,
      28594,
      28592,
      29125,
      29122,
      29119,
      29112,
      29142,
      29120,
      29121,
      29131,
      29140,
      29130,
      29127,
      29135,
      29117,
      29144,
      29116,
      29126,
      29146,
      29147,
      29341,
      29342,
      29545,
      29542,
      29543,
      29548,
      29541,
      29547,
      29546,
      29823,
      29850,
      29856,
      29844,
      29842,
      29845,
      29857,
      29963,
      30080,
      30255,
      30253,
      30257,
      30269,
      30259,
      30268,
      30261,
      30258,
      30256,
      30395,
      30438,
      30618,
      30621,
      30625,
      30620,
      30619,
      30626,
      30627,
      30613,
      30617,
      30615,
      30941,
      30953,
      30949,
      30954,
      30942,
      30947,
      30939,
      30945,
      30946,
      30957,
      30943,
      30944,
      31140,
      31300,
      31304,
      31303,
      31414,
      31416,
      31413,
      31409,
      31415,
      31710,
      31715,
      31719,
      31709,
      31701,
      31717,
      31706,
      31720,
      31737,
      31700,
      31722,
      31714,
      31708,
      31723,
      31704,
      31711,
      31954,
      31956,
      31959,
      31952,
      31953,
      32274,
      32289,
      32279,
      32268,
      32287,
      32288,
      32275,
      32270,
      32284,
      32277,
      32282,
      32290,
      32267,
      32271,
      32278,
      32269,
      32276,
      32293,
      32292,
      32579,
      32635,
      32636,
      32634,
      32689,
      32751,
      32810,
      32809,
      32876,
      33201,
      33190,
      33198,
      33209,
      33205,
      33195,
      33200,
      33196,
      33204,
      33202,
      33207,
      33191,
      33266,
      33365,
      33366,
      33367,
      34134,
      34117,
      34155,
      34125,
      34131,
      34145,
      34136,
      34112,
      34118,
      34148,
      34113,
      34146,
      34116,
      34129,
      34119,
      34147,
      34110,
      34139,
      34161,
      34126,
      34158,
      34165,
      34133,
      34151,
      34144,
      34188,
      34150,
      34141,
      34132,
      34149,
      34156,
      34403,
      34405,
      34404,
      34715,
      34703,
      34711,
      34707,
      34706,
      34696,
      34689,
      34710,
      34712,
      34681,
      34695,
      34723,
      34693,
      34704,
      34705,
      34717,
      34692,
      34708,
      34716,
      34714,
      34697,
      35102,
      35110,
      35120,
      35117,
      35118,
      35111,
      35121,
      35106,
      35113,
      35107,
      35119,
      35116,
      35103,
      35313,
      35552,
      35554,
      35570,
      35572,
      35573,
      35549,
      35604,
      35556,
      35551,
      35568,
      35528,
      35550,
      35553,
      35560,
      35583,
      35567,
      35579,
      35985,
      35986,
      35984,
      36085,
      36078,
      36081,
      36080,
      36083,
      36204,
      36206,
      36261,
      36263,
      36403,
      36414,
      36408,
      36416,
      36421,
      36406,
      36412,
      36413,
      36417,
      36400,
      36415,
      36541,
      36662,
      36654,
      36661,
      36658,
      36665,
      36663,
      36660,
      36982,
      36985,
      36987,
      36998,
      37114,
      37171,
      37173,
      37174,
      37267,
      37264,
      37265,
      37261,
      37263,
      37671,
      37662,
      37640,
      37663,
      37638,
      37647,
      37754,
      37688,
      37692,
      37659,
      37667,
      37650,
      37633,
      37702,
      37677,
      37646,
      37645,
      37579,
      37661,
      37626,
      37669,
      37651,
      37625,
      37623,
      37684,
      37634,
      37668,
      37631,
      37673,
      37689,
      37685,
      37674,
      37652,
      37644,
      37643,
      37630,
      37641,
      37632,
      37627,
      37654,
      38332,
      38349,
      38334,
      38329,
      38330,
      38326,
      38335,
      38325,
      38333,
      38569,
      38612,
      38667,
      38674,
      38672,
      38809,
      38807,
      38804,
      38896,
      38904,
      38965,
      38959,
      38962,
      39204,
      39199,
      39207,
      39209,
      39326,
      39406,
      39404,
      39397,
      39396,
      39408,
      39395,
      39402,
      39401,
      39399,
      39609,
      39615,
      39604,
      39611,
      39670,
      39674,
      39673,
      39671,
      39731,
      39808,
      39813,
      39815,
      39804,
      39806,
      39803,
      39810,
      39827,
      39826,
      39824,
      39802,
      39829,
      39805,
      39816,
      40229,
      40215,
      40224,
      40222,
      40212,
      40233,
      40221,
      40216,
      40226,
      40208,
      40217,
      40223,
      40584,
      40582,
      40583,
      40622,
      40621,
      40661,
      40662,
      40698,
      40722,
      40765,
      20774,
      20773,
      20770,
      20772,
      20768,
      20777,
      21236,
      22163,
      22156,
      22157,
      22150,
      22148,
      22147,
      22142,
      22146,
      22143,
      22145,
      22742,
      22740,
      22735,
      22738,
      23341,
      23333,
      23346,
      23331,
      23340,
      23335,
      23334,
      23343,
      23342,
      23419,
      23537,
      23538,
      23991,
      24172,
      24170,
      24510,
      24507,
      25027,
      25013,
      25020,
      25063,
      25056,
      25061,
      25060,
      25064,
      25054,
      25839,
      25833,
      25827,
      25835,
      25828,
      25832,
      25985,
      25984,
      26038,
      26074,
      26322,
      27277,
      27286,
      27265,
      27301,
      27273,
      27295,
      27291,
      27297,
      27294,
      27271,
      27283,
      27278,
      27285,
      27267,
      27304,
      27300,
      27281,
      27263,
      27302,
      27290,
      27269,
      27276,
      27282,
      27483,
      27565,
      27657,
      28620,
      28585,
      28660,
      28628,
      28643,
      28636,
      28653,
      28647,
      28646,
      28638,
      28658,
      28637,
      28642,
      28648,
      29153,
      29169,
      29160,
      29170,
      29156,
      29168,
      29154,
      29555,
      29550,
      29551,
      29847,
      29874,
      29867,
      29840,
      29866,
      29869,
      29873,
      29861,
      29871,
      29968,
      29969,
      29970,
      29967,
      30084,
      30275,
      30280,
      30281,
      30279,
      30372,
      30441,
      30645,
      30635,
      30642,
      30647,
      30646,
      30644,
      30641,
      30632,
      30704,
      30963,
      30973,
      30978,
      30971,
      30972,
      30962,
      30981,
      30969,
      30974,
      30980,
      31147,
      31144,
      31324,
      31323,
      31318,
      31320,
      31316,
      31322,
      31422,
      31424,
      31425,
      31749,
      31759,
      31730,
      31744,
      31743,
      31739,
      31758,
      31732,
      31755,
      31731,
      31746,
      31753,
      31747,
      31745,
      31736,
      31741,
      31750,
      31728,
      31729,
      31760,
      31754,
      31976,
      32301,
      32316,
      32322,
      32307,
      38984,
      32312,
      32298,
      32329,
      32320,
      32327,
      32297,
      32332,
      32304,
      32315,
      32310,
      32324,
      32314,
      32581,
      32639,
      32638,
      32637,
      32756,
      32754,
      32812,
      33211,
      33220,
      33228,
      33226,
      33221,
      33223,
      33212,
      33257,
      33371,
      33370,
      33372,
      34179,
      34176,
      34191,
      34215,
      34197,
      34208,
      34187,
      34211,
      34171,
      34212,
      34202,
      34206,
      34167,
      34172,
      34185,
      34209,
      34170,
      34168,
      34135,
      34190,
      34198,
      34182,
      34189,
      34201,
      34205,
      34177,
      34210,
      34178,
      34184,
      34181,
      34169,
      34166,
      34200,
      34192,
      34207,
      34408,
      34750,
      34730,
      34733,
      34757,
      34736,
      34732,
      34745,
      34741,
      34748,
      34734,
      34761,
      34755,
      34754,
      34764,
      34743,
      34735,
      34756,
      34762,
      34740,
      34742,
      34751,
      34744,
      34749,
      34782,
      34738,
      35125,
      35123,
      35132,
      35134,
      35137,
      35154,
      35127,
      35138,
      35245,
      35247,
      35246,
      35314,
      35315,
      35614,
      35608,
      35606,
      35601,
      35589,
      35595,
      35618,
      35599,
      35602,
      35605,
      35591,
      35597,
      35592,
      35590,
      35612,
      35603,
      35610,
      35919,
      35952,
      35954,
      35953,
      35951,
      35989,
      35988,
      36089,
      36207,
      36430,
      36429,
      36435,
      36432,
      36428,
      36423,
      36675,
      36672,
      36997,
      36990,
      37176,
      37274,
      37282,
      37275,
      37273,
      37279,
      37281,
      37277,
      37280,
      37793,
      37763,
      37807,
      37732,
      37718,
      37703,
      37756,
      37720,
      37724,
      37750,
      37705,
      37712,
      37713,
      37728,
      37741,
      37775,
      37708,
      37738,
      37753,
      37719,
      37717,
      37714,
      37711,
      37745,
      37751,
      37755,
      37729,
      37726,
      37731,
      37735,
      37760,
      37710,
      37721,
      38343,
      38336,
      38345,
      38339,
      38341,
      38327,
      38574,
      38576,
      38572,
      38688,
      38687,
      38680,
      38685,
      38681,
      38810,
      38817,
      38812,
      38814,
      38813,
      38869,
      38868,
      38897,
      38977,
      38980,
      38986,
      38985,
      38981,
      38979,
      39205,
      39211,
      39212,
      39210,
      39219,
      39218,
      39215,
      39213,
      39217,
      39216,
      39320,
      39331,
      39329,
      39426,
      39418,
      39412,
      39415,
      39417,
      39416,
      39414,
      39419,
      39421,
      39422,
      39420,
      39427,
      39614,
      39678,
      39677,
      39681,
      39676,
      39752,
      39834,
      39848,
      39838,
      39835,
      39846,
      39841,
      39845,
      39844,
      39814,
      39842,
      39840,
      39855,
      40243,
      40257,
      40295,
      40246,
      40238,
      40239,
      40241,
      40248,
      40240,
      40261,
      40258,
      40259,
      40254,
      40247,
      40256,
      40253,
      32757,
      40237,
      40586,
      40585,
      40589,
      40624,
      40648,
      40666,
      40699,
      40703,
      40740,
      40739,
      40738,
      40788,
      40864,
      20785,
      20781,
      20782,
      22168,
      22172,
      22167,
      22170,
      22173,
      22169,
      22896,
      23356,
      23657,
      23658,
      24000,
      24173,
      24174,
      25048,
      25055,
      25069,
      25070,
      25073,
      25066,
      25072,
      25067,
      25046,
      25065,
      25855,
      25860,
      25853,
      25848,
      25857,
      25859,
      25852,
      26004,
      26075,
      26330,
      26331,
      26328,
      27333,
      27321,
      27325,
      27361,
      27334,
      27322,
      27318,
      27319,
      27335,
      27316,
      27309,
      27486,
      27593,
      27659,
      28679,
      28684,
      28685,
      28673,
      28677,
      28692,
      28686,
      28671,
      28672,
      28667,
      28710,
      28668,
      28663,
      28682,
      29185,
      29183,
      29177,
      29187,
      29181,
      29558,
      29880,
      29888,
      29877,
      29889,
      29886,
      29878,
      29883,
      29890,
      29972,
      29971,
      30300,
      30308,
      30297,
      30288,
      30291,
      30295,
      30298,
      30374,
      30397,
      30444,
      30658,
      30650,
      30975,
      30988,
      30995,
      30996,
      30985,
      30992,
      30994,
      30993,
      31149,
      31148,
      31327,
      31772,
      31785,
      31769,
      31776,
      31775,
      31789,
      31773,
      31782,
      31784,
      31778,
      31781,
      31792,
      32348,
      32336,
      32342,
      32355,
      32344,
      32354,
      32351,
      32337,
      32352,
      32343,
      32339,
      32693,
      32691,
      32759,
      32760,
      32885,
      33233,
      33234,
      33232,
      33375,
      33374,
      34228,
      34246,
      34240,
      34243,
      34242,
      34227,
      34229,
      34237,
      34247,
      34244,
      34239,
      34251,
      34254,
      34248,
      34245,
      34225,
      34230,
      34258,
      34340,
      34232,
      34231,
      34238,
      34409,
      34791,
      34790,
      34786,
      34779,
      34795,
      34794,
      34789,
      34783,
      34803,
      34788,
      34772,
      34780,
      34771,
      34797,
      34776,
      34787,
      34724,
      34775,
      34777,
      34817,
      34804,
      34792,
      34781,
      35155,
      35147,
      35151,
      35148,
      35142,
      35152,
      35153,
      35145,
      35626,
      35623,
      35619,
      35635,
      35632,
      35637,
      35655,
      35631,
      35644,
      35646,
      35633,
      35621,
      35639,
      35622,
      35638,
      35630,
      35620,
      35643,
      35645,
      35642,
      35906,
      35957,
      35993,
      35992,
      35991,
      36094,
      36100,
      36098,
      36096,
      36444,
      36450,
      36448,
      36439,
      36438,
      36446,
      36453,
      36455,
      36443,
      36442,
      36449,
      36445,
      36457,
      36436,
      36678,
      36679,
      36680,
      36683,
      37160,
      37178,
      37179,
      37182,
      37288,
      37285,
      37287,
      37295,
      37290,
      37813,
      37772,
      37778,
      37815,
      37787,
      37789,
      37769,
      37799,
      37774,
      37802,
      37790,
      37798,
      37781,
      37768,
      37785,
      37791,
      37773,
      37809,
      37777,
      37810,
      37796,
      37800,
      37812,
      37795,
      37797,
      38354,
      38355,
      38353,
      38579,
      38615,
      38618,
      24002,
      38623,
      38616,
      38621,
      38691,
      38690,
      38693,
      38828,
      38830,
      38824,
      38827,
      38820,
      38826,
      38818,
      38821,
      38871,
      38873,
      38870,
      38872,
      38906,
      38992,
      38993,
      38994,
      39096,
      39233,
      39228,
      39226,
      39439,
      39435,
      39433,
      39437,
      39428,
      39441,
      39434,
      39429,
      39431,
      39430,
      39616,
      39644,
      39688,
      39684,
      39685,
      39721,
      39733,
      39754,
      39756,
      39755,
      39879,
      39878,
      39875,
      39871,
      39873,
      39861,
      39864,
      39891,
      39862,
      39876,
      39865,
      39869,
      40284,
      40275,
      40271,
      40266,
      40283,
      40267,
      40281,
      40278,
      40268,
      40279,
      40274,
      40276,
      40287,
      40280,
      40282,
      40590,
      40588,
      40671,
      40705,
      40704,
      40726,
      40741,
      40747,
      40746,
      40745,
      40744,
      40780,
      40789,
      20788,
      20789,
      21142,
      21239,
      21428,
      22187,
      22189,
      22182,
      22183,
      22186,
      22188,
      22746,
      22749,
      22747,
      22802,
      23357,
      23358,
      23359,
      24003,
      24176,
      24511,
      25083,
      25863,
      25872,
      25869,
      25865,
      25868,
      25870,
      25988,
      26078,
      26077,
      26334,
      27367,
      27360,
      27340,
      27345,
      27353,
      27339,
      27359,
      27356,
      27344,
      27371,
      27343,
      27341,
      27358,
      27488,
      27568,
      27660,
      28697,
      28711,
      28704,
      28694,
      28715,
      28705,
      28706,
      28707,
      28713,
      28695,
      28708,
      28700,
      28714,
      29196,
      29194,
      29191,
      29186,
      29189,
      29349,
      29350,
      29348,
      29347,
      29345,
      29899,
      29893,
      29879,
      29891,
      29974,
      30304,
      30665,
      30666,
      30660,
      30705,
      31005,
      31003,
      31009,
      31004,
      30999,
      31006,
      31152,
      31335,
      31336,
      31795,
      31804,
      31801,
      31788,
      31803,
      31980,
      31978,
      32374,
      32373,
      32376,
      32368,
      32375,
      32367,
      32378,
      32370,
      32372,
      32360,
      32587,
      32586,
      32643,
      32646,
      32695,
      32765,
      32766,
      32888,
      33239,
      33237,
      33380,
      33377,
      33379,
      34283,
      34289,
      34285,
      34265,
      34273,
      34280,
      34266,
      34263,
      34284,
      34290,
      34296,
      34264,
      34271,
      34275,
      34268,
      34257,
      34288,
      34278,
      34287,
      34270,
      34274,
      34816,
      34810,
      34819,
      34806,
      34807,
      34825,
      34828,
      34827,
      34822,
      34812,
      34824,
      34815,
      34826,
      34818,
      35170,
      35162,
      35163,
      35159,
      35169,
      35164,
      35160,
      35165,
      35161,
      35208,
      35255,
      35254,
      35318,
      35664,
      35656,
      35658,
      35648,
      35667,
      35670,
      35668,
      35659,
      35669,
      35665,
      35650,
      35666,
      35671,
      35907,
      35959,
      35958,
      35994,
      36102,
      36103,
      36105,
      36268,
      36266,
      36269,
      36267,
      36461,
      36472,
      36467,
      36458,
      36463,
      36475,
      36546,
      36690,
      36689,
      36687,
      36688,
      36691,
      36788,
      37184,
      37183,
      37296,
      37293,
      37854,
      37831,
      37839,
      37826,
      37850,
      37840,
      37881,
      37868,
      37836,
      37849,
      37801,
      37862,
      37834,
      37844,
      37870,
      37859,
      37845,
      37828,
      37838,
      37824,
      37842,
      37863,
      38269,
      38362,
      38363,
      38625,
      38697,
      38699,
      38700,
      38696,
      38694,
      38835,
      38839,
      38838,
      38877,
      38878,
      38879,
      39004,
      39001,
      39005,
      38999,
      39103,
      39101,
      39099,
      39102,
      39240,
      39239,
      39235,
      39334,
      39335,
      39450,
      39445,
      39461,
      39453,
      39460,
      39451,
      39458,
      39456,
      39463,
      39459,
      39454,
      39452,
      39444,
      39618,
      39691,
      39690,
      39694,
      39692,
      39735,
      39914,
      39915,
      39904,
      39902,
      39908,
      39910,
      39906,
      39920,
      39892,
      39895,
      39916,
      39900,
      39897,
      39909,
      39893,
      39905,
      39898,
      40311,
      40321,
      40330,
      40324,
      40328,
      40305,
      40320,
      40312,
      40326,
      40331,
      40332,
      40317,
      40299,
      40308,
      40309,
      40304,
      40297,
      40325,
      40307,
      40315,
      40322,
      40303,
      40313,
      40319,
      40327,
      40296,
      40596,
      40593,
      40640,
      40700,
      40749,
      40768,
      40769,
      40781,
      40790,
      40791,
      40792,
      21303,
      22194,
      22197,
      22195,
      22755,
      23365,
      24006,
      24007,
      24302,
      24303,
      24512,
      24513,
      25081,
      25879,
      25878,
      25877,
      25875,
      26079,
      26344,
      26339,
      26340,
      27379,
      27376,
      27370,
      27368,
      27385,
      27377,
      27374,
      27375,
      28732,
      28725,
      28719,
      28727,
      28724,
      28721,
      28738,
      28728,
      28735,
      28730,
      28729,
      28736,
      28731,
      28723,
      28737,
      29203,
      29204,
      29352,
      29565,
      29564,
      29882,
      30379,
      30378,
      30398,
      30445,
      30668,
      30670,
      30671,
      30669,
      30706,
      31013,
      31011,
      31015,
      31016,
      31012,
      31017,
      31154,
      31342,
      31340,
      31341,
      31479,
      31817,
      31816,
      31818,
      31815,
      31813,
      31982,
      32379,
      32382,
      32385,
      32384,
      32698,
      32767,
      32889,
      33243,
      33241,
      33291,
      33384,
      33385,
      34338,
      34303,
      34305,
      34302,
      34331,
      34304,
      34294,
      34308,
      34313,
      34309,
      34316,
      34301,
      34841,
      34832,
      34833,
      34839,
      34835,
      34838,
      35171,
      35174,
      35257,
      35319,
      35680,
      35690,
      35677,
      35688,
      35683,
      35685,
      35687,
      35693,
      36270,
      36486,
      36488,
      36484,
      36697,
      36694,
      36695,
      36693,
      36696,
      36698,
      37005,
      37187,
      37185,
      37303,
      37301,
      37298,
      37299,
      37899,
      37907,
      37883,
      37920,
      37903,
      37908,
      37886,
      37909,
      37904,
      37928,
      37913,
      37901,
      37877,
      37888,
      37879,
      37895,
      37902,
      37910,
      37906,
      37882,
      37897,
      37880,
      37898,
      37887,
      37884,
      37900,
      37878,
      37905,
      37894,
      38366,
      38368,
      38367,
      38702,
      38703,
      38841,
      38843,
      38909,
      38910,
      39008,
      39010,
      39011,
      39007,
      39105,
      39106,
      39248,
      39246,
      39257,
      39244,
      39243,
      39251,
      39474,
      39476,
      39473,
      39468,
      39466,
      39478,
      39465,
      39470,
      39480,
      39469,
      39623,
      39626,
      39622,
      39696,
      39698,
      39697,
      39947,
      39944,
      39927,
      39941,
      39954,
      39928,
      40000,
      39943,
      39950,
      39942,
      39959,
      39956,
      39945,
      40351,
      40345,
      40356,
      40349,
      40338,
      40344,
      40336,
      40347,
      40352,
      40340,
      40348,
      40362,
      40343,
      40353,
      40346,
      40354,
      40360,
      40350,
      40355,
      40383,
      40361,
      40342,
      40358,
      40359,
      40601,
      40603,
      40602,
      40677,
      40676,
      40679,
      40678,
      40752,
      40750,
      40795,
      40800,
      40798,
      40797,
      40793,
      40849,
      20794,
      20793,
      21144,
      21143,
      22211,
      22205,
      22206,
      23368,
      23367,
      24011,
      24015,
      24305,
      25085,
      25883,
      27394,
      27388,
      27395,
      27384,
      27392,
      28739,
      28740,
      28746,
      28744,
      28745,
      28741,
      28742,
      29213,
      29210,
      29209,
      29566,
      29975,
      30314,
      30672,
      31021,
      31025,
      31023,
      31828,
      31827,
      31986,
      32394,
      32391,
      32392,
      32395,
      32390,
      32397,
      32589,
      32699,
      32816,
      33245,
      34328,
      34346,
      34342,
      34335,
      34339,
      34332,
      34329,
      34343,
      34350,
      34337,
      34336,
      34345,
      34334,
      34341,
      34857,
      34845,
      34843,
      34848,
      34852,
      34844,
      34859,
      34890,
      35181,
      35177,
      35182,
      35179,
      35322,
      35705,
      35704,
      35653,
      35706,
      35707,
      36112,
      36116,
      36271,
      36494,
      36492,
      36702,
      36699,
      36701,
      37190,
      37188,
      37189,
      37305,
      37951,
      37947,
      37942,
      37929,
      37949,
      37948,
      37936,
      37945,
      37930,
      37943,
      37932,
      37952,
      37937,
      38373,
      38372,
      38371,
      38709,
      38714,
      38847,
      38881,
      39012,
      39113,
      39110,
      39104,
      39256,
      39254,
      39481,
      39485,
      39494,
      39492,
      39490,
      39489,
      39482,
      39487,
      39629,
      39701,
      39703,
      39704,
      39702,
      39738,
      39762,
      39979,
      39965,
      39964,
      39980,
      39971,
      39976,
      39977,
      39972,
      39969,
      40375,
      40374,
      40380,
      40385,
      40391,
      40394,
      40399,
      40382,
      40389,
      40387,
      40379,
      40373,
      40398,
      40377,
      40378,
      40364,
      40392,
      40369,
      40365,
      40396,
      40371,
      40397,
      40370,
      40570,
      40604,
      40683,
      40686,
      40685,
      40731,
      40728,
      40730,
      40753,
      40782,
      40805,
      40804,
      40850,
      20153,
      22214,
      22213,
      22219,
      22897,
      23371,
      23372,
      24021,
      24017,
      24306,
      25889,
      25888,
      25894,
      25890,
      27403,
      27400,
      27401,
      27661,
      28757,
      28758,
      28759,
      28754,
      29214,
      29215,
      29353,
      29567,
      29912,
      29909,
      29913,
      29911,
      30317,
      30381,
      31029,
      31156,
      31344,
      31345,
      31831,
      31836,
      31833,
      31835,
      31834,
      31988,
      31985,
      32401,
      32591,
      32647,
      33246,
      33387,
      34356,
      34357,
      34355,
      34348,
      34354,
      34358,
      34860,
      34856,
      34854,
      34858,
      34853,
      35185,
      35263,
      35262,
      35323,
      35710,
      35716,
      35714,
      35718,
      35717,
      35711,
      36117,
      36501,
      36500,
      36506,
      36498,
      36496,
      36502,
      36503,
      36704,
      36706,
      37191,
      37964,
      37968,
      37962,
      37963,
      37967,
      37959,
      37957,
      37960,
      37961,
      37958,
      38719,
      38883,
      39018,
      39017,
      39115,
      39252,
      39259,
      39502,
      39507,
      39508,
      39500,
      39503,
      39496,
      39498,
      39497,
      39506,
      39504,
      39632,
      39705,
      39723,
      39739,
      39766,
      39765,
      40006,
      40008,
      39999,
      40004,
      39993,
      39987,
      40001,
      39996,
      39991,
      39988,
      39986,
      39997,
      39990,
      40411,
      40402,
      40414,
      40410,
      40395,
      40400,
      40412,
      40401,
      40415,
      40425,
      40409,
      40408,
      40406,
      40437,
      40405,
      40413,
      40630,
      40688,
      40757,
      40755,
      40754,
      40770,
      40811,
      40853,
      40866,
      20797,
      21145,
      22760,
      22759,
      22898,
      23373,
      24024,
      34863,
      24399,
      25089,
      25091,
      25092,
      25897,
      25893,
      26006,
      26347,
      27409,
      27410,
      27407,
      27594,
      28763,
      28762,
      29218,
      29570,
      29569,
      29571,
      30320,
      30676,
      31847,
      31846,
      32405,
      33388,
      34362,
      34368,
      34361,
      34364,
      34353,
      34363,
      34366,
      34864,
      34866,
      34862,
      34867,
      35190,
      35188,
      35187,
      35326,
      35724,
      35726,
      35723,
      35720,
      35909,
      36121,
      36504,
      36708,
      36707,
      37308,
      37986,
      37973,
      37981,
      37975,
      37982,
      38852,
      38853,
      38912,
      39510,
      39513,
      39710,
      39711,
      39712,
      40018,
      40024,
      40016,
      40010,
      40013,
      40011,
      40021,
      40025,
      40012,
      40014,
      40443,
      40439,
      40431,
      40419,
      40427,
      40440,
      40420,
      40438,
      40417,
      40430,
      40422,
      40434,
      40432,
      40418,
      40428,
      40436,
      40435,
      40424,
      40429,
      40642,
      40656,
      40690,
      40691,
      40710,
      40732,
      40760,
      40759,
      40758,
      40771,
      40783,
      40817,
      40816,
      40814,
      40815,
      22227,
      22221,
      23374,
      23661,
      25901,
      26349,
      26350,
      27411,
      28767,
      28769,
      28765,
      28768,
      29219,
      29915,
      29925,
      30677,
      31032,
      31159,
      31158,
      31850,
      32407,
      32649,
      33389,
      34371,
      34872,
      34871,
      34869,
      34891,
      35732,
      35733,
      36510,
      36511,
      36512,
      36509,
      37310,
      37309,
      37314,
      37995,
      37992,
      37993,
      38629,
      38726,
      38723,
      38727,
      38855,
      38885,
      39518,
      39637,
      39769,
      40035,
      40039,
      40038,
      40034,
      40030,
      40032,
      40450,
      40446,
      40455,
      40451,
      40454,
      40453,
      40448,
      40449,
      40457,
      40447,
      40445,
      40452,
      40608,
      40734,
      40774,
      40820,
      40821,
      40822,
      22228,
      25902,
      26040,
      27416,
      27417,
      27415,
      27418,
      28770,
      29222,
      29354,
      30680,
      30681,
      31033,
      31849,
      31851,
      31990,
      32410,
      32408,
      32411,
      32409,
      33248,
      33249,
      34374,
      34375,
      34376,
      35193,
      35194,
      35196,
      35195,
      35327,
      35736,
      35737,
      36517,
      36516,
      36515,
      37998,
      37997,
      37999,
      38001,
      38003,
      38729,
      39026,
      39263,
      40040,
      40046,
      40045,
      40459,
      40461,
      40464,
      40463,
      40466,
      40465,
      40609,
      40693,
      40713,
      40775,
      40824,
      40827,
      40826,
      40825,
      22302,
      28774,
      31855,
      34876,
      36274,
      36518,
      37315,
      38004,
      38008,
      38006,
      38005,
      39520,
      40052,
      40051,
      40049,
      40053,
      40468,
      40467,
      40694,
      40714,
      40868,
      28776,
      28773,
      31991,
      34410,
      34878,
      34877,
      34879,
      35742,
      35996,
      36521,
      36553,
      38731,
      39027,
      39028,
      39116,
      39265,
      39339,
      39524,
      39526,
      39527,
      39716,
      40469,
      40471,
      40776,
      25095,
      27422,
      29223,
      34380,
      36520,
      38018,
      38016,
      38017,
      39529,
      39528,
      39726,
      40473,
      29225,
      34379,
      35743,
      38019,
      40057,
      40631,
      30325,
      39531,
      40058,
      40477,
      28777,
      28778,
      40612,
      40830,
      40777,
      40856,
      30849,
      37561,
      35023,
      22715,
      24658,
      31911,
      23290,
      9556,
      9574,
      9559,
      9568,
      9580,
      9571,
      9562,
      9577,
      9565,
      9554,
      9572,
      9557,
      9566,
      9578,
      9569,
      9560,
      9575,
      9563,
      9555,
      9573,
      9558,
      9567,
      9579,
      9570,
      9561,
      9576,
      9564,
      9553,
      9552,
      9581,
      9582,
      9584,
      9583,
      65517,
      132423,
      37595,
      132575,
      147397,
      34124,
      17077,
      29679,
      20917,
      13897,
      149826,
      166372,
      37700,
      137691,
      33518,
      146632,
      30780,
      26436,
      25311,
      149811,
      166314,
      131744,
      158643,
      135941,
      20395,
      140525,
      20488,
      159017,
      162436,
      144896,
      150193,
      140563,
      20521,
      131966,
      24484,
      131968,
      131911,
      28379,
      132127,
      20605,
      20737,
      13434,
      20750,
      39020,
      14147,
      33814,
      149924,
      132231,
      20832,
      144308,
      20842,
      134143,
      139516,
      131813,
      140592,
      132494,
      143923,
      137603,
      23426,
      34685,
      132531,
      146585,
      20914,
      20920,
      40244,
      20937,
      20943,
      20945,
      15580,
      20947,
      150182,
      20915,
      20962,
      21314,
      20973,
      33741,
      26942,
      145197,
      24443,
      21003,
      21030,
      21052,
      21173,
      21079,
      21140,
      21177,
      21189,
      31765,
      34114,
      21216,
      34317,
      158483,
      21253,
      166622,
      21833,
      28377,
      147328,
      133460,
      147436,
      21299,
      21316,
      134114,
      27851,
      136998,
      26651,
      29653,
      24650,
      16042,
      14540,
      136936,
      29149,
      17570,
      21357,
      21364,
      165547,
      21374,
      21375,
      136598,
      136723,
      30694,
      21395,
      166555,
      21408,
      21419,
      21422,
      29607,
      153458,
      16217,
      29596,
      21441,
      21445,
      27721,
      20041,
      22526,
      21465,
      15019,
      134031,
      21472,
      147435,
      142755,
      21494,
      134263,
      21523,
      28793,
      21803,
      26199,
      27995,
      21613,
      158547,
      134516,
      21853,
      21647,
      21668,
      18342,
      136973,
      134877,
      15796,
      134477,
      166332,
      140952,
      21831,
      19693,
      21551,
      29719,
      21894,
      21929,
      22021,
      137431,
      147514,
      17746,
      148533,
      26291,
      135348,
      22071,
      26317,
      144010,
      26276,
      26285,
      22093,
      22095,
      30961,
      22257,
      38791,
      21502,
      22272,
      22255,
      22253,
      166758,
      13859,
      135759,
      22342,
      147877,
      27758,
      28811,
      22338,
      14001,
      158846,
      22502,
      136214,
      22531,
      136276,
      148323,
      22566,
      150517,
      22620,
      22698,
      13665,
      22752,
      22748,
      135740,
      22779,
      23551,
      22339,
      172368,
      148088,
      37843,
      13729,
      22815,
      26790,
      14019,
      28249,
      136766,
      23076,
      21843,
      136850,
      34053,
      22985,
      134478,
      158849,
      159018,
      137180,
      23001,
      137211,
      137138,
      159142,
      28017,
      137256,
      136917,
      23033,
      159301,
      23211,
      23139,
      14054,
      149929,
      23159,
      14088,
      23190,
      29797,
      23251,
      159649,
      140628,
      15749,
      137489,
      14130,
      136888,
      24195,
      21200,
      23414,
      25992,
      23420,
      162318,
      16388,
      18525,
      131588,
      23509,
      24928,
      137780,
      154060,
      132517,
      23539,
      23453,
      19728,
      23557,
      138052,
      23571,
      29646,
      23572,
      138405,
      158504,
      23625,
      18653,
      23685,
      23785,
      23791,
      23947,
      138745,
      138807,
      23824,
      23832,
      23878,
      138916,
      23738,
      24023,
      33532,
      14381,
      149761,
      139337,
      139635,
      33415,
      14390,
      15298,
      24110,
      27274,
      24181,
      24186,
      148668,
      134355,
      21414,
      20151,
      24272,
      21416,
      137073,
      24073,
      24308,
      164994,
      24313,
      24315,
      14496,
      24316,
      26686,
      37915,
      24333,
      131521,
      194708,
      15070,
      18606,
      135994,
      24378,
      157832,
      140240,
      24408,
      140401,
      24419,
      38845,
      159342,
      24434,
      37696,
      166454,
      24487,
      23990,
      15711,
      152144,
      139114,
      159992,
      140904,
      37334,
      131742,
      166441,
      24625,
      26245,
      137335,
      14691,
      15815,
      13881,
      22416,
      141236,
      31089,
      15936,
      24734,
      24740,
      24755,
      149890,
      149903,
      162387,
      29860,
      20705,
      23200,
      24932,
      33828,
      24898,
      194726,
      159442,
      24961,
      20980,
      132694,
      24967,
      23466,
      147383,
      141407,
      25043,
      166813,
      170333,
      25040,
      14642,
      141696,
      141505,
      24611,
      24924,
      25886,
      25483,
      131352,
      25285,
      137072,
      25301,
      142861,
      25452,
      149983,
      14871,
      25656,
      25592,
      136078,
      137212,
      25744,
      28554,
      142902,
      38932,
      147596,
      153373,
      25825,
      25829,
      38011,
      14950,
      25658,
      14935,
      25933,
      28438,
      150056,
      150051,
      25989,
      25965,
      25951,
      143486,
      26037,
      149824,
      19255,
      26065,
      16600,
      137257,
      26080,
      26083,
      24543,
      144384,
      26136,
      143863,
      143864,
      26180,
      143780,
      143781,
      26187,
      134773,
      26215,
      152038,
      26227,
      26228,
      138813,
      143921,
      165364,
      143816,
      152339,
      30661,
      141559,
      39332,
      26370,
      148380,
      150049,
      15147,
      27130,
      145346,
      26462,
      26471,
      26466,
      147917,
      168173,
      26583,
      17641,
      26658,
      28240,
      37436,
      26625,
      144358,
      159136,
      26717,
      144495,
      27105,
      27147,
      166623,
      26995,
      26819,
      144845,
      26881,
      26880,
      15666,
      14849,
      144956,
      15232,
      26540,
      26977,
      166474,
      17148,
      26934,
      27032,
      15265,
      132041,
      33635,
      20624,
      27129,
      144985,
      139562,
      27205,
      145155,
      27293,
      15347,
      26545,
      27336,
      168348,
      15373,
      27421,
      133411,
      24798,
      27445,
      27508,
      141261,
      28341,
      146139,
      132021,
      137560,
      14144,
      21537,
      146266,
      27617,
      147196,
      27612,
      27703,
      140427,
      149745,
      158545,
      27738,
      33318,
      27769,
      146876,
      17605,
      146877,
      147876,
      149772,
      149760,
      146633,
      14053,
      15595,
      134450,
      39811,
      143865,
      140433,
      32655,
      26679,
      159013,
      159137,
      159211,
      28054,
      27996,
      28284,
      28420,
      149887,
      147589,
      159346,
      34099,
      159604,
      20935,
      27804,
      28189,
      33838,
      166689,
      28207,
      146991,
      29779,
      147330,
      31180,
      28239,
      23185,
      143435,
      28664,
      14093,
      28573,
      146992,
      28410,
      136343,
      147517,
      17749,
      37872,
      28484,
      28508,
      15694,
      28532,
      168304,
      15675,
      28575,
      147780,
      28627,
      147601,
      147797,
      147513,
      147440,
      147380,
      147775,
      20959,
      147798,
      147799,
      147776,
      156125,
      28747,
      28798,
      28839,
      28801,
      28876,
      28885,
      28886,
      28895,
      16644,
      15848,
      29108,
      29078,
      148087,
      28971,
      28997,
      23176,
      29002,
      29038,
      23708,
      148325,
      29007,
      37730,
      148161,
      28972,
      148570,
      150055,
      150050,
      29114,
      166888,
      28861,
      29198,
      37954,
      29205,
      22801,
      37955,
      29220,
      37697,
      153093,
      29230,
      29248,
      149876,
      26813,
      29269,
      29271,
      15957,
      143428,
      26637,
      28477,
      29314,
      29482,
      29483,
      149539,
      165931,
      18669,
      165892,
      29480,
      29486,
      29647,
      29610,
      134202,
      158254,
      29641,
      29769,
      147938,
      136935,
      150052,
      26147,
      14021,
      149943,
      149901,
      150011,
      29687,
      29717,
      26883,
      150054,
      29753,
      132547,
      16087,
      29788,
      141485,
      29792,
      167602,
      29767,
      29668,
      29814,
      33721,
      29804,
      14128,
      29812,
      37873,
      27180,
      29826,
      18771,
      150156,
      147807,
      150137,
      166799,
      23366,
      166915,
      137374,
      29896,
      137608,
      29966,
      29929,
      29982,
      167641,
      137803,
      23511,
      167596,
      37765,
      30029,
      30026,
      30055,
      30062,
      151426,
      16132,
      150803,
      30094,
      29789,
      30110,
      30132,
      30210,
      30252,
      30289,
      30287,
      30319,
      30326,
      156661,
      30352,
      33263,
      14328,
      157969,
      157966,
      30369,
      30373,
      30391,
      30412,
      159647,
      33890,
      151709,
      151933,
      138780,
      30494,
      30502,
      30528,
      25775,
      152096,
      30552,
      144044,
      30639,
      166244,
      166248,
      136897,
      30708,
      30729,
      136054,
      150034,
      26826,
      30895,
      30919,
      30931,
      38565,
      31022,
      153056,
      30935,
      31028,
      30897,
      161292,
      36792,
      34948,
      166699,
      155779,
      140828,
      31110,
      35072,
      26882,
      31104,
      153687,
      31133,
      162617,
      31036,
      31145,
      28202,
      160038,
      16040,
      31174,
      168205,
      31188,
    ],
    "euc-kr": [
      44034,
      44035,
      44037,
      44038,
      44043,
      44044,
      44045,
      44046,
      44047,
      44056,
      44062,
      44063,
      44065,
      44066,
      44067,
      44069,
      44070,
      44071,
      44072,
      44073,
      44074,
      44075,
      44078,
      44082,
      44083,
      44084,
      null,
      null,
      null,
      null,
      null,
      null,
      44085,
      44086,
      44087,
      44090,
      44091,
      44093,
      44094,
      44095,
      44097,
      44098,
      44099,
      44100,
      44101,
      44102,
      44103,
      44104,
      44105,
      44106,
      44108,
      44110,
      44111,
      44112,
      44113,
      44114,
      44115,
      44117,
      null,
      null,
      null,
      null,
      null,
      null,
      44118,
      44119,
      44121,
      44122,
      44123,
      44125,
      44126,
      44127,
      44128,
      44129,
      44130,
      44131,
      44132,
      44133,
      44134,
      44135,
      44136,
      44137,
      44138,
      44139,
      44140,
      44141,
      44142,
      44143,
      44146,
      44147,
      44149,
      44150,
      44153,
      44155,
      44156,
      44157,
      44158,
      44159,
      44162,
      44167,
      44168,
      44173,
      44174,
      44175,
      44177,
      44178,
      44179,
      44181,
      44182,
      44183,
      44184,
      44185,
      44186,
      44187,
      44190,
      44194,
      44195,
      44196,
      44197,
      44198,
      44199,
      44203,
      44205,
      44206,
      44209,
      44210,
      44211,
      44212,
      44213,
      44214,
      44215,
      44218,
      44222,
      44223,
      44224,
      44226,
      44227,
      44229,
      44230,
      44231,
      44233,
      44234,
      44235,
      44237,
      44238,
      44239,
      44240,
      44241,
      44242,
      44243,
      44244,
      44246,
      44248,
      44249,
      44250,
      44251,
      44252,
      44253,
      44254,
      44255,
      44258,
      44259,
      44261,
      44262,
      44265,
      44267,
      44269,
      44270,
      44274,
      44276,
      44279,
      44280,
      44281,
      44282,
      44283,
      44286,
      44287,
      44289,
      44290,
      44291,
      44293,
      44295,
      44296,
      44297,
      44298,
      44299,
      44302,
      44304,
      44306,
      44307,
      44308,
      44309,
      44310,
      44311,
      44313,
      44314,
      44315,
      44317,
      44318,
      44319,
      44321,
      44322,
      44323,
      44324,
      44325,
      44326,
      44327,
      44328,
      44330,
      44331,
      44334,
      44335,
      44336,
      44337,
      44338,
      44339,
      null,
      null,
      null,
      null,
      null,
      null,
      44342,
      44343,
      44345,
      44346,
      44347,
      44349,
      44350,
      44351,
      44352,
      44353,
      44354,
      44355,
      44358,
      44360,
      44362,
      44363,
      44364,
      44365,
      44366,
      44367,
      44369,
      44370,
      44371,
      44373,
      44374,
      44375,
      null,
      null,
      null,
      null,
      null,
      null,
      44377,
      44378,
      44379,
      44380,
      44381,
      44382,
      44383,
      44384,
      44386,
      44388,
      44389,
      44390,
      44391,
      44392,
      44393,
      44394,
      44395,
      44398,
      44399,
      44401,
      44402,
      44407,
      44408,
      44409,
      44410,
      44414,
      44416,
      44419,
      44420,
      44421,
      44422,
      44423,
      44426,
      44427,
      44429,
      44430,
      44431,
      44433,
      44434,
      44435,
      44436,
      44437,
      44438,
      44439,
      44440,
      44441,
      44442,
      44443,
      44446,
      44447,
      44448,
      44449,
      44450,
      44451,
      44453,
      44454,
      44455,
      44456,
      44457,
      44458,
      44459,
      44460,
      44461,
      44462,
      44463,
      44464,
      44465,
      44466,
      44467,
      44468,
      44469,
      44470,
      44472,
      44473,
      44474,
      44475,
      44476,
      44477,
      44478,
      44479,
      44482,
      44483,
      44485,
      44486,
      44487,
      44489,
      44490,
      44491,
      44492,
      44493,
      44494,
      44495,
      44498,
      44500,
      44501,
      44502,
      44503,
      44504,
      44505,
      44506,
      44507,
      44509,
      44510,
      44511,
      44513,
      44514,
      44515,
      44517,
      44518,
      44519,
      44520,
      44521,
      44522,
      44523,
      44524,
      44525,
      44526,
      44527,
      44528,
      44529,
      44530,
      44531,
      44532,
      44533,
      44534,
      44535,
      44538,
      44539,
      44541,
      44542,
      44546,
      44547,
      44548,
      44549,
      44550,
      44551,
      44554,
      44556,
      44558,
      44559,
      44560,
      44561,
      44562,
      44563,
      44565,
      44566,
      44567,
      44568,
      44569,
      44570,
      44571,
      44572,
      null,
      null,
      null,
      null,
      null,
      null,
      44573,
      44574,
      44575,
      44576,
      44577,
      44578,
      44579,
      44580,
      44581,
      44582,
      44583,
      44584,
      44585,
      44586,
      44587,
      44588,
      44589,
      44590,
      44591,
      44594,
      44595,
      44597,
      44598,
      44601,
      44603,
      44604,
      null,
      null,
      null,
      null,
      null,
      null,
      44605,
      44606,
      44607,
      44610,
      44612,
      44615,
      44616,
      44617,
      44619,
      44623,
      44625,
      44626,
      44627,
      44629,
      44631,
      44632,
      44633,
      44634,
      44635,
      44638,
      44642,
      44643,
      44644,
      44646,
      44647,
      44650,
      44651,
      44653,
      44654,
      44655,
      44657,
      44658,
      44659,
      44660,
      44661,
      44662,
      44663,
      44666,
      44670,
      44671,
      44672,
      44673,
      44674,
      44675,
      44678,
      44679,
      44680,
      44681,
      44682,
      44683,
      44685,
      44686,
      44687,
      44688,
      44689,
      44690,
      44691,
      44692,
      44693,
      44694,
      44695,
      44696,
      44697,
      44698,
      44699,
      44700,
      44701,
      44702,
      44703,
      44704,
      44705,
      44706,
      44707,
      44708,
      44709,
      44710,
      44711,
      44712,
      44713,
      44714,
      44715,
      44716,
      44717,
      44718,
      44719,
      44720,
      44721,
      44722,
      44723,
      44724,
      44725,
      44726,
      44727,
      44728,
      44729,
      44730,
      44731,
      44735,
      44737,
      44738,
      44739,
      44741,
      44742,
      44743,
      44744,
      44745,
      44746,
      44747,
      44750,
      44754,
      44755,
      44756,
      44757,
      44758,
      44759,
      44762,
      44763,
      44765,
      44766,
      44767,
      44768,
      44769,
      44770,
      44771,
      44772,
      44773,
      44774,
      44775,
      44777,
      44778,
      44780,
      44782,
      44783,
      44784,
      44785,
      44786,
      44787,
      44789,
      44790,
      44791,
      44793,
      44794,
      44795,
      44797,
      44798,
      44799,
      44800,
      44801,
      44802,
      44803,
      44804,
      44805,
      null,
      null,
      null,
      null,
      null,
      null,
      44806,
      44809,
      44810,
      44811,
      44812,
      44814,
      44815,
      44817,
      44818,
      44819,
      44820,
      44821,
      44822,
      44823,
      44824,
      44825,
      44826,
      44827,
      44828,
      44829,
      44830,
      44831,
      44832,
      44833,
      44834,
      44835,
      null,
      null,
      null,
      null,
      null,
      null,
      44836,
      44837,
      44838,
      44839,
      44840,
      44841,
      44842,
      44843,
      44846,
      44847,
      44849,
      44851,
      44853,
      44854,
      44855,
      44856,
      44857,
      44858,
      44859,
      44862,
      44864,
      44868,
      44869,
      44870,
      44871,
      44874,
      44875,
      44876,
      44877,
      44878,
      44879,
      44881,
      44882,
      44883,
      44884,
      44885,
      44886,
      44887,
      44888,
      44889,
      44890,
      44891,
      44894,
      44895,
      44896,
      44897,
      44898,
      44899,
      44902,
      44903,
      44904,
      44905,
      44906,
      44907,
      44908,
      44909,
      44910,
      44911,
      44912,
      44913,
      44914,
      44915,
      44916,
      44917,
      44918,
      44919,
      44920,
      44922,
      44923,
      44924,
      44925,
      44926,
      44927,
      44929,
      44930,
      44931,
      44933,
      44934,
      44935,
      44937,
      44938,
      44939,
      44940,
      44941,
      44942,
      44943,
      44946,
      44947,
      44948,
      44950,
      44951,
      44952,
      44953,
      44954,
      44955,
      44957,
      44958,
      44959,
      44960,
      44961,
      44962,
      44963,
      44964,
      44965,
      44966,
      44967,
      44968,
      44969,
      44970,
      44971,
      44972,
      44973,
      44974,
      44975,
      44976,
      44977,
      44978,
      44979,
      44980,
      44981,
      44982,
      44983,
      44986,
      44987,
      44989,
      44990,
      44991,
      44993,
      44994,
      44995,
      44996,
      44997,
      44998,
      45002,
      45004,
      45007,
      45008,
      45009,
      45010,
      45011,
      45013,
      45014,
      45015,
      45016,
      45017,
      45018,
      45019,
      45021,
      45022,
      45023,
      45024,
      45025,
      null,
      null,
      null,
      null,
      null,
      null,
      45026,
      45027,
      45028,
      45029,
      45030,
      45031,
      45034,
      45035,
      45036,
      45037,
      45038,
      45039,
      45042,
      45043,
      45045,
      45046,
      45047,
      45049,
      45050,
      45051,
      45052,
      45053,
      45054,
      45055,
      45058,
      45059,
      null,
      null,
      null,
      null,
      null,
      null,
      45061,
      45062,
      45063,
      45064,
      45065,
      45066,
      45067,
      45069,
      45070,
      45071,
      45073,
      45074,
      45075,
      45077,
      45078,
      45079,
      45080,
      45081,
      45082,
      45083,
      45086,
      45087,
      45088,
      45089,
      45090,
      45091,
      45092,
      45093,
      45094,
      45095,
      45097,
      45098,
      45099,
      45100,
      45101,
      45102,
      45103,
      45104,
      45105,
      45106,
      45107,
      45108,
      45109,
      45110,
      45111,
      45112,
      45113,
      45114,
      45115,
      45116,
      45117,
      45118,
      45119,
      45120,
      45121,
      45122,
      45123,
      45126,
      45127,
      45129,
      45131,
      45133,
      45135,
      45136,
      45137,
      45138,
      45142,
      45144,
      45146,
      45147,
      45148,
      45150,
      45151,
      45152,
      45153,
      45154,
      45155,
      45156,
      45157,
      45158,
      45159,
      45160,
      45161,
      45162,
      45163,
      45164,
      45165,
      45166,
      45167,
      45168,
      45169,
      45170,
      45171,
      45172,
      45173,
      45174,
      45175,
      45176,
      45177,
      45178,
      45179,
      45182,
      45183,
      45185,
      45186,
      45187,
      45189,
      45190,
      45191,
      45192,
      45193,
      45194,
      45195,
      45198,
      45200,
      45202,
      45203,
      45204,
      45205,
      45206,
      45207,
      45211,
      45213,
      45214,
      45219,
      45220,
      45221,
      45222,
      45223,
      45226,
      45232,
      45234,
      45238,
      45239,
      45241,
      45242,
      45243,
      45245,
      45246,
      45247,
      45248,
      45249,
      45250,
      45251,
      45254,
      45258,
      45259,
      45260,
      45261,
      45262,
      45263,
      45266,
      null,
      null,
      null,
      null,
      null,
      null,
      45267,
      45269,
      45270,
      45271,
      45273,
      45274,
      45275,
      45276,
      45277,
      45278,
      45279,
      45281,
      45282,
      45283,
      45284,
      45286,
      45287,
      45288,
      45289,
      45290,
      45291,
      45292,
      45293,
      45294,
      45295,
      45296,
      null,
      null,
      null,
      null,
      null,
      null,
      45297,
      45298,
      45299,
      45300,
      45301,
      45302,
      45303,
      45304,
      45305,
      45306,
      45307,
      45308,
      45309,
      45310,
      45311,
      45312,
      45313,
      45314,
      45315,
      45316,
      45317,
      45318,
      45319,
      45322,
      45325,
      45326,
      45327,
      45329,
      45332,
      45333,
      45334,
      45335,
      45338,
      45342,
      45343,
      45344,
      45345,
      45346,
      45350,
      45351,
      45353,
      45354,
      45355,
      45357,
      45358,
      45359,
      45360,
      45361,
      45362,
      45363,
      45366,
      45370,
      45371,
      45372,
      45373,
      45374,
      45375,
      45378,
      45379,
      45381,
      45382,
      45383,
      45385,
      45386,
      45387,
      45388,
      45389,
      45390,
      45391,
      45394,
      45395,
      45398,
      45399,
      45401,
      45402,
      45403,
      45405,
      45406,
      45407,
      45409,
      45410,
      45411,
      45412,
      45413,
      45414,
      45415,
      45416,
      45417,
      45418,
      45419,
      45420,
      45421,
      45422,
      45423,
      45424,
      45425,
      45426,
      45427,
      45428,
      45429,
      45430,
      45431,
      45434,
      45435,
      45437,
      45438,
      45439,
      45441,
      45443,
      45444,
      45445,
      45446,
      45447,
      45450,
      45452,
      45454,
      45455,
      45456,
      45457,
      45461,
      45462,
      45463,
      45465,
      45466,
      45467,
      45469,
      45470,
      45471,
      45472,
      45473,
      45474,
      45475,
      45476,
      45477,
      45478,
      45479,
      45481,
      45482,
      45483,
      45484,
      45485,
      45486,
      45487,
      45488,
      45489,
      45490,
      45491,
      45492,
      45493,
      45494,
      45495,
      45496,
      null,
      null,
      null,
      null,
      null,
      null,
      45497,
      45498,
      45499,
      45500,
      45501,
      45502,
      45503,
      45504,
      45505,
      45506,
      45507,
      45508,
      45509,
      45510,
      45511,
      45512,
      45513,
      45514,
      45515,
      45517,
      45518,
      45519,
      45521,
      45522,
      45523,
      45525,
      null,
      null,
      null,
      null,
      null,
      null,
      45526,
      45527,
      45528,
      45529,
      45530,
      45531,
      45534,
      45536,
      45537,
      45538,
      45539,
      45540,
      45541,
      45542,
      45543,
      45546,
      45547,
      45549,
      45550,
      45551,
      45553,
      45554,
      45555,
      45556,
      45557,
      45558,
      45559,
      45560,
      45562,
      45564,
      45566,
      45567,
      45568,
      45569,
      45570,
      45571,
      45574,
      45575,
      45577,
      45578,
      45581,
      45582,
      45583,
      45584,
      45585,
      45586,
      45587,
      45590,
      45592,
      45594,
      45595,
      45596,
      45597,
      45598,
      45599,
      45601,
      45602,
      45603,
      45604,
      45605,
      45606,
      45607,
      45608,
      45609,
      45610,
      45611,
      45612,
      45613,
      45614,
      45615,
      45616,
      45617,
      45618,
      45619,
      45621,
      45622,
      45623,
      45624,
      45625,
      45626,
      45627,
      45629,
      45630,
      45631,
      45632,
      45633,
      45634,
      45635,
      45636,
      45637,
      45638,
      45639,
      45640,
      45641,
      45642,
      45643,
      45644,
      45645,
      45646,
      45647,
      45648,
      45649,
      45650,
      45651,
      45652,
      45653,
      45654,
      45655,
      45657,
      45658,
      45659,
      45661,
      45662,
      45663,
      45665,
      45666,
      45667,
      45668,
      45669,
      45670,
      45671,
      45674,
      45675,
      45676,
      45677,
      45678,
      45679,
      45680,
      45681,
      45682,
      45683,
      45686,
      45687,
      45688,
      45689,
      45690,
      45691,
      45693,
      45694,
      45695,
      45696,
      45697,
      45698,
      45699,
      45702,
      45703,
      45704,
      45706,
      45707,
      45708,
      45709,
      45710,
      null,
      null,
      null,
      null,
      null,
      null,
      45711,
      45714,
      45715,
      45717,
      45718,
      45719,
      45723,
      45724,
      45725,
      45726,
      45727,
      45730,
      45732,
      45735,
      45736,
      45737,
      45739,
      45741,
      45742,
      45743,
      45745,
      45746,
      45747,
      45749,
      45750,
      45751,
      null,
      null,
      null,
      null,
      null,
      null,
      45752,
      45753,
      45754,
      45755,
      45756,
      45757,
      45758,
      45759,
      45760,
      45761,
      45762,
      45763,
      45764,
      45765,
      45766,
      45767,
      45770,
      45771,
      45773,
      45774,
      45775,
      45777,
      45779,
      45780,
      45781,
      45782,
      45783,
      45786,
      45788,
      45790,
      45791,
      45792,
      45793,
      45795,
      45799,
      45801,
      45802,
      45808,
      45809,
      45810,
      45814,
      45820,
      45821,
      45822,
      45826,
      45827,
      45829,
      45830,
      45831,
      45833,
      45834,
      45835,
      45836,
      45837,
      45838,
      45839,
      45842,
      45846,
      45847,
      45848,
      45849,
      45850,
      45851,
      45853,
      45854,
      45855,
      45856,
      45857,
      45858,
      45859,
      45860,
      45861,
      45862,
      45863,
      45864,
      45865,
      45866,
      45867,
      45868,
      45869,
      45870,
      45871,
      45872,
      45873,
      45874,
      45875,
      45876,
      45877,
      45878,
      45879,
      45880,
      45881,
      45882,
      45883,
      45884,
      45885,
      45886,
      45887,
      45888,
      45889,
      45890,
      45891,
      45892,
      45893,
      45894,
      45895,
      45896,
      45897,
      45898,
      45899,
      45900,
      45901,
      45902,
      45903,
      45904,
      45905,
      45906,
      45907,
      45911,
      45913,
      45914,
      45917,
      45920,
      45921,
      45922,
      45923,
      45926,
      45928,
      45930,
      45932,
      45933,
      45935,
      45938,
      45939,
      45941,
      45942,
      45943,
      45945,
      45946,
      45947,
      45948,
      45949,
      45950,
      45951,
      45954,
      45958,
      45959,
      45960,
      45961,
      45962,
      45963,
      45965,
      null,
      null,
      null,
      null,
      null,
      null,
      45966,
      45967,
      45969,
      45970,
      45971,
      45973,
      45974,
      45975,
      45976,
      45977,
      45978,
      45979,
      45980,
      45981,
      45982,
      45983,
      45986,
      45987,
      45988,
      45989,
      45990,
      45991,
      45993,
      45994,
      45995,
      45997,
      null,
      null,
      null,
      null,
      null,
      null,
      45998,
      45999,
      46000,
      46001,
      46002,
      46003,
      46004,
      46005,
      46006,
      46007,
      46008,
      46009,
      46010,
      46011,
      46012,
      46013,
      46014,
      46015,
      46016,
      46017,
      46018,
      46019,
      46022,
      46023,
      46025,
      46026,
      46029,
      46031,
      46033,
      46034,
      46035,
      46038,
      46040,
      46042,
      46044,
      46046,
      46047,
      46049,
      46050,
      46051,
      46053,
      46054,
      46055,
      46057,
      46058,
      46059,
      46060,
      46061,
      46062,
      46063,
      46064,
      46065,
      46066,
      46067,
      46068,
      46069,
      46070,
      46071,
      46072,
      46073,
      46074,
      46075,
      46077,
      46078,
      46079,
      46080,
      46081,
      46082,
      46083,
      46084,
      46085,
      46086,
      46087,
      46088,
      46089,
      46090,
      46091,
      46092,
      46093,
      46094,
      46095,
      46097,
      46098,
      46099,
      46100,
      46101,
      46102,
      46103,
      46105,
      46106,
      46107,
      46109,
      46110,
      46111,
      46113,
      46114,
      46115,
      46116,
      46117,
      46118,
      46119,
      46122,
      46124,
      46125,
      46126,
      46127,
      46128,
      46129,
      46130,
      46131,
      46133,
      46134,
      46135,
      46136,
      46137,
      46138,
      46139,
      46140,
      46141,
      46142,
      46143,
      46144,
      46145,
      46146,
      46147,
      46148,
      46149,
      46150,
      46151,
      46152,
      46153,
      46154,
      46155,
      46156,
      46157,
      46158,
      46159,
      46162,
      46163,
      46165,
      46166,
      46167,
      46169,
      46170,
      46171,
      46172,
      46173,
      46174,
      46175,
      46178,
      46180,
      46182,
      null,
      null,
      null,
      null,
      null,
      null,
      46183,
      46184,
      46185,
      46186,
      46187,
      46189,
      46190,
      46191,
      46192,
      46193,
      46194,
      46195,
      46196,
      46197,
      46198,
      46199,
      46200,
      46201,
      46202,
      46203,
      46204,
      46205,
      46206,
      46207,
      46209,
      46210,
      null,
      null,
      null,
      null,
      null,
      null,
      46211,
      46212,
      46213,
      46214,
      46215,
      46217,
      46218,
      46219,
      46220,
      46221,
      46222,
      46223,
      46224,
      46225,
      46226,
      46227,
      46228,
      46229,
      46230,
      46231,
      46232,
      46233,
      46234,
      46235,
      46236,
      46238,
      46239,
      46240,
      46241,
      46242,
      46243,
      46245,
      46246,
      46247,
      46249,
      46250,
      46251,
      46253,
      46254,
      46255,
      46256,
      46257,
      46258,
      46259,
      46260,
      46262,
      46264,
      46266,
      46267,
      46268,
      46269,
      46270,
      46271,
      46273,
      46274,
      46275,
      46277,
      46278,
      46279,
      46281,
      46282,
      46283,
      46284,
      46285,
      46286,
      46287,
      46289,
      46290,
      46291,
      46292,
      46294,
      46295,
      46296,
      46297,
      46298,
      46299,
      46302,
      46303,
      46305,
      46306,
      46309,
      46311,
      46312,
      46313,
      46314,
      46315,
      46318,
      46320,
      46322,
      46323,
      46324,
      46325,
      46326,
      46327,
      46329,
      46330,
      46331,
      46332,
      46333,
      46334,
      46335,
      46336,
      46337,
      46338,
      46339,
      46340,
      46341,
      46342,
      46343,
      46344,
      46345,
      46346,
      46347,
      46348,
      46349,
      46350,
      46351,
      46352,
      46353,
      46354,
      46355,
      46358,
      46359,
      46361,
      46362,
      46365,
      46366,
      46367,
      46368,
      46369,
      46370,
      46371,
      46374,
      46379,
      46380,
      46381,
      46382,
      46383,
      46386,
      46387,
      46389,
      46390,
      46391,
      46393,
      46394,
      46395,
      46396,
      46397,
      46398,
      46399,
      46402,
      46406,
      null,
      null,
      null,
      null,
      null,
      null,
      46407,
      46408,
      46409,
      46410,
      46414,
      46415,
      46417,
      46418,
      46419,
      46421,
      46422,
      46423,
      46424,
      46425,
      46426,
      46427,
      46430,
      46434,
      46435,
      46436,
      46437,
      46438,
      46439,
      46440,
      46441,
      46442,
      null,
      null,
      null,
      null,
      null,
      null,
      46443,
      46444,
      46445,
      46446,
      46447,
      46448,
      46449,
      46450,
      46451,
      46452,
      46453,
      46454,
      46455,
      46456,
      46457,
      46458,
      46459,
      46460,
      46461,
      46462,
      46463,
      46464,
      46465,
      46466,
      46467,
      46468,
      46469,
      46470,
      46471,
      46472,
      46473,
      46474,
      46475,
      46476,
      46477,
      46478,
      46479,
      46480,
      46481,
      46482,
      46483,
      46484,
      46485,
      46486,
      46487,
      46488,
      46489,
      46490,
      46491,
      46492,
      46493,
      46494,
      46495,
      46498,
      46499,
      46501,
      46502,
      46503,
      46505,
      46508,
      46509,
      46510,
      46511,
      46514,
      46518,
      46519,
      46520,
      46521,
      46522,
      46526,
      46527,
      46529,
      46530,
      46531,
      46533,
      46534,
      46535,
      46536,
      46537,
      46538,
      46539,
      46542,
      46546,
      46547,
      46548,
      46549,
      46550,
      46551,
      46553,
      46554,
      46555,
      46556,
      46557,
      46558,
      46559,
      46560,
      46561,
      46562,
      46563,
      46564,
      46565,
      46566,
      46567,
      46568,
      46569,
      46570,
      46571,
      46573,
      46574,
      46575,
      46576,
      46577,
      46578,
      46579,
      46580,
      46581,
      46582,
      46583,
      46584,
      46585,
      46586,
      46587,
      46588,
      46589,
      46590,
      46591,
      46592,
      46593,
      46594,
      46595,
      46596,
      46597,
      46598,
      46599,
      46600,
      46601,
      46602,
      46603,
      46604,
      46605,
      46606,
      46607,
      46610,
      46611,
      46613,
      46614,
      46615,
      46617,
      46618,
      46619,
      46620,
      46621,
      null,
      null,
      null,
      null,
      null,
      null,
      46622,
      46623,
      46624,
      46625,
      46626,
      46627,
      46628,
      46630,
      46631,
      46632,
      46633,
      46634,
      46635,
      46637,
      46638,
      46639,
      46640,
      46641,
      46642,
      46643,
      46645,
      46646,
      46647,
      46648,
      46649,
      46650,
      null,
      null,
      null,
      null,
      null,
      null,
      46651,
      46652,
      46653,
      46654,
      46655,
      46656,
      46657,
      46658,
      46659,
      46660,
      46661,
      46662,
      46663,
      46665,
      46666,
      46667,
      46668,
      46669,
      46670,
      46671,
      46672,
      46673,
      46674,
      46675,
      46676,
      46677,
      46678,
      46679,
      46680,
      46681,
      46682,
      46683,
      46684,
      46685,
      46686,
      46687,
      46688,
      46689,
      46690,
      46691,
      46693,
      46694,
      46695,
      46697,
      46698,
      46699,
      46700,
      46701,
      46702,
      46703,
      46704,
      46705,
      46706,
      46707,
      46708,
      46709,
      46710,
      46711,
      46712,
      46713,
      46714,
      46715,
      46716,
      46717,
      46718,
      46719,
      46720,
      46721,
      46722,
      46723,
      46724,
      46725,
      46726,
      46727,
      46728,
      46729,
      46730,
      46731,
      46732,
      46733,
      46734,
      46735,
      46736,
      46737,
      46738,
      46739,
      46740,
      46741,
      46742,
      46743,
      46744,
      46745,
      46746,
      46747,
      46750,
      46751,
      46753,
      46754,
      46755,
      46757,
      46758,
      46759,
      46760,
      46761,
      46762,
      46765,
      46766,
      46767,
      46768,
      46770,
      46771,
      46772,
      46773,
      46774,
      46775,
      46776,
      46777,
      46778,
      46779,
      46780,
      46781,
      46782,
      46783,
      46784,
      46785,
      46786,
      46787,
      46788,
      46789,
      46790,
      46791,
      46792,
      46793,
      46794,
      46795,
      46796,
      46797,
      46798,
      46799,
      46800,
      46801,
      46802,
      46803,
      46805,
      46806,
      46807,
      46808,
      46809,
      46810,
      46811,
      46812,
      46813,
      null,
      null,
      null,
      null,
      null,
      null,
      46814,
      46815,
      46816,
      46817,
      46818,
      46819,
      46820,
      46821,
      46822,
      46823,
      46824,
      46825,
      46826,
      46827,
      46828,
      46829,
      46830,
      46831,
      46833,
      46834,
      46835,
      46837,
      46838,
      46839,
      46841,
      46842,
      null,
      null,
      null,
      null,
      null,
      null,
      46843,
      46844,
      46845,
      46846,
      46847,
      46850,
      46851,
      46852,
      46854,
      46855,
      46856,
      46857,
      46858,
      46859,
      46860,
      46861,
      46862,
      46863,
      46864,
      46865,
      46866,
      46867,
      46868,
      46869,
      46870,
      46871,
      46872,
      46873,
      46874,
      46875,
      46876,
      46877,
      46878,
      46879,
      46880,
      46881,
      46882,
      46883,
      46884,
      46885,
      46886,
      46887,
      46890,
      46891,
      46893,
      46894,
      46897,
      46898,
      46899,
      46900,
      46901,
      46902,
      46903,
      46906,
      46908,
      46909,
      46910,
      46911,
      46912,
      46913,
      46914,
      46915,
      46917,
      46918,
      46919,
      46921,
      46922,
      46923,
      46925,
      46926,
      46927,
      46928,
      46929,
      46930,
      46931,
      46934,
      46935,
      46936,
      46937,
      46938,
      46939,
      46940,
      46941,
      46942,
      46943,
      46945,
      46946,
      46947,
      46949,
      46950,
      46951,
      46953,
      46954,
      46955,
      46956,
      46957,
      46958,
      46959,
      46962,
      46964,
      46966,
      46967,
      46968,
      46969,
      46970,
      46971,
      46974,
      46975,
      46977,
      46978,
      46979,
      46981,
      46982,
      46983,
      46984,
      46985,
      46986,
      46987,
      46990,
      46995,
      46996,
      46997,
      47002,
      47003,
      47005,
      47006,
      47007,
      47009,
      47010,
      47011,
      47012,
      47013,
      47014,
      47015,
      47018,
      47022,
      47023,
      47024,
      47025,
      47026,
      47027,
      47030,
      47031,
      47033,
      47034,
      47035,
      47036,
      47037,
      47038,
      47039,
      47040,
      47041,
      null,
      null,
      null,
      null,
      null,
      null,
      47042,
      47043,
      47044,
      47045,
      47046,
      47048,
      47050,
      47051,
      47052,
      47053,
      47054,
      47055,
      47056,
      47057,
      47058,
      47059,
      47060,
      47061,
      47062,
      47063,
      47064,
      47065,
      47066,
      47067,
      47068,
      47069,
      null,
      null,
      null,
      null,
      null,
      null,
      47070,
      47071,
      47072,
      47073,
      47074,
      47075,
      47076,
      47077,
      47078,
      47079,
      47080,
      47081,
      47082,
      47083,
      47086,
      47087,
      47089,
      47090,
      47091,
      47093,
      47094,
      47095,
      47096,
      47097,
      47098,
      47099,
      47102,
      47106,
      47107,
      47108,
      47109,
      47110,
      47114,
      47115,
      47117,
      47118,
      47119,
      47121,
      47122,
      47123,
      47124,
      47125,
      47126,
      47127,
      47130,
      47132,
      47134,
      47135,
      47136,
      47137,
      47138,
      47139,
      47142,
      47143,
      47145,
      47146,
      47147,
      47149,
      47150,
      47151,
      47152,
      47153,
      47154,
      47155,
      47158,
      47162,
      47163,
      47164,
      47165,
      47166,
      47167,
      47169,
      47170,
      47171,
      47173,
      47174,
      47175,
      47176,
      47177,
      47178,
      47179,
      47180,
      47181,
      47182,
      47183,
      47184,
      47186,
      47188,
      47189,
      47190,
      47191,
      47192,
      47193,
      47194,
      47195,
      47198,
      47199,
      47201,
      47202,
      47203,
      47205,
      47206,
      47207,
      47208,
      47209,
      47210,
      47211,
      47214,
      47216,
      47218,
      47219,
      47220,
      47221,
      47222,
      47223,
      47225,
      47226,
      47227,
      47229,
      47230,
      47231,
      47232,
      47233,
      47234,
      47235,
      47236,
      47237,
      47238,
      47239,
      47240,
      47241,
      47242,
      47243,
      47244,
      47246,
      47247,
      47248,
      47249,
      47250,
      47251,
      47252,
      47253,
      47254,
      47255,
      47256,
      47257,
      47258,
      47259,
      47260,
      47261,
      47262,
      47263,
      null,
      null,
      null,
      null,
      null,
      null,
      47264,
      47265,
      47266,
      47267,
      47268,
      47269,
      47270,
      47271,
      47273,
      47274,
      47275,
      47276,
      47277,
      47278,
      47279,
      47281,
      47282,
      47283,
      47285,
      47286,
      47287,
      47289,
      47290,
      47291,
      47292,
      47293,
      null,
      null,
      null,
      null,
      null,
      null,
      47294,
      47295,
      47298,
      47300,
      47302,
      47303,
      47304,
      47305,
      47306,
      47307,
      47309,
      47310,
      47311,
      47313,
      47314,
      47315,
      47317,
      47318,
      47319,
      47320,
      47321,
      47322,
      47323,
      47324,
      47326,
      47328,
      47330,
      47331,
      47332,
      47333,
      47334,
      47335,
      47338,
      47339,
      47341,
      47342,
      47343,
      47345,
      47346,
      47347,
      47348,
      47349,
      47350,
      47351,
      47354,
      47356,
      47358,
      47359,
      47360,
      47361,
      47362,
      47363,
      47365,
      47366,
      47367,
      47368,
      47369,
      47370,
      47371,
      47372,
      47373,
      47374,
      47375,
      47376,
      47377,
      47378,
      47379,
      47380,
      47381,
      47382,
      47383,
      47385,
      47386,
      47387,
      47388,
      47389,
      47390,
      47391,
      47393,
      47394,
      47395,
      47396,
      47397,
      47398,
      47399,
      47400,
      47401,
      47402,
      47403,
      47404,
      47405,
      47406,
      47407,
      47408,
      47409,
      47410,
      47411,
      47412,
      47413,
      47414,
      47415,
      47416,
      47417,
      47418,
      47419,
      47422,
      47423,
      47425,
      47426,
      47427,
      47429,
      47430,
      47431,
      47432,
      47433,
      47434,
      47435,
      47437,
      47438,
      47440,
      47442,
      47443,
      47444,
      47445,
      47446,
      47447,
      47450,
      47451,
      47453,
      47454,
      47455,
      47457,
      47458,
      47459,
      47460,
      47461,
      47462,
      47463,
      47466,
      47468,
      47470,
      47471,
      47472,
      47473,
      47474,
      47475,
      47478,
      47479,
      47481,
      47482,
      47483,
      47485,
      null,
      null,
      null,
      null,
      null,
      null,
      47486,
      47487,
      47488,
      47489,
      47490,
      47491,
      47494,
      47496,
      47499,
      47500,
      47503,
      47504,
      47505,
      47506,
      47507,
      47508,
      47509,
      47510,
      47511,
      47512,
      47513,
      47514,
      47515,
      47516,
      47517,
      47518,
      null,
      null,
      null,
      null,
      null,
      null,
      47519,
      47520,
      47521,
      47522,
      47523,
      47524,
      47525,
      47526,
      47527,
      47528,
      47529,
      47530,
      47531,
      47534,
      47535,
      47537,
      47538,
      47539,
      47541,
      47542,
      47543,
      47544,
      47545,
      47546,
      47547,
      47550,
      47552,
      47554,
      47555,
      47556,
      47557,
      47558,
      47559,
      47562,
      47563,
      47565,
      47571,
      47572,
      47573,
      47574,
      47575,
      47578,
      47580,
      47583,
      47584,
      47586,
      47590,
      47591,
      47593,
      47594,
      47595,
      47597,
      47598,
      47599,
      47600,
      47601,
      47602,
      47603,
      47606,
      47611,
      47612,
      47613,
      47614,
      47615,
      47618,
      47619,
      47620,
      47621,
      47622,
      47623,
      47625,
      47626,
      47627,
      47628,
      47629,
      47630,
      47631,
      47632,
      47633,
      47634,
      47635,
      47636,
      47638,
      47639,
      47640,
      47641,
      47642,
      47643,
      47644,
      47645,
      47646,
      47647,
      47648,
      47649,
      47650,
      47651,
      47652,
      47653,
      47654,
      47655,
      47656,
      47657,
      47658,
      47659,
      47660,
      47661,
      47662,
      47663,
      47664,
      47665,
      47666,
      47667,
      47668,
      47669,
      47670,
      47671,
      47674,
      47675,
      47677,
      47678,
      47679,
      47681,
      47683,
      47684,
      47685,
      47686,
      47687,
      47690,
      47692,
      47695,
      47696,
      47697,
      47698,
      47702,
      47703,
      47705,
      47706,
      47707,
      47709,
      47710,
      47711,
      47712,
      47713,
      47714,
      47715,
      47718,
      47722,
      47723,
      47724,
      47725,
      47726,
      47727,
      null,
      null,
      null,
      null,
      null,
      null,
      47730,
      47731,
      47733,
      47734,
      47735,
      47737,
      47738,
      47739,
      47740,
      47741,
      47742,
      47743,
      47744,
      47745,
      47746,
      47750,
      47752,
      47753,
      47754,
      47755,
      47757,
      47758,
      47759,
      47760,
      47761,
      47762,
      null,
      null,
      null,
      null,
      null,
      null,
      47763,
      47764,
      47765,
      47766,
      47767,
      47768,
      47769,
      47770,
      47771,
      47772,
      47773,
      47774,
      47775,
      47776,
      47777,
      47778,
      47779,
      47780,
      47781,
      47782,
      47783,
      47786,
      47789,
      47790,
      47791,
      47793,
      47795,
      47796,
      47797,
      47798,
      47799,
      47802,
      47804,
      47806,
      47807,
      47808,
      47809,
      47810,
      47811,
      47813,
      47814,
      47815,
      47817,
      47818,
      47819,
      47820,
      47821,
      47822,
      47823,
      47824,
      47825,
      47826,
      47827,
      47828,
      47829,
      47830,
      47831,
      47834,
      47835,
      47836,
      47837,
      47838,
      47839,
      47840,
      47841,
      47842,
      47843,
      47844,
      47845,
      47846,
      47847,
      47848,
      47849,
      47850,
      47851,
      47852,
      47853,
      47854,
      47855,
      47856,
      47857,
      47858,
      47859,
      47860,
      47861,
      47862,
      47863,
      47864,
      47865,
      47866,
      47867,
      47869,
      47870,
      47871,
      47873,
      47874,
      47875,
      47877,
      47878,
      47879,
      47880,
      47881,
      47882,
      47883,
      47884,
      47886,
      47888,
      47890,
      47891,
      47892,
      47893,
      47894,
      47895,
      47897,
      47898,
      47899,
      47901,
      47902,
      47903,
      47905,
      47906,
      47907,
      47908,
      47909,
      47910,
      47911,
      47912,
      47914,
      47916,
      47917,
      47918,
      47919,
      47920,
      47921,
      47922,
      47923,
      47927,
      47929,
      47930,
      47935,
      47936,
      47937,
      47938,
      47939,
      47942,
      47944,
      47946,
      47947,
      47948,
      47950,
      47953,
      47954,
      null,
      null,
      null,
      null,
      null,
      null,
      47955,
      47957,
      47958,
      47959,
      47961,
      47962,
      47963,
      47964,
      47965,
      47966,
      47967,
      47968,
      47970,
      47972,
      47973,
      47974,
      47975,
      47976,
      47977,
      47978,
      47979,
      47981,
      47982,
      47983,
      47984,
      47985,
      null,
      null,
      null,
      null,
      null,
      null,
      47986,
      47987,
      47988,
      47989,
      47990,
      47991,
      47992,
      47993,
      47994,
      47995,
      47996,
      47997,
      47998,
      47999,
      48000,
      48001,
      48002,
      48003,
      48004,
      48005,
      48006,
      48007,
      48009,
      48010,
      48011,
      48013,
      48014,
      48015,
      48017,
      48018,
      48019,
      48020,
      48021,
      48022,
      48023,
      48024,
      48025,
      48026,
      48027,
      48028,
      48029,
      48030,
      48031,
      48032,
      48033,
      48034,
      48035,
      48037,
      48038,
      48039,
      48041,
      48042,
      48043,
      48045,
      48046,
      48047,
      48048,
      48049,
      48050,
      48051,
      48053,
      48054,
      48056,
      48057,
      48058,
      48059,
      48060,
      48061,
      48062,
      48063,
      48065,
      48066,
      48067,
      48069,
      48070,
      48071,
      48073,
      48074,
      48075,
      48076,
      48077,
      48078,
      48079,
      48081,
      48082,
      48084,
      48085,
      48086,
      48087,
      48088,
      48089,
      48090,
      48091,
      48092,
      48093,
      48094,
      48095,
      48096,
      48097,
      48098,
      48099,
      48100,
      48101,
      48102,
      48103,
      48104,
      48105,
      48106,
      48107,
      48108,
      48109,
      48110,
      48111,
      48112,
      48113,
      48114,
      48115,
      48116,
      48117,
      48118,
      48119,
      48122,
      48123,
      48125,
      48126,
      48129,
      48131,
      48132,
      48133,
      48134,
      48135,
      48138,
      48142,
      48144,
      48146,
      48147,
      48153,
      48154,
      48160,
      48161,
      48162,
      48163,
      48166,
      48168,
      48170,
      48171,
      48172,
      48174,
      48175,
      48178,
      48179,
      48181,
      null,
      null,
      null,
      null,
      null,
      null,
      48182,
      48183,
      48185,
      48186,
      48187,
      48188,
      48189,
      48190,
      48191,
      48194,
      48198,
      48199,
      48200,
      48202,
      48203,
      48206,
      48207,
      48209,
      48210,
      48211,
      48212,
      48213,
      48214,
      48215,
      48216,
      48217,
      null,
      null,
      null,
      null,
      null,
      null,
      48218,
      48219,
      48220,
      48222,
      48223,
      48224,
      48225,
      48226,
      48227,
      48228,
      48229,
      48230,
      48231,
      48232,
      48233,
      48234,
      48235,
      48236,
      48237,
      48238,
      48239,
      48240,
      48241,
      48242,
      48243,
      48244,
      48245,
      48246,
      48247,
      48248,
      48249,
      48250,
      48251,
      48252,
      48253,
      48254,
      48255,
      48256,
      48257,
      48258,
      48259,
      48262,
      48263,
      48265,
      48266,
      48269,
      48271,
      48272,
      48273,
      48274,
      48275,
      48278,
      48280,
      48283,
      48284,
      48285,
      48286,
      48287,
      48290,
      48291,
      48293,
      48294,
      48297,
      48298,
      48299,
      48300,
      48301,
      48302,
      48303,
      48306,
      48310,
      48311,
      48312,
      48313,
      48314,
      48315,
      48318,
      48319,
      48321,
      48322,
      48323,
      48325,
      48326,
      48327,
      48328,
      48329,
      48330,
      48331,
      48332,
      48334,
      48338,
      48339,
      48340,
      48342,
      48343,
      48345,
      48346,
      48347,
      48349,
      48350,
      48351,
      48352,
      48353,
      48354,
      48355,
      48356,
      48357,
      48358,
      48359,
      48360,
      48361,
      48362,
      48363,
      48364,
      48365,
      48366,
      48367,
      48368,
      48369,
      48370,
      48371,
      48375,
      48377,
      48378,
      48379,
      48381,
      48382,
      48383,
      48384,
      48385,
      48386,
      48387,
      48390,
      48392,
      48394,
      48395,
      48396,
      48397,
      48398,
      48399,
      48401,
      48402,
      48403,
      48405,
      48406,
      48407,
      48408,
      48409,
      48410,
      48411,
      48412,
      48413,
      null,
      null,
      null,
      null,
      null,
      null,
      48414,
      48415,
      48416,
      48417,
      48418,
      48419,
      48421,
      48422,
      48423,
      48424,
      48425,
      48426,
      48427,
      48429,
      48430,
      48431,
      48432,
      48433,
      48434,
      48435,
      48436,
      48437,
      48438,
      48439,
      48440,
      48441,
      null,
      null,
      null,
      null,
      null,
      null,
      48442,
      48443,
      48444,
      48445,
      48446,
      48447,
      48449,
      48450,
      48451,
      48452,
      48453,
      48454,
      48455,
      48458,
      48459,
      48461,
      48462,
      48463,
      48465,
      48466,
      48467,
      48468,
      48469,
      48470,
      48471,
      48474,
      48475,
      48476,
      48477,
      48478,
      48479,
      48480,
      48481,
      48482,
      48483,
      48485,
      48486,
      48487,
      48489,
      48490,
      48491,
      48492,
      48493,
      48494,
      48495,
      48496,
      48497,
      48498,
      48499,
      48500,
      48501,
      48502,
      48503,
      48504,
      48505,
      48506,
      48507,
      48508,
      48509,
      48510,
      48511,
      48514,
      48515,
      48517,
      48518,
      48523,
      48524,
      48525,
      48526,
      48527,
      48530,
      48532,
      48534,
      48535,
      48536,
      48539,
      48541,
      48542,
      48543,
      48544,
      48545,
      48546,
      48547,
      48549,
      48550,
      48551,
      48552,
      48553,
      48554,
      48555,
      48556,
      48557,
      48558,
      48559,
      48561,
      48562,
      48563,
      48564,
      48565,
      48566,
      48567,
      48569,
      48570,
      48571,
      48572,
      48573,
      48574,
      48575,
      48576,
      48577,
      48578,
      48579,
      48580,
      48581,
      48582,
      48583,
      48584,
      48585,
      48586,
      48587,
      48588,
      48589,
      48590,
      48591,
      48592,
      48593,
      48594,
      48595,
      48598,
      48599,
      48601,
      48602,
      48603,
      48605,
      48606,
      48607,
      48608,
      48609,
      48610,
      48611,
      48612,
      48613,
      48614,
      48615,
      48616,
      48618,
      48619,
      48620,
      48621,
      48622,
      48623,
      48625,
      null,
      null,
      null,
      null,
      null,
      null,
      48626,
      48627,
      48629,
      48630,
      48631,
      48633,
      48634,
      48635,
      48636,
      48637,
      48638,
      48639,
      48641,
      48642,
      48644,
      48646,
      48647,
      48648,
      48649,
      48650,
      48651,
      48654,
      48655,
      48657,
      48658,
      48659,
      null,
      null,
      null,
      null,
      null,
      null,
      48661,
      48662,
      48663,
      48664,
      48665,
      48666,
      48667,
      48670,
      48672,
      48673,
      48674,
      48675,
      48676,
      48677,
      48678,
      48679,
      48680,
      48681,
      48682,
      48683,
      48684,
      48685,
      48686,
      48687,
      48688,
      48689,
      48690,
      48691,
      48692,
      48693,
      48694,
      48695,
      48696,
      48697,
      48698,
      48699,
      48700,
      48701,
      48702,
      48703,
      48704,
      48705,
      48706,
      48707,
      48710,
      48711,
      48713,
      48714,
      48715,
      48717,
      48719,
      48720,
      48721,
      48722,
      48723,
      48726,
      48728,
      48732,
      48733,
      48734,
      48735,
      48738,
      48739,
      48741,
      48742,
      48743,
      48745,
      48747,
      48748,
      48749,
      48750,
      48751,
      48754,
      48758,
      48759,
      48760,
      48761,
      48762,
      48766,
      48767,
      48769,
      48770,
      48771,
      48773,
      48774,
      48775,
      48776,
      48777,
      48778,
      48779,
      48782,
      48786,
      48787,
      48788,
      48789,
      48790,
      48791,
      48794,
      48795,
      48796,
      48797,
      48798,
      48799,
      48800,
      48801,
      48802,
      48803,
      48804,
      48805,
      48806,
      48807,
      48809,
      48810,
      48811,
      48812,
      48813,
      48814,
      48815,
      48816,
      48817,
      48818,
      48819,
      48820,
      48821,
      48822,
      48823,
      48824,
      48825,
      48826,
      48827,
      48828,
      48829,
      48830,
      48831,
      48832,
      48833,
      48834,
      48835,
      48836,
      48837,
      48838,
      48839,
      48840,
      48841,
      48842,
      48843,
      48844,
      48845,
      48846,
      48847,
      48850,
      48851,
      null,
      null,
      null,
      null,
      null,
      null,
      48853,
      48854,
      48857,
      48858,
      48859,
      48860,
      48861,
      48862,
      48863,
      48865,
      48866,
      48870,
      48871,
      48872,
      48873,
      48874,
      48875,
      48877,
      48878,
      48879,
      48880,
      48881,
      48882,
      48883,
      48884,
      48885,
      null,
      null,
      null,
      null,
      null,
      null,
      48886,
      48887,
      48888,
      48889,
      48890,
      48891,
      48892,
      48893,
      48894,
      48895,
      48896,
      48898,
      48899,
      48900,
      48901,
      48902,
      48903,
      48906,
      48907,
      48908,
      48909,
      48910,
      48911,
      48912,
      48913,
      48914,
      48915,
      48916,
      48917,
      48918,
      48919,
      48922,
      48926,
      48927,
      48928,
      48929,
      48930,
      48931,
      48932,
      48933,
      48934,
      48935,
      48936,
      48937,
      48938,
      48939,
      48940,
      48941,
      48942,
      48943,
      48944,
      48945,
      48946,
      48947,
      48948,
      48949,
      48950,
      48951,
      48952,
      48953,
      48954,
      48955,
      48956,
      48957,
      48958,
      48959,
      48962,
      48963,
      48965,
      48966,
      48967,
      48969,
      48970,
      48971,
      48972,
      48973,
      48974,
      48975,
      48978,
      48979,
      48980,
      48982,
      48983,
      48984,
      48985,
      48986,
      48987,
      48988,
      48989,
      48990,
      48991,
      48992,
      48993,
      48994,
      48995,
      48996,
      48997,
      48998,
      48999,
      49000,
      49001,
      49002,
      49003,
      49004,
      49005,
      49006,
      49007,
      49008,
      49009,
      49010,
      49011,
      49012,
      49013,
      49014,
      49015,
      49016,
      49017,
      49018,
      49019,
      49020,
      49021,
      49022,
      49023,
      49024,
      49025,
      49026,
      49027,
      49028,
      49029,
      49030,
      49031,
      49032,
      49033,
      49034,
      49035,
      49036,
      49037,
      49038,
      49039,
      49040,
      49041,
      49042,
      49043,
      49045,
      49046,
      49047,
      49048,
      49049,
      49050,
      49051,
      49052,
      49053,
      null,
      null,
      null,
      null,
      null,
      null,
      49054,
      49055,
      49056,
      49057,
      49058,
      49059,
      49060,
      49061,
      49062,
      49063,
      49064,
      49065,
      49066,
      49067,
      49068,
      49069,
      49070,
      49071,
      49073,
      49074,
      49075,
      49076,
      49077,
      49078,
      49079,
      49080,
      null,
      null,
      null,
      null,
      null,
      null,
      49081,
      49082,
      49083,
      49084,
      49085,
      49086,
      49087,
      49088,
      49089,
      49090,
      49091,
      49092,
      49094,
      49095,
      49096,
      49097,
      49098,
      49099,
      49102,
      49103,
      49105,
      49106,
      49107,
      49109,
      49110,
      49111,
      49112,
      49113,
      49114,
      49115,
      49117,
      49118,
      49120,
      49122,
      49123,
      49124,
      49125,
      49126,
      49127,
      49128,
      49129,
      49130,
      49131,
      49132,
      49133,
      49134,
      49135,
      49136,
      49137,
      49138,
      49139,
      49140,
      49141,
      49142,
      49143,
      49144,
      49145,
      49146,
      49147,
      49148,
      49149,
      49150,
      49151,
      49152,
      49153,
      49154,
      49155,
      49156,
      49157,
      49158,
      49159,
      49160,
      49161,
      49162,
      49163,
      49164,
      49165,
      49166,
      49167,
      49168,
      49169,
      49170,
      49171,
      49172,
      49173,
      49174,
      49175,
      49176,
      49177,
      49178,
      49179,
      49180,
      49181,
      49182,
      49183,
      49184,
      49185,
      49186,
      49187,
      49188,
      49189,
      49190,
      49191,
      49192,
      49193,
      49194,
      49195,
      49196,
      49197,
      49198,
      49199,
      49200,
      49201,
      49202,
      49203,
      49204,
      49205,
      49206,
      49207,
      49208,
      49209,
      49210,
      49211,
      49213,
      49214,
      49215,
      49216,
      49217,
      49218,
      49219,
      49220,
      49221,
      49222,
      49223,
      49224,
      49225,
      49226,
      49227,
      49228,
      49229,
      49230,
      49231,
      49232,
      49234,
      49235,
      49236,
      49237,
      49238,
      49239,
      49241,
      49242,
      49243,
      null,
      null,
      null,
      null,
      null,
      null,
      49245,
      49246,
      49247,
      49249,
      49250,
      49251,
      49252,
      49253,
      49254,
      49255,
      49258,
      49259,
      49260,
      49261,
      49262,
      49263,
      49264,
      49265,
      49266,
      49267,
      49268,
      49269,
      49270,
      49271,
      49272,
      49273,
      null,
      null,
      null,
      null,
      null,
      null,
      49274,
      49275,
      49276,
      49277,
      49278,
      49279,
      49280,
      49281,
      49282,
      49283,
      49284,
      49285,
      49286,
      49287,
      49288,
      49289,
      49290,
      49291,
      49292,
      49293,
      49294,
      49295,
      49298,
      49299,
      49301,
      49302,
      49303,
      49305,
      49306,
      49307,
      49308,
      49309,
      49310,
      49311,
      49314,
      49316,
      49318,
      49319,
      49320,
      49321,
      49322,
      49323,
      49326,
      49329,
      49330,
      49335,
      49336,
      49337,
      49338,
      49339,
      49342,
      49346,
      49347,
      49348,
      49350,
      49351,
      49354,
      49355,
      49357,
      49358,
      49359,
      49361,
      49362,
      49363,
      49364,
      49365,
      49366,
      49367,
      49370,
      49374,
      49375,
      49376,
      49377,
      49378,
      49379,
      49382,
      49383,
      49385,
      49386,
      49387,
      49389,
      49390,
      49391,
      49392,
      49393,
      49394,
      49395,
      49398,
      49400,
      49402,
      49403,
      49404,
      49405,
      49406,
      49407,
      49409,
      49410,
      49411,
      49413,
      49414,
      49415,
      49417,
      49418,
      49419,
      49420,
      49421,
      49422,
      49423,
      49425,
      49426,
      49427,
      49428,
      49430,
      49431,
      49432,
      49433,
      49434,
      49435,
      49441,
      49442,
      49445,
      49448,
      49449,
      49450,
      49451,
      49454,
      49458,
      49459,
      49460,
      49461,
      49463,
      49466,
      49467,
      49469,
      49470,
      49471,
      49473,
      49474,
      49475,
      49476,
      49477,
      49478,
      49479,
      49482,
      49486,
      49487,
      49488,
      49489,
      49490,
      49491,
      49494,
      49495,
      null,
      null,
      null,
      null,
      null,
      null,
      49497,
      49498,
      49499,
      49501,
      49502,
      49503,
      49504,
      49505,
      49506,
      49507,
      49510,
      49514,
      49515,
      49516,
      49517,
      49518,
      49519,
      49521,
      49522,
      49523,
      49525,
      49526,
      49527,
      49529,
      49530,
      49531,
      null,
      null,
      null,
      null,
      null,
      null,
      49532,
      49533,
      49534,
      49535,
      49536,
      49537,
      49538,
      49539,
      49540,
      49542,
      49543,
      49544,
      49545,
      49546,
      49547,
      49551,
      49553,
      49554,
      49555,
      49557,
      49559,
      49560,
      49561,
      49562,
      49563,
      49566,
      49568,
      49570,
      49571,
      49572,
      49574,
      49575,
      49578,
      49579,
      49581,
      49582,
      49583,
      49585,
      49586,
      49587,
      49588,
      49589,
      49590,
      49591,
      49592,
      49593,
      49594,
      49595,
      49596,
      49598,
      49599,
      49600,
      49601,
      49602,
      49603,
      49605,
      49606,
      49607,
      49609,
      49610,
      49611,
      49613,
      49614,
      49615,
      49616,
      49617,
      49618,
      49619,
      49621,
      49622,
      49625,
      49626,
      49627,
      49628,
      49629,
      49630,
      49631,
      49633,
      49634,
      49635,
      49637,
      49638,
      49639,
      49641,
      49642,
      49643,
      49644,
      49645,
      49646,
      49647,
      49650,
      49652,
      49653,
      49654,
      49655,
      49656,
      49657,
      49658,
      49659,
      49662,
      49663,
      49665,
      49666,
      49667,
      49669,
      49670,
      49671,
      49672,
      49673,
      49674,
      49675,
      49678,
      49680,
      49682,
      49683,
      49684,
      49685,
      49686,
      49687,
      49690,
      49691,
      49693,
      49694,
      49697,
      49698,
      49699,
      49700,
      49701,
      49702,
      49703,
      49706,
      49708,
      49710,
      49712,
      49715,
      49717,
      49718,
      49719,
      49720,
      49721,
      49722,
      49723,
      49724,
      49725,
      49726,
      49727,
      49728,
      49729,
      49730,
      49731,
      49732,
      49733,
      null,
      null,
      null,
      null,
      null,
      null,
      49734,
      49735,
      49737,
      49738,
      49739,
      49740,
      49741,
      49742,
      49743,
      49746,
      49747,
      49749,
      49750,
      49751,
      49753,
      49754,
      49755,
      49756,
      49757,
      49758,
      49759,
      49761,
      49762,
      49763,
      49764,
      49766,
      null,
      null,
      null,
      null,
      null,
      null,
      49767,
      49768,
      49769,
      49770,
      49771,
      49774,
      49775,
      49777,
      49778,
      49779,
      49781,
      49782,
      49783,
      49784,
      49785,
      49786,
      49787,
      49790,
      49792,
      49794,
      49795,
      49796,
      49797,
      49798,
      49799,
      49802,
      49803,
      49804,
      49805,
      49806,
      49807,
      49809,
      49810,
      49811,
      49812,
      49813,
      49814,
      49815,
      49817,
      49818,
      49820,
      49822,
      49823,
      49824,
      49825,
      49826,
      49827,
      49830,
      49831,
      49833,
      49834,
      49835,
      49838,
      49839,
      49840,
      49841,
      49842,
      49843,
      49846,
      49848,
      49850,
      49851,
      49852,
      49853,
      49854,
      49855,
      49856,
      49857,
      49858,
      49859,
      49860,
      49861,
      49862,
      49863,
      49864,
      49865,
      49866,
      49867,
      49868,
      49869,
      49870,
      49871,
      49872,
      49873,
      49874,
      49875,
      49876,
      49877,
      49878,
      49879,
      49880,
      49881,
      49882,
      49883,
      49886,
      49887,
      49889,
      49890,
      49893,
      49894,
      49895,
      49896,
      49897,
      49898,
      49902,
      49904,
      49906,
      49907,
      49908,
      49909,
      49911,
      49914,
      49917,
      49918,
      49919,
      49921,
      49922,
      49923,
      49924,
      49925,
      49926,
      49927,
      49930,
      49931,
      49934,
      49935,
      49936,
      49937,
      49938,
      49942,
      49943,
      49945,
      49946,
      49947,
      49949,
      49950,
      49951,
      49952,
      49953,
      49954,
      49955,
      49958,
      49959,
      49962,
      49963,
      49964,
      49965,
      49966,
      49967,
      49968,
      49969,
      49970,
      null,
      null,
      null,
      null,
      null,
      null,
      49971,
      49972,
      49973,
      49974,
      49975,
      49976,
      49977,
      49978,
      49979,
      49980,
      49981,
      49982,
      49983,
      49984,
      49985,
      49986,
      49987,
      49988,
      49990,
      49991,
      49992,
      49993,
      49994,
      49995,
      49996,
      49997,
      null,
      null,
      null,
      null,
      null,
      null,
      49998,
      49999,
      50000,
      50001,
      50002,
      50003,
      50004,
      50005,
      50006,
      50007,
      50008,
      50009,
      50010,
      50011,
      50012,
      50013,
      50014,
      50015,
      50016,
      50017,
      50018,
      50019,
      50020,
      50021,
      50022,
      50023,
      50026,
      50027,
      50029,
      50030,
      50031,
      50033,
      50035,
      50036,
      50037,
      50038,
      50039,
      50042,
      50043,
      50046,
      50047,
      50048,
      50049,
      50050,
      50051,
      50053,
      50054,
      50055,
      50057,
      50058,
      50059,
      50061,
      50062,
      50063,
      50064,
      50065,
      50066,
      50067,
      50068,
      50069,
      50070,
      50071,
      50072,
      50073,
      50074,
      50075,
      50076,
      50077,
      50078,
      50079,
      50080,
      50081,
      50082,
      50083,
      50084,
      50085,
      50086,
      50087,
      50088,
      50089,
      50090,
      50091,
      50092,
      50093,
      50094,
      50095,
      50096,
      50097,
      50098,
      50099,
      50100,
      50101,
      50102,
      50103,
      50104,
      50105,
      50106,
      50107,
      50108,
      50109,
      50110,
      50111,
      50113,
      50114,
      50115,
      50116,
      50117,
      50118,
      50119,
      50120,
      50121,
      50122,
      50123,
      50124,
      50125,
      50126,
      50127,
      50128,
      50129,
      50130,
      50131,
      50132,
      50133,
      50134,
      50135,
      50138,
      50139,
      50141,
      50142,
      50145,
      50147,
      50148,
      50149,
      50150,
      50151,
      50154,
      50155,
      50156,
      50158,
      50159,
      50160,
      50161,
      50162,
      50163,
      50166,
      50167,
      50169,
      50170,
      50171,
      50172,
      50173,
      50174,
      null,
      null,
      null,
      null,
      null,
      null,
      50175,
      50176,
      50177,
      50178,
      50179,
      50180,
      50181,
      50182,
      50183,
      50185,
      50186,
      50187,
      50188,
      50189,
      50190,
      50191,
      50193,
      50194,
      50195,
      50196,
      50197,
      50198,
      50199,
      50200,
      50201,
      50202,
      null,
      null,
      null,
      null,
      null,
      null,
      50203,
      50204,
      50205,
      50206,
      50207,
      50208,
      50209,
      50210,
      50211,
      50213,
      50214,
      50215,
      50216,
      50217,
      50218,
      50219,
      50221,
      50222,
      50223,
      50225,
      50226,
      50227,
      50229,
      50230,
      50231,
      50232,
      50233,
      50234,
      50235,
      50238,
      50239,
      50240,
      50241,
      50242,
      50243,
      50244,
      50245,
      50246,
      50247,
      50249,
      50250,
      50251,
      50252,
      50253,
      50254,
      50255,
      50256,
      50257,
      50258,
      50259,
      50260,
      50261,
      50262,
      50263,
      50264,
      50265,
      50266,
      50267,
      50268,
      50269,
      50270,
      50271,
      50272,
      50273,
      50274,
      50275,
      50278,
      50279,
      50281,
      50282,
      50283,
      50285,
      50286,
      50287,
      50288,
      50289,
      50290,
      50291,
      50294,
      50295,
      50296,
      50298,
      50299,
      50300,
      50301,
      50302,
      50303,
      50305,
      50306,
      50307,
      50308,
      50309,
      50310,
      50311,
      50312,
      50313,
      50314,
      50315,
      50316,
      50317,
      50318,
      50319,
      50320,
      50321,
      50322,
      50323,
      50325,
      50326,
      50327,
      50328,
      50329,
      50330,
      50331,
      50333,
      50334,
      50335,
      50336,
      50337,
      50338,
      50339,
      50340,
      50341,
      50342,
      50343,
      50344,
      50345,
      50346,
      50347,
      50348,
      50349,
      50350,
      50351,
      50352,
      50353,
      50354,
      50355,
      50356,
      50357,
      50358,
      50359,
      50361,
      50362,
      50363,
      50365,
      50366,
      50367,
      50368,
      50369,
      50370,
      50371,
      50372,
      50373,
      null,
      null,
      null,
      null,
      null,
      null,
      50374,
      50375,
      50376,
      50377,
      50378,
      50379,
      50380,
      50381,
      50382,
      50383,
      50384,
      50385,
      50386,
      50387,
      50388,
      50389,
      50390,
      50391,
      50392,
      50393,
      50394,
      50395,
      50396,
      50397,
      50398,
      50399,
      null,
      null,
      null,
      null,
      null,
      null,
      50400,
      50401,
      50402,
      50403,
      50404,
      50405,
      50406,
      50407,
      50408,
      50410,
      50411,
      50412,
      50413,
      50414,
      50415,
      50418,
      50419,
      50421,
      50422,
      50423,
      50425,
      50427,
      50428,
      50429,
      50430,
      50434,
      50435,
      50436,
      50437,
      50438,
      50439,
      50440,
      50441,
      50442,
      50443,
      50445,
      50446,
      50447,
      50449,
      50450,
      50451,
      50453,
      50454,
      50455,
      50456,
      50457,
      50458,
      50459,
      50461,
      50462,
      50463,
      50464,
      50465,
      50466,
      50467,
      50468,
      50469,
      50470,
      50471,
      50474,
      50475,
      50477,
      50478,
      50479,
      50481,
      50482,
      50483,
      50484,
      50485,
      50486,
      50487,
      50490,
      50492,
      50494,
      50495,
      50496,
      50497,
      50498,
      50499,
      50502,
      50503,
      50507,
      50511,
      50512,
      50513,
      50514,
      50518,
      50522,
      50523,
      50524,
      50527,
      50530,
      50531,
      50533,
      50534,
      50535,
      50537,
      50538,
      50539,
      50540,
      50541,
      50542,
      50543,
      50546,
      50550,
      50551,
      50552,
      50553,
      50554,
      50555,
      50558,
      50559,
      50561,
      50562,
      50563,
      50565,
      50566,
      50568,
      50569,
      50570,
      50571,
      50574,
      50576,
      50578,
      50579,
      50580,
      50582,
      50585,
      50586,
      50587,
      50589,
      50590,
      50591,
      50593,
      50594,
      50595,
      50596,
      50597,
      50598,
      50599,
      50600,
      50602,
      50603,
      50604,
      50605,
      50606,
      50607,
      50608,
      50609,
      50610,
      50611,
      50614,
      null,
      null,
      null,
      null,
      null,
      null,
      50615,
      50618,
      50623,
      50624,
      50625,
      50626,
      50627,
      50635,
      50637,
      50639,
      50642,
      50643,
      50645,
      50646,
      50647,
      50649,
      50650,
      50651,
      50652,
      50653,
      50654,
      50655,
      50658,
      50660,
      50662,
      50663,
      null,
      null,
      null,
      null,
      null,
      null,
      50664,
      50665,
      50666,
      50667,
      50671,
      50673,
      50674,
      50675,
      50677,
      50680,
      50681,
      50682,
      50683,
      50690,
      50691,
      50692,
      50697,
      50698,
      50699,
      50701,
      50702,
      50703,
      50705,
      50706,
      50707,
      50708,
      50709,
      50710,
      50711,
      50714,
      50717,
      50718,
      50719,
      50720,
      50721,
      50722,
      50723,
      50726,
      50727,
      50729,
      50730,
      50731,
      50735,
      50737,
      50738,
      50742,
      50744,
      50746,
      50748,
      50749,
      50750,
      50751,
      50754,
      50755,
      50757,
      50758,
      50759,
      50761,
      50762,
      50763,
      50764,
      50765,
      50766,
      50767,
      50770,
      50774,
      50775,
      50776,
      50777,
      50778,
      50779,
      50782,
      50783,
      50785,
      50786,
      50787,
      50788,
      50789,
      50790,
      50791,
      50792,
      50793,
      50794,
      50795,
      50797,
      50798,
      50800,
      50802,
      50803,
      50804,
      50805,
      50806,
      50807,
      50810,
      50811,
      50813,
      50814,
      50815,
      50817,
      50818,
      50819,
      50820,
      50821,
      50822,
      50823,
      50826,
      50828,
      50830,
      50831,
      50832,
      50833,
      50834,
      50835,
      50838,
      50839,
      50841,
      50842,
      50843,
      50845,
      50846,
      50847,
      50848,
      50849,
      50850,
      50851,
      50854,
      50856,
      50858,
      50859,
      50860,
      50861,
      50862,
      50863,
      50866,
      50867,
      50869,
      50870,
      50871,
      50875,
      50876,
      50877,
      50878,
      50879,
      50882,
      50884,
      50886,
      50887,
      50888,
      50889,
      50890,
      50891,
      50894,
      null,
      null,
      null,
      null,
      null,
      null,
      50895,
      50897,
      50898,
      50899,
      50901,
      50902,
      50903,
      50904,
      50905,
      50906,
      50907,
      50910,
      50911,
      50914,
      50915,
      50916,
      50917,
      50918,
      50919,
      50922,
      50923,
      50925,
      50926,
      50927,
      50929,
      50930,
      null,
      null,
      null,
      null,
      null,
      null,
      50931,
      50932,
      50933,
      50934,
      50935,
      50938,
      50939,
      50940,
      50942,
      50943,
      50944,
      50945,
      50946,
      50947,
      50950,
      50951,
      50953,
      50954,
      50955,
      50957,
      50958,
      50959,
      50960,
      50961,
      50962,
      50963,
      50966,
      50968,
      50970,
      50971,
      50972,
      50973,
      50974,
      50975,
      50978,
      50979,
      50981,
      50982,
      50983,
      50985,
      50986,
      50987,
      50988,
      50989,
      50990,
      50991,
      50994,
      50996,
      50998,
      51000,
      51001,
      51002,
      51003,
      51006,
      51007,
      51009,
      51010,
      51011,
      51013,
      51014,
      51015,
      51016,
      51017,
      51019,
      51022,
      51024,
      51033,
      51034,
      51035,
      51037,
      51038,
      51039,
      51041,
      51042,
      51043,
      51044,
      51045,
      51046,
      51047,
      51049,
      51050,
      51052,
      51053,
      51054,
      51055,
      51056,
      51057,
      51058,
      51059,
      51062,
      51063,
      51065,
      51066,
      51067,
      51071,
      51072,
      51073,
      51074,
      51078,
      51083,
      51084,
      51085,
      51087,
      51090,
      51091,
      51093,
      51097,
      51099,
      51100,
      51101,
      51102,
      51103,
      51106,
      51111,
      51112,
      51113,
      51114,
      51115,
      51118,
      51119,
      51121,
      51122,
      51123,
      51125,
      51126,
      51127,
      51128,
      51129,
      51130,
      51131,
      51134,
      51138,
      51139,
      51140,
      51141,
      51142,
      51143,
      51146,
      51147,
      51149,
      51151,
      51153,
      51154,
      51155,
      51156,
      51157,
      51158,
      51159,
      51161,
      51162,
      51163,
      51164,
      null,
      null,
      null,
      null,
      null,
      null,
      51166,
      51167,
      51168,
      51169,
      51170,
      51171,
      51173,
      51174,
      51175,
      51177,
      51178,
      51179,
      51181,
      51182,
      51183,
      51184,
      51185,
      51186,
      51187,
      51188,
      51189,
      51190,
      51191,
      51192,
      51193,
      51194,
      null,
      null,
      null,
      null,
      null,
      null,
      51195,
      51196,
      51197,
      51198,
      51199,
      51202,
      51203,
      51205,
      51206,
      51207,
      51209,
      51211,
      51212,
      51213,
      51214,
      51215,
      51218,
      51220,
      51223,
      51224,
      51225,
      51226,
      51227,
      51230,
      51231,
      51233,
      51234,
      51235,
      51237,
      51238,
      51239,
      51240,
      51241,
      51242,
      51243,
      51246,
      51248,
      51250,
      51251,
      51252,
      51253,
      51254,
      51255,
      51257,
      51258,
      51259,
      51261,
      51262,
      51263,
      51265,
      51266,
      51267,
      51268,
      51269,
      51270,
      51271,
      51274,
      51275,
      51278,
      51279,
      51280,
      51281,
      51282,
      51283,
      51285,
      51286,
      51287,
      51288,
      51289,
      51290,
      51291,
      51292,
      51293,
      51294,
      51295,
      51296,
      51297,
      51298,
      51299,
      51300,
      51301,
      51302,
      51303,
      51304,
      51305,
      51306,
      51307,
      51308,
      51309,
      51310,
      51311,
      51314,
      51315,
      51317,
      51318,
      51319,
      51321,
      51323,
      51324,
      51325,
      51326,
      51327,
      51330,
      51332,
      51336,
      51337,
      51338,
      51342,
      51343,
      51344,
      51345,
      51346,
      51347,
      51349,
      51350,
      51351,
      51352,
      51353,
      51354,
      51355,
      51356,
      51358,
      51360,
      51362,
      51363,
      51364,
      51365,
      51366,
      51367,
      51369,
      51370,
      51371,
      51372,
      51373,
      51374,
      51375,
      51376,
      51377,
      51378,
      51379,
      51380,
      51381,
      51382,
      51383,
      51384,
      51385,
      51386,
      51387,
      51390,
      51391,
      51392,
      51393,
      null,
      null,
      null,
      null,
      null,
      null,
      51394,
      51395,
      51397,
      51398,
      51399,
      51401,
      51402,
      51403,
      51405,
      51406,
      51407,
      51408,
      51409,
      51410,
      51411,
      51414,
      51416,
      51418,
      51419,
      51420,
      51421,
      51422,
      51423,
      51426,
      51427,
      51429,
      null,
      null,
      null,
      null,
      null,
      null,
      51430,
      51431,
      51432,
      51433,
      51434,
      51435,
      51436,
      51437,
      51438,
      51439,
      51440,
      51441,
      51442,
      51443,
      51444,
      51446,
      51447,
      51448,
      51449,
      51450,
      51451,
      51454,
      51455,
      51457,
      51458,
      51459,
      51463,
      51464,
      51465,
      51466,
      51467,
      51470,
      12288,
      12289,
      12290,
      183,
      8229,
      8230,
      168,
      12291,
      173,
      8213,
      8741,
      65340,
      8764,
      8216,
      8217,
      8220,
      8221,
      12308,
      12309,
      12296,
      12297,
      12298,
      12299,
      12300,
      12301,
      12302,
      12303,
      12304,
      12305,
      177,
      215,
      247,
      8800,
      8804,
      8805,
      8734,
      8756,
      176,
      8242,
      8243,
      8451,
      8491,
      65504,
      65505,
      65509,
      9794,
      9792,
      8736,
      8869,
      8978,
      8706,
      8711,
      8801,
      8786,
      167,
      8251,
      9734,
      9733,
      9675,
      9679,
      9678,
      9671,
      9670,
      9633,
      9632,
      9651,
      9650,
      9661,
      9660,
      8594,
      8592,
      8593,
      8595,
      8596,
      12307,
      8810,
      8811,
      8730,
      8765,
      8733,
      8757,
      8747,
      8748,
      8712,
      8715,
      8838,
      8839,
      8834,
      8835,
      8746,
      8745,
      8743,
      8744,
      65506,
      51472,
      51474,
      51475,
      51476,
      51477,
      51478,
      51479,
      51481,
      51482,
      51483,
      51484,
      51485,
      51486,
      51487,
      51488,
      51489,
      51490,
      51491,
      51492,
      51493,
      51494,
      51495,
      51496,
      51497,
      51498,
      51499,
      null,
      null,
      null,
      null,
      null,
      null,
      51501,
      51502,
      51503,
      51504,
      51505,
      51506,
      51507,
      51509,
      51510,
      51511,
      51512,
      51513,
      51514,
      51515,
      51516,
      51517,
      51518,
      51519,
      51520,
      51521,
      51522,
      51523,
      51524,
      51525,
      51526,
      51527,
      null,
      null,
      null,
      null,
      null,
      null,
      51528,
      51529,
      51530,
      51531,
      51532,
      51533,
      51534,
      51535,
      51538,
      51539,
      51541,
      51542,
      51543,
      51545,
      51546,
      51547,
      51548,
      51549,
      51550,
      51551,
      51554,
      51556,
      51557,
      51558,
      51559,
      51560,
      51561,
      51562,
      51563,
      51565,
      51566,
      51567,
      8658,
      8660,
      8704,
      8707,
      180,
      65374,
      711,
      728,
      733,
      730,
      729,
      184,
      731,
      161,
      191,
      720,
      8750,
      8721,
      8719,
      164,
      8457,
      8240,
      9665,
      9664,
      9655,
      9654,
      9828,
      9824,
      9825,
      9829,
      9831,
      9827,
      8857,
      9672,
      9635,
      9680,
      9681,
      9618,
      9636,
      9637,
      9640,
      9639,
      9638,
      9641,
      9832,
      9743,
      9742,
      9756,
      9758,
      182,
      8224,
      8225,
      8597,
      8599,
      8601,
      8598,
      8600,
      9837,
      9833,
      9834,
      9836,
      12927,
      12828,
      8470,
      13255,
      8482,
      13250,
      13272,
      8481,
      8364,
      174,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      51569,
      51570,
      51571,
      51573,
      51574,
      51575,
      51576,
      51577,
      51578,
      51579,
      51581,
      51582,
      51583,
      51584,
      51585,
      51586,
      51587,
      51588,
      51589,
      51590,
      51591,
      51594,
      51595,
      51597,
      51598,
      51599,
      null,
      null,
      null,
      null,
      null,
      null,
      51601,
      51602,
      51603,
      51604,
      51605,
      51606,
      51607,
      51610,
      51612,
      51614,
      51615,
      51616,
      51617,
      51618,
      51619,
      51620,
      51621,
      51622,
      51623,
      51624,
      51625,
      51626,
      51627,
      51628,
      51629,
      51630,
      null,
      null,
      null,
      null,
      null,
      null,
      51631,
      51632,
      51633,
      51634,
      51635,
      51636,
      51637,
      51638,
      51639,
      51640,
      51641,
      51642,
      51643,
      51644,
      51645,
      51646,
      51647,
      51650,
      51651,
      51653,
      51654,
      51657,
      51659,
      51660,
      51661,
      51662,
      51663,
      51666,
      51668,
      51671,
      51672,
      51675,
      65281,
      65282,
      65283,
      65284,
      65285,
      65286,
      65287,
      65288,
      65289,
      65290,
      65291,
      65292,
      65293,
      65294,
      65295,
      65296,
      65297,
      65298,
      65299,
      65300,
      65301,
      65302,
      65303,
      65304,
      65305,
      65306,
      65307,
      65308,
      65309,
      65310,
      65311,
      65312,
      65313,
      65314,
      65315,
      65316,
      65317,
      65318,
      65319,
      65320,
      65321,
      65322,
      65323,
      65324,
      65325,
      65326,
      65327,
      65328,
      65329,
      65330,
      65331,
      65332,
      65333,
      65334,
      65335,
      65336,
      65337,
      65338,
      65339,
      65510,
      65341,
      65342,
      65343,
      65344,
      65345,
      65346,
      65347,
      65348,
      65349,
      65350,
      65351,
      65352,
      65353,
      65354,
      65355,
      65356,
      65357,
      65358,
      65359,
      65360,
      65361,
      65362,
      65363,
      65364,
      65365,
      65366,
      65367,
      65368,
      65369,
      65370,
      65371,
      65372,
      65373,
      65507,
      51678,
      51679,
      51681,
      51683,
      51685,
      51686,
      51688,
      51689,
      51690,
      51691,
      51694,
      51698,
      51699,
      51700,
      51701,
      51702,
      51703,
      51706,
      51707,
      51709,
      51710,
      51711,
      51713,
      51714,
      51715,
      51716,
      null,
      null,
      null,
      null,
      null,
      null,
      51717,
      51718,
      51719,
      51722,
      51726,
      51727,
      51728,
      51729,
      51730,
      51731,
      51733,
      51734,
      51735,
      51737,
      51738,
      51739,
      51740,
      51741,
      51742,
      51743,
      51744,
      51745,
      51746,
      51747,
      51748,
      51749,
      null,
      null,
      null,
      null,
      null,
      null,
      51750,
      51751,
      51752,
      51754,
      51755,
      51756,
      51757,
      51758,
      51759,
      51760,
      51761,
      51762,
      51763,
      51764,
      51765,
      51766,
      51767,
      51768,
      51769,
      51770,
      51771,
      51772,
      51773,
      51774,
      51775,
      51776,
      51777,
      51778,
      51779,
      51780,
      51781,
      51782,
      12593,
      12594,
      12595,
      12596,
      12597,
      12598,
      12599,
      12600,
      12601,
      12602,
      12603,
      12604,
      12605,
      12606,
      12607,
      12608,
      12609,
      12610,
      12611,
      12612,
      12613,
      12614,
      12615,
      12616,
      12617,
      12618,
      12619,
      12620,
      12621,
      12622,
      12623,
      12624,
      12625,
      12626,
      12627,
      12628,
      12629,
      12630,
      12631,
      12632,
      12633,
      12634,
      12635,
      12636,
      12637,
      12638,
      12639,
      12640,
      12641,
      12642,
      12643,
      12644,
      12645,
      12646,
      12647,
      12648,
      12649,
      12650,
      12651,
      12652,
      12653,
      12654,
      12655,
      12656,
      12657,
      12658,
      12659,
      12660,
      12661,
      12662,
      12663,
      12664,
      12665,
      12666,
      12667,
      12668,
      12669,
      12670,
      12671,
      12672,
      12673,
      12674,
      12675,
      12676,
      12677,
      12678,
      12679,
      12680,
      12681,
      12682,
      12683,
      12684,
      12685,
      12686,
      51783,
      51784,
      51785,
      51786,
      51787,
      51790,
      51791,
      51793,
      51794,
      51795,
      51797,
      51798,
      51799,
      51800,
      51801,
      51802,
      51803,
      51806,
      51810,
      51811,
      51812,
      51813,
      51814,
      51815,
      51817,
      51818,
      null,
      null,
      null,
      null,
      null,
      null,
      51819,
      51820,
      51821,
      51822,
      51823,
      51824,
      51825,
      51826,
      51827,
      51828,
      51829,
      51830,
      51831,
      51832,
      51833,
      51834,
      51835,
      51836,
      51838,
      51839,
      51840,
      51841,
      51842,
      51843,
      51845,
      51846,
      null,
      null,
      null,
      null,
      null,
      null,
      51847,
      51848,
      51849,
      51850,
      51851,
      51852,
      51853,
      51854,
      51855,
      51856,
      51857,
      51858,
      51859,
      51860,
      51861,
      51862,
      51863,
      51865,
      51866,
      51867,
      51868,
      51869,
      51870,
      51871,
      51872,
      51873,
      51874,
      51875,
      51876,
      51877,
      51878,
      51879,
      8560,
      8561,
      8562,
      8563,
      8564,
      8565,
      8566,
      8567,
      8568,
      8569,
      null,
      null,
      null,
      null,
      null,
      8544,
      8545,
      8546,
      8547,
      8548,
      8549,
      8550,
      8551,
      8552,
      8553,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      913,
      914,
      915,
      916,
      917,
      918,
      919,
      920,
      921,
      922,
      923,
      924,
      925,
      926,
      927,
      928,
      929,
      931,
      932,
      933,
      934,
      935,
      936,
      937,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      945,
      946,
      947,
      948,
      949,
      950,
      951,
      952,
      953,
      954,
      955,
      956,
      957,
      958,
      959,
      960,
      961,
      963,
      964,
      965,
      966,
      967,
      968,
      969,
      null,
      null,
      null,
      null,
      null,
      null,
      51880,
      51881,
      51882,
      51883,
      51884,
      51885,
      51886,
      51887,
      51888,
      51889,
      51890,
      51891,
      51892,
      51893,
      51894,
      51895,
      51896,
      51897,
      51898,
      51899,
      51902,
      51903,
      51905,
      51906,
      51907,
      51909,
      null,
      null,
      null,
      null,
      null,
      null,
      51910,
      51911,
      51912,
      51913,
      51914,
      51915,
      51918,
      51920,
      51922,
      51924,
      51925,
      51926,
      51927,
      51930,
      51931,
      51932,
      51933,
      51934,
      51935,
      51937,
      51938,
      51939,
      51940,
      51941,
      51942,
      51943,
      null,
      null,
      null,
      null,
      null,
      null,
      51944,
      51945,
      51946,
      51947,
      51949,
      51950,
      51951,
      51952,
      51953,
      51954,
      51955,
      51957,
      51958,
      51959,
      51960,
      51961,
      51962,
      51963,
      51964,
      51965,
      51966,
      51967,
      51968,
      51969,
      51970,
      51971,
      51972,
      51973,
      51974,
      51975,
      51977,
      51978,
      9472,
      9474,
      9484,
      9488,
      9496,
      9492,
      9500,
      9516,
      9508,
      9524,
      9532,
      9473,
      9475,
      9487,
      9491,
      9499,
      9495,
      9507,
      9523,
      9515,
      9531,
      9547,
      9504,
      9519,
      9512,
      9527,
      9535,
      9501,
      9520,
      9509,
      9528,
      9538,
      9490,
      9489,
      9498,
      9497,
      9494,
      9493,
      9486,
      9485,
      9502,
      9503,
      9505,
      9506,
      9510,
      9511,
      9513,
      9514,
      9517,
      9518,
      9521,
      9522,
      9525,
      9526,
      9529,
      9530,
      9533,
      9534,
      9536,
      9537,
      9539,
      9540,
      9541,
      9542,
      9543,
      9544,
      9545,
      9546,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      51979,
      51980,
      51981,
      51982,
      51983,
      51985,
      51986,
      51987,
      51989,
      51990,
      51991,
      51993,
      51994,
      51995,
      51996,
      51997,
      51998,
      51999,
      52002,
      52003,
      52004,
      52005,
      52006,
      52007,
      52008,
      52009,
      null,
      null,
      null,
      null,
      null,
      null,
      52010,
      52011,
      52012,
      52013,
      52014,
      52015,
      52016,
      52017,
      52018,
      52019,
      52020,
      52021,
      52022,
      52023,
      52024,
      52025,
      52026,
      52027,
      52028,
      52029,
      52030,
      52031,
      52032,
      52034,
      52035,
      52036,
      null,
      null,
      null,
      null,
      null,
      null,
      52037,
      52038,
      52039,
      52042,
      52043,
      52045,
      52046,
      52047,
      52049,
      52050,
      52051,
      52052,
      52053,
      52054,
      52055,
      52058,
      52059,
      52060,
      52062,
      52063,
      52064,
      52065,
      52066,
      52067,
      52069,
      52070,
      52071,
      52072,
      52073,
      52074,
      52075,
      52076,
      13205,
      13206,
      13207,
      8467,
      13208,
      13252,
      13219,
      13220,
      13221,
      13222,
      13209,
      13210,
      13211,
      13212,
      13213,
      13214,
      13215,
      13216,
      13217,
      13218,
      13258,
      13197,
      13198,
      13199,
      13263,
      13192,
      13193,
      13256,
      13223,
      13224,
      13232,
      13233,
      13234,
      13235,
      13236,
      13237,
      13238,
      13239,
      13240,
      13241,
      13184,
      13185,
      13186,
      13187,
      13188,
      13242,
      13243,
      13244,
      13245,
      13246,
      13247,
      13200,
      13201,
      13202,
      13203,
      13204,
      8486,
      13248,
      13249,
      13194,
      13195,
      13196,
      13270,
      13253,
      13229,
      13230,
      13231,
      13275,
      13225,
      13226,
      13227,
      13228,
      13277,
      13264,
      13267,
      13251,
      13257,
      13276,
      13254,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      52077,
      52078,
      52079,
      52080,
      52081,
      52082,
      52083,
      52084,
      52085,
      52086,
      52087,
      52090,
      52091,
      52092,
      52093,
      52094,
      52095,
      52096,
      52097,
      52098,
      52099,
      52100,
      52101,
      52102,
      52103,
      52104,
      null,
      null,
      null,
      null,
      null,
      null,
      52105,
      52106,
      52107,
      52108,
      52109,
      52110,
      52111,
      52112,
      52113,
      52114,
      52115,
      52116,
      52117,
      52118,
      52119,
      52120,
      52121,
      52122,
      52123,
      52125,
      52126,
      52127,
      52128,
      52129,
      52130,
      52131,
      null,
      null,
      null,
      null,
      null,
      null,
      52132,
      52133,
      52134,
      52135,
      52136,
      52137,
      52138,
      52139,
      52140,
      52141,
      52142,
      52143,
      52144,
      52145,
      52146,
      52147,
      52148,
      52149,
      52150,
      52151,
      52153,
      52154,
      52155,
      52156,
      52157,
      52158,
      52159,
      52160,
      52161,
      52162,
      52163,
      52164,
      198,
      208,
      170,
      294,
      null,
      306,
      null,
      319,
      321,
      216,
      338,
      186,
      222,
      358,
      330,
      null,
      12896,
      12897,
      12898,
      12899,
      12900,
      12901,
      12902,
      12903,
      12904,
      12905,
      12906,
      12907,
      12908,
      12909,
      12910,
      12911,
      12912,
      12913,
      12914,
      12915,
      12916,
      12917,
      12918,
      12919,
      12920,
      12921,
      12922,
      12923,
      9424,
      9425,
      9426,
      9427,
      9428,
      9429,
      9430,
      9431,
      9432,
      9433,
      9434,
      9435,
      9436,
      9437,
      9438,
      9439,
      9440,
      9441,
      9442,
      9443,
      9444,
      9445,
      9446,
      9447,
      9448,
      9449,
      9312,
      9313,
      9314,
      9315,
      9316,
      9317,
      9318,
      9319,
      9320,
      9321,
      9322,
      9323,
      9324,
      9325,
      9326,
      189,
      8531,
      8532,
      188,
      190,
      8539,
      8540,
      8541,
      8542,
      52165,
      52166,
      52167,
      52168,
      52169,
      52170,
      52171,
      52172,
      52173,
      52174,
      52175,
      52176,
      52177,
      52178,
      52179,
      52181,
      52182,
      52183,
      52184,
      52185,
      52186,
      52187,
      52188,
      52189,
      52190,
      52191,
      null,
      null,
      null,
      null,
      null,
      null,
      52192,
      52193,
      52194,
      52195,
      52197,
      52198,
      52200,
      52202,
      52203,
      52204,
      52205,
      52206,
      52207,
      52208,
      52209,
      52210,
      52211,
      52212,
      52213,
      52214,
      52215,
      52216,
      52217,
      52218,
      52219,
      52220,
      null,
      null,
      null,
      null,
      null,
      null,
      52221,
      52222,
      52223,
      52224,
      52225,
      52226,
      52227,
      52228,
      52229,
      52230,
      52231,
      52232,
      52233,
      52234,
      52235,
      52238,
      52239,
      52241,
      52242,
      52243,
      52245,
      52246,
      52247,
      52248,
      52249,
      52250,
      52251,
      52254,
      52255,
      52256,
      52259,
      52260,
      230,
      273,
      240,
      295,
      305,
      307,
      312,
      320,
      322,
      248,
      339,
      223,
      254,
      359,
      331,
      329,
      12800,
      12801,
      12802,
      12803,
      12804,
      12805,
      12806,
      12807,
      12808,
      12809,
      12810,
      12811,
      12812,
      12813,
      12814,
      12815,
      12816,
      12817,
      12818,
      12819,
      12820,
      12821,
      12822,
      12823,
      12824,
      12825,
      12826,
      12827,
      9372,
      9373,
      9374,
      9375,
      9376,
      9377,
      9378,
      9379,
      9380,
      9381,
      9382,
      9383,
      9384,
      9385,
      9386,
      9387,
      9388,
      9389,
      9390,
      9391,
      9392,
      9393,
      9394,
      9395,
      9396,
      9397,
      9332,
      9333,
      9334,
      9335,
      9336,
      9337,
      9338,
      9339,
      9340,
      9341,
      9342,
      9343,
      9344,
      9345,
      9346,
      185,
      178,
      179,
      8308,
      8319,
      8321,
      8322,
      8323,
      8324,
      52261,
      52262,
      52266,
      52267,
      52269,
      52271,
      52273,
      52274,
      52275,
      52276,
      52277,
      52278,
      52279,
      52282,
      52287,
      52288,
      52289,
      52290,
      52291,
      52294,
      52295,
      52297,
      52298,
      52299,
      52301,
      52302,
      null,
      null,
      null,
      null,
      null,
      null,
      52303,
      52304,
      52305,
      52306,
      52307,
      52310,
      52314,
      52315,
      52316,
      52317,
      52318,
      52319,
      52321,
      52322,
      52323,
      52325,
      52327,
      52329,
      52330,
      52331,
      52332,
      52333,
      52334,
      52335,
      52337,
      52338,
      null,
      null,
      null,
      null,
      null,
      null,
      52339,
      52340,
      52342,
      52343,
      52344,
      52345,
      52346,
      52347,
      52348,
      52349,
      52350,
      52351,
      52352,
      52353,
      52354,
      52355,
      52356,
      52357,
      52358,
      52359,
      52360,
      52361,
      52362,
      52363,
      52364,
      52365,
      52366,
      52367,
      52368,
      52369,
      52370,
      52371,
      12353,
      12354,
      12355,
      12356,
      12357,
      12358,
      12359,
      12360,
      12361,
      12362,
      12363,
      12364,
      12365,
      12366,
      12367,
      12368,
      12369,
      12370,
      12371,
      12372,
      12373,
      12374,
      12375,
      12376,
      12377,
      12378,
      12379,
      12380,
      12381,
      12382,
      12383,
      12384,
      12385,
      12386,
      12387,
      12388,
      12389,
      12390,
      12391,
      12392,
      12393,
      12394,
      12395,
      12396,
      12397,
      12398,
      12399,
      12400,
      12401,
      12402,
      12403,
      12404,
      12405,
      12406,
      12407,
      12408,
      12409,
      12410,
      12411,
      12412,
      12413,
      12414,
      12415,
      12416,
      12417,
      12418,
      12419,
      12420,
      12421,
      12422,
      12423,
      12424,
      12425,
      12426,
      12427,
      12428,
      12429,
      12430,
      12431,
      12432,
      12433,
      12434,
      12435,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      52372,
      52373,
      52374,
      52375,
      52378,
      52379,
      52381,
      52382,
      52383,
      52385,
      52386,
      52387,
      52388,
      52389,
      52390,
      52391,
      52394,
      52398,
      52399,
      52400,
      52401,
      52402,
      52403,
      52406,
      52407,
      52409,
      null,
      null,
      null,
      null,
      null,
      null,
      52410,
      52411,
      52413,
      52414,
      52415,
      52416,
      52417,
      52418,
      52419,
      52422,
      52424,
      52426,
      52427,
      52428,
      52429,
      52430,
      52431,
      52433,
      52434,
      52435,
      52437,
      52438,
      52439,
      52440,
      52441,
      52442,
      null,
      null,
      null,
      null,
      null,
      null,
      52443,
      52444,
      52445,
      52446,
      52447,
      52448,
      52449,
      52450,
      52451,
      52453,
      52454,
      52455,
      52456,
      52457,
      52458,
      52459,
      52461,
      52462,
      52463,
      52465,
      52466,
      52467,
      52468,
      52469,
      52470,
      52471,
      52472,
      52473,
      52474,
      52475,
      52476,
      52477,
      12449,
      12450,
      12451,
      12452,
      12453,
      12454,
      12455,
      12456,
      12457,
      12458,
      12459,
      12460,
      12461,
      12462,
      12463,
      12464,
      12465,
      12466,
      12467,
      12468,
      12469,
      12470,
      12471,
      12472,
      12473,
      12474,
      12475,
      12476,
      12477,
      12478,
      12479,
      12480,
      12481,
      12482,
      12483,
      12484,
      12485,
      12486,
      12487,
      12488,
      12489,
      12490,
      12491,
      12492,
      12493,
      12494,
      12495,
      12496,
      12497,
      12498,
      12499,
      12500,
      12501,
      12502,
      12503,
      12504,
      12505,
      12506,
      12507,
      12508,
      12509,
      12510,
      12511,
      12512,
      12513,
      12514,
      12515,
      12516,
      12517,
      12518,
      12519,
      12520,
      12521,
      12522,
      12523,
      12524,
      12525,
      12526,
      12527,
      12528,
      12529,
      12530,
      12531,
      12532,
      12533,
      12534,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      52478,
      52479,
      52480,
      52482,
      52483,
      52484,
      52485,
      52486,
      52487,
      52490,
      52491,
      52493,
      52494,
      52495,
      52497,
      52498,
      52499,
      52500,
      52501,
      52502,
      52503,
      52506,
      52508,
      52510,
      52511,
      52512,
      null,
      null,
      null,
      null,
      null,
      null,
      52513,
      52514,
      52515,
      52517,
      52518,
      52519,
      52521,
      52522,
      52523,
      52525,
      52526,
      52527,
      52528,
      52529,
      52530,
      52531,
      52532,
      52533,
      52534,
      52535,
      52536,
      52538,
      52539,
      52540,
      52541,
      52542,
      null,
      null,
      null,
      null,
      null,
      null,
      52543,
      52544,
      52545,
      52546,
      52547,
      52548,
      52549,
      52550,
      52551,
      52552,
      52553,
      52554,
      52555,
      52556,
      52557,
      52558,
      52559,
      52560,
      52561,
      52562,
      52563,
      52564,
      52565,
      52566,
      52567,
      52568,
      52569,
      52570,
      52571,
      52573,
      52574,
      52575,
      1040,
      1041,
      1042,
      1043,
      1044,
      1045,
      1025,
      1046,
      1047,
      1048,
      1049,
      1050,
      1051,
      1052,
      1053,
      1054,
      1055,
      1056,
      1057,
      1058,
      1059,
      1060,
      1061,
      1062,
      1063,
      1064,
      1065,
      1066,
      1067,
      1068,
      1069,
      1070,
      1071,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      1072,
      1073,
      1074,
      1075,
      1076,
      1077,
      1105,
      1078,
      1079,
      1080,
      1081,
      1082,
      1083,
      1084,
      1085,
      1086,
      1087,
      1088,
      1089,
      1090,
      1091,
      1092,
      1093,
      1094,
      1095,
      1096,
      1097,
      1098,
      1099,
      1100,
      1101,
      1102,
      1103,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      52577,
      52578,
      52579,
      52581,
      52582,
      52583,
      52584,
      52585,
      52586,
      52587,
      52590,
      52592,
      52594,
      52595,
      52596,
      52597,
      52598,
      52599,
      52601,
      52602,
      52603,
      52604,
      52605,
      52606,
      52607,
      52608,
      null,
      null,
      null,
      null,
      null,
      null,
      52609,
      52610,
      52611,
      52612,
      52613,
      52614,
      52615,
      52617,
      52618,
      52619,
      52620,
      52621,
      52622,
      52623,
      52624,
      52625,
      52626,
      52627,
      52630,
      52631,
      52633,
      52634,
      52635,
      52637,
      52638,
      52639,
      null,
      null,
      null,
      null,
      null,
      null,
      52640,
      52641,
      52642,
      52643,
      52646,
      52648,
      52650,
      52651,
      52652,
      52653,
      52654,
      52655,
      52657,
      52658,
      52659,
      52660,
      52661,
      52662,
      52663,
      52664,
      52665,
      52666,
      52667,
      52668,
      52669,
      52670,
      52671,
      52672,
      52673,
      52674,
      52675,
      52677,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      52678,
      52679,
      52680,
      52681,
      52682,
      52683,
      52685,
      52686,
      52687,
      52689,
      52690,
      52691,
      52692,
      52693,
      52694,
      52695,
      52696,
      52697,
      52698,
      52699,
      52700,
      52701,
      52702,
      52703,
      52704,
      52705,
      null,
      null,
      null,
      null,
      null,
      null,
      52706,
      52707,
      52708,
      52709,
      52710,
      52711,
      52713,
      52714,
      52715,
      52717,
      52718,
      52719,
      52721,
      52722,
      52723,
      52724,
      52725,
      52726,
      52727,
      52730,
      52732,
      52734,
      52735,
      52736,
      52737,
      52738,
      null,
      null,
      null,
      null,
      null,
      null,
      52739,
      52741,
      52742,
      52743,
      52745,
      52746,
      52747,
      52749,
      52750,
      52751,
      52752,
      52753,
      52754,
      52755,
      52757,
      52758,
      52759,
      52760,
      52762,
      52763,
      52764,
      52765,
      52766,
      52767,
      52770,
      52771,
      52773,
      52774,
      52775,
      52777,
      52778,
      52779,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      52780,
      52781,
      52782,
      52783,
      52786,
      52788,
      52790,
      52791,
      52792,
      52793,
      52794,
      52795,
      52796,
      52797,
      52798,
      52799,
      52800,
      52801,
      52802,
      52803,
      52804,
      52805,
      52806,
      52807,
      52808,
      52809,
      null,
      null,
      null,
      null,
      null,
      null,
      52810,
      52811,
      52812,
      52813,
      52814,
      52815,
      52816,
      52817,
      52818,
      52819,
      52820,
      52821,
      52822,
      52823,
      52826,
      52827,
      52829,
      52830,
      52834,
      52835,
      52836,
      52837,
      52838,
      52839,
      52842,
      52844,
      null,
      null,
      null,
      null,
      null,
      null,
      52846,
      52847,
      52848,
      52849,
      52850,
      52851,
      52854,
      52855,
      52857,
      52858,
      52859,
      52861,
      52862,
      52863,
      52864,
      52865,
      52866,
      52867,
      52870,
      52872,
      52874,
      52875,
      52876,
      52877,
      52878,
      52879,
      52882,
      52883,
      52885,
      52886,
      52887,
      52889,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      52890,
      52891,
      52892,
      52893,
      52894,
      52895,
      52898,
      52902,
      52903,
      52904,
      52905,
      52906,
      52907,
      52910,
      52911,
      52912,
      52913,
      52914,
      52915,
      52916,
      52917,
      52918,
      52919,
      52920,
      52921,
      52922,
      null,
      null,
      null,
      null,
      null,
      null,
      52923,
      52924,
      52925,
      52926,
      52927,
      52928,
      52930,
      52931,
      52932,
      52933,
      52934,
      52935,
      52936,
      52937,
      52938,
      52939,
      52940,
      52941,
      52942,
      52943,
      52944,
      52945,
      52946,
      52947,
      52948,
      52949,
      null,
      null,
      null,
      null,
      null,
      null,
      52950,
      52951,
      52952,
      52953,
      52954,
      52955,
      52956,
      52957,
      52958,
      52959,
      52960,
      52961,
      52962,
      52963,
      52966,
      52967,
      52969,
      52970,
      52973,
      52974,
      52975,
      52976,
      52977,
      52978,
      52979,
      52982,
      52986,
      52987,
      52988,
      52989,
      52990,
      52991,
      44032,
      44033,
      44036,
      44039,
      44040,
      44041,
      44042,
      44048,
      44049,
      44050,
      44051,
      44052,
      44053,
      44054,
      44055,
      44057,
      44058,
      44059,
      44060,
      44061,
      44064,
      44068,
      44076,
      44077,
      44079,
      44080,
      44081,
      44088,
      44089,
      44092,
      44096,
      44107,
      44109,
      44116,
      44120,
      44124,
      44144,
      44145,
      44148,
      44151,
      44152,
      44154,
      44160,
      44161,
      44163,
      44164,
      44165,
      44166,
      44169,
      44170,
      44171,
      44172,
      44176,
      44180,
      44188,
      44189,
      44191,
      44192,
      44193,
      44200,
      44201,
      44202,
      44204,
      44207,
      44208,
      44216,
      44217,
      44219,
      44220,
      44221,
      44225,
      44228,
      44232,
      44236,
      44245,
      44247,
      44256,
      44257,
      44260,
      44263,
      44264,
      44266,
      44268,
      44271,
      44272,
      44273,
      44275,
      44277,
      44278,
      44284,
      44285,
      44288,
      44292,
      44294,
      52994,
      52995,
      52997,
      52998,
      52999,
      53001,
      53002,
      53003,
      53004,
      53005,
      53006,
      53007,
      53010,
      53012,
      53014,
      53015,
      53016,
      53017,
      53018,
      53019,
      53021,
      53022,
      53023,
      53025,
      53026,
      53027,
      null,
      null,
      null,
      null,
      null,
      null,
      53029,
      53030,
      53031,
      53032,
      53033,
      53034,
      53035,
      53038,
      53042,
      53043,
      53044,
      53045,
      53046,
      53047,
      53049,
      53050,
      53051,
      53052,
      53053,
      53054,
      53055,
      53056,
      53057,
      53058,
      53059,
      53060,
      null,
      null,
      null,
      null,
      null,
      null,
      53061,
      53062,
      53063,
      53064,
      53065,
      53066,
      53067,
      53068,
      53069,
      53070,
      53071,
      53072,
      53073,
      53074,
      53075,
      53078,
      53079,
      53081,
      53082,
      53083,
      53085,
      53086,
      53087,
      53088,
      53089,
      53090,
      53091,
      53094,
      53096,
      53098,
      53099,
      53100,
      44300,
      44301,
      44303,
      44305,
      44312,
      44316,
      44320,
      44329,
      44332,
      44333,
      44340,
      44341,
      44344,
      44348,
      44356,
      44357,
      44359,
      44361,
      44368,
      44372,
      44376,
      44385,
      44387,
      44396,
      44397,
      44400,
      44403,
      44404,
      44405,
      44406,
      44411,
      44412,
      44413,
      44415,
      44417,
      44418,
      44424,
      44425,
      44428,
      44432,
      44444,
      44445,
      44452,
      44471,
      44480,
      44481,
      44484,
      44488,
      44496,
      44497,
      44499,
      44508,
      44512,
      44516,
      44536,
      44537,
      44540,
      44543,
      44544,
      44545,
      44552,
      44553,
      44555,
      44557,
      44564,
      44592,
      44593,
      44596,
      44599,
      44600,
      44602,
      44608,
      44609,
      44611,
      44613,
      44614,
      44618,
      44620,
      44621,
      44622,
      44624,
      44628,
      44630,
      44636,
      44637,
      44639,
      44640,
      44641,
      44645,
      44648,
      44649,
      44652,
      44656,
      44664,
      53101,
      53102,
      53103,
      53106,
      53107,
      53109,
      53110,
      53111,
      53113,
      53114,
      53115,
      53116,
      53117,
      53118,
      53119,
      53121,
      53122,
      53123,
      53124,
      53126,
      53127,
      53128,
      53129,
      53130,
      53131,
      53133,
      null,
      null,
      null,
      null,
      null,
      null,
      53134,
      53135,
      53136,
      53137,
      53138,
      53139,
      53140,
      53141,
      53142,
      53143,
      53144,
      53145,
      53146,
      53147,
      53148,
      53149,
      53150,
      53151,
      53152,
      53154,
      53155,
      53156,
      53157,
      53158,
      53159,
      53161,
      null,
      null,
      null,
      null,
      null,
      null,
      53162,
      53163,
      53164,
      53165,
      53166,
      53167,
      53169,
      53170,
      53171,
      53172,
      53173,
      53174,
      53175,
      53176,
      53177,
      53178,
      53179,
      53180,
      53181,
      53182,
      53183,
      53184,
      53185,
      53186,
      53187,
      53189,
      53190,
      53191,
      53192,
      53193,
      53194,
      53195,
      44665,
      44667,
      44668,
      44669,
      44676,
      44677,
      44684,
      44732,
      44733,
      44734,
      44736,
      44740,
      44748,
      44749,
      44751,
      44752,
      44753,
      44760,
      44761,
      44764,
      44776,
      44779,
      44781,
      44788,
      44792,
      44796,
      44807,
      44808,
      44813,
      44816,
      44844,
      44845,
      44848,
      44850,
      44852,
      44860,
      44861,
      44863,
      44865,
      44866,
      44867,
      44872,
      44873,
      44880,
      44892,
      44893,
      44900,
      44901,
      44921,
      44928,
      44932,
      44936,
      44944,
      44945,
      44949,
      44956,
      44984,
      44985,
      44988,
      44992,
      44999,
      45000,
      45001,
      45003,
      45005,
      45006,
      45012,
      45020,
      45032,
      45033,
      45040,
      45041,
      45044,
      45048,
      45056,
      45057,
      45060,
      45068,
      45072,
      45076,
      45084,
      45085,
      45096,
      45124,
      45125,
      45128,
      45130,
      45132,
      45134,
      45139,
      45140,
      45141,
      45143,
      45145,
      53196,
      53197,
      53198,
      53199,
      53200,
      53201,
      53202,
      53203,
      53204,
      53205,
      53206,
      53207,
      53208,
      53209,
      53210,
      53211,
      53212,
      53213,
      53214,
      53215,
      53218,
      53219,
      53221,
      53222,
      53223,
      53225,
      null,
      null,
      null,
      null,
      null,
      null,
      53226,
      53227,
      53228,
      53229,
      53230,
      53231,
      53234,
      53236,
      53238,
      53239,
      53240,
      53241,
      53242,
      53243,
      53245,
      53246,
      53247,
      53249,
      53250,
      53251,
      53253,
      53254,
      53255,
      53256,
      53257,
      53258,
      null,
      null,
      null,
      null,
      null,
      null,
      53259,
      53260,
      53261,
      53262,
      53263,
      53264,
      53266,
      53267,
      53268,
      53269,
      53270,
      53271,
      53273,
      53274,
      53275,
      53276,
      53277,
      53278,
      53279,
      53280,
      53281,
      53282,
      53283,
      53284,
      53285,
      53286,
      53287,
      53288,
      53289,
      53290,
      53291,
      53292,
      45149,
      45180,
      45181,
      45184,
      45188,
      45196,
      45197,
      45199,
      45201,
      45208,
      45209,
      45210,
      45212,
      45215,
      45216,
      45217,
      45218,
      45224,
      45225,
      45227,
      45228,
      45229,
      45230,
      45231,
      45233,
      45235,
      45236,
      45237,
      45240,
      45244,
      45252,
      45253,
      45255,
      45256,
      45257,
      45264,
      45265,
      45268,
      45272,
      45280,
      45285,
      45320,
      45321,
      45323,
      45324,
      45328,
      45330,
      45331,
      45336,
      45337,
      45339,
      45340,
      45341,
      45347,
      45348,
      45349,
      45352,
      45356,
      45364,
      45365,
      45367,
      45368,
      45369,
      45376,
      45377,
      45380,
      45384,
      45392,
      45393,
      45396,
      45397,
      45400,
      45404,
      45408,
      45432,
      45433,
      45436,
      45440,
      45442,
      45448,
      45449,
      45451,
      45453,
      45458,
      45459,
      45460,
      45464,
      45468,
      45480,
      45516,
      45520,
      45524,
      45532,
      45533,
      53294,
      53295,
      53296,
      53297,
      53298,
      53299,
      53302,
      53303,
      53305,
      53306,
      53307,
      53309,
      53310,
      53311,
      53312,
      53313,
      53314,
      53315,
      53318,
      53320,
      53322,
      53323,
      53324,
      53325,
      53326,
      53327,
      null,
      null,
      null,
      null,
      null,
      null,
      53329,
      53330,
      53331,
      53333,
      53334,
      53335,
      53337,
      53338,
      53339,
      53340,
      53341,
      53342,
      53343,
      53345,
      53346,
      53347,
      53348,
      53349,
      53350,
      53351,
      53352,
      53353,
      53354,
      53355,
      53358,
      53359,
      null,
      null,
      null,
      null,
      null,
      null,
      53361,
      53362,
      53363,
      53365,
      53366,
      53367,
      53368,
      53369,
      53370,
      53371,
      53374,
      53375,
      53376,
      53378,
      53379,
      53380,
      53381,
      53382,
      53383,
      53384,
      53385,
      53386,
      53387,
      53388,
      53389,
      53390,
      53391,
      53392,
      53393,
      53394,
      53395,
      53396,
      45535,
      45544,
      45545,
      45548,
      45552,
      45561,
      45563,
      45565,
      45572,
      45573,
      45576,
      45579,
      45580,
      45588,
      45589,
      45591,
      45593,
      45600,
      45620,
      45628,
      45656,
      45660,
      45664,
      45672,
      45673,
      45684,
      45685,
      45692,
      45700,
      45701,
      45705,
      45712,
      45713,
      45716,
      45720,
      45721,
      45722,
      45728,
      45729,
      45731,
      45733,
      45734,
      45738,
      45740,
      45744,
      45748,
      45768,
      45769,
      45772,
      45776,
      45778,
      45784,
      45785,
      45787,
      45789,
      45794,
      45796,
      45797,
      45798,
      45800,
      45803,
      45804,
      45805,
      45806,
      45807,
      45811,
      45812,
      45813,
      45815,
      45816,
      45817,
      45818,
      45819,
      45823,
      45824,
      45825,
      45828,
      45832,
      45840,
      45841,
      45843,
      45844,
      45845,
      45852,
      45908,
      45909,
      45910,
      45912,
      45915,
      45916,
      45918,
      45919,
      45924,
      45925,
      53397,
      53398,
      53399,
      53400,
      53401,
      53402,
      53403,
      53404,
      53405,
      53406,
      53407,
      53408,
      53409,
      53410,
      53411,
      53414,
      53415,
      53417,
      53418,
      53419,
      53421,
      53422,
      53423,
      53424,
      53425,
      53426,
      null,
      null,
      null,
      null,
      null,
      null,
      53427,
      53430,
      53432,
      53434,
      53435,
      53436,
      53437,
      53438,
      53439,
      53442,
      53443,
      53445,
      53446,
      53447,
      53450,
      53451,
      53452,
      53453,
      53454,
      53455,
      53458,
      53462,
      53463,
      53464,
      53465,
      53466,
      null,
      null,
      null,
      null,
      null,
      null,
      53467,
      53470,
      53471,
      53473,
      53474,
      53475,
      53477,
      53478,
      53479,
      53480,
      53481,
      53482,
      53483,
      53486,
      53490,
      53491,
      53492,
      53493,
      53494,
      53495,
      53497,
      53498,
      53499,
      53500,
      53501,
      53502,
      53503,
      53504,
      53505,
      53506,
      53507,
      53508,
      45927,
      45929,
      45931,
      45934,
      45936,
      45937,
      45940,
      45944,
      45952,
      45953,
      45955,
      45956,
      45957,
      45964,
      45968,
      45972,
      45984,
      45985,
      45992,
      45996,
      46020,
      46021,
      46024,
      46027,
      46028,
      46030,
      46032,
      46036,
      46037,
      46039,
      46041,
      46043,
      46045,
      46048,
      46052,
      46056,
      46076,
      46096,
      46104,
      46108,
      46112,
      46120,
      46121,
      46123,
      46132,
      46160,
      46161,
      46164,
      46168,
      46176,
      46177,
      46179,
      46181,
      46188,
      46208,
      46216,
      46237,
      46244,
      46248,
      46252,
      46261,
      46263,
      46265,
      46272,
      46276,
      46280,
      46288,
      46293,
      46300,
      46301,
      46304,
      46307,
      46308,
      46310,
      46316,
      46317,
      46319,
      46321,
      46328,
      46356,
      46357,
      46360,
      46363,
      46364,
      46372,
      46373,
      46375,
      46376,
      46377,
      46378,
      46384,
      46385,
      46388,
      46392,
      53509,
      53510,
      53511,
      53512,
      53513,
      53514,
      53515,
      53516,
      53518,
      53519,
      53520,
      53521,
      53522,
      53523,
      53524,
      53525,
      53526,
      53527,
      53528,
      53529,
      53530,
      53531,
      53532,
      53533,
      53534,
      53535,
      null,
      null,
      null,
      null,
      null,
      null,
      53536,
      53537,
      53538,
      53539,
      53540,
      53541,
      53542,
      53543,
      53544,
      53545,
      53546,
      53547,
      53548,
      53549,
      53550,
      53551,
      53554,
      53555,
      53557,
      53558,
      53559,
      53561,
      53563,
      53564,
      53565,
      53566,
      null,
      null,
      null,
      null,
      null,
      null,
      53567,
      53570,
      53574,
      53575,
      53576,
      53577,
      53578,
      53579,
      53582,
      53583,
      53585,
      53586,
      53587,
      53589,
      53590,
      53591,
      53592,
      53593,
      53594,
      53595,
      53598,
      53600,
      53602,
      53603,
      53604,
      53605,
      53606,
      53607,
      53609,
      53610,
      53611,
      53613,
      46400,
      46401,
      46403,
      46404,
      46405,
      46411,
      46412,
      46413,
      46416,
      46420,
      46428,
      46429,
      46431,
      46432,
      46433,
      46496,
      46497,
      46500,
      46504,
      46506,
      46507,
      46512,
      46513,
      46515,
      46516,
      46517,
      46523,
      46524,
      46525,
      46528,
      46532,
      46540,
      46541,
      46543,
      46544,
      46545,
      46552,
      46572,
      46608,
      46609,
      46612,
      46616,
      46629,
      46636,
      46644,
      46664,
      46692,
      46696,
      46748,
      46749,
      46752,
      46756,
      46763,
      46764,
      46769,
      46804,
      46832,
      46836,
      46840,
      46848,
      46849,
      46853,
      46888,
      46889,
      46892,
      46895,
      46896,
      46904,
      46905,
      46907,
      46916,
      46920,
      46924,
      46932,
      46933,
      46944,
      46948,
      46952,
      46960,
      46961,
      46963,
      46965,
      46972,
      46973,
      46976,
      46980,
      46988,
      46989,
      46991,
      46992,
      46993,
      46994,
      46998,
      46999,
      53614,
      53615,
      53616,
      53617,
      53618,
      53619,
      53620,
      53621,
      53622,
      53623,
      53624,
      53625,
      53626,
      53627,
      53629,
      53630,
      53631,
      53632,
      53633,
      53634,
      53635,
      53637,
      53638,
      53639,
      53641,
      53642,
      null,
      null,
      null,
      null,
      null,
      null,
      53643,
      53644,
      53645,
      53646,
      53647,
      53648,
      53649,
      53650,
      53651,
      53652,
      53653,
      53654,
      53655,
      53656,
      53657,
      53658,
      53659,
      53660,
      53661,
      53662,
      53663,
      53666,
      53667,
      53669,
      53670,
      53671,
      null,
      null,
      null,
      null,
      null,
      null,
      53673,
      53674,
      53675,
      53676,
      53677,
      53678,
      53679,
      53682,
      53684,
      53686,
      53687,
      53688,
      53689,
      53691,
      53693,
      53694,
      53695,
      53697,
      53698,
      53699,
      53700,
      53701,
      53702,
      53703,
      53704,
      53705,
      53706,
      53707,
      53708,
      53709,
      53710,
      53711,
      47000,
      47001,
      47004,
      47008,
      47016,
      47017,
      47019,
      47020,
      47021,
      47028,
      47029,
      47032,
      47047,
      47049,
      47084,
      47085,
      47088,
      47092,
      47100,
      47101,
      47103,
      47104,
      47105,
      47111,
      47112,
      47113,
      47116,
      47120,
      47128,
      47129,
      47131,
      47133,
      47140,
      47141,
      47144,
      47148,
      47156,
      47157,
      47159,
      47160,
      47161,
      47168,
      47172,
      47185,
      47187,
      47196,
      47197,
      47200,
      47204,
      47212,
      47213,
      47215,
      47217,
      47224,
      47228,
      47245,
      47272,
      47280,
      47284,
      47288,
      47296,
      47297,
      47299,
      47301,
      47308,
      47312,
      47316,
      47325,
      47327,
      47329,
      47336,
      47337,
      47340,
      47344,
      47352,
      47353,
      47355,
      47357,
      47364,
      47384,
      47392,
      47420,
      47421,
      47424,
      47428,
      47436,
      47439,
      47441,
      47448,
      47449,
      47452,
      47456,
      47464,
      47465,
      53712,
      53713,
      53714,
      53715,
      53716,
      53717,
      53718,
      53719,
      53721,
      53722,
      53723,
      53724,
      53725,
      53726,
      53727,
      53728,
      53729,
      53730,
      53731,
      53732,
      53733,
      53734,
      53735,
      53736,
      53737,
      53738,
      null,
      null,
      null,
      null,
      null,
      null,
      53739,
      53740,
      53741,
      53742,
      53743,
      53744,
      53745,
      53746,
      53747,
      53749,
      53750,
      53751,
      53753,
      53754,
      53755,
      53756,
      53757,
      53758,
      53759,
      53760,
      53761,
      53762,
      53763,
      53764,
      53765,
      53766,
      null,
      null,
      null,
      null,
      null,
      null,
      53768,
      53770,
      53771,
      53772,
      53773,
      53774,
      53775,
      53777,
      53778,
      53779,
      53780,
      53781,
      53782,
      53783,
      53784,
      53785,
      53786,
      53787,
      53788,
      53789,
      53790,
      53791,
      53792,
      53793,
      53794,
      53795,
      53796,
      53797,
      53798,
      53799,
      53800,
      53801,
      47467,
      47469,
      47476,
      47477,
      47480,
      47484,
      47492,
      47493,
      47495,
      47497,
      47498,
      47501,
      47502,
      47532,
      47533,
      47536,
      47540,
      47548,
      47549,
      47551,
      47553,
      47560,
      47561,
      47564,
      47566,
      47567,
      47568,
      47569,
      47570,
      47576,
      47577,
      47579,
      47581,
      47582,
      47585,
      47587,
      47588,
      47589,
      47592,
      47596,
      47604,
      47605,
      47607,
      47608,
      47609,
      47610,
      47616,
      47617,
      47624,
      47637,
      47672,
      47673,
      47676,
      47680,
      47682,
      47688,
      47689,
      47691,
      47693,
      47694,
      47699,
      47700,
      47701,
      47704,
      47708,
      47716,
      47717,
      47719,
      47720,
      47721,
      47728,
      47729,
      47732,
      47736,
      47747,
      47748,
      47749,
      47751,
      47756,
      47784,
      47785,
      47787,
      47788,
      47792,
      47794,
      47800,
      47801,
      47803,
      47805,
      47812,
      47816,
      47832,
      47833,
      47868,
      53802,
      53803,
      53806,
      53807,
      53809,
      53810,
      53811,
      53813,
      53814,
      53815,
      53816,
      53817,
      53818,
      53819,
      53822,
      53824,
      53826,
      53827,
      53828,
      53829,
      53830,
      53831,
      53833,
      53834,
      53835,
      53836,
      null,
      null,
      null,
      null,
      null,
      null,
      53837,
      53838,
      53839,
      53840,
      53841,
      53842,
      53843,
      53844,
      53845,
      53846,
      53847,
      53848,
      53849,
      53850,
      53851,
      53853,
      53854,
      53855,
      53856,
      53857,
      53858,
      53859,
      53861,
      53862,
      53863,
      53864,
      null,
      null,
      null,
      null,
      null,
      null,
      53865,
      53866,
      53867,
      53868,
      53869,
      53870,
      53871,
      53872,
      53873,
      53874,
      53875,
      53876,
      53877,
      53878,
      53879,
      53880,
      53881,
      53882,
      53883,
      53884,
      53885,
      53886,
      53887,
      53890,
      53891,
      53893,
      53894,
      53895,
      53897,
      53898,
      53899,
      53900,
      47872,
      47876,
      47885,
      47887,
      47889,
      47896,
      47900,
      47904,
      47913,
      47915,
      47924,
      47925,
      47926,
      47928,
      47931,
      47932,
      47933,
      47934,
      47940,
      47941,
      47943,
      47945,
      47949,
      47951,
      47952,
      47956,
      47960,
      47969,
      47971,
      47980,
      48008,
      48012,
      48016,
      48036,
      48040,
      48044,
      48052,
      48055,
      48064,
      48068,
      48072,
      48080,
      48083,
      48120,
      48121,
      48124,
      48127,
      48128,
      48130,
      48136,
      48137,
      48139,
      48140,
      48141,
      48143,
      48145,
      48148,
      48149,
      48150,
      48151,
      48152,
      48155,
      48156,
      48157,
      48158,
      48159,
      48164,
      48165,
      48167,
      48169,
      48173,
      48176,
      48177,
      48180,
      48184,
      48192,
      48193,
      48195,
      48196,
      48197,
      48201,
      48204,
      48205,
      48208,
      48221,
      48260,
      48261,
      48264,
      48267,
      48268,
      48270,
      48276,
      48277,
      48279,
      53901,
      53902,
      53903,
      53906,
      53907,
      53908,
      53910,
      53911,
      53912,
      53913,
      53914,
      53915,
      53917,
      53918,
      53919,
      53921,
      53922,
      53923,
      53925,
      53926,
      53927,
      53928,
      53929,
      53930,
      53931,
      53933,
      null,
      null,
      null,
      null,
      null,
      null,
      53934,
      53935,
      53936,
      53938,
      53939,
      53940,
      53941,
      53942,
      53943,
      53946,
      53947,
      53949,
      53950,
      53953,
      53955,
      53956,
      53957,
      53958,
      53959,
      53962,
      53964,
      53965,
      53966,
      53967,
      53968,
      53969,
      null,
      null,
      null,
      null,
      null,
      null,
      53970,
      53971,
      53973,
      53974,
      53975,
      53977,
      53978,
      53979,
      53981,
      53982,
      53983,
      53984,
      53985,
      53986,
      53987,
      53990,
      53991,
      53992,
      53993,
      53994,
      53995,
      53996,
      53997,
      53998,
      53999,
      54002,
      54003,
      54005,
      54006,
      54007,
      54009,
      54010,
      48281,
      48282,
      48288,
      48289,
      48292,
      48295,
      48296,
      48304,
      48305,
      48307,
      48308,
      48309,
      48316,
      48317,
      48320,
      48324,
      48333,
      48335,
      48336,
      48337,
      48341,
      48344,
      48348,
      48372,
      48373,
      48374,
      48376,
      48380,
      48388,
      48389,
      48391,
      48393,
      48400,
      48404,
      48420,
      48428,
      48448,
      48456,
      48457,
      48460,
      48464,
      48472,
      48473,
      48484,
      48488,
      48512,
      48513,
      48516,
      48519,
      48520,
      48521,
      48522,
      48528,
      48529,
      48531,
      48533,
      48537,
      48538,
      48540,
      48548,
      48560,
      48568,
      48596,
      48597,
      48600,
      48604,
      48617,
      48624,
      48628,
      48632,
      48640,
      48643,
      48645,
      48652,
      48653,
      48656,
      48660,
      48668,
      48669,
      48671,
      48708,
      48709,
      48712,
      48716,
      48718,
      48724,
      48725,
      48727,
      48729,
      48730,
      48731,
      48736,
      48737,
      48740,
      54011,
      54012,
      54013,
      54014,
      54015,
      54018,
      54020,
      54022,
      54023,
      54024,
      54025,
      54026,
      54027,
      54031,
      54033,
      54034,
      54035,
      54037,
      54039,
      54040,
      54041,
      54042,
      54043,
      54046,
      54050,
      54051,
      null,
      null,
      null,
      null,
      null,
      null,
      54052,
      54054,
      54055,
      54058,
      54059,
      54061,
      54062,
      54063,
      54065,
      54066,
      54067,
      54068,
      54069,
      54070,
      54071,
      54074,
      54078,
      54079,
      54080,
      54081,
      54082,
      54083,
      54086,
      54087,
      54088,
      54089,
      null,
      null,
      null,
      null,
      null,
      null,
      54090,
      54091,
      54092,
      54093,
      54094,
      54095,
      54096,
      54097,
      54098,
      54099,
      54100,
      54101,
      54102,
      54103,
      54104,
      54105,
      54106,
      54107,
      54108,
      54109,
      54110,
      54111,
      54112,
      54113,
      54114,
      54115,
      54116,
      54117,
      54118,
      54119,
      54120,
      54121,
      48744,
      48746,
      48752,
      48753,
      48755,
      48756,
      48757,
      48763,
      48764,
      48765,
      48768,
      48772,
      48780,
      48781,
      48783,
      48784,
      48785,
      48792,
      48793,
      48808,
      48848,
      48849,
      48852,
      48855,
      48856,
      48864,
      48867,
      48868,
      48869,
      48876,
      48897,
      48904,
      48905,
      48920,
      48921,
      48923,
      48924,
      48925,
      48960,
      48961,
      48964,
      48968,
      48976,
      48977,
      48981,
      49044,
      49072,
      49093,
      49100,
      49101,
      49104,
      49108,
      49116,
      49119,
      49121,
      49212,
      49233,
      49240,
      49244,
      49248,
      49256,
      49257,
      49296,
      49297,
      49300,
      49304,
      49312,
      49313,
      49315,
      49317,
      49324,
      49325,
      49327,
      49328,
      49331,
      49332,
      49333,
      49334,
      49340,
      49341,
      49343,
      49344,
      49345,
      49349,
      49352,
      49353,
      49356,
      49360,
      49368,
      49369,
      49371,
      49372,
      49373,
      49380,
      54122,
      54123,
      54124,
      54125,
      54126,
      54127,
      54128,
      54129,
      54130,
      54131,
      54132,
      54133,
      54134,
      54135,
      54136,
      54137,
      54138,
      54139,
      54142,
      54143,
      54145,
      54146,
      54147,
      54149,
      54150,
      54151,
      null,
      null,
      null,
      null,
      null,
      null,
      54152,
      54153,
      54154,
      54155,
      54158,
      54162,
      54163,
      54164,
      54165,
      54166,
      54167,
      54170,
      54171,
      54173,
      54174,
      54175,
      54177,
      54178,
      54179,
      54180,
      54181,
      54182,
      54183,
      54186,
      54188,
      54190,
      null,
      null,
      null,
      null,
      null,
      null,
      54191,
      54192,
      54193,
      54194,
      54195,
      54197,
      54198,
      54199,
      54201,
      54202,
      54203,
      54205,
      54206,
      54207,
      54208,
      54209,
      54210,
      54211,
      54214,
      54215,
      54218,
      54219,
      54220,
      54221,
      54222,
      54223,
      54225,
      54226,
      54227,
      54228,
      54229,
      54230,
      49381,
      49384,
      49388,
      49396,
      49397,
      49399,
      49401,
      49408,
      49412,
      49416,
      49424,
      49429,
      49436,
      49437,
      49438,
      49439,
      49440,
      49443,
      49444,
      49446,
      49447,
      49452,
      49453,
      49455,
      49456,
      49457,
      49462,
      49464,
      49465,
      49468,
      49472,
      49480,
      49481,
      49483,
      49484,
      49485,
      49492,
      49493,
      49496,
      49500,
      49508,
      49509,
      49511,
      49512,
      49513,
      49520,
      49524,
      49528,
      49541,
      49548,
      49549,
      49550,
      49552,
      49556,
      49558,
      49564,
      49565,
      49567,
      49569,
      49573,
      49576,
      49577,
      49580,
      49584,
      49597,
      49604,
      49608,
      49612,
      49620,
      49623,
      49624,
      49632,
      49636,
      49640,
      49648,
      49649,
      49651,
      49660,
      49661,
      49664,
      49668,
      49676,
      49677,
      49679,
      49681,
      49688,
      49689,
      49692,
      49695,
      49696,
      49704,
      49705,
      49707,
      49709,
      54231,
      54233,
      54234,
      54235,
      54236,
      54237,
      54238,
      54239,
      54240,
      54242,
      54244,
      54245,
      54246,
      54247,
      54248,
      54249,
      54250,
      54251,
      54254,
      54255,
      54257,
      54258,
      54259,
      54261,
      54262,
      54263,
      null,
      null,
      null,
      null,
      null,
      null,
      54264,
      54265,
      54266,
      54267,
      54270,
      54272,
      54274,
      54275,
      54276,
      54277,
      54278,
      54279,
      54281,
      54282,
      54283,
      54284,
      54285,
      54286,
      54287,
      54288,
      54289,
      54290,
      54291,
      54292,
      54293,
      54294,
      null,
      null,
      null,
      null,
      null,
      null,
      54295,
      54296,
      54297,
      54298,
      54299,
      54300,
      54302,
      54303,
      54304,
      54305,
      54306,
      54307,
      54308,
      54309,
      54310,
      54311,
      54312,
      54313,
      54314,
      54315,
      54316,
      54317,
      54318,
      54319,
      54320,
      54321,
      54322,
      54323,
      54324,
      54325,
      54326,
      54327,
      49711,
      49713,
      49714,
      49716,
      49736,
      49744,
      49745,
      49748,
      49752,
      49760,
      49765,
      49772,
      49773,
      49776,
      49780,
      49788,
      49789,
      49791,
      49793,
      49800,
      49801,
      49808,
      49816,
      49819,
      49821,
      49828,
      49829,
      49832,
      49836,
      49837,
      49844,
      49845,
      49847,
      49849,
      49884,
      49885,
      49888,
      49891,
      49892,
      49899,
      49900,
      49901,
      49903,
      49905,
      49910,
      49912,
      49913,
      49915,
      49916,
      49920,
      49928,
      49929,
      49932,
      49933,
      49939,
      49940,
      49941,
      49944,
      49948,
      49956,
      49957,
      49960,
      49961,
      49989,
      50024,
      50025,
      50028,
      50032,
      50034,
      50040,
      50041,
      50044,
      50045,
      50052,
      50056,
      50060,
      50112,
      50136,
      50137,
      50140,
      50143,
      50144,
      50146,
      50152,
      50153,
      50157,
      50164,
      50165,
      50168,
      50184,
      50192,
      50212,
      50220,
      50224,
      54328,
      54329,
      54330,
      54331,
      54332,
      54333,
      54334,
      54335,
      54337,
      54338,
      54339,
      54341,
      54342,
      54343,
      54344,
      54345,
      54346,
      54347,
      54348,
      54349,
      54350,
      54351,
      54352,
      54353,
      54354,
      54355,
      null,
      null,
      null,
      null,
      null,
      null,
      54356,
      54357,
      54358,
      54359,
      54360,
      54361,
      54362,
      54363,
      54365,
      54366,
      54367,
      54369,
      54370,
      54371,
      54373,
      54374,
      54375,
      54376,
      54377,
      54378,
      54379,
      54380,
      54382,
      54384,
      54385,
      54386,
      null,
      null,
      null,
      null,
      null,
      null,
      54387,
      54388,
      54389,
      54390,
      54391,
      54394,
      54395,
      54397,
      54398,
      54401,
      54403,
      54404,
      54405,
      54406,
      54407,
      54410,
      54412,
      54414,
      54415,
      54416,
      54417,
      54418,
      54419,
      54421,
      54422,
      54423,
      54424,
      54425,
      54426,
      54427,
      54428,
      54429,
      50228,
      50236,
      50237,
      50248,
      50276,
      50277,
      50280,
      50284,
      50292,
      50293,
      50297,
      50304,
      50324,
      50332,
      50360,
      50364,
      50409,
      50416,
      50417,
      50420,
      50424,
      50426,
      50431,
      50432,
      50433,
      50444,
      50448,
      50452,
      50460,
      50472,
      50473,
      50476,
      50480,
      50488,
      50489,
      50491,
      50493,
      50500,
      50501,
      50504,
      50505,
      50506,
      50508,
      50509,
      50510,
      50515,
      50516,
      50517,
      50519,
      50520,
      50521,
      50525,
      50526,
      50528,
      50529,
      50532,
      50536,
      50544,
      50545,
      50547,
      50548,
      50549,
      50556,
      50557,
      50560,
      50564,
      50567,
      50572,
      50573,
      50575,
      50577,
      50581,
      50583,
      50584,
      50588,
      50592,
      50601,
      50612,
      50613,
      50616,
      50617,
      50619,
      50620,
      50621,
      50622,
      50628,
      50629,
      50630,
      50631,
      50632,
      50633,
      50634,
      50636,
      50638,
      54430,
      54431,
      54432,
      54433,
      54434,
      54435,
      54436,
      54437,
      54438,
      54439,
      54440,
      54442,
      54443,
      54444,
      54445,
      54446,
      54447,
      54448,
      54449,
      54450,
      54451,
      54452,
      54453,
      54454,
      54455,
      54456,
      null,
      null,
      null,
      null,
      null,
      null,
      54457,
      54458,
      54459,
      54460,
      54461,
      54462,
      54463,
      54464,
      54465,
      54466,
      54467,
      54468,
      54469,
      54470,
      54471,
      54472,
      54473,
      54474,
      54475,
      54477,
      54478,
      54479,
      54481,
      54482,
      54483,
      54485,
      null,
      null,
      null,
      null,
      null,
      null,
      54486,
      54487,
      54488,
      54489,
      54490,
      54491,
      54493,
      54494,
      54496,
      54497,
      54498,
      54499,
      54500,
      54501,
      54502,
      54503,
      54505,
      54506,
      54507,
      54509,
      54510,
      54511,
      54513,
      54514,
      54515,
      54516,
      54517,
      54518,
      54519,
      54521,
      54522,
      54524,
      50640,
      50641,
      50644,
      50648,
      50656,
      50657,
      50659,
      50661,
      50668,
      50669,
      50670,
      50672,
      50676,
      50678,
      50679,
      50684,
      50685,
      50686,
      50687,
      50688,
      50689,
      50693,
      50694,
      50695,
      50696,
      50700,
      50704,
      50712,
      50713,
      50715,
      50716,
      50724,
      50725,
      50728,
      50732,
      50733,
      50734,
      50736,
      50739,
      50740,
      50741,
      50743,
      50745,
      50747,
      50752,
      50753,
      50756,
      50760,
      50768,
      50769,
      50771,
      50772,
      50773,
      50780,
      50781,
      50784,
      50796,
      50799,
      50801,
      50808,
      50809,
      50812,
      50816,
      50824,
      50825,
      50827,
      50829,
      50836,
      50837,
      50840,
      50844,
      50852,
      50853,
      50855,
      50857,
      50864,
      50865,
      50868,
      50872,
      50873,
      50874,
      50880,
      50881,
      50883,
      50885,
      50892,
      50893,
      50896,
      50900,
      50908,
      50909,
      50912,
      50913,
      50920,
      54526,
      54527,
      54528,
      54529,
      54530,
      54531,
      54533,
      54534,
      54535,
      54537,
      54538,
      54539,
      54541,
      54542,
      54543,
      54544,
      54545,
      54546,
      54547,
      54550,
      54552,
      54553,
      54554,
      54555,
      54556,
      54557,
      null,
      null,
      null,
      null,
      null,
      null,
      54558,
      54559,
      54560,
      54561,
      54562,
      54563,
      54564,
      54565,
      54566,
      54567,
      54568,
      54569,
      54570,
      54571,
      54572,
      54573,
      54574,
      54575,
      54576,
      54577,
      54578,
      54579,
      54580,
      54581,
      54582,
      54583,
      null,
      null,
      null,
      null,
      null,
      null,
      54584,
      54585,
      54586,
      54587,
      54590,
      54591,
      54593,
      54594,
      54595,
      54597,
      54598,
      54599,
      54600,
      54601,
      54602,
      54603,
      54606,
      54608,
      54610,
      54611,
      54612,
      54613,
      54614,
      54615,
      54618,
      54619,
      54621,
      54622,
      54623,
      54625,
      54626,
      54627,
      50921,
      50924,
      50928,
      50936,
      50937,
      50941,
      50948,
      50949,
      50952,
      50956,
      50964,
      50965,
      50967,
      50969,
      50976,
      50977,
      50980,
      50984,
      50992,
      50993,
      50995,
      50997,
      50999,
      51004,
      51005,
      51008,
      51012,
      51018,
      51020,
      51021,
      51023,
      51025,
      51026,
      51027,
      51028,
      51029,
      51030,
      51031,
      51032,
      51036,
      51040,
      51048,
      51051,
      51060,
      51061,
      51064,
      51068,
      51069,
      51070,
      51075,
      51076,
      51077,
      51079,
      51080,
      51081,
      51082,
      51086,
      51088,
      51089,
      51092,
      51094,
      51095,
      51096,
      51098,
      51104,
      51105,
      51107,
      51108,
      51109,
      51110,
      51116,
      51117,
      51120,
      51124,
      51132,
      51133,
      51135,
      51136,
      51137,
      51144,
      51145,
      51148,
      51150,
      51152,
      51160,
      51165,
      51172,
      51176,
      51180,
      51200,
      51201,
      51204,
      51208,
      51210,
      54628,
      54630,
      54631,
      54634,
      54636,
      54638,
      54639,
      54640,
      54641,
      54642,
      54643,
      54646,
      54647,
      54649,
      54650,
      54651,
      54653,
      54654,
      54655,
      54656,
      54657,
      54658,
      54659,
      54662,
      54666,
      54667,
      null,
      null,
      null,
      null,
      null,
      null,
      54668,
      54669,
      54670,
      54671,
      54673,
      54674,
      54675,
      54676,
      54677,
      54678,
      54679,
      54680,
      54681,
      54682,
      54683,
      54684,
      54685,
      54686,
      54687,
      54688,
      54689,
      54690,
      54691,
      54692,
      54694,
      54695,
      null,
      null,
      null,
      null,
      null,
      null,
      54696,
      54697,
      54698,
      54699,
      54700,
      54701,
      54702,
      54703,
      54704,
      54705,
      54706,
      54707,
      54708,
      54709,
      54710,
      54711,
      54712,
      54713,
      54714,
      54715,
      54716,
      54717,
      54718,
      54719,
      54720,
      54721,
      54722,
      54723,
      54724,
      54725,
      54726,
      54727,
      51216,
      51217,
      51219,
      51221,
      51222,
      51228,
      51229,
      51232,
      51236,
      51244,
      51245,
      51247,
      51249,
      51256,
      51260,
      51264,
      51272,
      51273,
      51276,
      51277,
      51284,
      51312,
      51313,
      51316,
      51320,
      51322,
      51328,
      51329,
      51331,
      51333,
      51334,
      51335,
      51339,
      51340,
      51341,
      51348,
      51357,
      51359,
      51361,
      51368,
      51388,
      51389,
      51396,
      51400,
      51404,
      51412,
      51413,
      51415,
      51417,
      51424,
      51425,
      51428,
      51445,
      51452,
      51453,
      51456,
      51460,
      51461,
      51462,
      51468,
      51469,
      51471,
      51473,
      51480,
      51500,
      51508,
      51536,
      51537,
      51540,
      51544,
      51552,
      51553,
      51555,
      51564,
      51568,
      51572,
      51580,
      51592,
      51593,
      51596,
      51600,
      51608,
      51609,
      51611,
      51613,
      51648,
      51649,
      51652,
      51655,
      51656,
      51658,
      51664,
      51665,
      51667,
      54730,
      54731,
      54733,
      54734,
      54735,
      54737,
      54739,
      54740,
      54741,
      54742,
      54743,
      54746,
      54748,
      54750,
      54751,
      54752,
      54753,
      54754,
      54755,
      54758,
      54759,
      54761,
      54762,
      54763,
      54765,
      54766,
      null,
      null,
      null,
      null,
      null,
      null,
      54767,
      54768,
      54769,
      54770,
      54771,
      54774,
      54776,
      54778,
      54779,
      54780,
      54781,
      54782,
      54783,
      54786,
      54787,
      54789,
      54790,
      54791,
      54793,
      54794,
      54795,
      54796,
      54797,
      54798,
      54799,
      54802,
      null,
      null,
      null,
      null,
      null,
      null,
      54806,
      54807,
      54808,
      54809,
      54810,
      54811,
      54813,
      54814,
      54815,
      54817,
      54818,
      54819,
      54821,
      54822,
      54823,
      54824,
      54825,
      54826,
      54827,
      54828,
      54830,
      54831,
      54832,
      54833,
      54834,
      54835,
      54836,
      54837,
      54838,
      54839,
      54842,
      54843,
      51669,
      51670,
      51673,
      51674,
      51676,
      51677,
      51680,
      51682,
      51684,
      51687,
      51692,
      51693,
      51695,
      51696,
      51697,
      51704,
      51705,
      51708,
      51712,
      51720,
      51721,
      51723,
      51724,
      51725,
      51732,
      51736,
      51753,
      51788,
      51789,
      51792,
      51796,
      51804,
      51805,
      51807,
      51808,
      51809,
      51816,
      51837,
      51844,
      51864,
      51900,
      51901,
      51904,
      51908,
      51916,
      51917,
      51919,
      51921,
      51923,
      51928,
      51929,
      51936,
      51948,
      51956,
      51976,
      51984,
      51988,
      51992,
      52000,
      52001,
      52033,
      52040,
      52041,
      52044,
      52048,
      52056,
      52057,
      52061,
      52068,
      52088,
      52089,
      52124,
      52152,
      52180,
      52196,
      52199,
      52201,
      52236,
      52237,
      52240,
      52244,
      52252,
      52253,
      52257,
      52258,
      52263,
      52264,
      52265,
      52268,
      52270,
      52272,
      52280,
      52281,
      52283,
      54845,
      54846,
      54847,
      54849,
      54850,
      54851,
      54852,
      54854,
      54855,
      54858,
      54860,
      54862,
      54863,
      54864,
      54866,
      54867,
      54870,
      54871,
      54873,
      54874,
      54875,
      54877,
      54878,
      54879,
      54880,
      54881,
      null,
      null,
      null,
      null,
      null,
      null,
      54882,
      54883,
      54884,
      54885,
      54886,
      54888,
      54890,
      54891,
      54892,
      54893,
      54894,
      54895,
      54898,
      54899,
      54901,
      54902,
      54903,
      54904,
      54905,
      54906,
      54907,
      54908,
      54909,
      54910,
      54911,
      54912,
      null,
      null,
      null,
      null,
      null,
      null,
      54913,
      54914,
      54916,
      54918,
      54919,
      54920,
      54921,
      54922,
      54923,
      54926,
      54927,
      54929,
      54930,
      54931,
      54933,
      54934,
      54935,
      54936,
      54937,
      54938,
      54939,
      54940,
      54942,
      54944,
      54946,
      54947,
      54948,
      54949,
      54950,
      54951,
      54953,
      54954,
      52284,
      52285,
      52286,
      52292,
      52293,
      52296,
      52300,
      52308,
      52309,
      52311,
      52312,
      52313,
      52320,
      52324,
      52326,
      52328,
      52336,
      52341,
      52376,
      52377,
      52380,
      52384,
      52392,
      52393,
      52395,
      52396,
      52397,
      52404,
      52405,
      52408,
      52412,
      52420,
      52421,
      52423,
      52425,
      52432,
      52436,
      52452,
      52460,
      52464,
      52481,
      52488,
      52489,
      52492,
      52496,
      52504,
      52505,
      52507,
      52509,
      52516,
      52520,
      52524,
      52537,
      52572,
      52576,
      52580,
      52588,
      52589,
      52591,
      52593,
      52600,
      52616,
      52628,
      52629,
      52632,
      52636,
      52644,
      52645,
      52647,
      52649,
      52656,
      52676,
      52684,
      52688,
      52712,
      52716,
      52720,
      52728,
      52729,
      52731,
      52733,
      52740,
      52744,
      52748,
      52756,
      52761,
      52768,
      52769,
      52772,
      52776,
      52784,
      52785,
      52787,
      52789,
      54955,
      54957,
      54958,
      54959,
      54961,
      54962,
      54963,
      54964,
      54965,
      54966,
      54967,
      54968,
      54970,
      54972,
      54973,
      54974,
      54975,
      54976,
      54977,
      54978,
      54979,
      54982,
      54983,
      54985,
      54986,
      54987,
      null,
      null,
      null,
      null,
      null,
      null,
      54989,
      54990,
      54991,
      54992,
      54994,
      54995,
      54997,
      54998,
      55000,
      55002,
      55003,
      55004,
      55005,
      55006,
      55007,
      55009,
      55010,
      55011,
      55013,
      55014,
      55015,
      55017,
      55018,
      55019,
      55020,
      55021,
      null,
      null,
      null,
      null,
      null,
      null,
      55022,
      55023,
      55025,
      55026,
      55027,
      55028,
      55030,
      55031,
      55032,
      55033,
      55034,
      55035,
      55038,
      55039,
      55041,
      55042,
      55043,
      55045,
      55046,
      55047,
      55048,
      55049,
      55050,
      55051,
      55052,
      55053,
      55054,
      55055,
      55056,
      55058,
      55059,
      55060,
      52824,
      52825,
      52828,
      52831,
      52832,
      52833,
      52840,
      52841,
      52843,
      52845,
      52852,
      52853,
      52856,
      52860,
      52868,
      52869,
      52871,
      52873,
      52880,
      52881,
      52884,
      52888,
      52896,
      52897,
      52899,
      52900,
      52901,
      52908,
      52909,
      52929,
      52964,
      52965,
      52968,
      52971,
      52972,
      52980,
      52981,
      52983,
      52984,
      52985,
      52992,
      52993,
      52996,
      53000,
      53008,
      53009,
      53011,
      53013,
      53020,
      53024,
      53028,
      53036,
      53037,
      53039,
      53040,
      53041,
      53048,
      53076,
      53077,
      53080,
      53084,
      53092,
      53093,
      53095,
      53097,
      53104,
      53105,
      53108,
      53112,
      53120,
      53125,
      53132,
      53153,
      53160,
      53168,
      53188,
      53216,
      53217,
      53220,
      53224,
      53232,
      53233,
      53235,
      53237,
      53244,
      53248,
      53252,
      53265,
      53272,
      53293,
      53300,
      53301,
      53304,
      53308,
      55061,
      55062,
      55063,
      55066,
      55067,
      55069,
      55070,
      55071,
      55073,
      55074,
      55075,
      55076,
      55077,
      55078,
      55079,
      55082,
      55084,
      55086,
      55087,
      55088,
      55089,
      55090,
      55091,
      55094,
      55095,
      55097,
      null,
      null,
      null,
      null,
      null,
      null,
      55098,
      55099,
      55101,
      55102,
      55103,
      55104,
      55105,
      55106,
      55107,
      55109,
      55110,
      55112,
      55114,
      55115,
      55116,
      55117,
      55118,
      55119,
      55122,
      55123,
      55125,
      55130,
      55131,
      55132,
      55133,
      55134,
      null,
      null,
      null,
      null,
      null,
      null,
      55135,
      55138,
      55140,
      55142,
      55143,
      55144,
      55146,
      55147,
      55149,
      55150,
      55151,
      55153,
      55154,
      55155,
      55157,
      55158,
      55159,
      55160,
      55161,
      55162,
      55163,
      55166,
      55167,
      55168,
      55170,
      55171,
      55172,
      55173,
      55174,
      55175,
      55178,
      55179,
      53316,
      53317,
      53319,
      53321,
      53328,
      53332,
      53336,
      53344,
      53356,
      53357,
      53360,
      53364,
      53372,
      53373,
      53377,
      53412,
      53413,
      53416,
      53420,
      53428,
      53429,
      53431,
      53433,
      53440,
      53441,
      53444,
      53448,
      53449,
      53456,
      53457,
      53459,
      53460,
      53461,
      53468,
      53469,
      53472,
      53476,
      53484,
      53485,
      53487,
      53488,
      53489,
      53496,
      53517,
      53552,
      53553,
      53556,
      53560,
      53562,
      53568,
      53569,
      53571,
      53572,
      53573,
      53580,
      53581,
      53584,
      53588,
      53596,
      53597,
      53599,
      53601,
      53608,
      53612,
      53628,
      53636,
      53640,
      53664,
      53665,
      53668,
      53672,
      53680,
      53681,
      53683,
      53685,
      53690,
      53692,
      53696,
      53720,
      53748,
      53752,
      53767,
      53769,
      53776,
      53804,
      53805,
      53808,
      53812,
      53820,
      53821,
      53823,
      53825,
      53832,
      53852,
      55181,
      55182,
      55183,
      55185,
      55186,
      55187,
      55188,
      55189,
      55190,
      55191,
      55194,
      55196,
      55198,
      55199,
      55200,
      55201,
      55202,
      55203,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      53860,
      53888,
      53889,
      53892,
      53896,
      53904,
      53905,
      53909,
      53916,
      53920,
      53924,
      53932,
      53937,
      53944,
      53945,
      53948,
      53951,
      53952,
      53954,
      53960,
      53961,
      53963,
      53972,
      53976,
      53980,
      53988,
      53989,
      54000,
      54001,
      54004,
      54008,
      54016,
      54017,
      54019,
      54021,
      54028,
      54029,
      54030,
      54032,
      54036,
      54038,
      54044,
      54045,
      54047,
      54048,
      54049,
      54053,
      54056,
      54057,
      54060,
      54064,
      54072,
      54073,
      54075,
      54076,
      54077,
      54084,
      54085,
      54140,
      54141,
      54144,
      54148,
      54156,
      54157,
      54159,
      54160,
      54161,
      54168,
      54169,
      54172,
      54176,
      54184,
      54185,
      54187,
      54189,
      54196,
      54200,
      54204,
      54212,
      54213,
      54216,
      54217,
      54224,
      54232,
      54241,
      54243,
      54252,
      54253,
      54256,
      54260,
      54268,
      54269,
      54271,
      54273,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      54280,
      54301,
      54336,
      54340,
      54364,
      54368,
      54372,
      54381,
      54383,
      54392,
      54393,
      54396,
      54399,
      54400,
      54402,
      54408,
      54409,
      54411,
      54413,
      54420,
      54441,
      54476,
      54480,
      54484,
      54492,
      54495,
      54504,
      54508,
      54512,
      54520,
      54523,
      54525,
      54532,
      54536,
      54540,
      54548,
      54549,
      54551,
      54588,
      54589,
      54592,
      54596,
      54604,
      54605,
      54607,
      54609,
      54616,
      54617,
      54620,
      54624,
      54629,
      54632,
      54633,
      54635,
      54637,
      54644,
      54645,
      54648,
      54652,
      54660,
      54661,
      54663,
      54664,
      54665,
      54672,
      54693,
      54728,
      54729,
      54732,
      54736,
      54738,
      54744,
      54745,
      54747,
      54749,
      54756,
      54757,
      54760,
      54764,
      54772,
      54773,
      54775,
      54777,
      54784,
      54785,
      54788,
      54792,
      54800,
      54801,
      54803,
      54804,
      54805,
      54812,
      54816,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      54820,
      54829,
      54840,
      54841,
      54844,
      54848,
      54853,
      54856,
      54857,
      54859,
      54861,
      54865,
      54868,
      54869,
      54872,
      54876,
      54887,
      54889,
      54896,
      54897,
      54900,
      54915,
      54917,
      54924,
      54925,
      54928,
      54932,
      54941,
      54943,
      54945,
      54952,
      54956,
      54960,
      54969,
      54971,
      54980,
      54981,
      54984,
      54988,
      54993,
      54996,
      54999,
      55001,
      55008,
      55012,
      55016,
      55024,
      55029,
      55036,
      55037,
      55040,
      55044,
      55057,
      55064,
      55065,
      55068,
      55072,
      55080,
      55081,
      55083,
      55085,
      55092,
      55093,
      55096,
      55100,
      55108,
      55111,
      55113,
      55120,
      55121,
      55124,
      55126,
      55127,
      55128,
      55129,
      55136,
      55137,
      55139,
      55141,
      55145,
      55148,
      55152,
      55156,
      55164,
      55165,
      55169,
      55176,
      55177,
      55180,
      55184,
      55192,
      55193,
      55195,
      55197,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      20285,
      20339,
      20551,
      20729,
      21152,
      21487,
      21621,
      21733,
      22025,
      23233,
      23478,
      26247,
      26550,
      26551,
      26607,
      27468,
      29634,
      30146,
      31292,
      33499,
      33540,
      34903,
      34952,
      35382,
      36040,
      36303,
      36603,
      36838,
      39381,
      21051,
      21364,
      21508,
      24682,
      24932,
      27580,
      29647,
      33050,
      35258,
      35282,
      38307,
      20355,
      21002,
      22718,
      22904,
      23014,
      24178,
      24185,
      25031,
      25536,
      26438,
      26604,
      26751,
      28567,
      30286,
      30475,
      30965,
      31240,
      31487,
      31777,
      32925,
      33390,
      33393,
      35563,
      38291,
      20075,
      21917,
      26359,
      28212,
      30883,
      31469,
      33883,
      35088,
      34638,
      38824,
      21208,
      22350,
      22570,
      23884,
      24863,
      25022,
      25121,
      25954,
      26577,
      27204,
      28187,
      29976,
      30131,
      30435,
      30640,
      32058,
      37039,
      37969,
      37970,
      40853,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      21283,
      23724,
      30002,
      32987,
      37440,
      38296,
      21083,
      22536,
      23004,
      23713,
      23831,
      24247,
      24378,
      24394,
      24951,
      27743,
      30074,
      30086,
      31968,
      32115,
      32177,
      32652,
      33108,
      33313,
      34193,
      35137,
      35611,
      37628,
      38477,
      40007,
      20171,
      20215,
      20491,
      20977,
      22607,
      24887,
      24894,
      24936,
      25913,
      27114,
      28433,
      30117,
      30342,
      30422,
      31623,
      33445,
      33995,
      63744,
      37799,
      38283,
      21888,
      23458,
      22353,
      63745,
      31923,
      32697,
      37301,
      20520,
      21435,
      23621,
      24040,
      25298,
      25454,
      25818,
      25831,
      28192,
      28844,
      31067,
      36317,
      36382,
      63746,
      36989,
      37445,
      37624,
      20094,
      20214,
      20581,
      24062,
      24314,
      24838,
      26967,
      33137,
      34388,
      36423,
      37749,
      39467,
      20062,
      20625,
      26480,
      26688,
      20745,
      21133,
      21138,
      27298,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      30652,
      37392,
      40660,
      21163,
      24623,
      36850,
      20552,
      25001,
      25581,
      25802,
      26684,
      27268,
      28608,
      33160,
      35233,
      38548,
      22533,
      29309,
      29356,
      29956,
      32121,
      32365,
      32937,
      35211,
      35700,
      36963,
      40273,
      25225,
      27770,
      28500,
      32080,
      32570,
      35363,
      20860,
      24906,
      31645,
      35609,
      37463,
      37772,
      20140,
      20435,
      20510,
      20670,
      20742,
      21185,
      21197,
      21375,
      22384,
      22659,
      24218,
      24465,
      24950,
      25004,
      25806,
      25964,
      26223,
      26299,
      26356,
      26775,
      28039,
      28805,
      28913,
      29855,
      29861,
      29898,
      30169,
      30828,
      30956,
      31455,
      31478,
      32069,
      32147,
      32789,
      32831,
      33051,
      33686,
      35686,
      36629,
      36885,
      37857,
      38915,
      38968,
      39514,
      39912,
      20418,
      21843,
      22586,
      22865,
      23395,
      23622,
      24760,
      25106,
      26690,
      26800,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      26856,
      28330,
      30028,
      30328,
      30926,
      31293,
      31995,
      32363,
      32380,
      35336,
      35489,
      35903,
      38542,
      40388,
      21476,
      21481,
      21578,
      21617,
      22266,
      22993,
      23396,
      23611,
      24235,
      25335,
      25911,
      25925,
      25970,
      26272,
      26543,
      27073,
      27837,
      30204,
      30352,
      30590,
      31295,
      32660,
      32771,
      32929,
      33167,
      33510,
      33533,
      33776,
      34241,
      34865,
      34996,
      35493,
      63747,
      36764,
      37678,
      38599,
      39015,
      39640,
      40723,
      21741,
      26011,
      26354,
      26767,
      31296,
      35895,
      40288,
      22256,
      22372,
      23825,
      26118,
      26801,
      26829,
      28414,
      29736,
      34974,
      39908,
      27752,
      63748,
      39592,
      20379,
      20844,
      20849,
      21151,
      23380,
      24037,
      24656,
      24685,
      25329,
      25511,
      25915,
      29657,
      31354,
      34467,
      36002,
      38799,
      20018,
      23521,
      25096,
      26524,
      29916,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      31185,
      33747,
      35463,
      35506,
      36328,
      36942,
      37707,
      38982,
      24275,
      27112,
      34303,
      37101,
      63749,
      20896,
      23448,
      23532,
      24931,
      26874,
      27454,
      28748,
      29743,
      29912,
      31649,
      32592,
      33733,
      35264,
      36011,
      38364,
      39208,
      21038,
      24669,
      25324,
      36866,
      20362,
      20809,
      21281,
      22745,
      24291,
      26336,
      27960,
      28826,
      29378,
      29654,
      31568,
      33009,
      37979,
      21350,
      25499,
      32619,
      20054,
      20608,
      22602,
      22750,
      24618,
      24871,
      25296,
      27088,
      39745,
      23439,
      32024,
      32945,
      36703,
      20132,
      20689,
      21676,
      21932,
      23308,
      23968,
      24039,
      25898,
      25934,
      26657,
      27211,
      29409,
      30350,
      30703,
      32094,
      32761,
      33184,
      34126,
      34527,
      36611,
      36686,
      37066,
      39171,
      39509,
      39851,
      19992,
      20037,
      20061,
      20167,
      20465,
      20855,
      21246,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      21312,
      21475,
      21477,
      21646,
      22036,
      22389,
      22434,
      23495,
      23943,
      24272,
      25084,
      25304,
      25937,
      26552,
      26601,
      27083,
      27472,
      27590,
      27628,
      27714,
      28317,
      28792,
      29399,
      29590,
      29699,
      30655,
      30697,
      31350,
      32127,
      32777,
      33276,
      33285,
      33290,
      33503,
      34914,
      35635,
      36092,
      36544,
      36881,
      37041,
      37476,
      37558,
      39378,
      39493,
      40169,
      40407,
      40860,
      22283,
      23616,
      33738,
      38816,
      38827,
      40628,
      21531,
      31384,
      32676,
      35033,
      36557,
      37089,
      22528,
      23624,
      25496,
      31391,
      23470,
      24339,
      31353,
      31406,
      33422,
      36524,
      20518,
      21048,
      21240,
      21367,
      22280,
      25331,
      25458,
      27402,
      28099,
      30519,
      21413,
      29527,
      34152,
      36470,
      38357,
      26426,
      27331,
      28528,
      35437,
      36556,
      39243,
      63750,
      26231,
      27512,
      36020,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      39740,
      63751,
      21483,
      22317,
      22862,
      25542,
      27131,
      29674,
      30789,
      31418,
      31429,
      31998,
      33909,
      35215,
      36211,
      36917,
      38312,
      21243,
      22343,
      30023,
      31584,
      33740,
      37406,
      63752,
      27224,
      20811,
      21067,
      21127,
      25119,
      26840,
      26997,
      38553,
      20677,
      21156,
      21220,
      25027,
      26020,
      26681,
      27135,
      29822,
      31563,
      33465,
      33771,
      35250,
      35641,
      36817,
      39241,
      63753,
      20170,
      22935,
      25810,
      26129,
      27278,
      29748,
      31105,
      31165,
      33449,
      34942,
      34943,
      35167,
      63754,
      37670,
      20235,
      21450,
      24613,
      25201,
      27762,
      32026,
      32102,
      20120,
      20834,
      30684,
      32943,
      20225,
      20238,
      20854,
      20864,
      21980,
      22120,
      22331,
      22522,
      22524,
      22804,
      22855,
      22931,
      23492,
      23696,
      23822,
      24049,
      24190,
      24524,
      25216,
      26071,
      26083,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      26398,
      26399,
      26462,
      26827,
      26820,
      27231,
      27450,
      27683,
      27773,
      27778,
      28103,
      29592,
      29734,
      29738,
      29826,
      29859,
      30072,
      30079,
      30849,
      30959,
      31041,
      31047,
      31048,
      31098,
      31637,
      32000,
      32186,
      32648,
      32774,
      32813,
      32908,
      35352,
      35663,
      35912,
      36215,
      37665,
      37668,
      39138,
      39249,
      39438,
      39439,
      39525,
      40594,
      32202,
      20342,
      21513,
      25326,
      26708,
      37329,
      21931,
      20794,
      63755,
      63756,
      23068,
      25062,
      63757,
      25295,
      25343,
      63758,
      63759,
      63760,
      63761,
      63762,
      63763,
      37027,
      63764,
      63765,
      63766,
      63767,
      63768,
      35582,
      63769,
      63770,
      63771,
      63772,
      26262,
      63773,
      29014,
      63774,
      63775,
      38627,
      63776,
      25423,
      25466,
      21335,
      63777,
      26511,
      26976,
      28275,
      63778,
      30007,
      63779,
      63780,
      63781,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      32013,
      63782,
      63783,
      34930,
      22218,
      23064,
      63784,
      63785,
      63786,
      63787,
      63788,
      20035,
      63789,
      20839,
      22856,
      26608,
      32784,
      63790,
      22899,
      24180,
      25754,
      31178,
      24565,
      24684,
      25288,
      25467,
      23527,
      23511,
      21162,
      63791,
      22900,
      24361,
      24594,
      63792,
      63793,
      63794,
      29785,
      63795,
      63796,
      63797,
      63798,
      63799,
      63800,
      39377,
      63801,
      63802,
      63803,
      63804,
      63805,
      63806,
      63807,
      63808,
      63809,
      63810,
      63811,
      28611,
      63812,
      63813,
      33215,
      36786,
      24817,
      63814,
      63815,
      33126,
      63816,
      63817,
      23615,
      63818,
      63819,
      63820,
      63821,
      63822,
      63823,
      63824,
      63825,
      23273,
      35365,
      26491,
      32016,
      63826,
      63827,
      63828,
      63829,
      63830,
      63831,
      33021,
      63832,
      63833,
      23612,
      27877,
      21311,
      28346,
      22810,
      33590,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      20025,
      20150,
      20294,
      21934,
      22296,
      22727,
      24406,
      26039,
      26086,
      27264,
      27573,
      28237,
      30701,
      31471,
      31774,
      32222,
      34507,
      34962,
      37170,
      37723,
      25787,
      28606,
      29562,
      30136,
      36948,
      21846,
      22349,
      25018,
      25812,
      26311,
      28129,
      28251,
      28525,
      28601,
      30192,
      32835,
      33213,
      34113,
      35203,
      35527,
      35674,
      37663,
      27795,
      30035,
      31572,
      36367,
      36957,
      21776,
      22530,
      22616,
      24162,
      25095,
      25758,
      26848,
      30070,
      31958,
      34739,
      40680,
      20195,
      22408,
      22382,
      22823,
      23565,
      23729,
      24118,
      24453,
      25140,
      25825,
      29619,
      33274,
      34955,
      36024,
      38538,
      40667,
      23429,
      24503,
      24755,
      20498,
      20992,
      21040,
      22294,
      22581,
      22615,
      23566,
      23648,
      23798,
      23947,
      24230,
      24466,
      24764,
      25361,
      25481,
      25623,
      26691,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      26873,
      27330,
      28120,
      28193,
      28372,
      28644,
      29182,
      30428,
      30585,
      31153,
      31291,
      33796,
      35241,
      36077,
      36339,
      36424,
      36867,
      36884,
      36947,
      37117,
      37709,
      38518,
      38876,
      27602,
      28678,
      29272,
      29346,
      29544,
      30563,
      31167,
      31716,
      32411,
      35712,
      22697,
      24775,
      25958,
      26109,
      26302,
      27788,
      28958,
      29129,
      35930,
      38931,
      20077,
      31361,
      20189,
      20908,
      20941,
      21205,
      21516,
      24999,
      26481,
      26704,
      26847,
      27934,
      28540,
      30140,
      30643,
      31461,
      33012,
      33891,
      37509,
      20828,
      26007,
      26460,
      26515,
      30168,
      31431,
      33651,
      63834,
      35910,
      36887,
      38957,
      23663,
      33216,
      33434,
      36929,
      36975,
      37389,
      24471,
      23965,
      27225,
      29128,
      30331,
      31561,
      34276,
      35588,
      37159,
      39472,
      21895,
      25078,
      63835,
      30313,
      32645,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      34367,
      34746,
      35064,
      37007,
      63836,
      27931,
      28889,
      29662,
      32097,
      33853,
      63837,
      37226,
      39409,
      63838,
      20098,
      21365,
      27396,
      27410,
      28734,
      29211,
      34349,
      40478,
      21068,
      36771,
      23888,
      25829,
      25900,
      27414,
      28651,
      31811,
      32412,
      34253,
      35172,
      35261,
      25289,
      33240,
      34847,
      24266,
      26391,
      28010,
      29436,
      29701,
      29807,
      34690,
      37086,
      20358,
      23821,
      24480,
      33802,
      20919,
      25504,
      30053,
      20142,
      20486,
      20841,
      20937,
      26753,
      27153,
      31918,
      31921,
      31975,
      33391,
      35538,
      36635,
      37327,
      20406,
      20791,
      21237,
      21570,
      24300,
      24942,
      25150,
      26053,
      27354,
      28670,
      31018,
      34268,
      34851,
      38317,
      39522,
      39530,
      40599,
      40654,
      21147,
      26310,
      27511,
      28701,
      31019,
      36706,
      38722,
      24976,
      25088,
      25891,
      28451,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      29001,
      29833,
      32244,
      32879,
      34030,
      36646,
      36899,
      37706,
      20925,
      21015,
      21155,
      27916,
      28872,
      35010,
      24265,
      25986,
      27566,
      28610,
      31806,
      29557,
      20196,
      20278,
      22265,
      63839,
      23738,
      23994,
      24604,
      29618,
      31533,
      32666,
      32718,
      32838,
      36894,
      37428,
      38646,
      38728,
      38936,
      40801,
      20363,
      28583,
      31150,
      37300,
      38583,
      21214,
      63840,
      25736,
      25796,
      27347,
      28510,
      28696,
      29200,
      30439,
      32769,
      34310,
      34396,
      36335,
      36613,
      38706,
      39791,
      40442,
      40565,
      30860,
      31103,
      32160,
      33737,
      37636,
      40575,
      40595,
      35542,
      22751,
      24324,
      26407,
      28711,
      29903,
      31840,
      32894,
      20769,
      28712,
      29282,
      30922,
      36034,
      36058,
      36084,
      38647,
      20102,
      20698,
      23534,
      24278,
      26009,
      29134,
      30274,
      30637,
      32842,
      34044,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      36988,
      39719,
      40845,
      22744,
      23105,
      23650,
      27155,
      28122,
      28431,
      30267,
      32047,
      32311,
      34078,
      35128,
      37860,
      38475,
      21129,
      26066,
      26611,
      27060,
      27969,
      28316,
      28687,
      29705,
      29792,
      30041,
      30244,
      30827,
      35628,
      39006,
      20845,
      25134,
      38520,
      20374,
      20523,
      23833,
      28138,
      32184,
      36650,
      24459,
      24900,
      26647,
      63841,
      38534,
      21202,
      32907,
      20956,
      20940,
      26974,
      31260,
      32190,
      33777,
      38517,
      20442,
      21033,
      21400,
      21519,
      21774,
      23653,
      24743,
      26446,
      26792,
      28012,
      29313,
      29432,
      29702,
      29827,
      63842,
      30178,
      31852,
      32633,
      32696,
      33673,
      35023,
      35041,
      37324,
      37328,
      38626,
      39881,
      21533,
      28542,
      29136,
      29848,
      34298,
      36522,
      38563,
      40023,
      40607,
      26519,
      28107,
      29747,
      33256,
      38678,
      30764,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      31435,
      31520,
      31890,
      25705,
      29802,
      30194,
      30908,
      30952,
      39340,
      39764,
      40635,
      23518,
      24149,
      28448,
      33180,
      33707,
      37000,
      19975,
      21325,
      23081,
      24018,
      24398,
      24930,
      25405,
      26217,
      26364,
      28415,
      28459,
      28771,
      30622,
      33836,
      34067,
      34875,
      36627,
      39237,
      39995,
      21788,
      25273,
      26411,
      27819,
      33545,
      35178,
      38778,
      20129,
      22916,
      24536,
      24537,
      26395,
      32178,
      32596,
      33426,
      33579,
      33725,
      36638,
      37017,
      22475,
      22969,
      23186,
      23504,
      26151,
      26522,
      26757,
      27599,
      29028,
      32629,
      36023,
      36067,
      36993,
      39749,
      33032,
      35978,
      38476,
      39488,
      40613,
      23391,
      27667,
      29467,
      30450,
      30431,
      33804,
      20906,
      35219,
      20813,
      20885,
      21193,
      26825,
      27796,
      30468,
      30496,
      32191,
      32236,
      38754,
      40629,
      28357,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      34065,
      20901,
      21517,
      21629,
      26126,
      26269,
      26919,
      28319,
      30399,
      30609,
      33559,
      33986,
      34719,
      37225,
      37528,
      40180,
      34946,
      20398,
      20882,
      21215,
      22982,
      24125,
      24917,
      25720,
      25721,
      26286,
      26576,
      27169,
      27597,
      27611,
      29279,
      29281,
      29761,
      30520,
      30683,
      32791,
      33468,
      33541,
      35584,
      35624,
      35980,
      26408,
      27792,
      29287,
      30446,
      30566,
      31302,
      40361,
      27519,
      27794,
      22818,
      26406,
      33945,
      21359,
      22675,
      22937,
      24287,
      25551,
      26164,
      26483,
      28218,
      29483,
      31447,
      33495,
      37672,
      21209,
      24043,
      25006,
      25035,
      25098,
      25287,
      25771,
      26080,
      26969,
      27494,
      27595,
      28961,
      29687,
      30045,
      32326,
      33310,
      33538,
      34154,
      35491,
      36031,
      38695,
      40289,
      22696,
      40664,
      20497,
      21006,
      21563,
      21839,
      25991,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      27766,
      32010,
      32011,
      32862,
      34442,
      38272,
      38639,
      21247,
      27797,
      29289,
      21619,
      23194,
      23614,
      23883,
      24396,
      24494,
      26410,
      26806,
      26979,
      28220,
      28228,
      30473,
      31859,
      32654,
      34183,
      35598,
      36855,
      38753,
      40692,
      23735,
      24758,
      24845,
      25003,
      25935,
      26107,
      26108,
      27665,
      27887,
      29599,
      29641,
      32225,
      38292,
      23494,
      34588,
      35600,
      21085,
      21338,
      25293,
      25615,
      25778,
      26420,
      27192,
      27850,
      29632,
      29854,
      31636,
      31893,
      32283,
      33162,
      33334,
      34180,
      36843,
      38649,
      39361,
      20276,
      21322,
      21453,
      21467,
      25292,
      25644,
      25856,
      26001,
      27075,
      27886,
      28504,
      29677,
      30036,
      30242,
      30436,
      30460,
      30928,
      30971,
      31020,
      32070,
      33324,
      34784,
      36820,
      38930,
      39151,
      21187,
      25300,
      25765,
      28196,
      28497,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      30332,
      36299,
      37297,
      37474,
      39662,
      39747,
      20515,
      20621,
      22346,
      22952,
      23592,
      24135,
      24439,
      25151,
      25918,
      26041,
      26049,
      26121,
      26507,
      27036,
      28354,
      30917,
      32033,
      32938,
      33152,
      33323,
      33459,
      33953,
      34444,
      35370,
      35607,
      37030,
      38450,
      40848,
      20493,
      20467,
      63843,
      22521,
      24472,
      25308,
      25490,
      26479,
      28227,
      28953,
      30403,
      32972,
      32986,
      35060,
      35061,
      35097,
      36064,
      36649,
      37197,
      38506,
      20271,
      20336,
      24091,
      26575,
      26658,
      30333,
      30334,
      39748,
      24161,
      27146,
      29033,
      29140,
      30058,
      63844,
      32321,
      34115,
      34281,
      39132,
      20240,
      31567,
      32624,
      38309,
      20961,
      24070,
      26805,
      27710,
      27726,
      27867,
      29359,
      31684,
      33539,
      27861,
      29754,
      20731,
      21128,
      22721,
      25816,
      27287,
      29863,
      30294,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      30887,
      34327,
      38370,
      38713,
      63845,
      21342,
      24321,
      35722,
      36776,
      36783,
      37002,
      21029,
      30629,
      40009,
      40712,
      19993,
      20482,
      20853,
      23643,
      24183,
      26142,
      26170,
      26564,
      26821,
      28851,
      29953,
      30149,
      31177,
      31453,
      36647,
      39200,
      39432,
      20445,
      22561,
      22577,
      23542,
      26222,
      27493,
      27921,
      28282,
      28541,
      29668,
      29995,
      33769,
      35036,
      35091,
      35676,
      36628,
      20239,
      20693,
      21264,
      21340,
      23443,
      24489,
      26381,
      31119,
      33145,
      33583,
      34068,
      35079,
      35206,
      36665,
      36667,
      39333,
      39954,
      26412,
      20086,
      20472,
      22857,
      23553,
      23791,
      23792,
      25447,
      26834,
      28925,
      29090,
      29739,
      32299,
      34028,
      34562,
      36898,
      37586,
      40179,
      19981,
      20184,
      20463,
      20613,
      21078,
      21103,
      21542,
      21648,
      22496,
      22827,
      23142,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      23386,
      23413,
      23500,
      24220,
      63846,
      25206,
      25975,
      26023,
      28014,
      28325,
      29238,
      31526,
      31807,
      32566,
      33104,
      33105,
      33178,
      33344,
      33433,
      33705,
      35331,
      36000,
      36070,
      36091,
      36212,
      36282,
      37096,
      37340,
      38428,
      38468,
      39385,
      40167,
      21271,
      20998,
      21545,
      22132,
      22707,
      22868,
      22894,
      24575,
      24996,
      25198,
      26128,
      27774,
      28954,
      30406,
      31881,
      31966,
      32027,
      33452,
      36033,
      38640,
      63847,
      20315,
      24343,
      24447,
      25282,
      23849,
      26379,
      26842,
      30844,
      32323,
      40300,
      19989,
      20633,
      21269,
      21290,
      21329,
      22915,
      23138,
      24199,
      24754,
      24970,
      25161,
      25209,
      26000,
      26503,
      27047,
      27604,
      27606,
      27607,
      27608,
      27832,
      63848,
      29749,
      30202,
      30738,
      30865,
      31189,
      31192,
      31875,
      32203,
      32737,
      32933,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      33086,
      33218,
      33778,
      34586,
      35048,
      35513,
      35692,
      36027,
      37145,
      38750,
      39131,
      40763,
      22188,
      23338,
      24428,
      25996,
      27315,
      27567,
      27996,
      28657,
      28693,
      29277,
      29613,
      36007,
      36051,
      38971,
      24977,
      27703,
      32856,
      39425,
      20045,
      20107,
      20123,
      20181,
      20282,
      20284,
      20351,
      20447,
      20735,
      21490,
      21496,
      21766,
      21987,
      22235,
      22763,
      22882,
      23057,
      23531,
      23546,
      23556,
      24051,
      24107,
      24473,
      24605,
      25448,
      26012,
      26031,
      26614,
      26619,
      26797,
      27515,
      27801,
      27863,
      28195,
      28681,
      29509,
      30722,
      31038,
      31040,
      31072,
      31169,
      31721,
      32023,
      32114,
      32902,
      33293,
      33678,
      34001,
      34503,
      35039,
      35408,
      35422,
      35613,
      36060,
      36198,
      36781,
      37034,
      39164,
      39391,
      40605,
      21066,
      63849,
      26388,
      63850,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      20632,
      21034,
      23665,
      25955,
      27733,
      29642,
      29987,
      30109,
      31639,
      33948,
      37240,
      38704,
      20087,
      25746,
      27578,
      29022,
      34217,
      19977,
      63851,
      26441,
      26862,
      28183,
      33439,
      34072,
      34923,
      25591,
      28545,
      37394,
      39087,
      19978,
      20663,
      20687,
      20767,
      21830,
      21930,
      22039,
      23360,
      23577,
      23776,
      24120,
      24202,
      24224,
      24258,
      24819,
      26705,
      27233,
      28248,
      29245,
      29248,
      29376,
      30456,
      31077,
      31665,
      32724,
      35059,
      35316,
      35443,
      35937,
      36062,
      38684,
      22622,
      29885,
      36093,
      21959,
      63852,
      31329,
      32034,
      33394,
      29298,
      29983,
      29989,
      63853,
      31513,
      22661,
      22779,
      23996,
      24207,
      24246,
      24464,
      24661,
      25234,
      25471,
      25933,
      26257,
      26329,
      26360,
      26646,
      26866,
      29312,
      29790,
      31598,
      32110,
      32214,
      32626,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      32997,
      33298,
      34223,
      35199,
      35475,
      36893,
      37604,
      40653,
      40736,
      22805,
      22893,
      24109,
      24796,
      26132,
      26227,
      26512,
      27728,
      28101,
      28511,
      30707,
      30889,
      33990,
      37323,
      37675,
      20185,
      20682,
      20808,
      21892,
      23307,
      23459,
      25159,
      25982,
      26059,
      28210,
      29053,
      29697,
      29764,
      29831,
      29887,
      30316,
      31146,
      32218,
      32341,
      32680,
      33146,
      33203,
      33337,
      34330,
      34796,
      35445,
      36323,
      36984,
      37521,
      37925,
      39245,
      39854,
      21352,
      23633,
      26964,
      27844,
      27945,
      28203,
      33292,
      34203,
      35131,
      35373,
      35498,
      38634,
      40807,
      21089,
      26297,
      27570,
      32406,
      34814,
      36109,
      38275,
      38493,
      25885,
      28041,
      29166,
      63854,
      22478,
      22995,
      23468,
      24615,
      24826,
      25104,
      26143,
      26207,
      29481,
      29689,
      30427,
      30465,
      31596,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      32854,
      32882,
      33125,
      35488,
      37266,
      19990,
      21218,
      27506,
      27927,
      31237,
      31545,
      32048,
      63855,
      36016,
      21484,
      22063,
      22609,
      23477,
      23567,
      23569,
      24034,
      25152,
      25475,
      25620,
      26157,
      26803,
      27836,
      28040,
      28335,
      28703,
      28836,
      29138,
      29990,
      30095,
      30094,
      30233,
      31505,
      31712,
      31787,
      32032,
      32057,
      34092,
      34157,
      34311,
      35380,
      36877,
      36961,
      37045,
      37559,
      38902,
      39479,
      20439,
      23660,
      26463,
      28049,
      31903,
      32396,
      35606,
      36118,
      36895,
      23403,
      24061,
      25613,
      33984,
      36956,
      39137,
      29575,
      23435,
      24730,
      26494,
      28126,
      35359,
      35494,
      36865,
      38924,
      21047,
      63856,
      28753,
      30862,
      37782,
      34928,
      37335,
      20462,
      21463,
      22013,
      22234,
      22402,
      22781,
      23234,
      23432,
      23723,
      23744,
      24101,
      24833,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      25101,
      25163,
      25480,
      25628,
      25910,
      25976,
      27193,
      27530,
      27700,
      27929,
      28465,
      29159,
      29417,
      29560,
      29703,
      29874,
      30246,
      30561,
      31168,
      31319,
      31466,
      31929,
      32143,
      32172,
      32353,
      32670,
      33065,
      33585,
      33936,
      34010,
      34282,
      34966,
      35504,
      35728,
      36664,
      36930,
      36995,
      37228,
      37526,
      37561,
      38539,
      38567,
      38568,
      38614,
      38656,
      38920,
      39318,
      39635,
      39706,
      21460,
      22654,
      22809,
      23408,
      23487,
      28113,
      28506,
      29087,
      29729,
      29881,
      32901,
      33789,
      24033,
      24455,
      24490,
      24642,
      26092,
      26642,
      26991,
      27219,
      27529,
      27957,
      28147,
      29667,
      30462,
      30636,
      31565,
      32020,
      33059,
      33308,
      33600,
      34036,
      34147,
      35426,
      35524,
      37255,
      37662,
      38918,
      39348,
      25100,
      34899,
      36848,
      37477,
      23815,
      23847,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      23913,
      29791,
      33181,
      34664,
      28629,
      25342,
      32722,
      35126,
      35186,
      19998,
      20056,
      20711,
      21213,
      21319,
      25215,
      26119,
      32361,
      34821,
      38494,
      20365,
      21273,
      22070,
      22987,
      23204,
      23608,
      23630,
      23629,
      24066,
      24337,
      24643,
      26045,
      26159,
      26178,
      26558,
      26612,
      29468,
      30690,
      31034,
      32709,
      33940,
      33997,
      35222,
      35430,
      35433,
      35553,
      35925,
      35962,
      22516,
      23508,
      24335,
      24687,
      25325,
      26893,
      27542,
      28252,
      29060,
      31698,
      34645,
      35672,
      36606,
      39135,
      39166,
      20280,
      20353,
      20449,
      21627,
      23072,
      23480,
      24892,
      26032,
      26216,
      29180,
      30003,
      31070,
      32051,
      33102,
      33251,
      33688,
      34218,
      34254,
      34563,
      35338,
      36523,
      36763,
      63857,
      36805,
      22833,
      23460,
      23526,
      24713,
      23529,
      23563,
      24515,
      27777,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      63858,
      28145,
      28683,
      29978,
      33455,
      35574,
      20160,
      21313,
      63859,
      38617,
      27663,
      20126,
      20420,
      20818,
      21854,
      23077,
      23784,
      25105,
      29273,
      33469,
      33706,
      34558,
      34905,
      35357,
      38463,
      38597,
      39187,
      40201,
      40285,
      22538,
      23731,
      23997,
      24132,
      24801,
      24853,
      25569,
      27138,
      28197,
      37122,
      37716,
      38990,
      39952,
      40823,
      23433,
      23736,
      25353,
      26191,
      26696,
      30524,
      38593,
      38797,
      38996,
      39839,
      26017,
      35585,
      36555,
      38332,
      21813,
      23721,
      24022,
      24245,
      26263,
      30284,
      33780,
      38343,
      22739,
      25276,
      29390,
      40232,
      20208,
      22830,
      24591,
      26171,
      27523,
      31207,
      40230,
      21395,
      21696,
      22467,
      23830,
      24859,
      26326,
      28079,
      30861,
      33406,
      38552,
      38724,
      21380,
      25212,
      25494,
      28082,
      32266,
      33099,
      38989,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      27387,
      32588,
      40367,
      40474,
      20063,
      20539,
      20918,
      22812,
      24825,
      25590,
      26928,
      29242,
      32822,
      63860,
      37326,
      24369,
      63861,
      63862,
      32004,
      33509,
      33903,
      33979,
      34277,
      36493,
      63863,
      20335,
      63864,
      63865,
      22756,
      23363,
      24665,
      25562,
      25880,
      25965,
      26264,
      63866,
      26954,
      27171,
      27915,
      28673,
      29036,
      30162,
      30221,
      31155,
      31344,
      63867,
      32650,
      63868,
      35140,
      63869,
      35731,
      37312,
      38525,
      63870,
      39178,
      22276,
      24481,
      26044,
      28417,
      30208,
      31142,
      35486,
      39341,
      39770,
      40812,
      20740,
      25014,
      25233,
      27277,
      33222,
      20547,
      22576,
      24422,
      28937,
      35328,
      35578,
      23420,
      34326,
      20474,
      20796,
      22196,
      22852,
      25513,
      28153,
      23978,
      26989,
      20870,
      20104,
      20313,
      63871,
      63872,
      63873,
      22914,
      63874,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      63875,
      27487,
      27741,
      63876,
      29877,
      30998,
      63877,
      33287,
      33349,
      33593,
      36671,
      36701,
      63878,
      39192,
      63879,
      63880,
      63881,
      20134,
      63882,
      22495,
      24441,
      26131,
      63883,
      63884,
      30123,
      32377,
      35695,
      63885,
      36870,
      39515,
      22181,
      22567,
      23032,
      23071,
      23476,
      63886,
      24310,
      63887,
      63888,
      25424,
      25403,
      63889,
      26941,
      27783,
      27839,
      28046,
      28051,
      28149,
      28436,
      63890,
      28895,
      28982,
      29017,
      63891,
      29123,
      29141,
      63892,
      30799,
      30831,
      63893,
      31605,
      32227,
      63894,
      32303,
      63895,
      34893,
      36575,
      63896,
      63897,
      63898,
      37467,
      63899,
      40182,
      63900,
      63901,
      63902,
      24709,
      28037,
      63903,
      29105,
      63904,
      63905,
      38321,
      21421,
      63906,
      63907,
      63908,
      26579,
      63909,
      28814,
      28976,
      29744,
      33398,
      33490,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      63910,
      38331,
      39653,
      40573,
      26308,
      63911,
      29121,
      33865,
      63912,
      63913,
      22603,
      63914,
      63915,
      23992,
      24433,
      63916,
      26144,
      26254,
      27001,
      27054,
      27704,
      27891,
      28214,
      28481,
      28634,
      28699,
      28719,
      29008,
      29151,
      29552,
      63917,
      29787,
      63918,
      29908,
      30408,
      31310,
      32403,
      63919,
      63920,
      33521,
      35424,
      36814,
      63921,
      37704,
      63922,
      38681,
      63923,
      63924,
      20034,
      20522,
      63925,
      21000,
      21473,
      26355,
      27757,
      28618,
      29450,
      30591,
      31330,
      33454,
      34269,
      34306,
      63926,
      35028,
      35427,
      35709,
      35947,
      63927,
      37555,
      63928,
      38675,
      38928,
      20116,
      20237,
      20425,
      20658,
      21320,
      21566,
      21555,
      21978,
      22626,
      22714,
      22887,
      23067,
      23524,
      24735,
      63929,
      25034,
      25942,
      26111,
      26212,
      26791,
      27738,
      28595,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      28879,
      29100,
      29522,
      31613,
      34568,
      35492,
      39986,
      40711,
      23627,
      27779,
      29508,
      29577,
      37434,
      28331,
      29797,
      30239,
      31337,
      32277,
      34314,
      20800,
      22725,
      25793,
      29934,
      29973,
      30320,
      32705,
      37013,
      38605,
      39252,
      28198,
      29926,
      31401,
      31402,
      33253,
      34521,
      34680,
      35355,
      23113,
      23436,
      23451,
      26785,
      26880,
      28003,
      29609,
      29715,
      29740,
      30871,
      32233,
      32747,
      33048,
      33109,
      33694,
      35916,
      38446,
      38929,
      26352,
      24448,
      26106,
      26505,
      27754,
      29579,
      20525,
      23043,
      27498,
      30702,
      22806,
      23916,
      24013,
      29477,
      30031,
      63930,
      63931,
      20709,
      20985,
      22575,
      22829,
      22934,
      23002,
      23525,
      63932,
      63933,
      23970,
      25303,
      25622,
      25747,
      25854,
      63934,
      26332,
      63935,
      27208,
      63936,
      29183,
      29796,
      63937,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      31368,
      31407,
      32327,
      32350,
      32768,
      33136,
      63938,
      34799,
      35201,
      35616,
      36953,
      63939,
      36992,
      39250,
      24958,
      27442,
      28020,
      32287,
      35109,
      36785,
      20433,
      20653,
      20887,
      21191,
      22471,
      22665,
      23481,
      24248,
      24898,
      27029,
      28044,
      28263,
      28342,
      29076,
      29794,
      29992,
      29996,
      32883,
      33592,
      33993,
      36362,
      37780,
      37854,
      63940,
      20110,
      20305,
      20598,
      20778,
      21448,
      21451,
      21491,
      23431,
      23507,
      23588,
      24858,
      24962,
      26100,
      29275,
      29591,
      29760,
      30402,
      31056,
      31121,
      31161,
      32006,
      32701,
      33419,
      34261,
      34398,
      36802,
      36935,
      37109,
      37354,
      38533,
      38632,
      38633,
      21206,
      24423,
      26093,
      26161,
      26671,
      29020,
      31286,
      37057,
      38922,
      20113,
      63941,
      27218,
      27550,
      28560,
      29065,
      32792,
      33464,
      34131,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      36939,
      38549,
      38642,
      38907,
      34074,
      39729,
      20112,
      29066,
      38596,
      20803,
      21407,
      21729,
      22291,
      22290,
      22435,
      23195,
      23236,
      23491,
      24616,
      24895,
      25588,
      27781,
      27961,
      28274,
      28304,
      29232,
      29503,
      29783,
      33489,
      34945,
      36677,
      36960,
      63942,
      38498,
      39000,
      40219,
      26376,
      36234,
      37470,
      20301,
      20553,
      20702,
      21361,
      22285,
      22996,
      23041,
      23561,
      24944,
      26256,
      28205,
      29234,
      29771,
      32239,
      32963,
      33806,
      33894,
      34111,
      34655,
      34907,
      35096,
      35586,
      36949,
      38859,
      39759,
      20083,
      20369,
      20754,
      20842,
      63943,
      21807,
      21929,
      23418,
      23461,
      24188,
      24189,
      24254,
      24736,
      24799,
      24840,
      24841,
      25540,
      25912,
      26377,
      63944,
      26580,
      26586,
      63945,
      26977,
      26978,
      27833,
      27943,
      63946,
      28216,
      63947,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      28641,
      29494,
      29495,
      63948,
      29788,
      30001,
      63949,
      30290,
      63950,
      63951,
      32173,
      33278,
      33848,
      35029,
      35480,
      35547,
      35565,
      36400,
      36418,
      36938,
      36926,
      36986,
      37193,
      37321,
      37742,
      63952,
      63953,
      22537,
      63954,
      27603,
      32905,
      32946,
      63955,
      63956,
      20801,
      22891,
      23609,
      63957,
      63958,
      28516,
      29607,
      32996,
      36103,
      63959,
      37399,
      38287,
      63960,
      63961,
      63962,
      63963,
      32895,
      25102,
      28700,
      32104,
      34701,
      63964,
      22432,
      24681,
      24903,
      27575,
      35518,
      37504,
      38577,
      20057,
      21535,
      28139,
      34093,
      38512,
      38899,
      39150,
      25558,
      27875,
      37009,
      20957,
      25033,
      33210,
      40441,
      20381,
      20506,
      20736,
      23452,
      24847,
      25087,
      25836,
      26885,
      27589,
      30097,
      30691,
      32681,
      33380,
      34191,
      34811,
      34915,
      35516,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      35696,
      37291,
      20108,
      20197,
      20234,
      63965,
      63966,
      22839,
      23016,
      63967,
      24050,
      24347,
      24411,
      24609,
      63968,
      63969,
      63970,
      63971,
      29246,
      29669,
      63972,
      30064,
      30157,
      63973,
      31227,
      63974,
      32780,
      32819,
      32900,
      33505,
      33617,
      63975,
      63976,
      36029,
      36019,
      36999,
      63977,
      63978,
      39156,
      39180,
      63979,
      63980,
      28727,
      30410,
      32714,
      32716,
      32764,
      35610,
      20154,
      20161,
      20995,
      21360,
      63981,
      21693,
      22240,
      23035,
      23493,
      24341,
      24525,
      28270,
      63982,
      63983,
      32106,
      33589,
      63984,
      34451,
      35469,
      63985,
      38765,
      38775,
      63986,
      63987,
      19968,
      20314,
      20350,
      22777,
      26085,
      28322,
      36920,
      37808,
      39353,
      20219,
      22764,
      22922,
      23001,
      24641,
      63988,
      63989,
      31252,
      63990,
      33615,
      36035,
      20837,
      21316,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      63991,
      63992,
      63993,
      20173,
      21097,
      23381,
      33471,
      20180,
      21050,
      21672,
      22985,
      23039,
      23376,
      23383,
      23388,
      24675,
      24904,
      28363,
      28825,
      29038,
      29574,
      29943,
      30133,
      30913,
      32043,
      32773,
      33258,
      33576,
      34071,
      34249,
      35566,
      36039,
      38604,
      20316,
      21242,
      22204,
      26027,
      26152,
      28796,
      28856,
      29237,
      32189,
      33421,
      37196,
      38592,
      40306,
      23409,
      26855,
      27544,
      28538,
      30430,
      23697,
      26283,
      28507,
      31668,
      31786,
      34870,
      38620,
      19976,
      20183,
      21280,
      22580,
      22715,
      22767,
      22892,
      23559,
      24115,
      24196,
      24373,
      25484,
      26290,
      26454,
      27167,
      27299,
      27404,
      28479,
      29254,
      63994,
      29520,
      29835,
      31456,
      31911,
      33144,
      33247,
      33255,
      33674,
      33900,
      34083,
      34196,
      34255,
      35037,
      36115,
      37292,
      38263,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      38556,
      20877,
      21705,
      22312,
      23472,
      25165,
      26448,
      26685,
      26771,
      28221,
      28371,
      28797,
      32289,
      35009,
      36001,
      36617,
      40779,
      40782,
      29229,
      31631,
      35533,
      37658,
      20295,
      20302,
      20786,
      21632,
      22992,
      24213,
      25269,
      26485,
      26990,
      27159,
      27822,
      28186,
      29401,
      29482,
      30141,
      31672,
      32053,
      33511,
      33785,
      33879,
      34295,
      35419,
      36015,
      36487,
      36889,
      37048,
      38606,
      40799,
      21219,
      21514,
      23265,
      23490,
      25688,
      25973,
      28404,
      29380,
      63995,
      30340,
      31309,
      31515,
      31821,
      32318,
      32735,
      33659,
      35627,
      36042,
      36196,
      36321,
      36447,
      36842,
      36857,
      36969,
      37841,
      20291,
      20346,
      20659,
      20840,
      20856,
      21069,
      21098,
      22625,
      22652,
      22880,
      23560,
      23637,
      24283,
      24731,
      25136,
      26643,
      27583,
      27656,
      28593,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      29006,
      29728,
      30000,
      30008,
      30033,
      30322,
      31564,
      31627,
      31661,
      31686,
      32399,
      35438,
      36670,
      36681,
      37439,
      37523,
      37666,
      37931,
      38651,
      39002,
      39019,
      39198,
      20999,
      25130,
      25240,
      27993,
      30308,
      31434,
      31680,
      32118,
      21344,
      23742,
      24215,
      28472,
      28857,
      31896,
      38673,
      39822,
      40670,
      25509,
      25722,
      34678,
      19969,
      20117,
      20141,
      20572,
      20597,
      21576,
      22979,
      23450,
      24128,
      24237,
      24311,
      24449,
      24773,
      25402,
      25919,
      25972,
      26060,
      26230,
      26232,
      26622,
      26984,
      27273,
      27491,
      27712,
      28096,
      28136,
      28191,
      28254,
      28702,
      28833,
      29582,
      29693,
      30010,
      30555,
      30855,
      31118,
      31243,
      31357,
      31934,
      32142,
      33351,
      35330,
      35562,
      35998,
      37165,
      37194,
      37336,
      37478,
      37580,
      37664,
      38662,
      38742,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      38748,
      38914,
      40718,
      21046,
      21137,
      21884,
      22564,
      24093,
      24351,
      24716,
      25552,
      26799,
      28639,
      31085,
      31532,
      33229,
      34234,
      35069,
      35576,
      36420,
      37261,
      38500,
      38555,
      38717,
      38988,
      40778,
      20430,
      20806,
      20939,
      21161,
      22066,
      24340,
      24427,
      25514,
      25805,
      26089,
      26177,
      26362,
      26361,
      26397,
      26781,
      26839,
      27133,
      28437,
      28526,
      29031,
      29157,
      29226,
      29866,
      30522,
      31062,
      31066,
      31199,
      31264,
      31381,
      31895,
      31967,
      32068,
      32368,
      32903,
      34299,
      34468,
      35412,
      35519,
      36249,
      36481,
      36896,
      36973,
      37347,
      38459,
      38613,
      40165,
      26063,
      31751,
      36275,
      37827,
      23384,
      23562,
      21330,
      25305,
      29469,
      20519,
      23447,
      24478,
      24752,
      24939,
      26837,
      28121,
      29742,
      31278,
      32066,
      32156,
      32305,
      33131,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      36394,
      36405,
      37758,
      37912,
      20304,
      22352,
      24038,
      24231,
      25387,
      32618,
      20027,
      20303,
      20367,
      20570,
      23005,
      32964,
      21610,
      21608,
      22014,
      22863,
      23449,
      24030,
      24282,
      26205,
      26417,
      26609,
      26666,
      27880,
      27954,
      28234,
      28557,
      28855,
      29664,
      30087,
      31820,
      32002,
      32044,
      32162,
      33311,
      34523,
      35387,
      35461,
      36208,
      36490,
      36659,
      36913,
      37198,
      37202,
      37956,
      39376,
      31481,
      31909,
      20426,
      20737,
      20934,
      22472,
      23535,
      23803,
      26201,
      27197,
      27994,
      28310,
      28652,
      28940,
      30063,
      31459,
      34850,
      36897,
      36981,
      38603,
      39423,
      33537,
      20013,
      20210,
      34886,
      37325,
      21373,
      27355,
      26987,
      27713,
      33914,
      22686,
      24974,
      26366,
      25327,
      28893,
      29969,
      30151,
      32338,
      33976,
      35657,
      36104,
      20043,
      21482,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      21675,
      22320,
      22336,
      24535,
      25345,
      25351,
      25711,
      25903,
      26088,
      26234,
      26525,
      26547,
      27490,
      27744,
      27802,
      28460,
      30693,
      30757,
      31049,
      31063,
      32025,
      32930,
      33026,
      33267,
      33437,
      33463,
      34584,
      35468,
      63996,
      36100,
      36286,
      36978,
      30452,
      31257,
      31287,
      32340,
      32887,
      21767,
      21972,
      22645,
      25391,
      25634,
      26185,
      26187,
      26733,
      27035,
      27524,
      27941,
      28337,
      29645,
      29800,
      29857,
      30043,
      30137,
      30433,
      30494,
      30603,
      31206,
      32265,
      32285,
      33275,
      34095,
      34967,
      35386,
      36049,
      36587,
      36784,
      36914,
      37805,
      38499,
      38515,
      38663,
      20356,
      21489,
      23018,
      23241,
      24089,
      26702,
      29894,
      30142,
      31209,
      31378,
      33187,
      34541,
      36074,
      36300,
      36845,
      26015,
      26389,
      63997,
      22519,
      28503,
      32221,
      36655,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      37878,
      38598,
      24501,
      25074,
      28548,
      19988,
      20376,
      20511,
      21449,
      21983,
      23919,
      24046,
      27425,
      27492,
      30923,
      31642,
      63998,
      36425,
      36554,
      36974,
      25417,
      25662,
      30528,
      31364,
      37679,
      38015,
      40810,
      25776,
      28591,
      29158,
      29864,
      29914,
      31428,
      31762,
      32386,
      31922,
      32408,
      35738,
      36106,
      38013,
      39184,
      39244,
      21049,
      23519,
      25830,
      26413,
      32046,
      20717,
      21443,
      22649,
      24920,
      24921,
      25082,
      26028,
      31449,
      35730,
      35734,
      20489,
      20513,
      21109,
      21809,
      23100,
      24288,
      24432,
      24884,
      25950,
      26124,
      26166,
      26274,
      27085,
      28356,
      28466,
      29462,
      30241,
      31379,
      33081,
      33369,
      33750,
      33980,
      20661,
      22512,
      23488,
      23528,
      24425,
      25505,
      30758,
      32181,
      33756,
      34081,
      37319,
      37365,
      20874,
      26613,
      31574,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      36012,
      20932,
      22971,
      24765,
      34389,
      20508,
      63999,
      21076,
      23610,
      24957,
      25114,
      25299,
      25842,
      26021,
      28364,
      30240,
      33034,
      36448,
      38495,
      38587,
      20191,
      21315,
      21912,
      22825,
      24029,
      25797,
      27849,
      28154,
      29588,
      31359,
      33307,
      34214,
      36068,
      36368,
      36983,
      37351,
      38369,
      38433,
      38854,
      20984,
      21746,
      21894,
      24505,
      25764,
      28552,
      32180,
      36639,
      36685,
      37941,
      20681,
      23574,
      27838,
      28155,
      29979,
      30651,
      31805,
      31844,
      35449,
      35522,
      22558,
      22974,
      24086,
      25463,
      29266,
      30090,
      30571,
      35548,
      36028,
      36626,
      24307,
      26228,
      28152,
      32893,
      33729,
      35531,
      38737,
      39894,
      64000,
      21059,
      26367,
      28053,
      28399,
      32224,
      35558,
      36910,
      36958,
      39636,
      21021,
      21119,
      21736,
      24980,
      25220,
      25307,
      26786,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      26898,
      26970,
      27189,
      28818,
      28966,
      30813,
      30977,
      30990,
      31186,
      31245,
      32918,
      33400,
      33493,
      33609,
      34121,
      35970,
      36229,
      37218,
      37259,
      37294,
      20419,
      22225,
      29165,
      30679,
      34560,
      35320,
      23544,
      24534,
      26449,
      37032,
      21474,
      22618,
      23541,
      24740,
      24961,
      25696,
      32317,
      32880,
      34085,
      37507,
      25774,
      20652,
      23828,
      26368,
      22684,
      25277,
      25512,
      26894,
      27000,
      27166,
      28267,
      30394,
      31179,
      33467,
      33833,
      35535,
      36264,
      36861,
      37138,
      37195,
      37276,
      37648,
      37656,
      37786,
      38619,
      39478,
      39949,
      19985,
      30044,
      31069,
      31482,
      31569,
      31689,
      32302,
      33988,
      36441,
      36468,
      36600,
      36880,
      26149,
      26943,
      29763,
      20986,
      26414,
      40668,
      20805,
      24544,
      27798,
      34802,
      34909,
      34935,
      24756,
      33205,
      33795,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      36101,
      21462,
      21561,
      22068,
      23094,
      23601,
      28810,
      32736,
      32858,
      33030,
      33261,
      36259,
      37257,
      39519,
      40434,
      20596,
      20164,
      21408,
      24827,
      28204,
      23652,
      20360,
      20516,
      21988,
      23769,
      24159,
      24677,
      26772,
      27835,
      28100,
      29118,
      30164,
      30196,
      30305,
      31258,
      31305,
      32199,
      32251,
      32622,
      33268,
      34473,
      36636,
      38601,
      39347,
      40786,
      21063,
      21189,
      39149,
      35242,
      19971,
      26578,
      28422,
      20405,
      23522,
      26517,
      27784,
      28024,
      29723,
      30759,
      37341,
      37756,
      34756,
      31204,
      31281,
      24555,
      20182,
      21668,
      21822,
      22702,
      22949,
      24816,
      25171,
      25302,
      26422,
      26965,
      33333,
      38464,
      39345,
      39389,
      20524,
      21331,
      21828,
      22396,
      64001,
      25176,
      64002,
      25826,
      26219,
      26589,
      28609,
      28655,
      29730,
      29752,
      35351,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      37944,
      21585,
      22022,
      22374,
      24392,
      24986,
      27470,
      28760,
      28845,
      32187,
      35477,
      22890,
      33067,
      25506,
      30472,
      32829,
      36010,
      22612,
      25645,
      27067,
      23445,
      24081,
      28271,
      64003,
      34153,
      20812,
      21488,
      22826,
      24608,
      24907,
      27526,
      27760,
      27888,
      31518,
      32974,
      33492,
      36294,
      37040,
      39089,
      64004,
      25799,
      28580,
      25745,
      25860,
      20814,
      21520,
      22303,
      35342,
      24927,
      26742,
      64005,
      30171,
      31570,
      32113,
      36890,
      22534,
      27084,
      33151,
      35114,
      36864,
      38969,
      20600,
      22871,
      22956,
      25237,
      36879,
      39722,
      24925,
      29305,
      38358,
      22369,
      23110,
      24052,
      25226,
      25773,
      25850,
      26487,
      27874,
      27966,
      29228,
      29750,
      30772,
      32631,
      33453,
      36315,
      38935,
      21028,
      22338,
      26495,
      29256,
      29923,
      36009,
      36774,
      37393,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      38442,
      20843,
      21485,
      25420,
      20329,
      21764,
      24726,
      25943,
      27803,
      28031,
      29260,
      29437,
      31255,
      35207,
      35997,
      24429,
      28558,
      28921,
      33192,
      24846,
      20415,
      20559,
      25153,
      29255,
      31687,
      32232,
      32745,
      36941,
      38829,
      39449,
      36022,
      22378,
      24179,
      26544,
      33805,
      35413,
      21536,
      23318,
      24163,
      24290,
      24330,
      25987,
      32954,
      34109,
      38281,
      38491,
      20296,
      21253,
      21261,
      21263,
      21638,
      21754,
      22275,
      24067,
      24598,
      25243,
      25265,
      25429,
      64006,
      27873,
      28006,
      30129,
      30770,
      32990,
      33071,
      33502,
      33889,
      33970,
      34957,
      35090,
      36875,
      37610,
      39165,
      39825,
      24133,
      26292,
      26333,
      28689,
      29190,
      64007,
      20469,
      21117,
      24426,
      24915,
      26451,
      27161,
      28418,
      29922,
      31080,
      34920,
      35961,
      39111,
      39108,
      39491,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      21697,
      31263,
      26963,
      35575,
      35914,
      39080,
      39342,
      24444,
      25259,
      30130,
      30382,
      34987,
      36991,
      38466,
      21305,
      24380,
      24517,
      27852,
      29644,
      30050,
      30091,
      31558,
      33534,
      39325,
      20047,
      36924,
      19979,
      20309,
      21414,
      22799,
      24264,
      26160,
      27827,
      29781,
      33655,
      34662,
      36032,
      36944,
      38686,
      39957,
      22737,
      23416,
      34384,
      35604,
      40372,
      23506,
      24680,
      24717,
      26097,
      27735,
      28450,
      28579,
      28698,
      32597,
      32752,
      38289,
      38290,
      38480,
      38867,
      21106,
      36676,
      20989,
      21547,
      21688,
      21859,
      21898,
      27323,
      28085,
      32216,
      33382,
      37532,
      38519,
      40569,
      21512,
      21704,
      30418,
      34532,
      38308,
      38356,
      38492,
      20130,
      20233,
      23022,
      23270,
      24055,
      24658,
      25239,
      26477,
      26689,
      27782,
      28207,
      32568,
      32923,
      33322,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      64008,
      64009,
      38917,
      20133,
      20565,
      21683,
      22419,
      22874,
      23401,
      23475,
      25032,
      26999,
      28023,
      28707,
      34809,
      35299,
      35442,
      35559,
      36994,
      39405,
      39608,
      21182,
      26680,
      20502,
      24184,
      26447,
      33607,
      34892,
      20139,
      21521,
      22190,
      29670,
      37141,
      38911,
      39177,
      39255,
      39321,
      22099,
      22687,
      34395,
      35377,
      25010,
      27382,
      29563,
      36562,
      27463,
      38570,
      39511,
      22869,
      29184,
      36203,
      38761,
      20436,
      23796,
      24358,
      25080,
      26203,
      27883,
      28843,
      29572,
      29625,
      29694,
      30505,
      30541,
      32067,
      32098,
      32291,
      33335,
      34898,
      64010,
      36066,
      37449,
      39023,
      23377,
      31348,
      34880,
      38913,
      23244,
      20448,
      21332,
      22846,
      23805,
      25406,
      28025,
      29433,
      33029,
      33031,
      33698,
      37583,
      38960,
      20136,
      20804,
      21009,
      22411,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      24418,
      27842,
      28366,
      28677,
      28752,
      28847,
      29074,
      29673,
      29801,
      33610,
      34722,
      34913,
      36872,
      37026,
      37795,
      39336,
      20846,
      24407,
      24800,
      24935,
      26291,
      34137,
      36426,
      37295,
      38795,
      20046,
      20114,
      21628,
      22741,
      22778,
      22909,
      23733,
      24359,
      25142,
      25160,
      26122,
      26215,
      27627,
      28009,
      28111,
      28246,
      28408,
      28564,
      28640,
      28649,
      28765,
      29392,
      29733,
      29786,
      29920,
      30355,
      31068,
      31946,
      32286,
      32993,
      33446,
      33899,
      33983,
      34382,
      34399,
      34676,
      35703,
      35946,
      37804,
      38912,
      39013,
      24785,
      25110,
      37239,
      23130,
      26127,
      28151,
      28222,
      29759,
      39746,
      24573,
      24794,
      31503,
      21700,
      24344,
      27742,
      27859,
      27946,
      28888,
      32005,
      34425,
      35340,
      40251,
      21270,
      21644,
      23301,
      27194,
      28779,
      30069,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      31117,
      31166,
      33457,
      33775,
      35441,
      35649,
      36008,
      38772,
      64011,
      25844,
      25899,
      30906,
      30907,
      31339,
      20024,
      21914,
      22864,
      23462,
      24187,
      24739,
      25563,
      27489,
      26213,
      26707,
      28185,
      29029,
      29872,
      32008,
      36996,
      39529,
      39973,
      27963,
      28369,
      29502,
      35905,
      38346,
      20976,
      24140,
      24488,
      24653,
      24822,
      24880,
      24908,
      26179,
      26180,
      27045,
      27841,
      28255,
      28361,
      28514,
      29004,
      29852,
      30343,
      31681,
      31783,
      33618,
      34647,
      36945,
      38541,
      40643,
      21295,
      22238,
      24315,
      24458,
      24674,
      24724,
      25079,
      26214,
      26371,
      27292,
      28142,
      28590,
      28784,
      29546,
      32362,
      33214,
      33588,
      34516,
      35496,
      36036,
      21123,
      29554,
      23446,
      27243,
      37892,
      21742,
      22150,
      23389,
      25928,
      25989,
      26313,
      26783,
      28045,
      28102,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      29243,
      32948,
      37237,
      39501,
      20399,
      20505,
      21402,
      21518,
      21564,
      21897,
      21957,
      24127,
      24460,
      26429,
      29030,
      29661,
      36869,
      21211,
      21235,
      22628,
      22734,
      28932,
      29071,
      29179,
      34224,
      35347,
      26248,
      34216,
      21927,
      26244,
      29002,
      33841,
      21321,
      21913,
      27585,
      24409,
      24509,
      25582,
      26249,
      28999,
      35569,
      36637,
      40638,
      20241,
      25658,
      28875,
      30054,
      34407,
      24676,
      35662,
      40440,
      20807,
      20982,
      21256,
      27958,
      33016,
      40657,
      26133,
      27427,
      28824,
      30165,
      21507,
      23673,
      32007,
      35350,
      27424,
      27453,
      27462,
      21560,
      24688,
      27965,
      32725,
      33288,
      20694,
      20958,
      21916,
      22123,
      22221,
      23020,
      23305,
      24076,
      24985,
      24984,
      25137,
      26206,
      26342,
      29081,
      29113,
      29114,
      29351,
      31143,
      31232,
      32690,
      35440,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
    ],
    gb18030: [
      19970, 19972, 19973, 19974, 19983, 19986, 19991, 19999, 20000, 20001,
      20003, 20006, 20009, 20014, 20015, 20017, 20019, 20021, 20023, 20028,
      20032, 20033, 20034, 20036, 20038, 20042, 20049, 20053, 20055, 20058,
      20059, 20066, 20067, 20068, 20069, 20071, 20072, 20074, 20075, 20076,
      20077, 20078, 20079, 20082, 20084, 20085, 20086, 20087, 20088, 20089,
      20090, 20091, 20092, 20093, 20095, 20096, 20097, 20098, 20099, 20100,
      20101, 20103, 20106, 20112, 20118, 20119, 20121, 20124, 20125, 20126,
      20131, 20138, 20143, 20144, 20145, 20148, 20150, 20151, 20152, 20153,
      20156, 20157, 20158, 20168, 20172, 20175, 20176, 20178, 20186, 20187,
      20188, 20192, 20194, 20198, 20199, 20201, 20205, 20206, 20207, 20209,
      20212, 20216, 20217, 20218, 20220, 20222, 20224, 20226, 20227, 20228,
      20229, 20230, 20231, 20232, 20235, 20236, 20242, 20243, 20244, 20245,
      20246, 20252, 20253, 20257, 20259, 20264, 20265, 20268, 20269, 20270,
      20273, 20275, 20277, 20279, 20281, 20283, 20286, 20287, 20288, 20289,
      20290, 20292, 20293, 20295, 20296, 20297, 20298, 20299, 20300, 20306,
      20308, 20310, 20321, 20322, 20326, 20328, 20330, 20331, 20333, 20334,
      20337, 20338, 20341, 20343, 20344, 20345, 20346, 20349, 20352, 20353,
      20354, 20357, 20358, 20359, 20362, 20364, 20366, 20368, 20370, 20371,
      20373, 20374, 20376, 20377, 20378, 20380, 20382, 20383, 20385, 20386,
      20388, 20395, 20397, 20400, 20401, 20402, 20403, 20404, 20406, 20407,
      20408, 20409, 20410, 20411, 20412, 20413, 20414, 20416, 20417, 20418,
      20422, 20423, 20424, 20425, 20427, 20428, 20429, 20434, 20435, 20436,
      20437, 20438, 20441, 20443, 20448, 20450, 20452, 20453, 20455, 20459,
      20460, 20464, 20466, 20468, 20469, 20470, 20471, 20473, 20475, 20476,
      20477, 20479, 20480, 20481, 20482, 20483, 20484, 20485, 20486, 20487,
      20488, 20489, 20490, 20491, 20494, 20496, 20497, 20499, 20501, 20502,
      20503, 20507, 20509, 20510, 20512, 20514, 20515, 20516, 20519, 20523,
      20527, 20528, 20529, 20530, 20531, 20532, 20533, 20534, 20535, 20536,
      20537, 20539, 20541, 20543, 20544, 20545, 20546, 20548, 20549, 20550,
      20553, 20554, 20555, 20557, 20560, 20561, 20562, 20563, 20564, 20566,
      20567, 20568, 20569, 20571, 20573, 20574, 20575, 20576, 20577, 20578,
      20579, 20580, 20582, 20583, 20584, 20585, 20586, 20587, 20589, 20590,
      20591, 20592, 20593, 20594, 20595, 20596, 20597, 20600, 20601, 20602,
      20604, 20605, 20609, 20610, 20611, 20612, 20614, 20615, 20617, 20618,
      20619, 20620, 20622, 20623, 20624, 20625, 20626, 20627, 20628, 20629,
      20630, 20631, 20632, 20633, 20634, 20635, 20636, 20637, 20638, 20639,
      20640, 20641, 20642, 20644, 20646, 20650, 20651, 20653, 20654, 20655,
      20656, 20657, 20659, 20660, 20661, 20662, 20663, 20664, 20665, 20668,
      20669, 20670, 20671, 20672, 20673, 20674, 20675, 20676, 20677, 20678,
      20679, 20680, 20681, 20682, 20683, 20684, 20685, 20686, 20688, 20689,
      20690, 20691, 20692, 20693, 20695, 20696, 20697, 20699, 20700, 20701,
      20702, 20703, 20704, 20705, 20706, 20707, 20708, 20709, 20712, 20713,
      20714, 20715, 20719, 20720, 20721, 20722, 20724, 20726, 20727, 20728,
      20729, 20730, 20732, 20733, 20734, 20735, 20736, 20737, 20738, 20739,
      20740, 20741, 20744, 20745, 20746, 20748, 20749, 20750, 20751, 20752,
      20753, 20755, 20756, 20757, 20758, 20759, 20760, 20761, 20762, 20763,
      20764, 20765, 20766, 20767, 20768, 20770, 20771, 20772, 20773, 20774,
      20775, 20776, 20777, 20778, 20779, 20780, 20781, 20782, 20783, 20784,
      20785, 20786, 20787, 20788, 20789, 20790, 20791, 20792, 20793, 20794,
      20795, 20796, 20797, 20798, 20802, 20807, 20810, 20812, 20814, 20815,
      20816, 20818, 20819, 20823, 20824, 20825, 20827, 20829, 20830, 20831,
      20832, 20833, 20835, 20836, 20838, 20839, 20841, 20842, 20847, 20850,
      20858, 20862, 20863, 20867, 20868, 20870, 20871, 20874, 20875, 20878,
      20879, 20880, 20881, 20883, 20884, 20888, 20890, 20893, 20894, 20895,
      20897, 20899, 20902, 20903, 20904, 20905, 20906, 20909, 20910, 20916,
      20920, 20921, 20922, 20926, 20927, 20929, 20930, 20931, 20933, 20936,
      20938, 20941, 20942, 20944, 20946, 20947, 20948, 20949, 20950, 20951,
      20952, 20953, 20954, 20956, 20958, 20959, 20962, 20963, 20965, 20966,
      20967, 20968, 20969, 20970, 20972, 20974, 20977, 20978, 20980, 20983,
      20990, 20996, 20997, 21001, 21003, 21004, 21007, 21008, 21011, 21012,
      21013, 21020, 21022, 21023, 21025, 21026, 21027, 21029, 21030, 21031,
      21034, 21036, 21039, 21041, 21042, 21044, 21045, 21052, 21054, 21060,
      21061, 21062, 21063, 21064, 21065, 21067, 21070, 21071, 21074, 21075,
      21077, 21079, 21080, 21081, 21082, 21083, 21085, 21087, 21088, 21090,
      21091, 21092, 21094, 21096, 21099, 21100, 21101, 21102, 21104, 21105,
      21107, 21108, 21109, 21110, 21111, 21112, 21113, 21114, 21115, 21116,
      21118, 21120, 21123, 21124, 21125, 21126, 21127, 21129, 21130, 21131,
      21132, 21133, 21134, 21135, 21137, 21138, 21140, 21141, 21142, 21143,
      21144, 21145, 21146, 21148, 21156, 21157, 21158, 21159, 21166, 21167,
      21168, 21172, 21173, 21174, 21175, 21176, 21177, 21178, 21179, 21180,
      21181, 21184, 21185, 21186, 21188, 21189, 21190, 21192, 21194, 21196,
      21197, 21198, 21199, 21201, 21203, 21204, 21205, 21207, 21209, 21210,
      21211, 21212, 21213, 21214, 21216, 21217, 21218, 21219, 21221, 21222,
      21223, 21224, 21225, 21226, 21227, 21228, 21229, 21230, 21231, 21233,
      21234, 21235, 21236, 21237, 21238, 21239, 21240, 21243, 21244, 21245,
      21249, 21250, 21251, 21252, 21255, 21257, 21258, 21259, 21260, 21262,
      21265, 21266, 21267, 21268, 21272, 21275, 21276, 21278, 21279, 21282,
      21284, 21285, 21287, 21288, 21289, 21291, 21292, 21293, 21295, 21296,
      21297, 21298, 21299, 21300, 21301, 21302, 21303, 21304, 21308, 21309,
      21312, 21314, 21316, 21318, 21323, 21324, 21325, 21328, 21332, 21336,
      21337, 21339, 21341, 21349, 21352, 21354, 21356, 21357, 21362, 21366,
      21369, 21371, 21372, 21373, 21374, 21376, 21377, 21379, 21383, 21384,
      21386, 21390, 21391, 21392, 21393, 21394, 21395, 21396, 21398, 21399,
      21401, 21403, 21404, 21406, 21408, 21409, 21412, 21415, 21418, 21419,
      21420, 21421, 21423, 21424, 21425, 21426, 21427, 21428, 21429, 21431,
      21432, 21433, 21434, 21436, 21437, 21438, 21440, 21443, 21444, 21445,
      21446, 21447, 21454, 21455, 21456, 21458, 21459, 21461, 21466, 21468,
      21469, 21470, 21473, 21474, 21479, 21492, 21498, 21502, 21503, 21504,
      21506, 21509, 21511, 21515, 21524, 21528, 21529, 21530, 21532, 21538,
      21540, 21541, 21546, 21552, 21555, 21558, 21559, 21562, 21565, 21567,
      21569, 21570, 21572, 21573, 21575, 21577, 21580, 21581, 21582, 21583,
      21585, 21594, 21597, 21598, 21599, 21600, 21601, 21603, 21605, 21607,
      21609, 21610, 21611, 21612, 21613, 21614, 21615, 21616, 21620, 21625,
      21626, 21630, 21631, 21633, 21635, 21637, 21639, 21640, 21641, 21642,
      21645, 21649, 21651, 21655, 21656, 21660, 21662, 21663, 21664, 21665,
      21666, 21669, 21678, 21680, 21682, 21685, 21686, 21687, 21689, 21690,
      21692, 21694, 21699, 21701, 21706, 21707, 21718, 21720, 21723, 21728,
      21729, 21730, 21731, 21732, 21739, 21740, 21743, 21744, 21745, 21748,
      21749, 21750, 21751, 21752, 21753, 21755, 21758, 21760, 21762, 21763,
      21764, 21765, 21768, 21770, 21771, 21772, 21773, 21774, 21778, 21779,
      21781, 21782, 21783, 21784, 21785, 21786, 21788, 21789, 21790, 21791,
      21793, 21797, 21798, 21800, 21801, 21803, 21805, 21810, 21812, 21813,
      21814, 21816, 21817, 21818, 21819, 21821, 21824, 21826, 21829, 21831,
      21832, 21835, 21836, 21837, 21838, 21839, 21841, 21842, 21843, 21844,
      21847, 21848, 21849, 21850, 21851, 21853, 21854, 21855, 21856, 21858,
      21859, 21864, 21865, 21867, 21871, 21872, 21873, 21874, 21875, 21876,
      21881, 21882, 21885, 21887, 21893, 21894, 21900, 21901, 21902, 21904,
      21906, 21907, 21909, 21910, 21911, 21914, 21915, 21918, 21920, 21921,
      21922, 21923, 21924, 21925, 21926, 21928, 21929, 21930, 21931, 21932,
      21933, 21934, 21935, 21936, 21938, 21940, 21942, 21944, 21946, 21948,
      21951, 21952, 21953, 21954, 21955, 21958, 21959, 21960, 21962, 21963,
      21966, 21967, 21968, 21973, 21975, 21976, 21977, 21978, 21979, 21982,
      21984, 21986, 21991, 21993, 21997, 21998, 22000, 22001, 22004, 22006,
      22008, 22009, 22010, 22011, 22012, 22015, 22018, 22019, 22020, 22021,
      22022, 22023, 22026, 22027, 22029, 22032, 22033, 22034, 22035, 22036,
      22037, 22038, 22039, 22041, 22042, 22044, 22045, 22048, 22049, 22050,
      22053, 22054, 22056, 22057, 22058, 22059, 22062, 22063, 22064, 22067,
      22069, 22071, 22072, 22074, 22076, 22077, 22078, 22080, 22081, 22082,
      22083, 22084, 22085, 22086, 22087, 22088, 22089, 22090, 22091, 22095,
      22096, 22097, 22098, 22099, 22101, 22102, 22106, 22107, 22109, 22110,
      22111, 22112, 22113, 22115, 22117, 22118, 22119, 22125, 22126, 22127,
      22128, 22130, 22131, 22132, 22133, 22135, 22136, 22137, 22138, 22141,
      22142, 22143, 22144, 22145, 22146, 22147, 22148, 22151, 22152, 22153,
      22154, 22155, 22156, 22157, 22160, 22161, 22162, 22164, 22165, 22166,
      22167, 22168, 22169, 22170, 22171, 22172, 22173, 22174, 22175, 22176,
      22177, 22178, 22180, 22181, 22182, 22183, 22184, 22185, 22186, 22187,
      22188, 22189, 22190, 22192, 22193, 22194, 22195, 22196, 22197, 22198,
      22200, 22201, 22202, 22203, 22205, 22206, 22207, 22208, 22209, 22210,
      22211, 22212, 22213, 22214, 22215, 22216, 22217, 22219, 22220, 22221,
      22222, 22223, 22224, 22225, 22226, 22227, 22229, 22230, 22232, 22233,
      22236, 22243, 22245, 22246, 22247, 22248, 22249, 22250, 22252, 22254,
      22255, 22258, 22259, 22262, 22263, 22264, 22267, 22268, 22272, 22273,
      22274, 22277, 22279, 22283, 22284, 22285, 22286, 22287, 22288, 22289,
      22290, 22291, 22292, 22293, 22294, 22295, 22296, 22297, 22298, 22299,
      22301, 22302, 22304, 22305, 22306, 22308, 22309, 22310, 22311, 22315,
      22321, 22322, 22324, 22325, 22326, 22327, 22328, 22332, 22333, 22335,
      22337, 22339, 22340, 22341, 22342, 22344, 22345, 22347, 22354, 22355,
      22356, 22357, 22358, 22360, 22361, 22370, 22371, 22373, 22375, 22380,
      22382, 22384, 22385, 22386, 22388, 22389, 22392, 22393, 22394, 22397,
      22398, 22399, 22400, 22401, 22407, 22408, 22409, 22410, 22413, 22414,
      22415, 22416, 22417, 22420, 22421, 22422, 22423, 22424, 22425, 22426,
      22428, 22429, 22430, 22431, 22437, 22440, 22442, 22444, 22447, 22448,
      22449, 22451, 22453, 22454, 22455, 22457, 22458, 22459, 22460, 22461,
      22462, 22463, 22464, 22465, 22468, 22469, 22470, 22471, 22472, 22473,
      22474, 22476, 22477, 22480, 22481, 22483, 22486, 22487, 22491, 22492,
      22494, 22497, 22498, 22499, 22501, 22502, 22503, 22504, 22505, 22506,
      22507, 22508, 22510, 22512, 22513, 22514, 22515, 22517, 22518, 22519,
      22523, 22524, 22526, 22527, 22529, 22531, 22532, 22533, 22536, 22537,
      22538, 22540, 22542, 22543, 22544, 22546, 22547, 22548, 22550, 22551,
      22552, 22554, 22555, 22556, 22557, 22559, 22562, 22563, 22565, 22566,
      22567, 22568, 22569, 22571, 22572, 22573, 22574, 22575, 22577, 22578,
      22579, 22580, 22582, 22583, 22584, 22585, 22586, 22587, 22588, 22589,
      22590, 22591, 22592, 22593, 22594, 22595, 22597, 22598, 22599, 22600,
      22601, 22602, 22603, 22606, 22607, 22608, 22610, 22611, 22613, 22614,
      22615, 22617, 22618, 22619, 22620, 22621, 22623, 22624, 22625, 22626,
      22627, 22628, 22630, 22631, 22632, 22633, 22634, 22637, 22638, 22639,
      22640, 22641, 22642, 22643, 22644, 22645, 22646, 22647, 22648, 22649,
      22650, 22651, 22652, 22653, 22655, 22658, 22660, 22662, 22663, 22664,
      22666, 22667, 22668, 22669, 22670, 22671, 22672, 22673, 22676, 22677,
      22678, 22679, 22680, 22683, 22684, 22685, 22688, 22689, 22690, 22691,
      22692, 22693, 22694, 22695, 22698, 22699, 22700, 22701, 22702, 22703,
      22704, 22705, 22706, 22707, 22708, 22709, 22710, 22711, 22712, 22713,
      22714, 22715, 22717, 22718, 22719, 22720, 22722, 22723, 22724, 22726,
      22727, 22728, 22729, 22730, 22731, 22732, 22733, 22734, 22735, 22736,
      22738, 22739, 22740, 22742, 22743, 22744, 22745, 22746, 22747, 22748,
      22749, 22750, 22751, 22752, 22753, 22754, 22755, 22757, 22758, 22759,
      22760, 22761, 22762, 22765, 22767, 22769, 22770, 22772, 22773, 22775,
      22776, 22778, 22779, 22780, 22781, 22782, 22783, 22784, 22785, 22787,
      22789, 22790, 22792, 22793, 22794, 22795, 22796, 22798, 22800, 22801,
      22802, 22803, 22807, 22808, 22811, 22813, 22814, 22816, 22817, 22818,
      22819, 22822, 22824, 22828, 22832, 22834, 22835, 22837, 22838, 22843,
      22845, 22846, 22847, 22848, 22851, 22853, 22854, 22858, 22860, 22861,
      22864, 22866, 22867, 22873, 22875, 22876, 22877, 22878, 22879, 22881,
      22883, 22884, 22886, 22887, 22888, 22889, 22890, 22891, 22892, 22893,
      22894, 22895, 22896, 22897, 22898, 22901, 22903, 22906, 22907, 22908,
      22910, 22911, 22912, 22917, 22921, 22923, 22924, 22926, 22927, 22928,
      22929, 22932, 22933, 22936, 22938, 22939, 22940, 22941, 22943, 22944,
      22945, 22946, 22950, 22951, 22956, 22957, 22960, 22961, 22963, 22964,
      22965, 22966, 22967, 22968, 22970, 22972, 22973, 22975, 22976, 22977,
      22978, 22979, 22980, 22981, 22983, 22984, 22985, 22988, 22989, 22990,
      22991, 22997, 22998, 23001, 23003, 23006, 23007, 23008, 23009, 23010,
      23012, 23014, 23015, 23017, 23018, 23019, 23021, 23022, 23023, 23024,
      23025, 23026, 23027, 23028, 23029, 23030, 23031, 23032, 23034, 23036,
      23037, 23038, 23040, 23042, 23050, 23051, 23053, 23054, 23055, 23056,
      23058, 23060, 23061, 23062, 23063, 23065, 23066, 23067, 23069, 23070,
      23073, 23074, 23076, 23078, 23079, 23080, 23082, 23083, 23084, 23085,
      23086, 23087, 23088, 23091, 23093, 23095, 23096, 23097, 23098, 23099,
      23101, 23102, 23103, 23105, 23106, 23107, 23108, 23109, 23111, 23112,
      23115, 23116, 23117, 23118, 23119, 23120, 23121, 23122, 23123, 23124,
      23126, 23127, 23128, 23129, 23131, 23132, 23133, 23134, 23135, 23136,
      23137, 23139, 23140, 23141, 23142, 23144, 23145, 23147, 23148, 23149,
      23150, 23151, 23152, 23153, 23154, 23155, 23160, 23161, 23163, 23164,
      23165, 23166, 23168, 23169, 23170, 23171, 23172, 23173, 23174, 23175,
      23176, 23177, 23178, 23179, 23180, 23181, 23182, 23183, 23184, 23185,
      23187, 23188, 23189, 23190, 23191, 23192, 23193, 23196, 23197, 23198,
      23199, 23200, 23201, 23202, 23203, 23204, 23205, 23206, 23207, 23208,
      23209, 23211, 23212, 23213, 23214, 23215, 23216, 23217, 23220, 23222,
      23223, 23225, 23226, 23227, 23228, 23229, 23231, 23232, 23235, 23236,
      23237, 23238, 23239, 23240, 23242, 23243, 23245, 23246, 23247, 23248,
      23249, 23251, 23253, 23255, 23257, 23258, 23259, 23261, 23262, 23263,
      23266, 23268, 23269, 23271, 23272, 23274, 23276, 23277, 23278, 23279,
      23280, 23282, 23283, 23284, 23285, 23286, 23287, 23288, 23289, 23290,
      23291, 23292, 23293, 23294, 23295, 23296, 23297, 23298, 23299, 23300,
      23301, 23302, 23303, 23304, 23306, 23307, 23308, 23309, 23310, 23311,
      23312, 23313, 23314, 23315, 23316, 23317, 23320, 23321, 23322, 23323,
      23324, 23325, 23326, 23327, 23328, 23329, 23330, 23331, 23332, 23333,
      23334, 23335, 23336, 23337, 23338, 23339, 23340, 23341, 23342, 23343,
      23344, 23345, 23347, 23349, 23350, 23352, 23353, 23354, 23355, 23356,
      23357, 23358, 23359, 23361, 23362, 23363, 23364, 23365, 23366, 23367,
      23368, 23369, 23370, 23371, 23372, 23373, 23374, 23375, 23378, 23382,
      23390, 23392, 23393, 23399, 23400, 23403, 23405, 23406, 23407, 23410,
      23412, 23414, 23415, 23416, 23417, 23419, 23420, 23422, 23423, 23426,
      23430, 23434, 23437, 23438, 23440, 23441, 23442, 23444, 23446, 23455,
      23463, 23464, 23465, 23468, 23469, 23470, 23471, 23473, 23474, 23479,
      23482, 23483, 23484, 23488, 23489, 23491, 23496, 23497, 23498, 23499,
      23501, 23502, 23503, 23505, 23508, 23509, 23510, 23511, 23512, 23513,
      23514, 23515, 23516, 23520, 23522, 23523, 23526, 23527, 23529, 23530,
      23531, 23532, 23533, 23535, 23537, 23538, 23539, 23540, 23541, 23542,
      23543, 23549, 23550, 23552, 23554, 23555, 23557, 23559, 23560, 23563,
      23564, 23565, 23566, 23568, 23570, 23571, 23575, 23577, 23579, 23582,
      23583, 23584, 23585, 23587, 23590, 23592, 23593, 23594, 23595, 23597,
      23598, 23599, 23600, 23602, 23603, 23605, 23606, 23607, 23619, 23620,
      23622, 23623, 23628, 23629, 23634, 23635, 23636, 23638, 23639, 23640,
      23642, 23643, 23644, 23645, 23647, 23650, 23652, 23655, 23656, 23657,
      23658, 23659, 23660, 23661, 23664, 23666, 23667, 23668, 23669, 23670,
      23671, 23672, 23675, 23676, 23677, 23678, 23680, 23683, 23684, 23685,
      23686, 23687, 23689, 23690, 23691, 23694, 23695, 23698, 23699, 23701,
      23709, 23710, 23711, 23712, 23713, 23716, 23717, 23718, 23719, 23720,
      23722, 23726, 23727, 23728, 23730, 23732, 23734, 23737, 23738, 23739,
      23740, 23742, 23744, 23746, 23747, 23749, 23750, 23751, 23752, 23753,
      23754, 23756, 23757, 23758, 23759, 23760, 23761, 23763, 23764, 23765,
      23766, 23767, 23768, 23770, 23771, 23772, 23773, 23774, 23775, 23776,
      23778, 23779, 23783, 23785, 23787, 23788, 23790, 23791, 23793, 23794,
      23795, 23796, 23797, 23798, 23799, 23800, 23801, 23802, 23804, 23805,
      23806, 23807, 23808, 23809, 23812, 23813, 23816, 23817, 23818, 23819,
      23820, 23821, 23823, 23824, 23825, 23826, 23827, 23829, 23831, 23832,
      23833, 23834, 23836, 23837, 23839, 23840, 23841, 23842, 23843, 23845,
      23848, 23850, 23851, 23852, 23855, 23856, 23857, 23858, 23859, 23861,
      23862, 23863, 23864, 23865, 23866, 23867, 23868, 23871, 23872, 23873,
      23874, 23875, 23876, 23877, 23878, 23880, 23881, 23885, 23886, 23887,
      23888, 23889, 23890, 23891, 23892, 23893, 23894, 23895, 23897, 23898,
      23900, 23902, 23903, 23904, 23905, 23906, 23907, 23908, 23909, 23910,
      23911, 23912, 23914, 23917, 23918, 23920, 23921, 23922, 23923, 23925,
      23926, 23927, 23928, 23929, 23930, 23931, 23932, 23933, 23934, 23935,
      23936, 23937, 23939, 23940, 23941, 23942, 23943, 23944, 23945, 23946,
      23947, 23948, 23949, 23950, 23951, 23952, 23953, 23954, 23955, 23956,
      23957, 23958, 23959, 23960, 23962, 23963, 23964, 23966, 23967, 23968,
      23969, 23970, 23971, 23972, 23973, 23974, 23975, 23976, 23977, 23978,
      23979, 23980, 23981, 23982, 23983, 23984, 23985, 23986, 23987, 23988,
      23989, 23990, 23992, 23993, 23994, 23995, 23996, 23997, 23998, 23999,
      24000, 24001, 24002, 24003, 24004, 24006, 24007, 24008, 24009, 24010,
      24011, 24012, 24014, 24015, 24016, 24017, 24018, 24019, 24020, 24021,
      24022, 24023, 24024, 24025, 24026, 24028, 24031, 24032, 24035, 24036,
      24042, 24044, 24045, 24048, 24053, 24054, 24056, 24057, 24058, 24059,
      24060, 24063, 24064, 24068, 24071, 24073, 24074, 24075, 24077, 24078,
      24082, 24083, 24087, 24094, 24095, 24096, 24097, 24098, 24099, 24100,
      24101, 24104, 24105, 24106, 24107, 24108, 24111, 24112, 24114, 24115,
      24116, 24117, 24118, 24121, 24122, 24126, 24127, 24128, 24129, 24131,
      24134, 24135, 24136, 24137, 24138, 24139, 24141, 24142, 24143, 24144,
      24145, 24146, 24147, 24150, 24151, 24152, 24153, 24154, 24156, 24157,
      24159, 24160, 24163, 24164, 24165, 24166, 24167, 24168, 24169, 24170,
      24171, 24172, 24173, 24174, 24175, 24176, 24177, 24181, 24183, 24185,
      24190, 24193, 24194, 24195, 24197, 24200, 24201, 24204, 24205, 24206,
      24210, 24216, 24219, 24221, 24225, 24226, 24227, 24228, 24232, 24233,
      24234, 24235, 24236, 24238, 24239, 24240, 24241, 24242, 24244, 24250,
      24251, 24252, 24253, 24255, 24256, 24257, 24258, 24259, 24260, 24261,
      24262, 24263, 24264, 24267, 24268, 24269, 24270, 24271, 24272, 24276,
      24277, 24279, 24280, 24281, 24282, 24284, 24285, 24286, 24287, 24288,
      24289, 24290, 24291, 24292, 24293, 24294, 24295, 24297, 24299, 24300,
      24301, 24302, 24303, 24304, 24305, 24306, 24307, 24309, 24312, 24313,
      24315, 24316, 24317, 24325, 24326, 24327, 24329, 24332, 24333, 24334,
      24336, 24338, 24340, 24342, 24345, 24346, 24348, 24349, 24350, 24353,
      24354, 24355, 24356, 24360, 24363, 24364, 24366, 24368, 24370, 24371,
      24372, 24373, 24374, 24375, 24376, 24379, 24381, 24382, 24383, 24385,
      24386, 24387, 24388, 24389, 24390, 24391, 24392, 24393, 24394, 24395,
      24396, 24397, 24398, 24399, 24401, 24404, 24409, 24410, 24411, 24412,
      24414, 24415, 24416, 24419, 24421, 24423, 24424, 24427, 24430, 24431,
      24434, 24436, 24437, 24438, 24440, 24442, 24445, 24446, 24447, 24451,
      24454, 24461, 24462, 24463, 24465, 24467, 24468, 24470, 24474, 24475,
      24477, 24478, 24479, 24480, 24482, 24483, 24484, 24485, 24486, 24487,
      24489, 24491, 24492, 24495, 24496, 24497, 24498, 24499, 24500, 24502,
      24504, 24505, 24506, 24507, 24510, 24511, 24512, 24513, 24514, 24519,
      24520, 24522, 24523, 24526, 24531, 24532, 24533, 24538, 24539, 24540,
      24542, 24543, 24546, 24547, 24549, 24550, 24552, 24553, 24556, 24559,
      24560, 24562, 24563, 24564, 24566, 24567, 24569, 24570, 24572, 24583,
      24584, 24585, 24587, 24588, 24592, 24593, 24595, 24599, 24600, 24602,
      24606, 24607, 24610, 24611, 24612, 24620, 24621, 24622, 24624, 24625,
      24626, 24627, 24628, 24630, 24631, 24632, 24633, 24634, 24637, 24638,
      24640, 24644, 24645, 24646, 24647, 24648, 24649, 24650, 24652, 24654,
      24655, 24657, 24659, 24660, 24662, 24663, 24664, 24667, 24668, 24670,
      24671, 24672, 24673, 24677, 24678, 24686, 24689, 24690, 24692, 24693,
      24695, 24702, 24704, 24705, 24706, 24709, 24710, 24711, 24712, 24714,
      24715, 24718, 24719, 24720, 24721, 24723, 24725, 24727, 24728, 24729,
      24732, 24734, 24737, 24738, 24740, 24741, 24743, 24745, 24746, 24750,
      24752, 24755, 24757, 24758, 24759, 24761, 24762, 24765, 24766, 24767,
      24768, 24769, 24770, 24771, 24772, 24775, 24776, 24777, 24780, 24781,
      24782, 24783, 24784, 24786, 24787, 24788, 24790, 24791, 24793, 24795,
      24798, 24801, 24802, 24803, 24804, 24805, 24810, 24817, 24818, 24821,
      24823, 24824, 24827, 24828, 24829, 24830, 24831, 24834, 24835, 24836,
      24837, 24839, 24842, 24843, 24844, 24848, 24849, 24850, 24851, 24852,
      24854, 24855, 24856, 24857, 24859, 24860, 24861, 24862, 24865, 24866,
      24869, 24872, 24873, 24874, 24876, 24877, 24878, 24879, 24880, 24881,
      24882, 24883, 24884, 24885, 24886, 24887, 24888, 24889, 24890, 24891,
      24892, 24893, 24894, 24896, 24897, 24898, 24899, 24900, 24901, 24902,
      24903, 24905, 24907, 24909, 24911, 24912, 24914, 24915, 24916, 24918,
      24919, 24920, 24921, 24922, 24923, 24924, 24926, 24927, 24928, 24929,
      24931, 24932, 24933, 24934, 24937, 24938, 24939, 24940, 24941, 24942,
      24943, 24945, 24946, 24947, 24948, 24950, 24952, 24953, 24954, 24955,
      24956, 24957, 24958, 24959, 24960, 24961, 24962, 24963, 24964, 24965,
      24966, 24967, 24968, 24969, 24970, 24972, 24973, 24975, 24976, 24977,
      24978, 24979, 24981, 24982, 24983, 24984, 24985, 24986, 24987, 24988,
      24990, 24991, 24992, 24993, 24994, 24995, 24996, 24997, 24998, 25002,
      25003, 25005, 25006, 25007, 25008, 25009, 25010, 25011, 25012, 25013,
      25014, 25016, 25017, 25018, 25019, 25020, 25021, 25023, 25024, 25025,
      25027, 25028, 25029, 25030, 25031, 25033, 25036, 25037, 25038, 25039,
      25040, 25043, 25045, 25046, 25047, 25048, 25049, 25050, 25051, 25052,
      25053, 25054, 25055, 25056, 25057, 25058, 25059, 25060, 25061, 25063,
      25064, 25065, 25066, 25067, 25068, 25069, 25070, 25071, 25072, 25073,
      25074, 25075, 25076, 25078, 25079, 25080, 25081, 25082, 25083, 25084,
      25085, 25086, 25088, 25089, 25090, 25091, 25092, 25093, 25095, 25097,
      25107, 25108, 25113, 25116, 25117, 25118, 25120, 25123, 25126, 25127,
      25128, 25129, 25131, 25133, 25135, 25136, 25137, 25138, 25141, 25142,
      25144, 25145, 25146, 25147, 25148, 25154, 25156, 25157, 25158, 25162,
      25167, 25168, 25173, 25174, 25175, 25177, 25178, 25180, 25181, 25182,
      25183, 25184, 25185, 25186, 25188, 25189, 25192, 25201, 25202, 25204,
      25205, 25207, 25208, 25210, 25211, 25213, 25217, 25218, 25219, 25221,
      25222, 25223, 25224, 25227, 25228, 25229, 25230, 25231, 25232, 25236,
      25241, 25244, 25245, 25246, 25251, 25254, 25255, 25257, 25258, 25261,
      25262, 25263, 25264, 25266, 25267, 25268, 25270, 25271, 25272, 25274,
      25278, 25280, 25281, 25283, 25291, 25295, 25297, 25301, 25309, 25310,
      25312, 25313, 25316, 25322, 25323, 25328, 25330, 25333, 25336, 25337,
      25338, 25339, 25344, 25347, 25348, 25349, 25350, 25354, 25355, 25356,
      25357, 25359, 25360, 25362, 25363, 25364, 25365, 25367, 25368, 25369,
      25372, 25382, 25383, 25385, 25388, 25389, 25390, 25392, 25393, 25395,
      25396, 25397, 25398, 25399, 25400, 25403, 25404, 25406, 25407, 25408,
      25409, 25412, 25415, 25416, 25418, 25425, 25426, 25427, 25428, 25430,
      25431, 25432, 25433, 25434, 25435, 25436, 25437, 25440, 25444, 25445,
      25446, 25448, 25450, 25451, 25452, 25455, 25456, 25458, 25459, 25460,
      25461, 25464, 25465, 25468, 25469, 25470, 25471, 25473, 25475, 25476,
      25477, 25478, 25483, 25485, 25489, 25491, 25492, 25493, 25495, 25497,
      25498, 25499, 25500, 25501, 25502, 25503, 25505, 25508, 25510, 25515,
      25519, 25521, 25522, 25525, 25526, 25529, 25531, 25533, 25535, 25536,
      25537, 25538, 25539, 25541, 25543, 25544, 25546, 25547, 25548, 25553,
      25555, 25556, 25557, 25559, 25560, 25561, 25562, 25563, 25564, 25565,
      25567, 25570, 25572, 25573, 25574, 25575, 25576, 25579, 25580, 25582,
      25583, 25584, 25585, 25587, 25589, 25591, 25593, 25594, 25595, 25596,
      25598, 25603, 25604, 25606, 25607, 25608, 25609, 25610, 25613, 25614,
      25617, 25618, 25621, 25622, 25623, 25624, 25625, 25626, 25629, 25631,
      25634, 25635, 25636, 25637, 25639, 25640, 25641, 25643, 25646, 25647,
      25648, 25649, 25650, 25651, 25653, 25654, 25655, 25656, 25657, 25659,
      25660, 25662, 25664, 25666, 25667, 25673, 25675, 25676, 25677, 25678,
      25679, 25680, 25681, 25683, 25685, 25686, 25687, 25689, 25690, 25691,
      25692, 25693, 25695, 25696, 25697, 25698, 25699, 25700, 25701, 25702,
      25704, 25706, 25707, 25708, 25710, 25711, 25712, 25713, 25714, 25715,
      25716, 25717, 25718, 25719, 25723, 25724, 25725, 25726, 25727, 25728,
      25729, 25731, 25734, 25736, 25737, 25738, 25739, 25740, 25741, 25742,
      25743, 25744, 25747, 25748, 25751, 25752, 25754, 25755, 25756, 25757,
      25759, 25760, 25761, 25762, 25763, 25765, 25766, 25767, 25768, 25770,
      25771, 25775, 25777, 25778, 25779, 25780, 25782, 25785, 25787, 25789,
      25790, 25791, 25793, 25795, 25796, 25798, 25799, 25800, 25801, 25802,
      25803, 25804, 25807, 25809, 25811, 25812, 25813, 25814, 25817, 25818,
      25819, 25820, 25821, 25823, 25824, 25825, 25827, 25829, 25831, 25832,
      25833, 25834, 25835, 25836, 25837, 25838, 25839, 25840, 25841, 25842,
      25843, 25844, 25845, 25846, 25847, 25848, 25849, 25850, 25851, 25852,
      25853, 25854, 25855, 25857, 25858, 25859, 25860, 25861, 25862, 25863,
      25864, 25866, 25867, 25868, 25869, 25870, 25871, 25872, 25873, 25875,
      25876, 25877, 25878, 25879, 25881, 25882, 25883, 25884, 25885, 25886,
      25887, 25888, 25889, 25890, 25891, 25892, 25894, 25895, 25896, 25897,
      25898, 25900, 25901, 25904, 25905, 25906, 25907, 25911, 25914, 25916,
      25917, 25920, 25921, 25922, 25923, 25924, 25926, 25927, 25930, 25931,
      25933, 25934, 25936, 25938, 25939, 25940, 25943, 25944, 25946, 25948,
      25951, 25952, 25953, 25956, 25957, 25959, 25960, 25961, 25962, 25965,
      25966, 25967, 25969, 25971, 25973, 25974, 25976, 25977, 25978, 25979,
      25980, 25981, 25982, 25983, 25984, 25985, 25986, 25987, 25988, 25989,
      25990, 25992, 25993, 25994, 25997, 25998, 25999, 26002, 26004, 26005,
      26006, 26008, 26010, 26013, 26014, 26016, 26018, 26019, 26022, 26024,
      26026, 26028, 26030, 26033, 26034, 26035, 26036, 26037, 26038, 26039,
      26040, 26042, 26043, 26046, 26047, 26048, 26050, 26055, 26056, 26057,
      26058, 26061, 26064, 26065, 26067, 26068, 26069, 26072, 26073, 26074,
      26075, 26076, 26077, 26078, 26079, 26081, 26083, 26084, 26090, 26091,
      26098, 26099, 26100, 26101, 26104, 26105, 26107, 26108, 26109, 26110,
      26111, 26113, 26116, 26117, 26119, 26120, 26121, 26123, 26125, 26128,
      26129, 26130, 26134, 26135, 26136, 26138, 26139, 26140, 26142, 26145,
      26146, 26147, 26148, 26150, 26153, 26154, 26155, 26156, 26158, 26160,
      26162, 26163, 26167, 26168, 26169, 26170, 26171, 26173, 26175, 26176,
      26178, 26180, 26181, 26182, 26183, 26184, 26185, 26186, 26189, 26190,
      26192, 26193, 26200, 26201, 26203, 26204, 26205, 26206, 26208, 26210,
      26211, 26213, 26215, 26217, 26218, 26219, 26220, 26221, 26225, 26226,
      26227, 26229, 26232, 26233, 26235, 26236, 26237, 26239, 26240, 26241,
      26243, 26245, 26246, 26248, 26249, 26250, 26251, 26253, 26254, 26255,
      26256, 26258, 26259, 26260, 26261, 26264, 26265, 26266, 26267, 26268,
      26270, 26271, 26272, 26273, 26274, 26275, 26276, 26277, 26278, 26281,
      26282, 26283, 26284, 26285, 26287, 26288, 26289, 26290, 26291, 26293,
      26294, 26295, 26296, 26298, 26299, 26300, 26301, 26303, 26304, 26305,
      26306, 26307, 26308, 26309, 26310, 26311, 26312, 26313, 26314, 26315,
      26316, 26317, 26318, 26319, 26320, 26321, 26322, 26323, 26324, 26325,
      26326, 26327, 26328, 26330, 26334, 26335, 26336, 26337, 26338, 26339,
      26340, 26341, 26343, 26344, 26346, 26347, 26348, 26349, 26350, 26351,
      26353, 26357, 26358, 26360, 26362, 26363, 26365, 26369, 26370, 26371,
      26372, 26373, 26374, 26375, 26380, 26382, 26383, 26385, 26386, 26387,
      26390, 26392, 26393, 26394, 26396, 26398, 26400, 26401, 26402, 26403,
      26404, 26405, 26407, 26409, 26414, 26416, 26418, 26419, 26422, 26423,
      26424, 26425, 26427, 26428, 26430, 26431, 26433, 26436, 26437, 26439,
      26442, 26443, 26445, 26450, 26452, 26453, 26455, 26456, 26457, 26458,
      26459, 26461, 26466, 26467, 26468, 26470, 26471, 26475, 26476, 26478,
      26481, 26484, 26486, 26488, 26489, 26490, 26491, 26493, 26496, 26498,
      26499, 26501, 26502, 26504, 26506, 26508, 26509, 26510, 26511, 26513,
      26514, 26515, 26516, 26518, 26521, 26523, 26527, 26528, 26529, 26532,
      26534, 26537, 26540, 26542, 26545, 26546, 26548, 26553, 26554, 26555,
      26556, 26557, 26558, 26559, 26560, 26562, 26565, 26566, 26567, 26568,
      26569, 26570, 26571, 26572, 26573, 26574, 26581, 26582, 26583, 26587,
      26591, 26593, 26595, 26596, 26598, 26599, 26600, 26602, 26603, 26605,
      26606, 26610, 26613, 26614, 26615, 26616, 26617, 26618, 26619, 26620,
      26622, 26625, 26626, 26627, 26628, 26630, 26637, 26640, 26642, 26644,
      26645, 26648, 26649, 26650, 26651, 26652, 26654, 26655, 26656, 26658,
      26659, 26660, 26661, 26662, 26663, 26664, 26667, 26668, 26669, 26670,
      26671, 26672, 26673, 26676, 26677, 26678, 26682, 26683, 26687, 26695,
      26699, 26701, 26703, 26706, 26710, 26711, 26712, 26713, 26714, 26715,
      26716, 26717, 26718, 26719, 26730, 26732, 26733, 26734, 26735, 26736,
      26737, 26738, 26739, 26741, 26744, 26745, 26746, 26747, 26748, 26749,
      26750, 26751, 26752, 26754, 26756, 26759, 26760, 26761, 26762, 26763,
      26764, 26765, 26766, 26768, 26769, 26770, 26772, 26773, 26774, 26776,
      26777, 26778, 26779, 26780, 26781, 26782, 26783, 26784, 26785, 26787,
      26788, 26789, 26793, 26794, 26795, 26796, 26798, 26801, 26802, 26804,
      26806, 26807, 26808, 26809, 26810, 26811, 26812, 26813, 26814, 26815,
      26817, 26819, 26820, 26821, 26822, 26823, 26824, 26826, 26828, 26830,
      26831, 26832, 26833, 26835, 26836, 26838, 26839, 26841, 26843, 26844,
      26845, 26846, 26847, 26849, 26850, 26852, 26853, 26854, 26855, 26856,
      26857, 26858, 26859, 26860, 26861, 26863, 26866, 26867, 26868, 26870,
      26871, 26872, 26875, 26877, 26878, 26879, 26880, 26882, 26883, 26884,
      26886, 26887, 26888, 26889, 26890, 26892, 26895, 26897, 26899, 26900,
      26901, 26902, 26903, 26904, 26905, 26906, 26907, 26908, 26909, 26910,
      26913, 26914, 26915, 26917, 26918, 26919, 26920, 26921, 26922, 26923,
      26924, 26926, 26927, 26929, 26930, 26931, 26933, 26934, 26935, 26936,
      26938, 26939, 26940, 26942, 26944, 26945, 26947, 26948, 26949, 26950,
      26951, 26952, 26953, 26954, 26955, 26956, 26957, 26958, 26959, 26960,
      26961, 26962, 26963, 26965, 26966, 26968, 26969, 26971, 26972, 26975,
      26977, 26978, 26980, 26981, 26983, 26984, 26985, 26986, 26988, 26989,
      26991, 26992, 26994, 26995, 26996, 26997, 26998, 27002, 27003, 27005,
      27006, 27007, 27009, 27011, 27013, 27018, 27019, 27020, 27022, 27023,
      27024, 27025, 27026, 27027, 27030, 27031, 27033, 27034, 27037, 27038,
      27039, 27040, 27041, 27042, 27043, 27044, 27045, 27046, 27049, 27050,
      27052, 27054, 27055, 27056, 27058, 27059, 27061, 27062, 27064, 27065,
      27066, 27068, 27069, 27070, 27071, 27072, 27074, 27075, 27076, 27077,
      27078, 27079, 27080, 27081, 27083, 27085, 27087, 27089, 27090, 27091,
      27093, 27094, 27095, 27096, 27097, 27098, 27100, 27101, 27102, 27105,
      27106, 27107, 27108, 27109, 27110, 27111, 27112, 27113, 27114, 27115,
      27116, 27118, 27119, 27120, 27121, 27123, 27124, 27125, 27126, 27127,
      27128, 27129, 27130, 27131, 27132, 27134, 27136, 27137, 27138, 27139,
      27140, 27141, 27142, 27143, 27144, 27145, 27147, 27148, 27149, 27150,
      27151, 27152, 27153, 27154, 27155, 27156, 27157, 27158, 27161, 27162,
      27163, 27164, 27165, 27166, 27168, 27170, 27171, 27172, 27173, 27174,
      27175, 27177, 27179, 27180, 27181, 27182, 27184, 27186, 27187, 27188,
      27190, 27191, 27192, 27193, 27194, 27195, 27196, 27199, 27200, 27201,
      27202, 27203, 27205, 27206, 27208, 27209, 27210, 27211, 27212, 27213,
      27214, 27215, 27217, 27218, 27219, 27220, 27221, 27222, 27223, 27226,
      27228, 27229, 27230, 27231, 27232, 27234, 27235, 27236, 27238, 27239,
      27240, 27241, 27242, 27243, 27244, 27245, 27246, 27247, 27248, 27250,
      27251, 27252, 27253, 27254, 27255, 27256, 27258, 27259, 27261, 27262,
      27263, 27265, 27266, 27267, 27269, 27270, 27271, 27272, 27273, 27274,
      27275, 27276, 27277, 27279, 27282, 27283, 27284, 27285, 27286, 27288,
      27289, 27290, 27291, 27292, 27293, 27294, 27295, 27297, 27298, 27299,
      27300, 27301, 27302, 27303, 27304, 27306, 27309, 27310, 27311, 27312,
      27313, 27314, 27315, 27316, 27317, 27318, 27319, 27320, 27321, 27322,
      27323, 27324, 27325, 27326, 27327, 27328, 27329, 27330, 27331, 27332,
      27333, 27334, 27335, 27336, 27337, 27338, 27339, 27340, 27341, 27342,
      27343, 27344, 27345, 27346, 27347, 27348, 27349, 27350, 27351, 27352,
      27353, 27354, 27355, 27356, 27357, 27358, 27359, 27360, 27361, 27362,
      27363, 27364, 27365, 27366, 27367, 27368, 27369, 27370, 27371, 27372,
      27373, 27374, 27375, 27376, 27377, 27378, 27379, 27380, 27381, 27382,
      27383, 27384, 27385, 27386, 27387, 27388, 27389, 27390, 27391, 27392,
      27393, 27394, 27395, 27396, 27397, 27398, 27399, 27400, 27401, 27402,
      27403, 27404, 27405, 27406, 27407, 27408, 27409, 27410, 27411, 27412,
      27413, 27414, 27415, 27416, 27417, 27418, 27419, 27420, 27421, 27422,
      27423, 27429, 27430, 27432, 27433, 27434, 27435, 27436, 27437, 27438,
      27439, 27440, 27441, 27443, 27444, 27445, 27446, 27448, 27451, 27452,
      27453, 27455, 27456, 27457, 27458, 27460, 27461, 27464, 27466, 27467,
      27469, 27470, 27471, 27472, 27473, 27474, 27475, 27476, 27477, 27478,
      27479, 27480, 27482, 27483, 27484, 27485, 27486, 27487, 27488, 27489,
      27496, 27497, 27499, 27500, 27501, 27502, 27503, 27504, 27505, 27506,
      27507, 27508, 27509, 27510, 27511, 27512, 27514, 27517, 27518, 27519,
      27520, 27525, 27528, 27532, 27534, 27535, 27536, 27537, 27540, 27541,
      27543, 27544, 27545, 27548, 27549, 27550, 27551, 27552, 27554, 27555,
      27556, 27557, 27558, 27559, 27560, 27561, 27563, 27564, 27565, 27566,
      27567, 27568, 27569, 27570, 27574, 27576, 27577, 27578, 27579, 27580,
      27581, 27582, 27584, 27587, 27588, 27590, 27591, 27592, 27593, 27594,
      27596, 27598, 27600, 27601, 27608, 27610, 27612, 27613, 27614, 27615,
      27616, 27618, 27619, 27620, 27621, 27622, 27623, 27624, 27625, 27628,
      27629, 27630, 27632, 27633, 27634, 27636, 27638, 27639, 27640, 27642,
      27643, 27644, 27646, 27647, 27648, 27649, 27650, 27651, 27652, 27656,
      27657, 27658, 27659, 27660, 27662, 27666, 27671, 27676, 27677, 27678,
      27680, 27683, 27685, 27691, 27692, 27693, 27697, 27699, 27702, 27703,
      27705, 27706, 27707, 27708, 27710, 27711, 27715, 27716, 27717, 27720,
      27723, 27724, 27725, 27726, 27727, 27729, 27730, 27731, 27734, 27736,
      27737, 27738, 27746, 27747, 27749, 27750, 27751, 27755, 27756, 27757,
      27758, 27759, 27761, 27763, 27765, 27767, 27768, 27770, 27771, 27772,
      27775, 27776, 27780, 27783, 27786, 27787, 27789, 27790, 27793, 27794,
      27797, 27798, 27799, 27800, 27802, 27804, 27805, 27806, 27808, 27810,
      27816, 27820, 27823, 27824, 27828, 27829, 27830, 27831, 27834, 27840,
      27841, 27842, 27843, 27846, 27847, 27848, 27851, 27853, 27854, 27855,
      27857, 27858, 27864, 27865, 27866, 27868, 27869, 27871, 27876, 27878,
      27879, 27881, 27884, 27885, 27890, 27892, 27897, 27903, 27904, 27906,
      27907, 27909, 27910, 27912, 27913, 27914, 27917, 27919, 27920, 27921,
      27923, 27924, 27925, 27926, 27928, 27932, 27933, 27935, 27936, 27937,
      27938, 27939, 27940, 27942, 27944, 27945, 27948, 27949, 27951, 27952,
      27956, 27958, 27959, 27960, 27962, 27967, 27968, 27970, 27972, 27977,
      27980, 27984, 27989, 27990, 27991, 27992, 27995, 27997, 27999, 28001,
      28002, 28004, 28005, 28007, 28008, 28011, 28012, 28013, 28016, 28017,
      28018, 28019, 28021, 28022, 28025, 28026, 28027, 28029, 28030, 28031,
      28032, 28033, 28035, 28036, 28038, 28039, 28042, 28043, 28045, 28047,
      28048, 28050, 28054, 28055, 28056, 28057, 28058, 28060, 28066, 28069,
      28076, 28077, 28080, 28081, 28083, 28084, 28086, 28087, 28089, 28090,
      28091, 28092, 28093, 28094, 28097, 28098, 28099, 28104, 28105, 28106,
      28109, 28110, 28111, 28112, 28114, 28115, 28116, 28117, 28119, 28122,
      28123, 28124, 28127, 28130, 28131, 28133, 28135, 28136, 28137, 28138,
      28141, 28143, 28144, 28146, 28148, 28149, 28150, 28152, 28154, 28157,
      28158, 28159, 28160, 28161, 28162, 28163, 28164, 28166, 28167, 28168,
      28169, 28171, 28175, 28178, 28179, 28181, 28184, 28185, 28187, 28188,
      28190, 28191, 28194, 28198, 28199, 28200, 28202, 28204, 28206, 28208,
      28209, 28211, 28213, 28214, 28215, 28217, 28219, 28220, 28221, 28222,
      28223, 28224, 28225, 28226, 28229, 28230, 28231, 28232, 28233, 28234,
      28235, 28236, 28239, 28240, 28241, 28242, 28245, 28247, 28249, 28250,
      28252, 28253, 28254, 28256, 28257, 28258, 28259, 28260, 28261, 28262,
      28263, 28264, 28265, 28266, 28268, 28269, 28271, 28272, 28273, 28274,
      28275, 28276, 28277, 28278, 28279, 28280, 28281, 28282, 28283, 28284,
      28285, 28288, 28289, 28290, 28292, 28295, 28296, 28298, 28299, 28300,
      28301, 28302, 28305, 28306, 28307, 28308, 28309, 28310, 28311, 28313,
      28314, 28315, 28317, 28318, 28320, 28321, 28323, 28324, 28326, 28328,
      28329, 28331, 28332, 28333, 28334, 28336, 28339, 28341, 28344, 28345,
      28348, 28350, 28351, 28352, 28355, 28356, 28357, 28358, 28360, 28361,
      28362, 28364, 28365, 28366, 28368, 28370, 28374, 28376, 28377, 28379,
      28380, 28381, 28387, 28391, 28394, 28395, 28396, 28397, 28398, 28399,
      28400, 28401, 28402, 28403, 28405, 28406, 28407, 28408, 28410, 28411,
      28412, 28413, 28414, 28415, 28416, 28417, 28419, 28420, 28421, 28423,
      28424, 28426, 28427, 28428, 28429, 28430, 28432, 28433, 28434, 28438,
      28439, 28440, 28441, 28442, 28443, 28444, 28445, 28446, 28447, 28449,
      28450, 28451, 28453, 28454, 28455, 28456, 28460, 28462, 28464, 28466,
      28468, 28469, 28471, 28472, 28473, 28474, 28475, 28476, 28477, 28479,
      28480, 28481, 28482, 28483, 28484, 28485, 28488, 28489, 28490, 28492,
      28494, 28495, 28496, 28497, 28498, 28499, 28500, 28501, 28502, 28503,
      28505, 28506, 28507, 28509, 28511, 28512, 28513, 28515, 28516, 28517,
      28519, 28520, 28521, 28522, 28523, 28524, 28527, 28528, 28529, 28531,
      28533, 28534, 28535, 28537, 28539, 28541, 28542, 28543, 28544, 28545,
      28546, 28547, 28549, 28550, 28551, 28554, 28555, 28559, 28560, 28561,
      28562, 28563, 28564, 28565, 28566, 28567, 28568, 28569, 28570, 28571,
      28573, 28574, 28575, 28576, 28578, 28579, 28580, 28581, 28582, 28584,
      28585, 28586, 28587, 28588, 28589, 28590, 28591, 28592, 28593, 28594,
      28596, 28597, 28599, 28600, 28602, 28603, 28604, 28605, 28606, 28607,
      28609, 28611, 28612, 28613, 28614, 28615, 28616, 28618, 28619, 28620,
      28621, 28622, 28623, 28624, 28627, 28628, 28629, 28630, 28631, 28632,
      28633, 28634, 28635, 28636, 28637, 28639, 28642, 28643, 28644, 28645,
      28646, 28647, 28648, 28649, 28650, 28651, 28652, 28653, 28656, 28657,
      28658, 28659, 28660, 28661, 28662, 28663, 28664, 28665, 28666, 28667,
      28668, 28669, 28670, 28671, 28672, 28673, 28674, 28675, 28676, 28677,
      28678, 28679, 28680, 28681, 28682, 28683, 28684, 28685, 28686, 28687,
      28688, 28690, 28691, 28692, 28693, 28694, 28695, 28696, 28697, 28700,
      28701, 28702, 28703, 28704, 28705, 28706, 28708, 28709, 28710, 28711,
      28712, 28713, 28714, 28715, 28716, 28717, 28718, 28719, 28720, 28721,
      28722, 28723, 28724, 28726, 28727, 28728, 28730, 28731, 28732, 28733,
      28734, 28735, 28736, 28737, 28738, 28739, 28740, 28741, 28742, 28743,
      28744, 28745, 28746, 28747, 28749, 28750, 28752, 28753, 28754, 28755,
      28756, 28757, 28758, 28759, 28760, 28761, 28762, 28763, 28764, 28765,
      28767, 28768, 28769, 28770, 28771, 28772, 28773, 28774, 28775, 28776,
      28777, 28778, 28782, 28785, 28786, 28787, 28788, 28791, 28793, 28794,
      28795, 28797, 28801, 28802, 28803, 28804, 28806, 28807, 28808, 28811,
      28812, 28813, 28815, 28816, 28817, 28819, 28823, 28824, 28826, 28827,
      28830, 28831, 28832, 28833, 28834, 28835, 28836, 28837, 28838, 28839,
      28840, 28841, 28842, 28848, 28850, 28852, 28853, 28854, 28858, 28862,
      28863, 28868, 28869, 28870, 28871, 28873, 28875, 28876, 28877, 28878,
      28879, 28880, 28881, 28882, 28883, 28884, 28885, 28886, 28887, 28890,
      28892, 28893, 28894, 28896, 28897, 28898, 28899, 28901, 28906, 28910,
      28912, 28913, 28914, 28915, 28916, 28917, 28918, 28920, 28922, 28923,
      28924, 28926, 28927, 28928, 28929, 28930, 28931, 28932, 28933, 28934,
      28935, 28936, 28939, 28940, 28941, 28942, 28943, 28945, 28946, 28948,
      28951, 28955, 28956, 28957, 28958, 28959, 28960, 28961, 28962, 28963,
      28964, 28965, 28967, 28968, 28969, 28970, 28971, 28972, 28973, 28974,
      28978, 28979, 28980, 28981, 28983, 28984, 28985, 28986, 28987, 28988,
      28989, 28990, 28991, 28992, 28993, 28994, 28995, 28996, 28998, 28999,
      29000, 29001, 29003, 29005, 29007, 29008, 29009, 29010, 29011, 29012,
      29013, 29014, 29015, 29016, 29017, 29018, 29019, 29021, 29023, 29024,
      29025, 29026, 29027, 29029, 29033, 29034, 29035, 29036, 29037, 29039,
      29040, 29041, 29044, 29045, 29046, 29047, 29049, 29051, 29052, 29054,
      29055, 29056, 29057, 29058, 29059, 29061, 29062, 29063, 29064, 29065,
      29067, 29068, 29069, 29070, 29072, 29073, 29074, 29075, 29077, 29078,
      29079, 29082, 29083, 29084, 29085, 29086, 29089, 29090, 29091, 29092,
      29093, 29094, 29095, 29097, 29098, 29099, 29101, 29102, 29103, 29104,
      29105, 29106, 29108, 29110, 29111, 29112, 29114, 29115, 29116, 29117,
      29118, 29119, 29120, 29121, 29122, 29124, 29125, 29126, 29127, 29128,
      29129, 29130, 29131, 29132, 29133, 29135, 29136, 29137, 29138, 29139,
      29142, 29143, 29144, 29145, 29146, 29147, 29148, 29149, 29150, 29151,
      29153, 29154, 29155, 29156, 29158, 29160, 29161, 29162, 29163, 29164,
      29165, 29167, 29168, 29169, 29170, 29171, 29172, 29173, 29174, 29175,
      29176, 29178, 29179, 29180, 29181, 29182, 29183, 29184, 29185, 29186,
      29187, 29188, 29189, 29191, 29192, 29193, 29194, 29195, 29196, 29197,
      29198, 29199, 29200, 29201, 29202, 29203, 29204, 29205, 29206, 29207,
      29208, 29209, 29210, 29211, 29212, 29214, 29215, 29216, 29217, 29218,
      29219, 29220, 29221, 29222, 29223, 29225, 29227, 29229, 29230, 29231,
      29234, 29235, 29236, 29242, 29244, 29246, 29248, 29249, 29250, 29251,
      29252, 29253, 29254, 29257, 29258, 29259, 29262, 29263, 29264, 29265,
      29267, 29268, 29269, 29271, 29272, 29274, 29276, 29278, 29280, 29283,
      29284, 29285, 29288, 29290, 29291, 29292, 29293, 29296, 29297, 29299,
      29300, 29302, 29303, 29304, 29307, 29308, 29309, 29314, 29315, 29317,
      29318, 29319, 29320, 29321, 29324, 29326, 29328, 29329, 29331, 29332,
      29333, 29334, 29335, 29336, 29337, 29338, 29339, 29340, 29341, 29342,
      29344, 29345, 29346, 29347, 29348, 29349, 29350, 29351, 29352, 29353,
      29354, 29355, 29358, 29361, 29362, 29363, 29365, 29370, 29371, 29372,
      29373, 29374, 29375, 29376, 29381, 29382, 29383, 29385, 29386, 29387,
      29388, 29391, 29393, 29395, 29396, 29397, 29398, 29400, 29402, 29403,
      58566, 58567, 58568, 58569, 58570, 58571, 58572, 58573, 58574, 58575,
      58576, 58577, 58578, 58579, 58580, 58581, 58582, 58583, 58584, 58585,
      58586, 58587, 58588, 58589, 58590, 58591, 58592, 58593, 58594, 58595,
      58596, 58597, 58598, 58599, 58600, 58601, 58602, 58603, 58604, 58605,
      58606, 58607, 58608, 58609, 58610, 58611, 58612, 58613, 58614, 58615,
      58616, 58617, 58618, 58619, 58620, 58621, 58622, 58623, 58624, 58625,
      58626, 58627, 58628, 58629, 58630, 58631, 58632, 58633, 58634, 58635,
      58636, 58637, 58638, 58639, 58640, 58641, 58642, 58643, 58644, 58645,
      58646, 58647, 58648, 58649, 58650, 58651, 58652, 58653, 58654, 58655,
      58656, 58657, 58658, 58659, 58660, 58661, 12288, 12289, 12290, 183, 713,
      711, 168, 12291, 12293, 8212, 65374, 8214, 8230, 8216, 8217, 8220, 8221,
      12308, 12309, 12296, 12297, 12298, 12299, 12300, 12301, 12302, 12303,
      12310, 12311, 12304, 12305, 177, 215, 247, 8758, 8743, 8744, 8721, 8719,
      8746, 8745, 8712, 8759, 8730, 8869, 8741, 8736, 8978, 8857, 8747, 8750,
      8801, 8780, 8776, 8765, 8733, 8800, 8814, 8815, 8804, 8805, 8734, 8757,
      8756, 9794, 9792, 176, 8242, 8243, 8451, 65284, 164, 65504, 65505, 8240,
      167, 8470, 9734, 9733, 9675, 9679, 9678, 9671, 9670, 9633, 9632, 9651,
      9650, 8251, 8594, 8592, 8593, 8595, 12307, 58662, 58663, 58664, 58665,
      58666, 58667, 58668, 58669, 58670, 58671, 58672, 58673, 58674, 58675,
      58676, 58677, 58678, 58679, 58680, 58681, 58682, 58683, 58684, 58685,
      58686, 58687, 58688, 58689, 58690, 58691, 58692, 58693, 58694, 58695,
      58696, 58697, 58698, 58699, 58700, 58701, 58702, 58703, 58704, 58705,
      58706, 58707, 58708, 58709, 58710, 58711, 58712, 58713, 58714, 58715,
      58716, 58717, 58718, 58719, 58720, 58721, 58722, 58723, 58724, 58725,
      58726, 58727, 58728, 58729, 58730, 58731, 58732, 58733, 58734, 58735,
      58736, 58737, 58738, 58739, 58740, 58741, 58742, 58743, 58744, 58745,
      58746, 58747, 58748, 58749, 58750, 58751, 58752, 58753, 58754, 58755,
      58756, 58757, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569,
      59238, 59239, 59240, 59241, 59242, 59243, 9352, 9353, 9354, 9355, 9356,
      9357, 9358, 9359, 9360, 9361, 9362, 9363, 9364, 9365, 9366, 9367, 9368,
      9369, 9370, 9371, 9332, 9333, 9334, 9335, 9336, 9337, 9338, 9339, 9340,
      9341, 9342, 9343, 9344, 9345, 9346, 9347, 9348, 9349, 9350, 9351, 9312,
      9313, 9314, 9315, 9316, 9317, 9318, 9319, 9320, 9321, 8364, 59245, 12832,
      12833, 12834, 12835, 12836, 12837, 12838, 12839, 12840, 12841, 59246,
      59247, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 8554,
      8555, 59248, 59249, 58758, 58759, 58760, 58761, 58762, 58763, 58764,
      58765, 58766, 58767, 58768, 58769, 58770, 58771, 58772, 58773, 58774,
      58775, 58776, 58777, 58778, 58779, 58780, 58781, 58782, 58783, 58784,
      58785, 58786, 58787, 58788, 58789, 58790, 58791, 58792, 58793, 58794,
      58795, 58796, 58797, 58798, 58799, 58800, 58801, 58802, 58803, 58804,
      58805, 58806, 58807, 58808, 58809, 58810, 58811, 58812, 58813, 58814,
      58815, 58816, 58817, 58818, 58819, 58820, 58821, 58822, 58823, 58824,
      58825, 58826, 58827, 58828, 58829, 58830, 58831, 58832, 58833, 58834,
      58835, 58836, 58837, 58838, 58839, 58840, 58841, 58842, 58843, 58844,
      58845, 58846, 58847, 58848, 58849, 58850, 58851, 58852, 12288, 65281,
      65282, 65283, 65509, 65285, 65286, 65287, 65288, 65289, 65290, 65291,
      65292, 65293, 65294, 65295, 65296, 65297, 65298, 65299, 65300, 65301,
      65302, 65303, 65304, 65305, 65306, 65307, 65308, 65309, 65310, 65311,
      65312, 65313, 65314, 65315, 65316, 65317, 65318, 65319, 65320, 65321,
      65322, 65323, 65324, 65325, 65326, 65327, 65328, 65329, 65330, 65331,
      65332, 65333, 65334, 65335, 65336, 65337, 65338, 65339, 65340, 65341,
      65342, 65343, 65344, 65345, 65346, 65347, 65348, 65349, 65350, 65351,
      65352, 65353, 65354, 65355, 65356, 65357, 65358, 65359, 65360, 65361,
      65362, 65363, 65364, 65365, 65366, 65367, 65368, 65369, 65370, 65371,
      65372, 65373, 65507, 58854, 58855, 58856, 58857, 58858, 58859, 58860,
      58861, 58862, 58863, 58864, 58865, 58866, 58867, 58868, 58869, 58870,
      58871, 58872, 58873, 58874, 58875, 58876, 58877, 58878, 58879, 58880,
      58881, 58882, 58883, 58884, 58885, 58886, 58887, 58888, 58889, 58890,
      58891, 58892, 58893, 58894, 58895, 58896, 58897, 58898, 58899, 58900,
      58901, 58902, 58903, 58904, 58905, 58906, 58907, 58908, 58909, 58910,
      58911, 58912, 58913, 58914, 58915, 58916, 58917, 58918, 58919, 58920,
      58921, 58922, 58923, 58924, 58925, 58926, 58927, 58928, 58929, 58930,
      58931, 58932, 58933, 58934, 58935, 58936, 58937, 58938, 58939, 58940,
      58941, 58942, 58943, 58944, 58945, 58946, 58947, 58948, 58949, 12353,
      12354, 12355, 12356, 12357, 12358, 12359, 12360, 12361, 12362, 12363,
      12364, 12365, 12366, 12367, 12368, 12369, 12370, 12371, 12372, 12373,
      12374, 12375, 12376, 12377, 12378, 12379, 12380, 12381, 12382, 12383,
      12384, 12385, 12386, 12387, 12388, 12389, 12390, 12391, 12392, 12393,
      12394, 12395, 12396, 12397, 12398, 12399, 12400, 12401, 12402, 12403,
      12404, 12405, 12406, 12407, 12408, 12409, 12410, 12411, 12412, 12413,
      12414, 12415, 12416, 12417, 12418, 12419, 12420, 12421, 12422, 12423,
      12424, 12425, 12426, 12427, 12428, 12429, 12430, 12431, 12432, 12433,
      12434, 12435, 59250, 59251, 59252, 59253, 59254, 59255, 59256, 59257,
      59258, 59259, 59260, 58950, 58951, 58952, 58953, 58954, 58955, 58956,
      58957, 58958, 58959, 58960, 58961, 58962, 58963, 58964, 58965, 58966,
      58967, 58968, 58969, 58970, 58971, 58972, 58973, 58974, 58975, 58976,
      58977, 58978, 58979, 58980, 58981, 58982, 58983, 58984, 58985, 58986,
      58987, 58988, 58989, 58990, 58991, 58992, 58993, 58994, 58995, 58996,
      58997, 58998, 58999, 59000, 59001, 59002, 59003, 59004, 59005, 59006,
      59007, 59008, 59009, 59010, 59011, 59012, 59013, 59014, 59015, 59016,
      59017, 59018, 59019, 59020, 59021, 59022, 59023, 59024, 59025, 59026,
      59027, 59028, 59029, 59030, 59031, 59032, 59033, 59034, 59035, 59036,
      59037, 59038, 59039, 59040, 59041, 59042, 59043, 59044, 59045, 12449,
      12450, 12451, 12452, 12453, 12454, 12455, 12456, 12457, 12458, 12459,
      12460, 12461, 12462, 12463, 12464, 12465, 12466, 12467, 12468, 12469,
      12470, 12471, 12472, 12473, 12474, 12475, 12476, 12477, 12478, 12479,
      12480, 12481, 12482, 12483, 12484, 12485, 12486, 12487, 12488, 12489,
      12490, 12491, 12492, 12493, 12494, 12495, 12496, 12497, 12498, 12499,
      12500, 12501, 12502, 12503, 12504, 12505, 12506, 12507, 12508, 12509,
      12510, 12511, 12512, 12513, 12514, 12515, 12516, 12517, 12518, 12519,
      12520, 12521, 12522, 12523, 12524, 12525, 12526, 12527, 12528, 12529,
      12530, 12531, 12532, 12533, 12534, 59261, 59262, 59263, 59264, 59265,
      59266, 59267, 59268, 59046, 59047, 59048, 59049, 59050, 59051, 59052,
      59053, 59054, 59055, 59056, 59057, 59058, 59059, 59060, 59061, 59062,
      59063, 59064, 59065, 59066, 59067, 59068, 59069, 59070, 59071, 59072,
      59073, 59074, 59075, 59076, 59077, 59078, 59079, 59080, 59081, 59082,
      59083, 59084, 59085, 59086, 59087, 59088, 59089, 59090, 59091, 59092,
      59093, 59094, 59095, 59096, 59097, 59098, 59099, 59100, 59101, 59102,
      59103, 59104, 59105, 59106, 59107, 59108, 59109, 59110, 59111, 59112,
      59113, 59114, 59115, 59116, 59117, 59118, 59119, 59120, 59121, 59122,
      59123, 59124, 59125, 59126, 59127, 59128, 59129, 59130, 59131, 59132,
      59133, 59134, 59135, 59136, 59137, 59138, 59139, 59140, 59141, 913, 914,
      915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929,
      931, 932, 933, 934, 935, 936, 937, 59269, 59270, 59271, 59272, 59273,
      59274, 59275, 59276, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954,
      955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 967, 968, 969,
      59277, 59278, 59279, 59280, 59281, 59282, 59283, 65077, 65078, 65081,
      65082, 65087, 65088, 65085, 65086, 65089, 65090, 65091, 65092, 59284,
      59285, 65083, 65084, 65079, 65080, 65073, 59286, 65075, 65076, 59287,
      59288, 59289, 59290, 59291, 59292, 59293, 59294, 59295, 59142, 59143,
      59144, 59145, 59146, 59147, 59148, 59149, 59150, 59151, 59152, 59153,
      59154, 59155, 59156, 59157, 59158, 59159, 59160, 59161, 59162, 59163,
      59164, 59165, 59166, 59167, 59168, 59169, 59170, 59171, 59172, 59173,
      59174, 59175, 59176, 59177, 59178, 59179, 59180, 59181, 59182, 59183,
      59184, 59185, 59186, 59187, 59188, 59189, 59190, 59191, 59192, 59193,
      59194, 59195, 59196, 59197, 59198, 59199, 59200, 59201, 59202, 59203,
      59204, 59205, 59206, 59207, 59208, 59209, 59210, 59211, 59212, 59213,
      59214, 59215, 59216, 59217, 59218, 59219, 59220, 59221, 59222, 59223,
      59224, 59225, 59226, 59227, 59228, 59229, 59230, 59231, 59232, 59233,
      59234, 59235, 59236, 59237, 1040, 1041, 1042, 1043, 1044, 1045, 1025,
      1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057,
      1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
      1070, 1071, 59296, 59297, 59298, 59299, 59300, 59301, 59302, 59303, 59304,
      59305, 59306, 59307, 59308, 59309, 59310, 1072, 1073, 1074, 1075, 1076,
      1077, 1105, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
      1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
      1100, 1101, 1102, 1103, 59311, 59312, 59313, 59314, 59315, 59316, 59317,
      59318, 59319, 59320, 59321, 59322, 59323, 714, 715, 729, 8211, 8213, 8229,
      8245, 8453, 8457, 8598, 8599, 8600, 8601, 8725, 8735, 8739, 8786, 8806,
      8807, 8895, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561,
      9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573,
      9574, 9575, 9576, 9577, 9578, 9579, 9580, 9581, 9582, 9583, 9584, 9585,
      9586, 9587, 9601, 9602, 9603, 9604, 9605, 9606, 9607, 9608, 9609, 9610,
      9611, 9612, 9613, 9614, 9615, 9619, 9620, 9621, 9660, 9661, 9698, 9699,
      9700, 9701, 9737, 8853, 12306, 12317, 12318, 59324, 59325, 59326, 59327,
      59328, 59329, 59330, 59331, 59332, 59333, 59334, 257, 225, 462, 224, 275,
      233, 283, 232, 299, 237, 464, 236, 333, 243, 466, 242, 363, 250, 468, 249,
      470, 472, 474, 476, 252, 234, 593, 59335, 324, 328, 505, 609, 59337,
      59338, 59339, 59340, 12549, 12550, 12551, 12552, 12553, 12554, 12555,
      12556, 12557, 12558, 12559, 12560, 12561, 12562, 12563, 12564, 12565,
      12566, 12567, 12568, 12569, 12570, 12571, 12572, 12573, 12574, 12575,
      12576, 12577, 12578, 12579, 12580, 12581, 12582, 12583, 12584, 12585,
      59341, 59342, 59343, 59344, 59345, 59346, 59347, 59348, 59349, 59350,
      59351, 59352, 59353, 59354, 59355, 59356, 59357, 59358, 59359, 59360,
      59361, 12321, 12322, 12323, 12324, 12325, 12326, 12327, 12328, 12329,
      12963, 13198, 13199, 13212, 13213, 13214, 13217, 13252, 13262, 13265,
      13266, 13269, 65072, 65506, 65508, 59362, 8481, 12849, 59363, 8208, 59364,
      59365, 59366, 12540, 12443, 12444, 12541, 12542, 12294, 12445, 12446,
      65097, 65098, 65099, 65100, 65101, 65102, 65103, 65104, 65105, 65106,
      65108, 65109, 65110, 65111, 65113, 65114, 65115, 65116, 65117, 65118,
      65119, 65120, 65121, 65122, 65123, 65124, 65125, 65126, 65128, 65129,
      65130, 65131, 12350, 12272, 12273, 12274, 12275, 12276, 12277, 12278,
      12279, 12280, 12281, 12282, 12283, 12295, 59380, 59381, 59382, 59383,
      59384, 59385, 59386, 59387, 59388, 59389, 59390, 59391, 59392, 9472, 9473,
      9474, 9475, 9476, 9477, 9478, 9479, 9480, 9481, 9482, 9483, 9484, 9485,
      9486, 9487, 9488, 9489, 9490, 9491, 9492, 9493, 9494, 9495, 9496, 9497,
      9498, 9499, 9500, 9501, 9502, 9503, 9504, 9505, 9506, 9507, 9508, 9509,
      9510, 9511, 9512, 9513, 9514, 9515, 9516, 9517, 9518, 9519, 9520, 9521,
      9522, 9523, 9524, 9525, 9526, 9527, 9528, 9529, 9530, 9531, 9532, 9533,
      9534, 9535, 9536, 9537, 9538, 9539, 9540, 9541, 9542, 9543, 9544, 9545,
      9546, 9547, 59393, 59394, 59395, 59396, 59397, 59398, 59399, 59400, 59401,
      59402, 59403, 59404, 59405, 59406, 59407, 29404, 29405, 29407, 29410,
      29411, 29412, 29413, 29414, 29415, 29418, 29419, 29429, 29430, 29433,
      29437, 29438, 29439, 29440, 29442, 29444, 29445, 29446, 29447, 29448,
      29449, 29451, 29452, 29453, 29455, 29456, 29457, 29458, 29460, 29464,
      29465, 29466, 29471, 29472, 29475, 29476, 29478, 29479, 29480, 29485,
      29487, 29488, 29490, 29491, 29493, 29494, 29498, 29499, 29500, 29501,
      29504, 29505, 29506, 29507, 29508, 29509, 29510, 29511, 29512, 29513,
      29514, 29515, 29516, 29518, 29519, 29521, 29523, 29524, 29525, 29526,
      29528, 29529, 29530, 29531, 29532, 29533, 29534, 29535, 29537, 29538,
      29539, 29540, 29541, 29542, 29543, 29544, 29545, 29546, 29547, 29550,
      29552, 29553, 57344, 57345, 57346, 57347, 57348, 57349, 57350, 57351,
      57352, 57353, 57354, 57355, 57356, 57357, 57358, 57359, 57360, 57361,
      57362, 57363, 57364, 57365, 57366, 57367, 57368, 57369, 57370, 57371,
      57372, 57373, 57374, 57375, 57376, 57377, 57378, 57379, 57380, 57381,
      57382, 57383, 57384, 57385, 57386, 57387, 57388, 57389, 57390, 57391,
      57392, 57393, 57394, 57395, 57396, 57397, 57398, 57399, 57400, 57401,
      57402, 57403, 57404, 57405, 57406, 57407, 57408, 57409, 57410, 57411,
      57412, 57413, 57414, 57415, 57416, 57417, 57418, 57419, 57420, 57421,
      57422, 57423, 57424, 57425, 57426, 57427, 57428, 57429, 57430, 57431,
      57432, 57433, 57434, 57435, 57436, 57437, 29554, 29555, 29556, 29557,
      29558, 29559, 29560, 29561, 29562, 29563, 29564, 29565, 29567, 29568,
      29569, 29570, 29571, 29573, 29574, 29576, 29578, 29580, 29581, 29583,
      29584, 29586, 29587, 29588, 29589, 29591, 29592, 29593, 29594, 29596,
      29597, 29598, 29600, 29601, 29603, 29604, 29605, 29606, 29607, 29608,
      29610, 29612, 29613, 29617, 29620, 29621, 29622, 29624, 29625, 29628,
      29629, 29630, 29631, 29633, 29635, 29636, 29637, 29638, 29639, 29643,
      29644, 29646, 29650, 29651, 29652, 29653, 29654, 29655, 29656, 29658,
      29659, 29660, 29661, 29663, 29665, 29666, 29667, 29668, 29670, 29672,
      29674, 29675, 29676, 29678, 29679, 29680, 29681, 29683, 29684, 29685,
      29686, 29687, 57438, 57439, 57440, 57441, 57442, 57443, 57444, 57445,
      57446, 57447, 57448, 57449, 57450, 57451, 57452, 57453, 57454, 57455,
      57456, 57457, 57458, 57459, 57460, 57461, 57462, 57463, 57464, 57465,
      57466, 57467, 57468, 57469, 57470, 57471, 57472, 57473, 57474, 57475,
      57476, 57477, 57478, 57479, 57480, 57481, 57482, 57483, 57484, 57485,
      57486, 57487, 57488, 57489, 57490, 57491, 57492, 57493, 57494, 57495,
      57496, 57497, 57498, 57499, 57500, 57501, 57502, 57503, 57504, 57505,
      57506, 57507, 57508, 57509, 57510, 57511, 57512, 57513, 57514, 57515,
      57516, 57517, 57518, 57519, 57520, 57521, 57522, 57523, 57524, 57525,
      57526, 57527, 57528, 57529, 57530, 57531, 29688, 29689, 29690, 29691,
      29692, 29693, 29694, 29695, 29696, 29697, 29698, 29700, 29703, 29704,
      29707, 29708, 29709, 29710, 29713, 29714, 29715, 29716, 29717, 29718,
      29719, 29720, 29721, 29724, 29725, 29726, 29727, 29728, 29729, 29731,
      29732, 29735, 29737, 29739, 29741, 29743, 29745, 29746, 29751, 29752,
      29753, 29754, 29755, 29757, 29758, 29759, 29760, 29762, 29763, 29764,
      29765, 29766, 29767, 29768, 29769, 29770, 29771, 29772, 29773, 29774,
      29775, 29776, 29777, 29778, 29779, 29780, 29782, 29784, 29789, 29792,
      29793, 29794, 29795, 29796, 29797, 29798, 29799, 29800, 29801, 29802,
      29803, 29804, 29806, 29807, 29809, 29810, 29811, 29812, 29813, 29816,
      29817, 29818, 57532, 57533, 57534, 57535, 57536, 57537, 57538, 57539,
      57540, 57541, 57542, 57543, 57544, 57545, 57546, 57547, 57548, 57549,
      57550, 57551, 57552, 57553, 57554, 57555, 57556, 57557, 57558, 57559,
      57560, 57561, 57562, 57563, 57564, 57565, 57566, 57567, 57568, 57569,
      57570, 57571, 57572, 57573, 57574, 57575, 57576, 57577, 57578, 57579,
      57580, 57581, 57582, 57583, 57584, 57585, 57586, 57587, 57588, 57589,
      57590, 57591, 57592, 57593, 57594, 57595, 57596, 57597, 57598, 57599,
      57600, 57601, 57602, 57603, 57604, 57605, 57606, 57607, 57608, 57609,
      57610, 57611, 57612, 57613, 57614, 57615, 57616, 57617, 57618, 57619,
      57620, 57621, 57622, 57623, 57624, 57625, 29819, 29820, 29821, 29823,
      29826, 29828, 29829, 29830, 29832, 29833, 29834, 29836, 29837, 29839,
      29841, 29842, 29843, 29844, 29845, 29846, 29847, 29848, 29849, 29850,
      29851, 29853, 29855, 29856, 29857, 29858, 29859, 29860, 29861, 29862,
      29866, 29867, 29868, 29869, 29870, 29871, 29872, 29873, 29874, 29875,
      29876, 29877, 29878, 29879, 29880, 29881, 29883, 29884, 29885, 29886,
      29887, 29888, 29889, 29890, 29891, 29892, 29893, 29894, 29895, 29896,
      29897, 29898, 29899, 29900, 29901, 29902, 29903, 29904, 29905, 29907,
      29908, 29909, 29910, 29911, 29912, 29913, 29914, 29915, 29917, 29919,
      29921, 29925, 29927, 29928, 29929, 29930, 29931, 29932, 29933, 29936,
      29937, 29938, 57626, 57627, 57628, 57629, 57630, 57631, 57632, 57633,
      57634, 57635, 57636, 57637, 57638, 57639, 57640, 57641, 57642, 57643,
      57644, 57645, 57646, 57647, 57648, 57649, 57650, 57651, 57652, 57653,
      57654, 57655, 57656, 57657, 57658, 57659, 57660, 57661, 57662, 57663,
      57664, 57665, 57666, 57667, 57668, 57669, 57670, 57671, 57672, 57673,
      57674, 57675, 57676, 57677, 57678, 57679, 57680, 57681, 57682, 57683,
      57684, 57685, 57686, 57687, 57688, 57689, 57690, 57691, 57692, 57693,
      57694, 57695, 57696, 57697, 57698, 57699, 57700, 57701, 57702, 57703,
      57704, 57705, 57706, 57707, 57708, 57709, 57710, 57711, 57712, 57713,
      57714, 57715, 57716, 57717, 57718, 57719, 29939, 29941, 29944, 29945,
      29946, 29947, 29948, 29949, 29950, 29952, 29953, 29954, 29955, 29957,
      29958, 29959, 29960, 29961, 29962, 29963, 29964, 29966, 29968, 29970,
      29972, 29973, 29974, 29975, 29979, 29981, 29982, 29984, 29985, 29986,
      29987, 29988, 29990, 29991, 29994, 29998, 30004, 30006, 30009, 30012,
      30013, 30015, 30017, 30018, 30019, 30020, 30022, 30023, 30025, 30026,
      30029, 30032, 30033, 30034, 30035, 30037, 30038, 30039, 30040, 30045,
      30046, 30047, 30048, 30049, 30050, 30051, 30052, 30055, 30056, 30057,
      30059, 30060, 30061, 30062, 30063, 30064, 30065, 30067, 30069, 30070,
      30071, 30074, 30075, 30076, 30077, 30078, 30080, 30081, 30082, 30084,
      30085, 30087, 57720, 57721, 57722, 57723, 57724, 57725, 57726, 57727,
      57728, 57729, 57730, 57731, 57732, 57733, 57734, 57735, 57736, 57737,
      57738, 57739, 57740, 57741, 57742, 57743, 57744, 57745, 57746, 57747,
      57748, 57749, 57750, 57751, 57752, 57753, 57754, 57755, 57756, 57757,
      57758, 57759, 57760, 57761, 57762, 57763, 57764, 57765, 57766, 57767,
      57768, 57769, 57770, 57771, 57772, 57773, 57774, 57775, 57776, 57777,
      57778, 57779, 57780, 57781, 57782, 57783, 57784, 57785, 57786, 57787,
      57788, 57789, 57790, 57791, 57792, 57793, 57794, 57795, 57796, 57797,
      57798, 57799, 57800, 57801, 57802, 57803, 57804, 57805, 57806, 57807,
      57808, 57809, 57810, 57811, 57812, 57813, 30088, 30089, 30090, 30092,
      30093, 30094, 30096, 30099, 30101, 30104, 30107, 30108, 30110, 30114,
      30118, 30119, 30120, 30121, 30122, 30125, 30134, 30135, 30138, 30139,
      30143, 30144, 30145, 30150, 30155, 30156, 30158, 30159, 30160, 30161,
      30163, 30167, 30169, 30170, 30172, 30173, 30175, 30176, 30177, 30181,
      30185, 30188, 30189, 30190, 30191, 30194, 30195, 30197, 30198, 30199,
      30200, 30202, 30203, 30205, 30206, 30210, 30212, 30214, 30215, 30216,
      30217, 30219, 30221, 30222, 30223, 30225, 30226, 30227, 30228, 30230,
      30234, 30236, 30237, 30238, 30241, 30243, 30247, 30248, 30252, 30254,
      30255, 30257, 30258, 30262, 30263, 30265, 30266, 30267, 30269, 30273,
      30274, 30276, 57814, 57815, 57816, 57817, 57818, 57819, 57820, 57821,
      57822, 57823, 57824, 57825, 57826, 57827, 57828, 57829, 57830, 57831,
      57832, 57833, 57834, 57835, 57836, 57837, 57838, 57839, 57840, 57841,
      57842, 57843, 57844, 57845, 57846, 57847, 57848, 57849, 57850, 57851,
      57852, 57853, 57854, 57855, 57856, 57857, 57858, 57859, 57860, 57861,
      57862, 57863, 57864, 57865, 57866, 57867, 57868, 57869, 57870, 57871,
      57872, 57873, 57874, 57875, 57876, 57877, 57878, 57879, 57880, 57881,
      57882, 57883, 57884, 57885, 57886, 57887, 57888, 57889, 57890, 57891,
      57892, 57893, 57894, 57895, 57896, 57897, 57898, 57899, 57900, 57901,
      57902, 57903, 57904, 57905, 57906, 57907, 30277, 30278, 30279, 30280,
      30281, 30282, 30283, 30286, 30287, 30288, 30289, 30290, 30291, 30293,
      30295, 30296, 30297, 30298, 30299, 30301, 30303, 30304, 30305, 30306,
      30308, 30309, 30310, 30311, 30312, 30313, 30314, 30316, 30317, 30318,
      30320, 30321, 30322, 30323, 30324, 30325, 30326, 30327, 30329, 30330,
      30332, 30335, 30336, 30337, 30339, 30341, 30345, 30346, 30348, 30349,
      30351, 30352, 30354, 30356, 30357, 30359, 30360, 30362, 30363, 30364,
      30365, 30366, 30367, 30368, 30369, 30370, 30371, 30373, 30374, 30375,
      30376, 30377, 30378, 30379, 30380, 30381, 30383, 30384, 30387, 30389,
      30390, 30391, 30392, 30393, 30394, 30395, 30396, 30397, 30398, 30400,
      30401, 30403, 21834, 38463, 22467, 25384, 21710, 21769, 21696, 30353,
      30284, 34108, 30702, 33406, 30861, 29233, 38552, 38797, 27688, 23433,
      20474, 25353, 26263, 23736, 33018, 26696, 32942, 26114, 30414, 20985,
      25942, 29100, 32753, 34948, 20658, 22885, 25034, 28595, 33453, 25420,
      25170, 21485, 21543, 31494, 20843, 30116, 24052, 25300, 36299, 38774,
      25226, 32793, 22365, 38712, 32610, 29240, 30333, 26575, 30334, 25670,
      20336, 36133, 25308, 31255, 26001, 29677, 25644, 25203, 33324, 39041,
      26495, 29256, 25198, 25292, 20276, 29923, 21322, 21150, 32458, 37030,
      24110, 26758, 27036, 33152, 32465, 26834, 30917, 34444, 38225, 20621,
      35876, 33502, 32990, 21253, 35090, 21093, 30404, 30407, 30409, 30411,
      30412, 30419, 30421, 30425, 30426, 30428, 30429, 30430, 30432, 30433,
      30434, 30435, 30436, 30438, 30439, 30440, 30441, 30442, 30443, 30444,
      30445, 30448, 30451, 30453, 30454, 30455, 30458, 30459, 30461, 30463,
      30464, 30466, 30467, 30469, 30470, 30474, 30476, 30478, 30479, 30480,
      30481, 30482, 30483, 30484, 30485, 30486, 30487, 30488, 30491, 30492,
      30493, 30494, 30497, 30499, 30500, 30501, 30503, 30506, 30507, 30508,
      30510, 30512, 30513, 30514, 30515, 30516, 30521, 30523, 30525, 30526,
      30527, 30530, 30532, 30533, 30534, 30536, 30537, 30538, 30539, 30540,
      30541, 30542, 30543, 30546, 30547, 30548, 30549, 30550, 30551, 30552,
      30553, 30556, 34180, 38649, 20445, 22561, 39281, 23453, 25265, 25253,
      26292, 35961, 40077, 29190, 26479, 30865, 24754, 21329, 21271, 36744,
      32972, 36125, 38049, 20493, 29384, 22791, 24811, 28953, 34987, 22868,
      33519, 26412, 31528, 23849, 32503, 29997, 27893, 36454, 36856, 36924,
      40763, 27604, 37145, 31508, 24444, 30887, 34006, 34109, 27605, 27609,
      27606, 24065, 24199, 30201, 38381, 25949, 24330, 24517, 36767, 22721,
      33218, 36991, 38491, 38829, 36793, 32534, 36140, 25153, 20415, 21464,
      21342, 36776, 36777, 36779, 36941, 26631, 24426, 33176, 34920, 40150,
      24971, 21035, 30250, 24428, 25996, 28626, 28392, 23486, 25672, 20853,
      20912, 26564, 19993, 31177, 39292, 28851, 30557, 30558, 30559, 30560,
      30564, 30567, 30569, 30570, 30573, 30574, 30575, 30576, 30577, 30578,
      30579, 30580, 30581, 30582, 30583, 30584, 30586, 30587, 30588, 30593,
      30594, 30595, 30598, 30599, 30600, 30601, 30602, 30603, 30607, 30608,
      30611, 30612, 30613, 30614, 30615, 30616, 30617, 30618, 30619, 30620,
      30621, 30622, 30625, 30627, 30628, 30630, 30632, 30635, 30637, 30638,
      30639, 30641, 30642, 30644, 30646, 30647, 30648, 30649, 30650, 30652,
      30654, 30656, 30657, 30658, 30659, 30660, 30661, 30662, 30663, 30664,
      30665, 30666, 30667, 30668, 30670, 30671, 30672, 30673, 30674, 30675,
      30676, 30677, 30678, 30680, 30681, 30682, 30685, 30686, 30687, 30688,
      30689, 30692, 30149, 24182, 29627, 33760, 25773, 25320, 38069, 27874,
      21338, 21187, 25615, 38082, 31636, 20271, 24091, 33334, 33046, 33162,
      28196, 27850, 39539, 25429, 21340, 21754, 34917, 22496, 19981, 24067,
      27493, 31807, 37096, 24598, 25830, 29468, 35009, 26448, 25165, 36130,
      30572, 36393, 37319, 24425, 33756, 34081, 39184, 21442, 34453, 27531,
      24813, 24808, 28799, 33485, 33329, 20179, 27815, 34255, 25805, 31961,
      27133, 26361, 33609, 21397, 31574, 20391, 20876, 27979, 23618, 36461,
      25554, 21449, 33580, 33590, 26597, 30900, 25661, 23519, 23700, 24046,
      35815, 25286, 26612, 35962, 25600, 25530, 34633, 39307, 35863, 32544,
      38130, 20135, 38416, 39076, 26124, 29462, 30694, 30696, 30698, 30703,
      30704, 30705, 30706, 30708, 30709, 30711, 30713, 30714, 30715, 30716,
      30723, 30724, 30725, 30726, 30727, 30728, 30730, 30731, 30734, 30735,
      30736, 30739, 30741, 30745, 30747, 30750, 30752, 30753, 30754, 30756,
      30760, 30762, 30763, 30766, 30767, 30769, 30770, 30771, 30773, 30774,
      30781, 30783, 30785, 30786, 30787, 30788, 30790, 30792, 30793, 30794,
      30795, 30797, 30799, 30801, 30803, 30804, 30808, 30809, 30810, 30811,
      30812, 30814, 30815, 30816, 30817, 30818, 30819, 30820, 30821, 30822,
      30823, 30824, 30825, 30831, 30832, 30833, 30834, 30835, 30836, 30837,
      30838, 30840, 30841, 30842, 30843, 30845, 30846, 30847, 30848, 30849,
      30850, 30851, 22330, 23581, 24120, 38271, 20607, 32928, 21378, 25950,
      30021, 21809, 20513, 36229, 25220, 38046, 26397, 22066, 28526, 24034,
      21557, 28818, 36710, 25199, 25764, 25507, 24443, 28552, 37108, 33251,
      36784, 23576, 26216, 24561, 27785, 38472, 36225, 34924, 25745, 31216,
      22478, 27225, 25104, 21576, 20056, 31243, 24809, 28548, 35802, 25215,
      36894, 39563, 31204, 21507, 30196, 25345, 21273, 27744, 36831, 24347,
      39536, 32827, 40831, 20360, 23610, 36196, 32709, 26021, 28861, 20805,
      20914, 34411, 23815, 23456, 25277, 37228, 30068, 36364, 31264, 24833,
      31609, 20167, 32504, 30597, 19985, 33261, 21021, 20986, 27249, 21416,
      36487, 38148, 38607, 28353, 38500, 26970, 30852, 30853, 30854, 30856,
      30858, 30859, 30863, 30864, 30866, 30868, 30869, 30870, 30873, 30877,
      30878, 30880, 30882, 30884, 30886, 30888, 30889, 30890, 30891, 30892,
      30893, 30894, 30895, 30901, 30902, 30903, 30904, 30906, 30907, 30908,
      30909, 30911, 30912, 30914, 30915, 30916, 30918, 30919, 30920, 30924,
      30925, 30926, 30927, 30929, 30930, 30931, 30934, 30935, 30936, 30938,
      30939, 30940, 30941, 30942, 30943, 30944, 30945, 30946, 30947, 30948,
      30949, 30950, 30951, 30953, 30954, 30955, 30957, 30958, 30959, 30960,
      30961, 30963, 30965, 30966, 30968, 30969, 30971, 30972, 30973, 30974,
      30975, 30976, 30978, 30979, 30980, 30982, 30983, 30984, 30985, 30986,
      30987, 30988, 30784, 20648, 30679, 25616, 35302, 22788, 25571, 24029,
      31359, 26941, 20256, 33337, 21912, 20018, 30126, 31383, 24162, 24202,
      38383, 21019, 21561, 28810, 25462, 38180, 22402, 26149, 26943, 37255,
      21767, 28147, 32431, 34850, 25139, 32496, 30133, 33576, 30913, 38604,
      36766, 24904, 29943, 35789, 27492, 21050, 36176, 27425, 32874, 33905,
      22257, 21254, 20174, 19995, 20945, 31895, 37259, 31751, 20419, 36479,
      31713, 31388, 25703, 23828, 20652, 33030, 30209, 31929, 28140, 32736,
      26449, 23384, 23544, 30923, 25774, 25619, 25514, 25387, 38169, 25645,
      36798, 31572, 30249, 25171, 22823, 21574, 27513, 20643, 25140, 24102,
      27526, 20195, 36151, 34955, 24453, 36910, 30989, 30990, 30991, 30992,
      30993, 30994, 30996, 30997, 30998, 30999, 31000, 31001, 31002, 31003,
      31004, 31005, 31007, 31008, 31009, 31010, 31011, 31013, 31014, 31015,
      31016, 31017, 31018, 31019, 31020, 31021, 31022, 31023, 31024, 31025,
      31026, 31027, 31029, 31030, 31031, 31032, 31033, 31037, 31039, 31042,
      31043, 31044, 31045, 31047, 31050, 31051, 31052, 31053, 31054, 31055,
      31056, 31057, 31058, 31060, 31061, 31064, 31065, 31073, 31075, 31076,
      31078, 31081, 31082, 31083, 31084, 31086, 31088, 31089, 31090, 31091,
      31092, 31093, 31094, 31097, 31099, 31100, 31101, 31102, 31103, 31106,
      31107, 31110, 31111, 31112, 31113, 31115, 31116, 31117, 31118, 31120,
      31121, 31122, 24608, 32829, 25285, 20025, 21333, 37112, 25528, 32966,
      26086, 27694, 20294, 24814, 28129, 35806, 24377, 34507, 24403, 25377,
      20826, 33633, 26723, 20992, 25443, 36424, 20498, 23707, 31095, 23548,
      21040, 31291, 24764, 36947, 30423, 24503, 24471, 30340, 36460, 28783,
      30331, 31561, 30634, 20979, 37011, 22564, 20302, 28404, 36842, 25932,
      31515, 29380, 28068, 32735, 23265, 25269, 24213, 22320, 33922, 31532,
      24093, 24351, 36882, 32532, 39072, 25474, 28359, 30872, 28857, 20856,
      38747, 22443, 30005, 20291, 30008, 24215, 24806, 22880, 28096, 27583,
      30857, 21500, 38613, 20939, 20993, 25481, 21514, 38035, 35843, 36300,
      29241, 30879, 34678, 36845, 35853, 21472, 31123, 31124, 31125, 31126,
      31127, 31128, 31129, 31131, 31132, 31133, 31134, 31135, 31136, 31137,
      31138, 31139, 31140, 31141, 31142, 31144, 31145, 31146, 31147, 31148,
      31149, 31150, 31151, 31152, 31153, 31154, 31156, 31157, 31158, 31159,
      31160, 31164, 31167, 31170, 31172, 31173, 31175, 31176, 31178, 31180,
      31182, 31183, 31184, 31187, 31188, 31190, 31191, 31193, 31194, 31195,
      31196, 31197, 31198, 31200, 31201, 31202, 31205, 31208, 31210, 31212,
      31214, 31217, 31218, 31219, 31220, 31221, 31222, 31223, 31225, 31226,
      31228, 31230, 31231, 31233, 31236, 31237, 31239, 31240, 31241, 31242,
      31244, 31247, 31248, 31249, 31250, 31251, 31253, 31254, 31256, 31257,
      31259, 31260, 19969, 30447, 21486, 38025, 39030, 40718, 38189, 23450,
      35746, 20002, 19996, 20908, 33891, 25026, 21160, 26635, 20375, 24683,
      20923, 27934, 20828, 25238, 26007, 38497, 35910, 36887, 30168, 37117,
      30563, 27602, 29322, 29420, 35835, 22581, 30585, 36172, 26460, 38208,
      32922, 24230, 28193, 22930, 31471, 30701, 38203, 27573, 26029, 32526,
      22534, 20817, 38431, 23545, 22697, 21544, 36466, 25958, 39039, 22244,
      38045, 30462, 36929, 25479, 21702, 22810, 22842, 22427, 36530, 26421,
      36346, 33333, 21057, 24816, 22549, 34558, 23784, 40517, 20420, 39069,
      35769, 23077, 24694, 21380, 25212, 36943, 37122, 39295, 24681, 32780,
      20799, 32819, 23572, 39285, 27953, 20108, 31261, 31263, 31265, 31266,
      31268, 31269, 31270, 31271, 31272, 31273, 31274, 31275, 31276, 31277,
      31278, 31279, 31280, 31281, 31282, 31284, 31285, 31286, 31288, 31290,
      31294, 31296, 31297, 31298, 31299, 31300, 31301, 31303, 31304, 31305,
      31306, 31307, 31308, 31309, 31310, 31311, 31312, 31314, 31315, 31316,
      31317, 31318, 31320, 31321, 31322, 31323, 31324, 31325, 31326, 31327,
      31328, 31329, 31330, 31331, 31332, 31333, 31334, 31335, 31336, 31337,
      31338, 31339, 31340, 31341, 31342, 31343, 31345, 31346, 31347, 31349,
      31355, 31356, 31357, 31358, 31362, 31365, 31367, 31369, 31370, 31371,
      31372, 31374, 31375, 31376, 31379, 31380, 31385, 31386, 31387, 31390,
      31393, 31394, 36144, 21457, 32602, 31567, 20240, 20047, 38400, 27861,
      29648, 34281, 24070, 30058, 32763, 27146, 30718, 38034, 32321, 20961,
      28902, 21453, 36820, 33539, 36137, 29359, 39277, 27867, 22346, 33459,
      26041, 32938, 25151, 38450, 22952, 20223, 35775, 32442, 25918, 33778,
      38750, 21857, 39134, 32933, 21290, 35837, 21536, 32954, 24223, 27832,
      36153, 33452, 37210, 21545, 27675, 20998, 32439, 22367, 28954, 27774,
      31881, 22859, 20221, 24575, 24868, 31914, 20016, 23553, 26539, 34562,
      23792, 38155, 39118, 30127, 28925, 36898, 20911, 32541, 35773, 22857,
      20964, 20315, 21542, 22827, 25975, 32932, 23413, 25206, 25282, 36752,
      24133, 27679, 31526, 20239, 20440, 26381, 31395, 31396, 31399, 31401,
      31402, 31403, 31406, 31407, 31408, 31409, 31410, 31412, 31413, 31414,
      31415, 31416, 31417, 31418, 31419, 31420, 31421, 31422, 31424, 31425,
      31426, 31427, 31428, 31429, 31430, 31431, 31432, 31433, 31434, 31436,
      31437, 31438, 31439, 31440, 31441, 31442, 31443, 31444, 31445, 31447,
      31448, 31450, 31451, 31452, 31453, 31457, 31458, 31460, 31463, 31464,
      31465, 31466, 31467, 31468, 31470, 31472, 31473, 31474, 31475, 31476,
      31477, 31478, 31479, 31480, 31483, 31484, 31486, 31488, 31489, 31490,
      31493, 31495, 31497, 31500, 31501, 31502, 31504, 31506, 31507, 31510,
      31511, 31512, 31514, 31516, 31517, 31519, 31521, 31522, 31523, 31527,
      31529, 31533, 28014, 28074, 31119, 34993, 24343, 29995, 25242, 36741,
      20463, 37340, 26023, 33071, 33105, 24220, 33104, 36212, 21103, 35206,
      36171, 22797, 20613, 20184, 38428, 29238, 33145, 36127, 23500, 35747,
      38468, 22919, 32538, 21648, 22134, 22030, 35813, 25913, 27010, 38041,
      30422, 28297, 24178, 29976, 26438, 26577, 31487, 32925, 36214, 24863,
      31174, 25954, 36195, 20872, 21018, 38050, 32568, 32923, 32434, 23703,
      28207, 26464, 31705, 30347, 39640, 33167, 32660, 31957, 25630, 38224,
      31295, 21578, 21733, 27468, 25601, 25096, 40509, 33011, 30105, 21106,
      38761, 33883, 26684, 34532, 38401, 38548, 38124, 20010, 21508, 32473,
      26681, 36319, 32789, 26356, 24218, 32697, 31535, 31536, 31538, 31540,
      31541, 31542, 31543, 31545, 31547, 31549, 31551, 31552, 31553, 31554,
      31555, 31556, 31558, 31560, 31562, 31565, 31566, 31571, 31573, 31575,
      31577, 31580, 31582, 31583, 31585, 31587, 31588, 31589, 31590, 31591,
      31592, 31593, 31594, 31595, 31596, 31597, 31599, 31600, 31603, 31604,
      31606, 31608, 31610, 31612, 31613, 31615, 31617, 31618, 31619, 31620,
      31622, 31623, 31624, 31625, 31626, 31627, 31628, 31630, 31631, 31633,
      31634, 31635, 31638, 31640, 31641, 31642, 31643, 31646, 31647, 31648,
      31651, 31652, 31653, 31662, 31663, 31664, 31666, 31667, 31669, 31670,
      31671, 31673, 31674, 31675, 31676, 31677, 31678, 31679, 31680, 31682,
      31683, 31684, 22466, 32831, 26775, 24037, 25915, 21151, 24685, 40858,
      20379, 36524, 20844, 23467, 24339, 24041, 27742, 25329, 36129, 20849,
      38057, 21246, 27807, 33503, 29399, 22434, 26500, 36141, 22815, 36764,
      33735, 21653, 31629, 20272, 27837, 23396, 22993, 40723, 21476, 34506,
      39592, 35895, 32929, 25925, 39038, 22266, 38599, 21038, 29916, 21072,
      23521, 25346, 35074, 20054, 25296, 24618, 26874, 20851, 23448, 20896,
      35266, 31649, 39302, 32592, 24815, 28748, 36143, 20809, 24191, 36891,
      29808, 35268, 22317, 30789, 24402, 40863, 38394, 36712, 39740, 35809,
      30328, 26690, 26588, 36330, 36149, 21053, 36746, 28378, 26829, 38149,
      37101, 22269, 26524, 35065, 36807, 21704, 31685, 31688, 31689, 31690,
      31691, 31693, 31694, 31695, 31696, 31698, 31700, 31701, 31702, 31703,
      31704, 31707, 31708, 31710, 31711, 31712, 31714, 31715, 31716, 31719,
      31720, 31721, 31723, 31724, 31725, 31727, 31728, 31730, 31731, 31732,
      31733, 31734, 31736, 31737, 31738, 31739, 31741, 31743, 31744, 31745,
      31746, 31747, 31748, 31749, 31750, 31752, 31753, 31754, 31757, 31758,
      31760, 31761, 31762, 31763, 31764, 31765, 31767, 31768, 31769, 31770,
      31771, 31772, 31773, 31774, 31776, 31777, 31778, 31779, 31780, 31781,
      31784, 31785, 31787, 31788, 31789, 31790, 31791, 31792, 31793, 31794,
      31795, 31796, 31797, 31798, 31799, 31801, 31802, 31803, 31804, 31805,
      31806, 31810, 39608, 23401, 28023, 27686, 20133, 23475, 39559, 37219,
      25000, 37039, 38889, 21547, 28085, 23506, 20989, 21898, 32597, 32752,
      25788, 25421, 26097, 25022, 24717, 28938, 27735, 27721, 22831, 26477,
      33322, 22741, 22158, 35946, 27627, 37085, 22909, 32791, 21495, 28009,
      21621, 21917, 33655, 33743, 26680, 31166, 21644, 20309, 21512, 30418,
      35977, 38402, 27827, 28088, 36203, 35088, 40548, 36154, 22079, 40657,
      30165, 24456, 29408, 24680, 21756, 20136, 27178, 34913, 24658, 36720,
      21700, 28888, 34425, 40511, 27946, 23439, 24344, 32418, 21897, 20399,
      29492, 21564, 21402, 20505, 21518, 21628, 20046, 24573, 29786, 22774,
      33899, 32993, 34676, 29392, 31946, 28246, 31811, 31812, 31813, 31814,
      31815, 31816, 31817, 31818, 31819, 31820, 31822, 31823, 31824, 31825,
      31826, 31827, 31828, 31829, 31830, 31831, 31832, 31833, 31834, 31835,
      31836, 31837, 31838, 31839, 31840, 31841, 31842, 31843, 31844, 31845,
      31846, 31847, 31848, 31849, 31850, 31851, 31852, 31853, 31854, 31855,
      31856, 31857, 31858, 31861, 31862, 31863, 31864, 31865, 31866, 31870,
      31871, 31872, 31873, 31874, 31875, 31876, 31877, 31878, 31879, 31880,
      31882, 31883, 31884, 31885, 31886, 31887, 31888, 31891, 31892, 31894,
      31897, 31898, 31899, 31904, 31905, 31907, 31910, 31911, 31912, 31913,
      31915, 31916, 31917, 31919, 31920, 31924, 31925, 31926, 31927, 31928,
      31930, 31931, 24359, 34382, 21804, 25252, 20114, 27818, 25143, 33457,
      21719, 21326, 29502, 28369, 30011, 21010, 21270, 35805, 27088, 24458,
      24576, 28142, 22351, 27426, 29615, 26707, 36824, 32531, 25442, 24739,
      21796, 30186, 35938, 28949, 28067, 23462, 24187, 33618, 24908, 40644,
      30970, 34647, 31783, 30343, 20976, 24822, 29004, 26179, 24140, 24653,
      35854, 28784, 25381, 36745, 24509, 24674, 34516, 22238, 27585, 24724,
      24935, 21321, 24800, 26214, 36159, 31229, 20250, 28905, 27719, 35763,
      35826, 32472, 33636, 26127, 23130, 39746, 27985, 28151, 35905, 27963,
      20249, 28779, 33719, 25110, 24785, 38669, 36135, 31096, 20987, 22334,
      22522, 26426, 30072, 31293, 31215, 31637, 31935, 31936, 31938, 31939,
      31940, 31942, 31945, 31947, 31950, 31951, 31952, 31953, 31954, 31955,
      31956, 31960, 31962, 31963, 31965, 31966, 31969, 31970, 31971, 31972,
      31973, 31974, 31975, 31977, 31978, 31979, 31980, 31981, 31982, 31984,
      31985, 31986, 31987, 31988, 31989, 31990, 31991, 31993, 31994, 31996,
      31997, 31998, 31999, 32000, 32001, 32002, 32003, 32004, 32005, 32006,
      32007, 32008, 32009, 32011, 32012, 32013, 32014, 32015, 32016, 32017,
      32018, 32019, 32020, 32021, 32022, 32023, 32024, 32025, 32026, 32027,
      32028, 32029, 32030, 32031, 32033, 32035, 32036, 32037, 32038, 32040,
      32041, 32042, 32044, 32045, 32046, 32048, 32049, 32050, 32051, 32052,
      32053, 32054, 32908, 39269, 36857, 28608, 35749, 40481, 23020, 32489,
      32521, 21513, 26497, 26840, 36753, 31821, 38598, 21450, 24613, 30142,
      27762, 21363, 23241, 32423, 25380, 20960, 33034, 24049, 34015, 25216,
      20864, 23395, 20238, 31085, 21058, 24760, 27982, 23492, 23490, 35745,
      35760, 26082, 24524, 38469, 22931, 32487, 32426, 22025, 26551, 22841,
      20339, 23478, 21152, 33626, 39050, 36158, 30002, 38078, 20551, 31292,
      20215, 26550, 39550, 23233, 27516, 30417, 22362, 23574, 31546, 38388,
      29006, 20860, 32937, 33392, 22904, 32516, 33575, 26816, 26604, 30897,
      30839, 25315, 25441, 31616, 20461, 21098, 20943, 33616, 27099, 37492,
      36341, 36145, 35265, 38190, 31661, 20214, 32055, 32056, 32057, 32058,
      32059, 32060, 32061, 32062, 32063, 32064, 32065, 32066, 32067, 32068,
      32069, 32070, 32071, 32072, 32073, 32074, 32075, 32076, 32077, 32078,
      32079, 32080, 32081, 32082, 32083, 32084, 32085, 32086, 32087, 32088,
      32089, 32090, 32091, 32092, 32093, 32094, 32095, 32096, 32097, 32098,
      32099, 32100, 32101, 32102, 32103, 32104, 32105, 32106, 32107, 32108,
      32109, 32111, 32112, 32113, 32114, 32115, 32116, 32117, 32118, 32120,
      32121, 32122, 32123, 32124, 32125, 32126, 32127, 32128, 32129, 32130,
      32131, 32132, 32133, 32134, 32135, 32136, 32137, 32138, 32139, 32140,
      32141, 32142, 32143, 32144, 32145, 32146, 32147, 32148, 32149, 32150,
      32151, 32152, 20581, 33328, 21073, 39279, 28176, 28293, 28071, 24314,
      20725, 23004, 23558, 27974, 27743, 30086, 33931, 26728, 22870, 35762,
      21280, 37233, 38477, 34121, 26898, 30977, 28966, 33014, 20132, 37066,
      27975, 39556, 23047, 22204, 25605, 38128, 30699, 20389, 33050, 29409,
      35282, 39290, 32564, 32478, 21119, 25945, 37237, 36735, 36739, 21483,
      31382, 25581, 25509, 30342, 31224, 34903, 38454, 25130, 21163, 33410,
      26708, 26480, 25463, 30571, 31469, 27905, 32467, 35299, 22992, 25106,
      34249, 33445, 30028, 20511, 20171, 30117, 35819, 23626, 24062, 31563,
      26020, 37329, 20170, 27941, 35167, 32039, 38182, 20165, 35880, 36827,
      38771, 26187, 31105, 36817, 28908, 28024, 32153, 32154, 32155, 32156,
      32157, 32158, 32159, 32160, 32161, 32162, 32163, 32164, 32165, 32167,
      32168, 32169, 32170, 32171, 32172, 32173, 32175, 32176, 32177, 32178,
      32179, 32180, 32181, 32182, 32183, 32184, 32185, 32186, 32187, 32188,
      32189, 32190, 32191, 32192, 32193, 32194, 32195, 32196, 32197, 32198,
      32199, 32200, 32201, 32202, 32203, 32204, 32205, 32206, 32207, 32208,
      32209, 32210, 32211, 32212, 32213, 32214, 32215, 32216, 32217, 32218,
      32219, 32220, 32221, 32222, 32223, 32224, 32225, 32226, 32227, 32228,
      32229, 32230, 32231, 32232, 32233, 32234, 32235, 32236, 32237, 32238,
      32239, 32240, 32241, 32242, 32243, 32244, 32245, 32246, 32247, 32248,
      32249, 32250, 23613, 21170, 33606, 20834, 33550, 30555, 26230, 40120,
      20140, 24778, 31934, 31923, 32463, 20117, 35686, 26223, 39048, 38745,
      22659, 25964, 38236, 24452, 30153, 38742, 31455, 31454, 20928, 28847,
      31384, 25578, 31350, 32416, 29590, 38893, 20037, 28792, 20061, 37202,
      21417, 25937, 26087, 33276, 33285, 21646, 23601, 30106, 38816, 25304,
      29401, 30141, 23621, 39545, 33738, 23616, 21632, 30697, 20030, 27822,
      32858, 25298, 25454, 24040, 20855, 36317, 36382, 38191, 20465, 21477,
      24807, 28844, 21095, 25424, 40515, 23071, 20518, 30519, 21367, 32482,
      25733, 25899, 25225, 25496, 20500, 29237, 35273, 20915, 35776, 32477,
      22343, 33740, 38055, 20891, 21531, 23803, 32251, 32252, 32253, 32254,
      32255, 32256, 32257, 32258, 32259, 32260, 32261, 32262, 32263, 32264,
      32265, 32266, 32267, 32268, 32269, 32270, 32271, 32272, 32273, 32274,
      32275, 32276, 32277, 32278, 32279, 32280, 32281, 32282, 32283, 32284,
      32285, 32286, 32287, 32288, 32289, 32290, 32291, 32292, 32293, 32294,
      32295, 32296, 32297, 32298, 32299, 32300, 32301, 32302, 32303, 32304,
      32305, 32306, 32307, 32308, 32309, 32310, 32311, 32312, 32313, 32314,
      32316, 32317, 32318, 32319, 32320, 32322, 32323, 32324, 32325, 32326,
      32328, 32329, 32330, 32331, 32332, 32333, 32334, 32335, 32336, 32337,
      32338, 32339, 32340, 32341, 32342, 32343, 32344, 32345, 32346, 32347,
      32348, 32349, 20426, 31459, 27994, 37089, 39567, 21888, 21654, 21345,
      21679, 24320, 25577, 26999, 20975, 24936, 21002, 22570, 21208, 22350,
      30733, 30475, 24247, 24951, 31968, 25179, 25239, 20130, 28821, 32771,
      25335, 28900, 38752, 22391, 33499, 26607, 26869, 30933, 39063, 31185,
      22771, 21683, 21487, 28212, 20811, 21051, 23458, 35838, 32943, 21827,
      22438, 24691, 22353, 21549, 31354, 24656, 23380, 25511, 25248, 21475,
      25187, 23495, 26543, 21741, 31391, 33510, 37239, 24211, 35044, 22840,
      22446, 25358, 36328, 33007, 22359, 31607, 20393, 24555, 23485, 27454,
      21281, 31568, 29378, 26694, 30719, 30518, 26103, 20917, 20111, 30420,
      23743, 31397, 33909, 22862, 39745, 20608, 32350, 32351, 32352, 32353,
      32354, 32355, 32356, 32357, 32358, 32359, 32360, 32361, 32362, 32363,
      32364, 32365, 32366, 32367, 32368, 32369, 32370, 32371, 32372, 32373,
      32374, 32375, 32376, 32377, 32378, 32379, 32380, 32381, 32382, 32383,
      32384, 32385, 32387, 32388, 32389, 32390, 32391, 32392, 32393, 32394,
      32395, 32396, 32397, 32398, 32399, 32400, 32401, 32402, 32403, 32404,
      32405, 32406, 32407, 32408, 32409, 32410, 32412, 32413, 32414, 32430,
      32436, 32443, 32444, 32470, 32484, 32492, 32505, 32522, 32528, 32542,
      32567, 32569, 32571, 32572, 32573, 32574, 32575, 32576, 32577, 32579,
      32582, 32583, 32584, 32585, 32586, 32587, 32588, 32589, 32590, 32591,
      32594, 32595, 39304, 24871, 28291, 22372, 26118, 25414, 22256, 25324,
      25193, 24275, 38420, 22403, 25289, 21895, 34593, 33098, 36771, 21862,
      33713, 26469, 36182, 34013, 23146, 26639, 25318, 31726, 38417, 20848,
      28572, 35888, 25597, 35272, 25042, 32518, 28866, 28389, 29701, 27028,
      29436, 24266, 37070, 26391, 28010, 25438, 21171, 29282, 32769, 20332,
      23013, 37226, 28889, 28061, 21202, 20048, 38647, 38253, 34174, 30922,
      32047, 20769, 22418, 25794, 32907, 31867, 27882, 26865, 26974, 20919,
      21400, 26792, 29313, 40654, 31729, 29432, 31163, 28435, 29702, 26446,
      37324, 40100, 31036, 33673, 33620, 21519, 26647, 20029, 21385, 21169,
      30782, 21382, 21033, 20616, 20363, 20432, 32598, 32601, 32603, 32604,
      32605, 32606, 32608, 32611, 32612, 32613, 32614, 32615, 32619, 32620,
      32621, 32623, 32624, 32627, 32629, 32630, 32631, 32632, 32634, 32635,
      32636, 32637, 32639, 32640, 32642, 32643, 32644, 32645, 32646, 32647,
      32648, 32649, 32651, 32653, 32655, 32656, 32657, 32658, 32659, 32661,
      32662, 32663, 32664, 32665, 32667, 32668, 32672, 32674, 32675, 32677,
      32678, 32680, 32681, 32682, 32683, 32684, 32685, 32686, 32689, 32691,
      32692, 32693, 32694, 32695, 32698, 32699, 32702, 32704, 32706, 32707,
      32708, 32710, 32711, 32712, 32713, 32715, 32717, 32719, 32720, 32721,
      32722, 32723, 32726, 32727, 32729, 32730, 32731, 32732, 32733, 32734,
      32738, 32739, 30178, 31435, 31890, 27813, 38582, 21147, 29827, 21737,
      20457, 32852, 33714, 36830, 38256, 24265, 24604, 28063, 24088, 25947,
      33080, 38142, 24651, 28860, 32451, 31918, 20937, 26753, 31921, 33391,
      20004, 36742, 37327, 26238, 20142, 35845, 25769, 32842, 20698, 30103,
      29134, 23525, 36797, 28518, 20102, 25730, 38243, 24278, 26009, 21015,
      35010, 28872, 21155, 29454, 29747, 26519, 30967, 38678, 20020, 37051,
      40158, 28107, 20955, 36161, 21533, 25294, 29618, 33777, 38646, 40836,
      38083, 20278, 32666, 20940, 28789, 38517, 23725, 39046, 21478, 20196,
      28316, 29705, 27060, 30827, 39311, 30041, 21016, 30244, 27969, 26611,
      20845, 40857, 32843, 21657, 31548, 31423, 32740, 32743, 32744, 32746,
      32747, 32748, 32749, 32751, 32754, 32756, 32757, 32758, 32759, 32760,
      32761, 32762, 32765, 32766, 32767, 32770, 32775, 32776, 32777, 32778,
      32782, 32783, 32785, 32787, 32794, 32795, 32797, 32798, 32799, 32801,
      32803, 32804, 32811, 32812, 32813, 32814, 32815, 32816, 32818, 32820,
      32825, 32826, 32828, 32830, 32832, 32833, 32836, 32837, 32839, 32840,
      32841, 32846, 32847, 32848, 32849, 32851, 32853, 32854, 32855, 32857,
      32859, 32860, 32861, 32862, 32863, 32864, 32865, 32866, 32867, 32868,
      32869, 32870, 32871, 32872, 32875, 32876, 32877, 32878, 32879, 32880,
      32882, 32883, 32884, 32885, 32886, 32887, 32888, 32889, 32890, 32891,
      32892, 32893, 38534, 22404, 25314, 38471, 27004, 23044, 25602, 31699,
      28431, 38475, 33446, 21346, 39045, 24208, 28809, 25523, 21348, 34383,
      40065, 40595, 30860, 38706, 36335, 36162, 40575, 28510, 31108, 24405,
      38470, 25134, 39540, 21525, 38109, 20387, 26053, 23653, 23649, 32533,
      34385, 27695, 24459, 29575, 28388, 32511, 23782, 25371, 23402, 28390,
      21365, 20081, 25504, 30053, 25249, 36718, 20262, 20177, 27814, 32438,
      35770, 33821, 34746, 32599, 36923, 38179, 31657, 39585, 35064, 33853,
      27931, 39558, 32476, 22920, 40635, 29595, 30721, 34434, 39532, 39554,
      22043, 21527, 22475, 20080, 40614, 21334, 36808, 33033, 30610, 39314,
      34542, 28385, 34067, 26364, 24930, 28459, 32894, 32897, 32898, 32901,
      32904, 32906, 32909, 32910, 32911, 32912, 32913, 32914, 32916, 32917,
      32919, 32921, 32926, 32931, 32934, 32935, 32936, 32940, 32944, 32947,
      32949, 32950, 32952, 32953, 32955, 32965, 32967, 32968, 32969, 32970,
      32971, 32975, 32976, 32977, 32978, 32979, 32980, 32981, 32984, 32991,
      32992, 32994, 32995, 32998, 33006, 33013, 33015, 33017, 33019, 33022,
      33023, 33024, 33025, 33027, 33028, 33029, 33031, 33032, 33035, 33036,
      33045, 33047, 33049, 33051, 33052, 33053, 33055, 33056, 33057, 33058,
      33059, 33060, 33061, 33062, 33063, 33064, 33065, 33066, 33067, 33069,
      33070, 33072, 33075, 33076, 33077, 33079, 33081, 33082, 33083, 33084,
      33085, 33087, 35881, 33426, 33579, 30450, 27667, 24537, 33725, 29483,
      33541, 38170, 27611, 30683, 38086, 21359, 33538, 20882, 24125, 35980,
      36152, 20040, 29611, 26522, 26757, 37238, 38665, 29028, 27809, 30473,
      23186, 38209, 27599, 32654, 26151, 23504, 22969, 23194, 38376, 38391,
      20204, 33804, 33945, 27308, 30431, 38192, 29467, 26790, 23391, 30511,
      37274, 38753, 31964, 36855, 35868, 24357, 31859, 31192, 35269, 27852,
      34588, 23494, 24130, 26825, 30496, 32501, 20885, 20813, 21193, 23081,
      32517, 38754, 33495, 25551, 30596, 34256, 31186, 28218, 24217, 22937,
      34065, 28781, 27665, 25279, 30399, 25935, 24751, 38397, 26126, 34719,
      40483, 38125, 21517, 21629, 35884, 25720, 33088, 33089, 33090, 33091,
      33092, 33093, 33095, 33097, 33101, 33102, 33103, 33106, 33110, 33111,
      33112, 33115, 33116, 33117, 33118, 33119, 33121, 33122, 33123, 33124,
      33126, 33128, 33130, 33131, 33132, 33135, 33138, 33139, 33141, 33142,
      33143, 33144, 33153, 33155, 33156, 33157, 33158, 33159, 33161, 33163,
      33164, 33165, 33166, 33168, 33170, 33171, 33172, 33173, 33174, 33175,
      33177, 33178, 33182, 33183, 33184, 33185, 33186, 33188, 33189, 33191,
      33193, 33195, 33196, 33197, 33198, 33199, 33200, 33201, 33202, 33204,
      33205, 33206, 33207, 33208, 33209, 33212, 33213, 33214, 33215, 33220,
      33221, 33223, 33224, 33225, 33227, 33229, 33230, 33231, 33232, 33233,
      33234, 33235, 25721, 34321, 27169, 33180, 30952, 25705, 39764, 25273,
      26411, 33707, 22696, 40664, 27819, 28448, 23518, 38476, 35851, 29279,
      26576, 25287, 29281, 20137, 22982, 27597, 22675, 26286, 24149, 21215,
      24917, 26408, 30446, 30566, 29287, 31302, 25343, 21738, 21584, 38048,
      37027, 23068, 32435, 27670, 20035, 22902, 32784, 22856, 21335, 30007,
      38590, 22218, 25376, 33041, 24700, 38393, 28118, 21602, 39297, 20869,
      23273, 33021, 22958, 38675, 20522, 27877, 23612, 25311, 20320, 21311,
      33147, 36870, 28346, 34091, 25288, 24180, 30910, 25781, 25467, 24565,
      23064, 37247, 40479, 23615, 25423, 32834, 23421, 21870, 38218, 38221,
      28037, 24744, 26592, 29406, 20957, 23425, 33236, 33237, 33238, 33239,
      33240, 33241, 33242, 33243, 33244, 33245, 33246, 33247, 33248, 33249,
      33250, 33252, 33253, 33254, 33256, 33257, 33259, 33262, 33263, 33264,
      33265, 33266, 33269, 33270, 33271, 33272, 33273, 33274, 33277, 33279,
      33283, 33287, 33288, 33289, 33290, 33291, 33294, 33295, 33297, 33299,
      33301, 33302, 33303, 33304, 33305, 33306, 33309, 33312, 33316, 33317,
      33318, 33319, 33321, 33326, 33330, 33338, 33340, 33341, 33343, 33344,
      33345, 33346, 33347, 33349, 33350, 33352, 33354, 33356, 33357, 33358,
      33360, 33361, 33362, 33363, 33364, 33365, 33366, 33367, 33369, 33371,
      33372, 33373, 33374, 33376, 33377, 33378, 33379, 33380, 33381, 33382,
      33383, 33385, 25319, 27870, 29275, 25197, 38062, 32445, 33043, 27987,
      20892, 24324, 22900, 21162, 24594, 22899, 26262, 34384, 30111, 25386,
      25062, 31983, 35834, 21734, 27431, 40485, 27572, 34261, 21589, 20598,
      27812, 21866, 36276, 29228, 24085, 24597, 29750, 25293, 25490, 29260,
      24472, 28227, 27966, 25856, 28504, 30424, 30928, 30460, 30036, 21028,
      21467, 20051, 24222, 26049, 32810, 32982, 25243, 21638, 21032, 28846,
      34957, 36305, 27873, 21624, 32986, 22521, 35060, 36180, 38506, 37197,
      20329, 27803, 21943, 30406, 30768, 25256, 28921, 28558, 24429, 34028,
      26842, 30844, 31735, 33192, 26379, 40527, 25447, 30896, 22383, 30738,
      38713, 25209, 25259, 21128, 29749, 27607, 33386, 33387, 33388, 33389,
      33393, 33397, 33398, 33399, 33400, 33403, 33404, 33408, 33409, 33411,
      33413, 33414, 33415, 33417, 33420, 33424, 33427, 33428, 33429, 33430,
      33434, 33435, 33438, 33440, 33442, 33443, 33447, 33458, 33461, 33462,
      33466, 33467, 33468, 33471, 33472, 33474, 33475, 33477, 33478, 33481,
      33488, 33494, 33497, 33498, 33501, 33506, 33511, 33512, 33513, 33514,
      33516, 33517, 33518, 33520, 33522, 33523, 33525, 33526, 33528, 33530,
      33532, 33533, 33534, 33535, 33536, 33546, 33547, 33549, 33552, 33554,
      33555, 33558, 33560, 33561, 33565, 33566, 33567, 33568, 33569, 33570,
      33571, 33572, 33573, 33574, 33577, 33578, 33582, 33584, 33586, 33591,
      33595, 33597, 21860, 33086, 30130, 30382, 21305, 30174, 20731, 23617,
      35692, 31687, 20559, 29255, 39575, 39128, 28418, 29922, 31080, 25735,
      30629, 25340, 39057, 36139, 21697, 32856, 20050, 22378, 33529, 33805,
      24179, 20973, 29942, 35780, 23631, 22369, 27900, 39047, 23110, 30772,
      39748, 36843, 31893, 21078, 25169, 38138, 20166, 33670, 33889, 33769,
      33970, 22484, 26420, 22275, 26222, 28006, 35889, 26333, 28689, 26399,
      27450, 26646, 25114, 22971, 19971, 20932, 28422, 26578, 27791, 20854,
      26827, 22855, 27495, 30054, 23822, 33040, 40784, 26071, 31048, 31041,
      39569, 36215, 23682, 20062, 20225, 21551, 22865, 30732, 22120, 27668,
      36804, 24323, 27773, 27875, 35755, 25488, 33598, 33599, 33601, 33602,
      33604, 33605, 33608, 33610, 33611, 33612, 33613, 33614, 33619, 33621,
      33622, 33623, 33624, 33625, 33629, 33634, 33648, 33649, 33650, 33651,
      33652, 33653, 33654, 33657, 33658, 33662, 33663, 33664, 33665, 33666,
      33667, 33668, 33671, 33672, 33674, 33675, 33676, 33677, 33679, 33680,
      33681, 33684, 33685, 33686, 33687, 33689, 33690, 33693, 33695, 33697,
      33698, 33699, 33700, 33701, 33702, 33703, 33708, 33709, 33710, 33711,
      33717, 33723, 33726, 33727, 33730, 33731, 33732, 33734, 33736, 33737,
      33739, 33741, 33742, 33744, 33745, 33746, 33747, 33749, 33751, 33753,
      33754, 33755, 33758, 33762, 33763, 33764, 33766, 33767, 33768, 33771,
      33772, 33773, 24688, 27965, 29301, 25190, 38030, 38085, 21315, 36801,
      31614, 20191, 35878, 20094, 40660, 38065, 38067, 21069, 28508, 36963,
      27973, 35892, 22545, 23884, 27424, 27465, 26538, 21595, 33108, 32652,
      22681, 34103, 24378, 25250, 27207, 38201, 25970, 24708, 26725, 30631,
      20052, 20392, 24039, 38808, 25772, 32728, 23789, 20431, 31373, 20999,
      33540, 19988, 24623, 31363, 38054, 20405, 20146, 31206, 29748, 21220,
      33465, 25810, 31165, 23517, 27777, 38738, 36731, 27682, 20542, 21375,
      28165, 25806, 26228, 27696, 24773, 39031, 35831, 24198, 29756, 31351,
      31179, 19992, 37041, 29699, 27714, 22234, 37195, 27845, 36235, 21306,
      34502, 26354, 36527, 23624, 39537, 28192, 33774, 33775, 33779, 33780,
      33781, 33782, 33783, 33786, 33787, 33788, 33790, 33791, 33792, 33794,
      33797, 33799, 33800, 33801, 33802, 33808, 33810, 33811, 33812, 33813,
      33814, 33815, 33817, 33818, 33819, 33822, 33823, 33824, 33825, 33826,
      33827, 33833, 33834, 33835, 33836, 33837, 33838, 33839, 33840, 33842,
      33843, 33844, 33845, 33846, 33847, 33849, 33850, 33851, 33854, 33855,
      33856, 33857, 33858, 33859, 33860, 33861, 33863, 33864, 33865, 33866,
      33867, 33868, 33869, 33870, 33871, 33872, 33874, 33875, 33876, 33877,
      33878, 33880, 33885, 33886, 33887, 33888, 33890, 33892, 33893, 33894,
      33895, 33896, 33898, 33902, 33903, 33904, 33906, 33908, 33911, 33913,
      33915, 33916, 21462, 23094, 40843, 36259, 21435, 22280, 39079, 26435,
      37275, 27849, 20840, 30154, 25331, 29356, 21048, 21149, 32570, 28820,
      30264, 21364, 40522, 27063, 30830, 38592, 35033, 32676, 28982, 29123,
      20873, 26579, 29924, 22756, 25880, 22199, 35753, 39286, 25200, 32469,
      24825, 28909, 22764, 20161, 20154, 24525, 38887, 20219, 35748, 20995,
      22922, 32427, 25172, 20173, 26085, 25102, 33592, 33993, 33635, 34701,
      29076, 28342, 23481, 32466, 20887, 25545, 26580, 32905, 33593, 34837,
      20754, 23418, 22914, 36785, 20083, 27741, 20837, 35109, 36719, 38446,
      34122, 29790, 38160, 38384, 28070, 33509, 24369, 25746, 27922, 33832,
      33134, 40131, 22622, 36187, 19977, 21441, 33917, 33918, 33919, 33920,
      33921, 33923, 33924, 33925, 33926, 33930, 33933, 33935, 33936, 33937,
      33938, 33939, 33940, 33941, 33942, 33944, 33946, 33947, 33949, 33950,
      33951, 33952, 33954, 33955, 33956, 33957, 33958, 33959, 33960, 33961,
      33962, 33963, 33964, 33965, 33966, 33968, 33969, 33971, 33973, 33974,
      33975, 33979, 33980, 33982, 33984, 33986, 33987, 33989, 33990, 33991,
      33992, 33995, 33996, 33998, 33999, 34002, 34004, 34005, 34007, 34008,
      34009, 34010, 34011, 34012, 34014, 34017, 34018, 34020, 34023, 34024,
      34025, 34026, 34027, 34029, 34030, 34031, 34033, 34034, 34035, 34036,
      34037, 34038, 34039, 34040, 34041, 34042, 34043, 34045, 34046, 34048,
      34049, 34050, 20254, 25955, 26705, 21971, 20007, 25620, 39578, 25195,
      23234, 29791, 33394, 28073, 26862, 20711, 33678, 30722, 26432, 21049,
      27801, 32433, 20667, 21861, 29022, 31579, 26194, 29642, 33515, 26441,
      23665, 21024, 29053, 34923, 38378, 38485, 25797, 36193, 33203, 21892,
      27733, 25159, 32558, 22674, 20260, 21830, 36175, 26188, 19978, 23578,
      35059, 26786, 25422, 31245, 28903, 33421, 21242, 38902, 23569, 21736,
      37045, 32461, 22882, 36170, 34503, 33292, 33293, 36198, 25668, 23556,
      24913, 28041, 31038, 35774, 30775, 30003, 21627, 20280, 36523, 28145,
      23072, 32453, 31070, 27784, 23457, 23158, 29978, 32958, 24910, 28183,
      22768, 29983, 29989, 29298, 21319, 32499, 34051, 34052, 34053, 34054,
      34055, 34056, 34057, 34058, 34059, 34061, 34062, 34063, 34064, 34066,
      34068, 34069, 34070, 34072, 34073, 34075, 34076, 34077, 34078, 34080,
      34082, 34083, 34084, 34085, 34086, 34087, 34088, 34089, 34090, 34093,
      34094, 34095, 34096, 34097, 34098, 34099, 34100, 34101, 34102, 34110,
      34111, 34112, 34113, 34114, 34116, 34117, 34118, 34119, 34123, 34124,
      34125, 34126, 34127, 34128, 34129, 34130, 34131, 34132, 34133, 34135,
      34136, 34138, 34139, 34140, 34141, 34143, 34144, 34145, 34146, 34147,
      34149, 34150, 34151, 34153, 34154, 34155, 34156, 34157, 34158, 34159,
      34160, 34161, 34163, 34165, 34166, 34167, 34168, 34172, 34173, 34175,
      34176, 34177, 30465, 30427, 21097, 32988, 22307, 24072, 22833, 29422,
      26045, 28287, 35799, 23608, 34417, 21313, 30707, 25342, 26102, 20160,
      39135, 34432, 23454, 35782, 21490, 30690, 20351, 23630, 39542, 22987,
      24335, 31034, 22763, 19990, 26623, 20107, 25325, 35475, 36893, 21183,
      26159, 21980, 22124, 36866, 20181, 20365, 37322, 39280, 27663, 24066,
      24643, 23460, 35270, 35797, 25910, 25163, 39318, 23432, 23551, 25480,
      21806, 21463, 30246, 20861, 34092, 26530, 26803, 27530, 25234, 36755,
      21460, 33298, 28113, 30095, 20070, 36174, 23408, 29087, 34223, 26257,
      26329, 32626, 34560, 40653, 40736, 23646, 26415, 36848, 26641, 26463,
      25101, 31446, 22661, 24246, 25968, 28465, 34178, 34179, 34182, 34184,
      34185, 34186, 34187, 34188, 34189, 34190, 34192, 34193, 34194, 34195,
      34196, 34197, 34198, 34199, 34200, 34201, 34202, 34205, 34206, 34207,
      34208, 34209, 34210, 34211, 34213, 34214, 34215, 34217, 34219, 34220,
      34221, 34225, 34226, 34227, 34228, 34229, 34230, 34232, 34234, 34235,
      34236, 34237, 34238, 34239, 34240, 34242, 34243, 34244, 34245, 34246,
      34247, 34248, 34250, 34251, 34252, 34253, 34254, 34257, 34258, 34260,
      34262, 34263, 34264, 34265, 34266, 34267, 34269, 34270, 34271, 34272,
      34273, 34274, 34275, 34277, 34278, 34279, 34280, 34282, 34283, 34284,
      34285, 34286, 34287, 34288, 34289, 34290, 34291, 34292, 34293, 34294,
      34295, 34296, 24661, 21047, 32781, 25684, 34928, 29993, 24069, 26643,
      25332, 38684, 21452, 29245, 35841, 27700, 30561, 31246, 21550, 30636,
      39034, 33308, 35828, 30805, 26388, 28865, 26031, 25749, 22070, 24605,
      31169, 21496, 19997, 27515, 32902, 23546, 21987, 22235, 20282, 20284,
      39282, 24051, 26494, 32824, 24578, 39042, 36865, 23435, 35772, 35829,
      25628, 33368, 25822, 22013, 33487, 37221, 20439, 32032, 36895, 31903,
      20723, 22609, 28335, 23487, 35785, 32899, 37240, 33948, 31639, 34429,
      38539, 38543, 32485, 39635, 30862, 23681, 31319, 36930, 38567, 31071,
      23385, 25439, 31499, 34001, 26797, 21766, 32553, 29712, 32034, 38145,
      25152, 22604, 20182, 23427, 22905, 22612, 34297, 34298, 34300, 34301,
      34302, 34304, 34305, 34306, 34307, 34308, 34310, 34311, 34312, 34313,
      34314, 34315, 34316, 34317, 34318, 34319, 34320, 34322, 34323, 34324,
      34325, 34327, 34328, 34329, 34330, 34331, 34332, 34333, 34334, 34335,
      34336, 34337, 34338, 34339, 34340, 34341, 34342, 34344, 34346, 34347,
      34348, 34349, 34350, 34351, 34352, 34353, 34354, 34355, 34356, 34357,
      34358, 34359, 34361, 34362, 34363, 34365, 34366, 34367, 34368, 34369,
      34370, 34371, 34372, 34373, 34374, 34375, 34376, 34377, 34378, 34379,
      34380, 34386, 34387, 34389, 34390, 34391, 34392, 34393, 34395, 34396,
      34397, 34399, 34400, 34401, 34403, 34404, 34405, 34406, 34407, 34408,
      34409, 34410, 29549, 25374, 36427, 36367, 32974, 33492, 25260, 21488,
      27888, 37214, 22826, 24577, 27760, 22349, 25674, 36138, 30251, 28393,
      22363, 27264, 30192, 28525, 35885, 35848, 22374, 27631, 34962, 30899,
      25506, 21497, 28845, 27748, 22616, 25642, 22530, 26848, 33179, 21776,
      31958, 20504, 36538, 28108, 36255, 28907, 25487, 28059, 28372, 32486,
      33796, 26691, 36867, 28120, 38518, 35752, 22871, 29305, 34276, 33150,
      30140, 35466, 26799, 21076, 36386, 38161, 25552, 39064, 36420, 21884,
      20307, 26367, 22159, 24789, 28053, 21059, 23625, 22825, 28155, 22635,
      30000, 29980, 24684, 33300, 33094, 25361, 26465, 36834, 30522, 36339,
      36148, 38081, 24086, 21381, 21548, 28867, 34413, 34415, 34416, 34418,
      34419, 34420, 34421, 34422, 34423, 34424, 34435, 34436, 34437, 34438,
      34439, 34440, 34441, 34446, 34447, 34448, 34449, 34450, 34452, 34454,
      34455, 34456, 34457, 34458, 34459, 34462, 34463, 34464, 34465, 34466,
      34469, 34470, 34475, 34477, 34478, 34482, 34483, 34487, 34488, 34489,
      34491, 34492, 34493, 34494, 34495, 34497, 34498, 34499, 34501, 34504,
      34508, 34509, 34514, 34515, 34517, 34518, 34519, 34522, 34524, 34525,
      34528, 34529, 34530, 34531, 34533, 34534, 34535, 34536, 34538, 34539,
      34540, 34543, 34549, 34550, 34551, 34554, 34555, 34556, 34557, 34559,
      34561, 34564, 34565, 34566, 34571, 34572, 34574, 34575, 34576, 34577,
      34580, 34582, 27712, 24311, 20572, 20141, 24237, 25402, 33351, 36890,
      26704, 37230, 30643, 21516, 38108, 24420, 31461, 26742, 25413, 31570,
      32479, 30171, 20599, 25237, 22836, 36879, 20984, 31171, 31361, 22270,
      24466, 36884, 28034, 23648, 22303, 21520, 20820, 28237, 22242, 25512,
      39059, 33151, 34581, 35114, 36864, 21534, 23663, 33216, 25302, 25176,
      33073, 40501, 38464, 39534, 39548, 26925, 22949, 25299, 21822, 25366,
      21703, 34521, 27964, 23043, 29926, 34972, 27498, 22806, 35916, 24367,
      28286, 29609, 39037, 20024, 28919, 23436, 30871, 25405, 26202, 30358,
      24779, 23451, 23113, 19975, 33109, 27754, 29579, 20129, 26505, 32593,
      24448, 26106, 26395, 24536, 22916, 23041, 34585, 34587, 34589, 34591,
      34592, 34596, 34598, 34599, 34600, 34602, 34603, 34604, 34605, 34607,
      34608, 34610, 34611, 34613, 34614, 34616, 34617, 34618, 34620, 34621,
      34624, 34625, 34626, 34627, 34628, 34629, 34630, 34634, 34635, 34637,
      34639, 34640, 34641, 34642, 34644, 34645, 34646, 34648, 34650, 34651,
      34652, 34653, 34654, 34655, 34657, 34658, 34662, 34663, 34664, 34665,
      34666, 34667, 34668, 34669, 34671, 34673, 34674, 34675, 34677, 34679,
      34680, 34681, 34682, 34687, 34688, 34689, 34692, 34694, 34695, 34697,
      34698, 34700, 34702, 34703, 34704, 34705, 34706, 34708, 34709, 34710,
      34712, 34713, 34714, 34715, 34716, 34717, 34718, 34720, 34721, 34722,
      34723, 34724, 24013, 24494, 21361, 38886, 36829, 26693, 22260, 21807,
      24799, 20026, 28493, 32500, 33479, 33806, 22996, 20255, 20266, 23614,
      32428, 26410, 34074, 21619, 30031, 32963, 21890, 39759, 20301, 28205,
      35859, 23561, 24944, 21355, 30239, 28201, 34442, 25991, 38395, 32441,
      21563, 31283, 32010, 38382, 21985, 32705, 29934, 25373, 34583, 28065,
      31389, 25105, 26017, 21351, 25569, 27779, 24043, 21596, 38056, 20044,
      27745, 35820, 23627, 26080, 33436, 26791, 21566, 21556, 27595, 27494,
      20116, 25410, 21320, 33310, 20237, 20398, 22366, 25098, 38654, 26212,
      29289, 21247, 21153, 24735, 35823, 26132, 29081, 26512, 35199, 30802,
      30717, 26224, 22075, 21560, 38177, 29306, 34725, 34726, 34727, 34729,
      34730, 34734, 34736, 34737, 34738, 34740, 34742, 34743, 34744, 34745,
      34747, 34748, 34750, 34751, 34753, 34754, 34755, 34756, 34757, 34759,
      34760, 34761, 34764, 34765, 34766, 34767, 34768, 34772, 34773, 34774,
      34775, 34776, 34777, 34778, 34780, 34781, 34782, 34783, 34785, 34786,
      34787, 34788, 34790, 34791, 34792, 34793, 34795, 34796, 34797, 34799,
      34800, 34801, 34802, 34803, 34804, 34805, 34806, 34807, 34808, 34810,
      34811, 34812, 34813, 34815, 34816, 34817, 34818, 34820, 34821, 34822,
      34823, 34824, 34825, 34827, 34828, 34829, 34830, 34831, 34832, 34833,
      34834, 34836, 34839, 34840, 34841, 34842, 34844, 34845, 34846, 34847,
      34848, 34851, 31232, 24687, 24076, 24713, 33181, 22805, 24796, 29060,
      28911, 28330, 27728, 29312, 27268, 34989, 24109, 20064, 23219, 21916,
      38115, 27927, 31995, 38553, 25103, 32454, 30606, 34430, 21283, 38686,
      36758, 26247, 23777, 20384, 29421, 19979, 21414, 22799, 21523, 25472,
      38184, 20808, 20185, 40092, 32420, 21688, 36132, 34900, 33335, 38386,
      28046, 24358, 23244, 26174, 38505, 29616, 29486, 21439, 33146, 39301,
      32673, 23466, 38519, 38480, 32447, 30456, 21410, 38262, 39321, 31665,
      35140, 28248, 20065, 32724, 31077, 35814, 24819, 21709, 20139, 39033,
      24055, 27233, 20687, 21521, 35937, 33831, 30813, 38660, 21066, 21742,
      22179, 38144, 28040, 23477, 28102, 26195, 34852, 34853, 34854, 34855,
      34856, 34857, 34858, 34859, 34860, 34861, 34862, 34863, 34864, 34865,
      34867, 34868, 34869, 34870, 34871, 34872, 34874, 34875, 34877, 34878,
      34879, 34881, 34882, 34883, 34886, 34887, 34888, 34889, 34890, 34891,
      34894, 34895, 34896, 34897, 34898, 34899, 34901, 34902, 34904, 34906,
      34907, 34908, 34909, 34910, 34911, 34912, 34918, 34919, 34922, 34925,
      34927, 34929, 34931, 34932, 34933, 34934, 34936, 34937, 34938, 34939,
      34940, 34944, 34947, 34950, 34951, 34953, 34954, 34956, 34958, 34959,
      34960, 34961, 34963, 34964, 34965, 34967, 34968, 34969, 34970, 34971,
      34973, 34974, 34975, 34976, 34977, 34979, 34981, 34982, 34983, 34984,
      34985, 34986, 23567, 23389, 26657, 32918, 21880, 31505, 25928, 26964,
      20123, 27463, 34638, 38795, 21327, 25375, 25658, 37034, 26012, 32961,
      35856, 20889, 26800, 21368, 34809, 25032, 27844, 27899, 35874, 23633,
      34218, 33455, 38156, 27427, 36763, 26032, 24571, 24515, 20449, 34885,
      26143, 33125, 29481, 24826, 20852, 21009, 22411, 24418, 37026, 34892,
      37266, 24184, 26447, 24615, 22995, 20804, 20982, 33016, 21256, 27769,
      38596, 29066, 20241, 20462, 32670, 26429, 21957, 38152, 31168, 34966,
      32483, 22687, 25100, 38656, 34394, 22040, 39035, 24464, 35768, 33988,
      37207, 21465, 26093, 24207, 30044, 24676, 32110, 23167, 32490, 32493,
      36713, 21927, 23459, 24748, 26059, 29572, 34988, 34990, 34991, 34992,
      34994, 34995, 34996, 34997, 34998, 35000, 35001, 35002, 35003, 35005,
      35006, 35007, 35008, 35011, 35012, 35015, 35016, 35018, 35019, 35020,
      35021, 35023, 35024, 35025, 35027, 35030, 35031, 35034, 35035, 35036,
      35037, 35038, 35040, 35041, 35046, 35047, 35049, 35050, 35051, 35052,
      35053, 35054, 35055, 35058, 35061, 35062, 35063, 35066, 35067, 35069,
      35071, 35072, 35073, 35075, 35076, 35077, 35078, 35079, 35080, 35081,
      35083, 35084, 35085, 35086, 35087, 35089, 35092, 35093, 35094, 35095,
      35096, 35100, 35101, 35102, 35103, 35104, 35106, 35107, 35108, 35110,
      35111, 35112, 35113, 35116, 35117, 35118, 35119, 35121, 35122, 35123,
      35125, 35127, 36873, 30307, 30505, 32474, 38772, 34203, 23398, 31348,
      38634, 34880, 21195, 29071, 24490, 26092, 35810, 23547, 39535, 24033,
      27529, 27739, 35757, 35759, 36874, 36805, 21387, 25276, 40486, 40493,
      21568, 20011, 33469, 29273, 34460, 23830, 34905, 28079, 38597, 21713,
      20122, 35766, 28937, 21693, 38409, 28895, 28153, 30416, 20005, 30740,
      34578, 23721, 24310, 35328, 39068, 38414, 28814, 27839, 22852, 25513,
      30524, 34893, 28436, 33395, 22576, 29141, 21388, 30746, 38593, 21761,
      24422, 28976, 23476, 35866, 39564, 27523, 22830, 40495, 31207, 26472,
      25196, 20335, 30113, 32650, 27915, 38451, 27687, 20208, 30162, 20859,
      26679, 28478, 36992, 33136, 22934, 29814, 35128, 35129, 35130, 35131,
      35132, 35133, 35134, 35135, 35136, 35138, 35139, 35141, 35142, 35143,
      35144, 35145, 35146, 35147, 35148, 35149, 35150, 35151, 35152, 35153,
      35154, 35155, 35156, 35157, 35158, 35159, 35160, 35161, 35162, 35163,
      35164, 35165, 35168, 35169, 35170, 35171, 35172, 35173, 35175, 35176,
      35177, 35178, 35179, 35180, 35181, 35182, 35183, 35184, 35185, 35186,
      35187, 35188, 35189, 35190, 35191, 35192, 35193, 35194, 35196, 35197,
      35198, 35200, 35202, 35204, 35205, 35207, 35208, 35209, 35210, 35211,
      35212, 35213, 35214, 35215, 35216, 35217, 35218, 35219, 35220, 35221,
      35222, 35223, 35224, 35225, 35226, 35227, 35228, 35229, 35230, 35231,
      35232, 35233, 25671, 23591, 36965, 31377, 35875, 23002, 21676, 33280,
      33647, 35201, 32768, 26928, 22094, 32822, 29239, 37326, 20918, 20063,
      39029, 25494, 19994, 21494, 26355, 33099, 22812, 28082, 19968, 22777,
      21307, 25558, 38129, 20381, 20234, 34915, 39056, 22839, 36951, 31227,
      20202, 33008, 30097, 27778, 23452, 23016, 24413, 26885, 34433, 20506,
      24050, 20057, 30691, 20197, 33402, 25233, 26131, 37009, 23673, 20159,
      24441, 33222, 36920, 32900, 30123, 20134, 35028, 24847, 27589, 24518,
      20041, 30410, 28322, 35811, 35758, 35850, 35793, 24322, 32764, 32716,
      32462, 33589, 33643, 22240, 27575, 38899, 38452, 23035, 21535, 38134,
      28139, 23493, 39278, 23609, 24341, 38544, 35234, 35235, 35236, 35237,
      35238, 35239, 35240, 35241, 35242, 35243, 35244, 35245, 35246, 35247,
      35248, 35249, 35250, 35251, 35252, 35253, 35254, 35255, 35256, 35257,
      35258, 35259, 35260, 35261, 35262, 35263, 35264, 35267, 35277, 35283,
      35284, 35285, 35287, 35288, 35289, 35291, 35293, 35295, 35296, 35297,
      35298, 35300, 35303, 35304, 35305, 35306, 35308, 35309, 35310, 35312,
      35313, 35314, 35316, 35317, 35318, 35319, 35320, 35321, 35322, 35323,
      35324, 35325, 35326, 35327, 35329, 35330, 35331, 35332, 35333, 35334,
      35336, 35337, 35338, 35339, 35340, 35341, 35342, 35343, 35344, 35345,
      35346, 35347, 35348, 35349, 35350, 35351, 35352, 35353, 35354, 35355,
      35356, 35357, 21360, 33521, 27185, 23156, 40560, 24212, 32552, 33721,
      33828, 33829, 33639, 34631, 36814, 36194, 30408, 24433, 39062, 30828,
      26144, 21727, 25317, 20323, 33219, 30152, 24248, 38605, 36362, 34553,
      21647, 27891, 28044, 27704, 24703, 21191, 29992, 24189, 20248, 24736,
      24551, 23588, 30001, 37038, 38080, 29369, 27833, 28216, 37193, 26377,
      21451, 21491, 20305, 37321, 35825, 21448, 24188, 36802, 28132, 20110,
      30402, 27014, 34398, 24858, 33286, 20313, 20446, 36926, 40060, 24841,
      28189, 28180, 38533, 20104, 23089, 38632, 19982, 23679, 31161, 23431,
      35821, 32701, 29577, 22495, 33419, 37057, 21505, 36935, 21947, 23786,
      24481, 24840, 27442, 29425, 32946, 35465, 35358, 35359, 35360, 35361,
      35362, 35363, 35364, 35365, 35366, 35367, 35368, 35369, 35370, 35371,
      35372, 35373, 35374, 35375, 35376, 35377, 35378, 35379, 35380, 35381,
      35382, 35383, 35384, 35385, 35386, 35387, 35388, 35389, 35391, 35392,
      35393, 35394, 35395, 35396, 35397, 35398, 35399, 35401, 35402, 35403,
      35404, 35405, 35406, 35407, 35408, 35409, 35410, 35411, 35412, 35413,
      35414, 35415, 35416, 35417, 35418, 35419, 35420, 35421, 35422, 35423,
      35424, 35425, 35426, 35427, 35428, 35429, 35430, 35431, 35432, 35433,
      35434, 35435, 35436, 35437, 35438, 35439, 35440, 35441, 35442, 35443,
      35444, 35445, 35446, 35447, 35448, 35450, 35451, 35452, 35453, 35454,
      35455, 35456, 28020, 23507, 35029, 39044, 35947, 39533, 40499, 28170,
      20900, 20803, 22435, 34945, 21407, 25588, 36757, 22253, 21592, 22278,
      29503, 28304, 32536, 36828, 33489, 24895, 24616, 38498, 26352, 32422,
      36234, 36291, 38053, 23731, 31908, 26376, 24742, 38405, 32792, 20113,
      37095, 21248, 38504, 20801, 36816, 34164, 37213, 26197, 38901, 23381,
      21277, 30776, 26434, 26685, 21705, 28798, 23472, 36733, 20877, 22312,
      21681, 25874, 26242, 36190, 36163, 33039, 33900, 36973, 31967, 20991,
      34299, 26531, 26089, 28577, 34468, 36481, 22122, 36896, 30338, 28790,
      29157, 36131, 25321, 21017, 27901, 36156, 24590, 22686, 24974, 26366,
      36192, 25166, 21939, 28195, 26413, 36711, 35457, 35458, 35459, 35460,
      35461, 35462, 35463, 35464, 35467, 35468, 35469, 35470, 35471, 35472,
      35473, 35474, 35476, 35477, 35478, 35479, 35480, 35481, 35482, 35483,
      35484, 35485, 35486, 35487, 35488, 35489, 35490, 35491, 35492, 35493,
      35494, 35495, 35496, 35497, 35498, 35499, 35500, 35501, 35502, 35503,
      35504, 35505, 35506, 35507, 35508, 35509, 35510, 35511, 35512, 35513,
      35514, 35515, 35516, 35517, 35518, 35519, 35520, 35521, 35522, 35523,
      35524, 35525, 35526, 35527, 35528, 35529, 35530, 35531, 35532, 35533,
      35534, 35535, 35536, 35537, 35538, 35539, 35540, 35541, 35542, 35543,
      35544, 35545, 35546, 35547, 35548, 35549, 35550, 35551, 35552, 35553,
      35554, 35555, 38113, 38392, 30504, 26629, 27048, 21643, 20045, 28856,
      35784, 25688, 25995, 23429, 31364, 20538, 23528, 30651, 27617, 35449,
      31896, 27838, 30415, 26025, 36759, 23853, 23637, 34360, 26632, 21344,
      25112, 31449, 28251, 32509, 27167, 31456, 24432, 28467, 24352, 25484,
      28072, 26454, 19976, 24080, 36134, 20183, 32960, 30260, 38556, 25307,
      26157, 25214, 27836, 36213, 29031, 32617, 20806, 32903, 21484, 36974,
      25240, 21746, 34544, 36761, 32773, 38167, 34071, 36825, 27993, 29645,
      26015, 30495, 29956, 30759, 33275, 36126, 38024, 20390, 26517, 30137,
      35786, 38663, 25391, 38215, 38453, 33976, 25379, 30529, 24449, 29424,
      20105, 24596, 25972, 25327, 27491, 25919, 35556, 35557, 35558, 35559,
      35560, 35561, 35562, 35563, 35564, 35565, 35566, 35567, 35568, 35569,
      35570, 35571, 35572, 35573, 35574, 35575, 35576, 35577, 35578, 35579,
      35580, 35581, 35582, 35583, 35584, 35585, 35586, 35587, 35588, 35589,
      35590, 35592, 35593, 35594, 35595, 35596, 35597, 35598, 35599, 35600,
      35601, 35602, 35603, 35604, 35605, 35606, 35607, 35608, 35609, 35610,
      35611, 35612, 35613, 35614, 35615, 35616, 35617, 35618, 35619, 35620,
      35621, 35623, 35624, 35625, 35626, 35627, 35628, 35629, 35630, 35631,
      35632, 35633, 35634, 35635, 35636, 35637, 35638, 35639, 35640, 35641,
      35642, 35643, 35644, 35645, 35646, 35647, 35648, 35649, 35650, 35651,
      35652, 35653, 24103, 30151, 37073, 35777, 33437, 26525, 25903, 21553,
      34584, 30693, 32930, 33026, 27713, 20043, 32455, 32844, 30452, 26893,
      27542, 25191, 20540, 20356, 22336, 25351, 27490, 36286, 21482, 26088,
      32440, 24535, 25370, 25527, 33267, 33268, 32622, 24092, 23769, 21046,
      26234, 31209, 31258, 36136, 28825, 30164, 28382, 27835, 31378, 20013,
      30405, 24544, 38047, 34935, 32456, 31181, 32959, 37325, 20210, 20247,
      33311, 21608, 24030, 27954, 35788, 31909, 36724, 32920, 24090, 21650,
      30385, 23449, 26172, 39588, 29664, 26666, 34523, 26417, 29482, 35832,
      35803, 36880, 31481, 28891, 29038, 25284, 30633, 22065, 20027, 33879,
      26609, 21161, 34496, 36142, 38136, 31569, 35654, 35655, 35656, 35657,
      35658, 35659, 35660, 35661, 35662, 35663, 35664, 35665, 35666, 35667,
      35668, 35669, 35670, 35671, 35672, 35673, 35674, 35675, 35676, 35677,
      35678, 35679, 35680, 35681, 35682, 35683, 35684, 35685, 35687, 35688,
      35689, 35690, 35691, 35693, 35694, 35695, 35696, 35697, 35698, 35699,
      35700, 35701, 35702, 35703, 35704, 35705, 35706, 35707, 35708, 35709,
      35710, 35711, 35712, 35713, 35714, 35715, 35716, 35717, 35718, 35719,
      35720, 35721, 35722, 35723, 35724, 35725, 35726, 35727, 35728, 35729,
      35730, 35731, 35732, 35733, 35734, 35735, 35736, 35737, 35738, 35739,
      35740, 35741, 35742, 35743, 35756, 35761, 35771, 35783, 35792, 35818,
      35849, 35870, 20303, 27880, 31069, 39547, 25235, 29226, 25341, 19987,
      30742, 36716, 25776, 36186, 31686, 26729, 24196, 35013, 22918, 25758,
      22766, 29366, 26894, 38181, 36861, 36184, 22368, 32512, 35846, 20934,
      25417, 25305, 21331, 26700, 29730, 33537, 37196, 21828, 30528, 28796,
      27978, 20857, 21672, 36164, 23039, 28363, 28100, 23388, 32043, 20180,
      31869, 28371, 23376, 33258, 28173, 23383, 39683, 26837, 36394, 23447,
      32508, 24635, 32437, 37049, 36208, 22863, 25549, 31199, 36275, 21330,
      26063, 31062, 35781, 38459, 32452, 38075, 32386, 22068, 37257, 26368,
      32618, 23562, 36981, 26152, 24038, 20304, 26590, 20570, 20316, 22352,
      24231, 59408, 59409, 59410, 59411, 59412, 35896, 35897, 35898, 35899,
      35900, 35901, 35902, 35903, 35904, 35906, 35907, 35908, 35909, 35912,
      35914, 35915, 35917, 35918, 35919, 35920, 35921, 35922, 35923, 35924,
      35926, 35927, 35928, 35929, 35931, 35932, 35933, 35934, 35935, 35936,
      35939, 35940, 35941, 35942, 35943, 35944, 35945, 35948, 35949, 35950,
      35951, 35952, 35953, 35954, 35956, 35957, 35958, 35959, 35963, 35964,
      35965, 35966, 35967, 35968, 35969, 35971, 35972, 35974, 35975, 35976,
      35979, 35981, 35982, 35983, 35984, 35985, 35986, 35987, 35989, 35990,
      35991, 35993, 35994, 35995, 35996, 35997, 35998, 35999, 36000, 36001,
      36002, 36003, 36004, 36005, 36006, 36007, 36008, 36009, 36010, 36011,
      36012, 36013, 20109, 19980, 20800, 19984, 24319, 21317, 19989, 20120,
      19998, 39730, 23404, 22121, 20008, 31162, 20031, 21269, 20039, 22829,
      29243, 21358, 27664, 22239, 32996, 39319, 27603, 30590, 40727, 20022,
      20127, 40720, 20060, 20073, 20115, 33416, 23387, 21868, 22031, 20164,
      21389, 21405, 21411, 21413, 21422, 38757, 36189, 21274, 21493, 21286,
      21294, 21310, 36188, 21350, 21347, 20994, 21000, 21006, 21037, 21043,
      21055, 21056, 21068, 21086, 21089, 21084, 33967, 21117, 21122, 21121,
      21136, 21139, 20866, 32596, 20155, 20163, 20169, 20162, 20200, 20193,
      20203, 20190, 20251, 20211, 20258, 20324, 20213, 20261, 20263, 20233,
      20267, 20318, 20327, 25912, 20314, 20317, 36014, 36015, 36016, 36017,
      36018, 36019, 36020, 36021, 36022, 36023, 36024, 36025, 36026, 36027,
      36028, 36029, 36030, 36031, 36032, 36033, 36034, 36035, 36036, 36037,
      36038, 36039, 36040, 36041, 36042, 36043, 36044, 36045, 36046, 36047,
      36048, 36049, 36050, 36051, 36052, 36053, 36054, 36055, 36056, 36057,
      36058, 36059, 36060, 36061, 36062, 36063, 36064, 36065, 36066, 36067,
      36068, 36069, 36070, 36071, 36072, 36073, 36074, 36075, 36076, 36077,
      36078, 36079, 36080, 36081, 36082, 36083, 36084, 36085, 36086, 36087,
      36088, 36089, 36090, 36091, 36092, 36093, 36094, 36095, 36096, 36097,
      36098, 36099, 36100, 36101, 36102, 36103, 36104, 36105, 36106, 36107,
      36108, 36109, 20319, 20311, 20274, 20285, 20342, 20340, 20369, 20361,
      20355, 20367, 20350, 20347, 20394, 20348, 20396, 20372, 20454, 20456,
      20458, 20421, 20442, 20451, 20444, 20433, 20447, 20472, 20521, 20556,
      20467, 20524, 20495, 20526, 20525, 20478, 20508, 20492, 20517, 20520,
      20606, 20547, 20565, 20552, 20558, 20588, 20603, 20645, 20647, 20649,
      20666, 20694, 20742, 20717, 20716, 20710, 20718, 20743, 20747, 20189,
      27709, 20312, 20325, 20430, 40864, 27718, 31860, 20846, 24061, 40649,
      39320, 20865, 22804, 21241, 21261, 35335, 21264, 20971, 22809, 20821,
      20128, 20822, 20147, 34926, 34980, 20149, 33044, 35026, 31104, 23348,
      34819, 32696, 20907, 20913, 20925, 20924, 36110, 36111, 36112, 36113,
      36114, 36115, 36116, 36117, 36118, 36119, 36120, 36121, 36122, 36123,
      36124, 36128, 36177, 36178, 36183, 36191, 36197, 36200, 36201, 36202,
      36204, 36206, 36207, 36209, 36210, 36216, 36217, 36218, 36219, 36220,
      36221, 36222, 36223, 36224, 36226, 36227, 36230, 36231, 36232, 36233,
      36236, 36237, 36238, 36239, 36240, 36242, 36243, 36245, 36246, 36247,
      36248, 36249, 36250, 36251, 36252, 36253, 36254, 36256, 36257, 36258,
      36260, 36261, 36262, 36263, 36264, 36265, 36266, 36267, 36268, 36269,
      36270, 36271, 36272, 36274, 36278, 36279, 36281, 36283, 36285, 36288,
      36289, 36290, 36293, 36295, 36296, 36297, 36298, 36301, 36304, 36306,
      36307, 36308, 20935, 20886, 20898, 20901, 35744, 35750, 35751, 35754,
      35764, 35765, 35767, 35778, 35779, 35787, 35791, 35790, 35794, 35795,
      35796, 35798, 35800, 35801, 35804, 35807, 35808, 35812, 35816, 35817,
      35822, 35824, 35827, 35830, 35833, 35836, 35839, 35840, 35842, 35844,
      35847, 35852, 35855, 35857, 35858, 35860, 35861, 35862, 35865, 35867,
      35864, 35869, 35871, 35872, 35873, 35877, 35879, 35882, 35883, 35886,
      35887, 35890, 35891, 35893, 35894, 21353, 21370, 38429, 38434, 38433,
      38449, 38442, 38461, 38460, 38466, 38473, 38484, 38495, 38503, 38508,
      38514, 38516, 38536, 38541, 38551, 38576, 37015, 37019, 37021, 37017,
      37036, 37025, 37044, 37043, 37046, 37050, 36309, 36312, 36313, 36316,
      36320, 36321, 36322, 36325, 36326, 36327, 36329, 36333, 36334, 36336,
      36337, 36338, 36340, 36342, 36348, 36350, 36351, 36352, 36353, 36354,
      36355, 36356, 36358, 36359, 36360, 36363, 36365, 36366, 36368, 36369,
      36370, 36371, 36373, 36374, 36375, 36376, 36377, 36378, 36379, 36380,
      36384, 36385, 36388, 36389, 36390, 36391, 36392, 36395, 36397, 36400,
      36402, 36403, 36404, 36406, 36407, 36408, 36411, 36412, 36414, 36415,
      36419, 36421, 36422, 36428, 36429, 36430, 36431, 36432, 36435, 36436,
      36437, 36438, 36439, 36440, 36442, 36443, 36444, 36445, 36446, 36447,
      36448, 36449, 36450, 36451, 36452, 36453, 36455, 36456, 36458, 36459,
      36462, 36465, 37048, 37040, 37071, 37061, 37054, 37072, 37060, 37063,
      37075, 37094, 37090, 37084, 37079, 37083, 37099, 37103, 37118, 37124,
      37154, 37150, 37155, 37169, 37167, 37177, 37187, 37190, 21005, 22850,
      21154, 21164, 21165, 21182, 21759, 21200, 21206, 21232, 21471, 29166,
      30669, 24308, 20981, 20988, 39727, 21430, 24321, 30042, 24047, 22348,
      22441, 22433, 22654, 22716, 22725, 22737, 22313, 22316, 22314, 22323,
      22329, 22318, 22319, 22364, 22331, 22338, 22377, 22405, 22379, 22406,
      22396, 22395, 22376, 22381, 22390, 22387, 22445, 22436, 22412, 22450,
      22479, 22439, 22452, 22419, 22432, 22485, 22488, 22490, 22489, 22482,
      22456, 22516, 22511, 22520, 22500, 22493, 36467, 36469, 36471, 36472,
      36473, 36474, 36475, 36477, 36478, 36480, 36482, 36483, 36484, 36486,
      36488, 36489, 36490, 36491, 36492, 36493, 36494, 36497, 36498, 36499,
      36501, 36502, 36503, 36504, 36505, 36506, 36507, 36509, 36511, 36512,
      36513, 36514, 36515, 36516, 36517, 36518, 36519, 36520, 36521, 36522,
      36525, 36526, 36528, 36529, 36531, 36532, 36533, 36534, 36535, 36536,
      36537, 36539, 36540, 36541, 36542, 36543, 36544, 36545, 36546, 36547,
      36548, 36549, 36550, 36551, 36552, 36553, 36554, 36555, 36556, 36557,
      36559, 36560, 36561, 36562, 36563, 36564, 36565, 36566, 36567, 36568,
      36569, 36570, 36571, 36572, 36573, 36574, 36575, 36576, 36577, 36578,
      36579, 36580, 22539, 22541, 22525, 22509, 22528, 22558, 22553, 22596,
      22560, 22629, 22636, 22657, 22665, 22682, 22656, 39336, 40729, 25087,
      33401, 33405, 33407, 33423, 33418, 33448, 33412, 33422, 33425, 33431,
      33433, 33451, 33464, 33470, 33456, 33480, 33482, 33507, 33432, 33463,
      33454, 33483, 33484, 33473, 33449, 33460, 33441, 33450, 33439, 33476,
      33486, 33444, 33505, 33545, 33527, 33508, 33551, 33543, 33500, 33524,
      33490, 33496, 33548, 33531, 33491, 33553, 33562, 33542, 33556, 33557,
      33504, 33493, 33564, 33617, 33627, 33628, 33544, 33682, 33596, 33588,
      33585, 33691, 33630, 33583, 33615, 33607, 33603, 33631, 33600, 33559,
      33632, 33581, 33594, 33587, 33638, 33637, 36581, 36582, 36583, 36584,
      36585, 36586, 36587, 36588, 36589, 36590, 36591, 36592, 36593, 36594,
      36595, 36596, 36597, 36598, 36599, 36600, 36601, 36602, 36603, 36604,
      36605, 36606, 36607, 36608, 36609, 36610, 36611, 36612, 36613, 36614,
      36615, 36616, 36617, 36618, 36619, 36620, 36621, 36622, 36623, 36624,
      36625, 36626, 36627, 36628, 36629, 36630, 36631, 36632, 36633, 36634,
      36635, 36636, 36637, 36638, 36639, 36640, 36641, 36642, 36643, 36644,
      36645, 36646, 36647, 36648, 36649, 36650, 36651, 36652, 36653, 36654,
      36655, 36656, 36657, 36658, 36659, 36660, 36661, 36662, 36663, 36664,
      36665, 36666, 36667, 36668, 36669, 36670, 36671, 36672, 36673, 36674,
      36675, 36676, 33640, 33563, 33641, 33644, 33642, 33645, 33646, 33712,
      33656, 33715, 33716, 33696, 33706, 33683, 33692, 33669, 33660, 33718,
      33705, 33661, 33720, 33659, 33688, 33694, 33704, 33722, 33724, 33729,
      33793, 33765, 33752, 22535, 33816, 33803, 33757, 33789, 33750, 33820,
      33848, 33809, 33798, 33748, 33759, 33807, 33795, 33784, 33785, 33770,
      33733, 33728, 33830, 33776, 33761, 33884, 33873, 33882, 33881, 33907,
      33927, 33928, 33914, 33929, 33912, 33852, 33862, 33897, 33910, 33932,
      33934, 33841, 33901, 33985, 33997, 34000, 34022, 33981, 34003, 33994,
      33983, 33978, 34016, 33953, 33977, 33972, 33943, 34021, 34019, 34060,
      29965, 34104, 34032, 34105, 34079, 34106, 36677, 36678, 36679, 36680,
      36681, 36682, 36683, 36684, 36685, 36686, 36687, 36688, 36689, 36690,
      36691, 36692, 36693, 36694, 36695, 36696, 36697, 36698, 36699, 36700,
      36701, 36702, 36703, 36704, 36705, 36706, 36707, 36708, 36709, 36714,
      36736, 36748, 36754, 36765, 36768, 36769, 36770, 36772, 36773, 36774,
      36775, 36778, 36780, 36781, 36782, 36783, 36786, 36787, 36788, 36789,
      36791, 36792, 36794, 36795, 36796, 36799, 36800, 36803, 36806, 36809,
      36810, 36811, 36812, 36813, 36815, 36818, 36822, 36823, 36826, 36832,
      36833, 36835, 36839, 36844, 36847, 36849, 36850, 36852, 36853, 36854,
      36858, 36859, 36860, 36862, 36863, 36871, 36872, 36876, 36878, 36883,
      36885, 36888, 34134, 34107, 34047, 34044, 34137, 34120, 34152, 34148,
      34142, 34170, 30626, 34115, 34162, 34171, 34212, 34216, 34183, 34191,
      34169, 34222, 34204, 34181, 34233, 34231, 34224, 34259, 34241, 34268,
      34303, 34343, 34309, 34345, 34326, 34364, 24318, 24328, 22844, 22849,
      32823, 22869, 22874, 22872, 21263, 23586, 23589, 23596, 23604, 25164,
      25194, 25247, 25275, 25290, 25306, 25303, 25326, 25378, 25334, 25401,
      25419, 25411, 25517, 25590, 25457, 25466, 25486, 25524, 25453, 25516,
      25482, 25449, 25518, 25532, 25586, 25592, 25568, 25599, 25540, 25566,
      25550, 25682, 25542, 25534, 25669, 25665, 25611, 25627, 25632, 25612,
      25638, 25633, 25694, 25732, 25709, 25750, 36889, 36892, 36899, 36900,
      36901, 36903, 36904, 36905, 36906, 36907, 36908, 36912, 36913, 36914,
      36915, 36916, 36919, 36921, 36922, 36925, 36927, 36928, 36931, 36933,
      36934, 36936, 36937, 36938, 36939, 36940, 36942, 36948, 36949, 36950,
      36953, 36954, 36956, 36957, 36958, 36959, 36960, 36961, 36964, 36966,
      36967, 36969, 36970, 36971, 36972, 36975, 36976, 36977, 36978, 36979,
      36982, 36983, 36984, 36985, 36986, 36987, 36988, 36990, 36993, 36996,
      36997, 36998, 36999, 37001, 37002, 37004, 37005, 37006, 37007, 37008,
      37010, 37012, 37014, 37016, 37018, 37020, 37022, 37023, 37024, 37028,
      37029, 37031, 37032, 37033, 37035, 37037, 37042, 37047, 37052, 37053,
      37055, 37056, 25722, 25783, 25784, 25753, 25786, 25792, 25808, 25815,
      25828, 25826, 25865, 25893, 25902, 24331, 24530, 29977, 24337, 21343,
      21489, 21501, 21481, 21480, 21499, 21522, 21526, 21510, 21579, 21586,
      21587, 21588, 21590, 21571, 21537, 21591, 21593, 21539, 21554, 21634,
      21652, 21623, 21617, 21604, 21658, 21659, 21636, 21622, 21606, 21661,
      21712, 21677, 21698, 21684, 21714, 21671, 21670, 21715, 21716, 21618,
      21667, 21717, 21691, 21695, 21708, 21721, 21722, 21724, 21673, 21674,
      21668, 21725, 21711, 21726, 21787, 21735, 21792, 21757, 21780, 21747,
      21794, 21795, 21775, 21777, 21799, 21802, 21863, 21903, 21941, 21833,
      21869, 21825, 21845, 21823, 21840, 21820, 37058, 37059, 37062, 37064,
      37065, 37067, 37068, 37069, 37074, 37076, 37077, 37078, 37080, 37081,
      37082, 37086, 37087, 37088, 37091, 37092, 37093, 37097, 37098, 37100,
      37102, 37104, 37105, 37106, 37107, 37109, 37110, 37111, 37113, 37114,
      37115, 37116, 37119, 37120, 37121, 37123, 37125, 37126, 37127, 37128,
      37129, 37130, 37131, 37132, 37133, 37134, 37135, 37136, 37137, 37138,
      37139, 37140, 37141, 37142, 37143, 37144, 37146, 37147, 37148, 37149,
      37151, 37152, 37153, 37156, 37157, 37158, 37159, 37160, 37161, 37162,
      37163, 37164, 37165, 37166, 37168, 37170, 37171, 37172, 37173, 37174,
      37175, 37176, 37178, 37179, 37180, 37181, 37182, 37183, 37184, 37185,
      37186, 37188, 21815, 21846, 21877, 21878, 21879, 21811, 21808, 21852,
      21899, 21970, 21891, 21937, 21945, 21896, 21889, 21919, 21886, 21974,
      21905, 21883, 21983, 21949, 21950, 21908, 21913, 21994, 22007, 21961,
      22047, 21969, 21995, 21996, 21972, 21990, 21981, 21956, 21999, 21989,
      22002, 22003, 21964, 21965, 21992, 22005, 21988, 36756, 22046, 22024,
      22028, 22017, 22052, 22051, 22014, 22016, 22055, 22061, 22104, 22073,
      22103, 22060, 22093, 22114, 22105, 22108, 22092, 22100, 22150, 22116,
      22129, 22123, 22139, 22140, 22149, 22163, 22191, 22228, 22231, 22237,
      22241, 22261, 22251, 22265, 22271, 22276, 22282, 22281, 22300, 24079,
      24089, 24084, 24081, 24113, 24123, 24124, 37189, 37191, 37192, 37201,
      37203, 37204, 37205, 37206, 37208, 37209, 37211, 37212, 37215, 37216,
      37222, 37223, 37224, 37227, 37229, 37235, 37242, 37243, 37244, 37248,
      37249, 37250, 37251, 37252, 37254, 37256, 37258, 37262, 37263, 37267,
      37268, 37269, 37270, 37271, 37272, 37273, 37276, 37277, 37278, 37279,
      37280, 37281, 37284, 37285, 37286, 37287, 37288, 37289, 37291, 37292,
      37296, 37297, 37298, 37299, 37302, 37303, 37304, 37305, 37307, 37308,
      37309, 37310, 37311, 37312, 37313, 37314, 37315, 37316, 37317, 37318,
      37320, 37323, 37328, 37330, 37331, 37332, 37333, 37334, 37335, 37336,
      37337, 37338, 37339, 37341, 37342, 37343, 37344, 37345, 37346, 37347,
      37348, 37349, 24119, 24132, 24148, 24155, 24158, 24161, 23692, 23674,
      23693, 23696, 23702, 23688, 23704, 23705, 23697, 23706, 23708, 23733,
      23714, 23741, 23724, 23723, 23729, 23715, 23745, 23735, 23748, 23762,
      23780, 23755, 23781, 23810, 23811, 23847, 23846, 23854, 23844, 23838,
      23814, 23835, 23896, 23870, 23860, 23869, 23916, 23899, 23919, 23901,
      23915, 23883, 23882, 23913, 23924, 23938, 23961, 23965, 35955, 23991,
      24005, 24435, 24439, 24450, 24455, 24457, 24460, 24469, 24473, 24476,
      24488, 24493, 24501, 24508, 34914, 24417, 29357, 29360, 29364, 29367,
      29368, 29379, 29377, 29390, 29389, 29394, 29416, 29423, 29417, 29426,
      29428, 29431, 29441, 29427, 29443, 29434, 37350, 37351, 37352, 37353,
      37354, 37355, 37356, 37357, 37358, 37359, 37360, 37361, 37362, 37363,
      37364, 37365, 37366, 37367, 37368, 37369, 37370, 37371, 37372, 37373,
      37374, 37375, 37376, 37377, 37378, 37379, 37380, 37381, 37382, 37383,
      37384, 37385, 37386, 37387, 37388, 37389, 37390, 37391, 37392, 37393,
      37394, 37395, 37396, 37397, 37398, 37399, 37400, 37401, 37402, 37403,
      37404, 37405, 37406, 37407, 37408, 37409, 37410, 37411, 37412, 37413,
      37414, 37415, 37416, 37417, 37418, 37419, 37420, 37421, 37422, 37423,
      37424, 37425, 37426, 37427, 37428, 37429, 37430, 37431, 37432, 37433,
      37434, 37435, 37436, 37437, 37438, 37439, 37440, 37441, 37442, 37443,
      37444, 37445, 29435, 29463, 29459, 29473, 29450, 29470, 29469, 29461,
      29474, 29497, 29477, 29484, 29496, 29489, 29520, 29517, 29527, 29536,
      29548, 29551, 29566, 33307, 22821, 39143, 22820, 22786, 39267, 39271,
      39272, 39273, 39274, 39275, 39276, 39284, 39287, 39293, 39296, 39300,
      39303, 39306, 39309, 39312, 39313, 39315, 39316, 39317, 24192, 24209,
      24203, 24214, 24229, 24224, 24249, 24245, 24254, 24243, 36179, 24274,
      24273, 24283, 24296, 24298, 33210, 24516, 24521, 24534, 24527, 24579,
      24558, 24580, 24545, 24548, 24574, 24581, 24582, 24554, 24557, 24568,
      24601, 24629, 24614, 24603, 24591, 24589, 24617, 24619, 24586, 24639,
      24609, 24696, 24697, 24699, 24698, 24642, 37446, 37447, 37448, 37449,
      37450, 37451, 37452, 37453, 37454, 37455, 37456, 37457, 37458, 37459,
      37460, 37461, 37462, 37463, 37464, 37465, 37466, 37467, 37468, 37469,
      37470, 37471, 37472, 37473, 37474, 37475, 37476, 37477, 37478, 37479,
      37480, 37481, 37482, 37483, 37484, 37485, 37486, 37487, 37488, 37489,
      37490, 37491, 37493, 37494, 37495, 37496, 37497, 37498, 37499, 37500,
      37501, 37502, 37503, 37504, 37505, 37506, 37507, 37508, 37509, 37510,
      37511, 37512, 37513, 37514, 37515, 37516, 37517, 37519, 37520, 37521,
      37522, 37523, 37524, 37525, 37526, 37527, 37528, 37529, 37530, 37531,
      37532, 37533, 37534, 37535, 37536, 37537, 37538, 37539, 37540, 37541,
      37542, 37543, 24682, 24701, 24726, 24730, 24749, 24733, 24707, 24722,
      24716, 24731, 24812, 24763, 24753, 24797, 24792, 24774, 24794, 24756,
      24864, 24870, 24853, 24867, 24820, 24832, 24846, 24875, 24906, 24949,
      25004, 24980, 24999, 25015, 25044, 25077, 24541, 38579, 38377, 38379,
      38385, 38387, 38389, 38390, 38396, 38398, 38403, 38404, 38406, 38408,
      38410, 38411, 38412, 38413, 38415, 38418, 38421, 38422, 38423, 38425,
      38426, 20012, 29247, 25109, 27701, 27732, 27740, 27722, 27811, 27781,
      27792, 27796, 27788, 27752, 27753, 27764, 27766, 27782, 27817, 27856,
      27860, 27821, 27895, 27896, 27889, 27863, 27826, 27872, 27862, 27898,
      27883, 27886, 27825, 27859, 27887, 27902, 37544, 37545, 37546, 37547,
      37548, 37549, 37551, 37552, 37553, 37554, 37555, 37556, 37557, 37558,
      37559, 37560, 37561, 37562, 37563, 37564, 37565, 37566, 37567, 37568,
      37569, 37570, 37571, 37572, 37573, 37574, 37575, 37577, 37578, 37579,
      37580, 37581, 37582, 37583, 37584, 37585, 37586, 37587, 37588, 37589,
      37590, 37591, 37592, 37593, 37594, 37595, 37596, 37597, 37598, 37599,
      37600, 37601, 37602, 37603, 37604, 37605, 37606, 37607, 37608, 37609,
      37610, 37611, 37612, 37613, 37614, 37615, 37616, 37617, 37618, 37619,
      37620, 37621, 37622, 37623, 37624, 37625, 37626, 37627, 37628, 37629,
      37630, 37631, 37632, 37633, 37634, 37635, 37636, 37637, 37638, 37639,
      37640, 37641, 27961, 27943, 27916, 27971, 27976, 27911, 27908, 27929,
      27918, 27947, 27981, 27950, 27957, 27930, 27983, 27986, 27988, 27955,
      28049, 28015, 28062, 28064, 27998, 28051, 28052, 27996, 28000, 28028,
      28003, 28186, 28103, 28101, 28126, 28174, 28095, 28128, 28177, 28134,
      28125, 28121, 28182, 28075, 28172, 28078, 28203, 28270, 28238, 28267,
      28338, 28255, 28294, 28243, 28244, 28210, 28197, 28228, 28383, 28337,
      28312, 28384, 28461, 28386, 28325, 28327, 28349, 28347, 28343, 28375,
      28340, 28367, 28303, 28354, 28319, 28514, 28486, 28487, 28452, 28437,
      28409, 28463, 28470, 28491, 28532, 28458, 28425, 28457, 28553, 28557,
      28556, 28536, 28530, 28540, 28538, 28625, 37642, 37643, 37644, 37645,
      37646, 37647, 37648, 37649, 37650, 37651, 37652, 37653, 37654, 37655,
      37656, 37657, 37658, 37659, 37660, 37661, 37662, 37663, 37664, 37665,
      37666, 37667, 37668, 37669, 37670, 37671, 37672, 37673, 37674, 37675,
      37676, 37677, 37678, 37679, 37680, 37681, 37682, 37683, 37684, 37685,
      37686, 37687, 37688, 37689, 37690, 37691, 37692, 37693, 37695, 37696,
      37697, 37698, 37699, 37700, 37701, 37702, 37703, 37704, 37705, 37706,
      37707, 37708, 37709, 37710, 37711, 37712, 37713, 37714, 37715, 37716,
      37717, 37718, 37719, 37720, 37721, 37722, 37723, 37724, 37725, 37726,
      37727, 37728, 37729, 37730, 37731, 37732, 37733, 37734, 37735, 37736,
      37737, 37739, 28617, 28583, 28601, 28598, 28610, 28641, 28654, 28638,
      28640, 28655, 28698, 28707, 28699, 28729, 28725, 28751, 28766, 23424,
      23428, 23445, 23443, 23461, 23480, 29999, 39582, 25652, 23524, 23534,
      35120, 23536, 36423, 35591, 36790, 36819, 36821, 36837, 36846, 36836,
      36841, 36838, 36851, 36840, 36869, 36868, 36875, 36902, 36881, 36877,
      36886, 36897, 36917, 36918, 36909, 36911, 36932, 36945, 36946, 36944,
      36968, 36952, 36962, 36955, 26297, 36980, 36989, 36994, 37000, 36995,
      37003, 24400, 24407, 24406, 24408, 23611, 21675, 23632, 23641, 23409,
      23651, 23654, 32700, 24362, 24361, 24365, 33396, 24380, 39739, 23662,
      22913, 22915, 22925, 22953, 22954, 22947, 37740, 37741, 37742, 37743,
      37744, 37745, 37746, 37747, 37748, 37749, 37750, 37751, 37752, 37753,
      37754, 37755, 37756, 37757, 37758, 37759, 37760, 37761, 37762, 37763,
      37764, 37765, 37766, 37767, 37768, 37769, 37770, 37771, 37772, 37773,
      37774, 37776, 37777, 37778, 37779, 37780, 37781, 37782, 37783, 37784,
      37785, 37786, 37787, 37788, 37789, 37790, 37791, 37792, 37793, 37794,
      37795, 37796, 37797, 37798, 37799, 37800, 37801, 37802, 37803, 37804,
      37805, 37806, 37807, 37808, 37809, 37810, 37811, 37812, 37813, 37814,
      37815, 37816, 37817, 37818, 37819, 37820, 37821, 37822, 37823, 37824,
      37825, 37826, 37827, 37828, 37829, 37830, 37831, 37832, 37833, 37835,
      37836, 37837, 22935, 22986, 22955, 22942, 22948, 22994, 22962, 22959,
      22999, 22974, 23045, 23046, 23005, 23048, 23011, 23000, 23033, 23052,
      23049, 23090, 23092, 23057, 23075, 23059, 23104, 23143, 23114, 23125,
      23100, 23138, 23157, 33004, 23210, 23195, 23159, 23162, 23230, 23275,
      23218, 23250, 23252, 23224, 23264, 23267, 23281, 23254, 23270, 23256,
      23260, 23305, 23319, 23318, 23346, 23351, 23360, 23573, 23580, 23386,
      23397, 23411, 23377, 23379, 23394, 39541, 39543, 39544, 39546, 39551,
      39549, 39552, 39553, 39557, 39560, 39562, 39568, 39570, 39571, 39574,
      39576, 39579, 39580, 39581, 39583, 39584, 39586, 39587, 39589, 39591,
      32415, 32417, 32419, 32421, 32424, 32425, 37838, 37839, 37840, 37841,
      37842, 37843, 37844, 37845, 37847, 37848, 37849, 37850, 37851, 37852,
      37853, 37854, 37855, 37856, 37857, 37858, 37859, 37860, 37861, 37862,
      37863, 37864, 37865, 37866, 37867, 37868, 37869, 37870, 37871, 37872,
      37873, 37874, 37875, 37876, 37877, 37878, 37879, 37880, 37881, 37882,
      37883, 37884, 37885, 37886, 37887, 37888, 37889, 37890, 37891, 37892,
      37893, 37894, 37895, 37896, 37897, 37898, 37899, 37900, 37901, 37902,
      37903, 37904, 37905, 37906, 37907, 37908, 37909, 37910, 37911, 37912,
      37913, 37914, 37915, 37916, 37917, 37918, 37919, 37920, 37921, 37922,
      37923, 37924, 37925, 37926, 37927, 37928, 37929, 37930, 37931, 37932,
      37933, 37934, 32429, 32432, 32446, 32448, 32449, 32450, 32457, 32459,
      32460, 32464, 32468, 32471, 32475, 32480, 32481, 32488, 32491, 32494,
      32495, 32497, 32498, 32525, 32502, 32506, 32507, 32510, 32513, 32514,
      32515, 32519, 32520, 32523, 32524, 32527, 32529, 32530, 32535, 32537,
      32540, 32539, 32543, 32545, 32546, 32547, 32548, 32549, 32550, 32551,
      32554, 32555, 32556, 32557, 32559, 32560, 32561, 32562, 32563, 32565,
      24186, 30079, 24027, 30014, 37013, 29582, 29585, 29614, 29602, 29599,
      29647, 29634, 29649, 29623, 29619, 29632, 29641, 29640, 29669, 29657,
      39036, 29706, 29673, 29671, 29662, 29626, 29682, 29711, 29738, 29787,
      29734, 29733, 29736, 29744, 29742, 29740, 37935, 37936, 37937, 37938,
      37939, 37940, 37941, 37942, 37943, 37944, 37945, 37946, 37947, 37948,
      37949, 37951, 37952, 37953, 37954, 37955, 37956, 37957, 37958, 37959,
      37960, 37961, 37962, 37963, 37964, 37965, 37966, 37967, 37968, 37969,
      37970, 37971, 37972, 37973, 37974, 37975, 37976, 37977, 37978, 37979,
      37980, 37981, 37982, 37983, 37984, 37985, 37986, 37987, 37988, 37989,
      37990, 37991, 37992, 37993, 37994, 37996, 37997, 37998, 37999, 38000,
      38001, 38002, 38003, 38004, 38005, 38006, 38007, 38008, 38009, 38010,
      38011, 38012, 38013, 38014, 38015, 38016, 38017, 38018, 38019, 38020,
      38033, 38038, 38040, 38087, 38095, 38099, 38100, 38106, 38118, 38139,
      38172, 38176, 29723, 29722, 29761, 29788, 29783, 29781, 29785, 29815,
      29805, 29822, 29852, 29838, 29824, 29825, 29831, 29835, 29854, 29864,
      29865, 29840, 29863, 29906, 29882, 38890, 38891, 38892, 26444, 26451,
      26462, 26440, 26473, 26533, 26503, 26474, 26483, 26520, 26535, 26485,
      26536, 26526, 26541, 26507, 26487, 26492, 26608, 26633, 26584, 26634,
      26601, 26544, 26636, 26585, 26549, 26586, 26547, 26589, 26624, 26563,
      26552, 26594, 26638, 26561, 26621, 26674, 26675, 26720, 26721, 26702,
      26722, 26692, 26724, 26755, 26653, 26709, 26726, 26689, 26727, 26688,
      26686, 26698, 26697, 26665, 26805, 26767, 26740, 26743, 26771, 26731,
      26818, 26990, 26876, 26911, 26912, 26873, 38183, 38195, 38205, 38211,
      38216, 38219, 38229, 38234, 38240, 38254, 38260, 38261, 38263, 38264,
      38265, 38266, 38267, 38268, 38269, 38270, 38272, 38273, 38274, 38275,
      38276, 38277, 38278, 38279, 38280, 38281, 38282, 38283, 38284, 38285,
      38286, 38287, 38288, 38289, 38290, 38291, 38292, 38293, 38294, 38295,
      38296, 38297, 38298, 38299, 38300, 38301, 38302, 38303, 38304, 38305,
      38306, 38307, 38308, 38309, 38310, 38311, 38312, 38313, 38314, 38315,
      38316, 38317, 38318, 38319, 38320, 38321, 38322, 38323, 38324, 38325,
      38326, 38327, 38328, 38329, 38330, 38331, 38332, 38333, 38334, 38335,
      38336, 38337, 38338, 38339, 38340, 38341, 38342, 38343, 38344, 38345,
      38346, 38347, 26916, 26864, 26891, 26881, 26967, 26851, 26896, 26993,
      26937, 26976, 26946, 26973, 27012, 26987, 27008, 27032, 27000, 26932,
      27084, 27015, 27016, 27086, 27017, 26982, 26979, 27001, 27035, 27047,
      27067, 27051, 27053, 27092, 27057, 27073, 27082, 27103, 27029, 27104,
      27021, 27135, 27183, 27117, 27159, 27160, 27237, 27122, 27204, 27198,
      27296, 27216, 27227, 27189, 27278, 27257, 27197, 27176, 27224, 27260,
      27281, 27280, 27305, 27287, 27307, 29495, 29522, 27521, 27522, 27527,
      27524, 27538, 27539, 27533, 27546, 27547, 27553, 27562, 36715, 36717,
      36721, 36722, 36723, 36725, 36726, 36728, 36727, 36729, 36730, 36732,
      36734, 36737, 36738, 36740, 36743, 36747, 38348, 38349, 38350, 38351,
      38352, 38353, 38354, 38355, 38356, 38357, 38358, 38359, 38360, 38361,
      38362, 38363, 38364, 38365, 38366, 38367, 38368, 38369, 38370, 38371,
      38372, 38373, 38374, 38375, 38380, 38399, 38407, 38419, 38424, 38427,
      38430, 38432, 38435, 38436, 38437, 38438, 38439, 38440, 38441, 38443,
      38444, 38445, 38447, 38448, 38455, 38456, 38457, 38458, 38462, 38465,
      38467, 38474, 38478, 38479, 38481, 38482, 38483, 38486, 38487, 38488,
      38489, 38490, 38492, 38493, 38494, 38496, 38499, 38501, 38502, 38507,
      38509, 38510, 38511, 38512, 38513, 38515, 38520, 38521, 38522, 38523,
      38524, 38525, 38526, 38527, 38528, 38529, 38530, 38531, 38532, 38535,
      38537, 38538, 36749, 36750, 36751, 36760, 36762, 36558, 25099, 25111,
      25115, 25119, 25122, 25121, 25125, 25124, 25132, 33255, 29935, 29940,
      29951, 29967, 29969, 29971, 25908, 26094, 26095, 26096, 26122, 26137,
      26482, 26115, 26133, 26112, 28805, 26359, 26141, 26164, 26161, 26166,
      26165, 32774, 26207, 26196, 26177, 26191, 26198, 26209, 26199, 26231,
      26244, 26252, 26279, 26269, 26302, 26331, 26332, 26342, 26345, 36146,
      36147, 36150, 36155, 36157, 36160, 36165, 36166, 36168, 36169, 36167,
      36173, 36181, 36185, 35271, 35274, 35275, 35276, 35278, 35279, 35280,
      35281, 29294, 29343, 29277, 29286, 29295, 29310, 29311, 29316, 29323,
      29325, 29327, 29330, 25352, 25394, 25520, 38540, 38542, 38545, 38546,
      38547, 38549, 38550, 38554, 38555, 38557, 38558, 38559, 38560, 38561,
      38562, 38563, 38564, 38565, 38566, 38568, 38569, 38570, 38571, 38572,
      38573, 38574, 38575, 38577, 38578, 38580, 38581, 38583, 38584, 38586,
      38587, 38591, 38594, 38595, 38600, 38602, 38603, 38608, 38609, 38611,
      38612, 38614, 38615, 38616, 38617, 38618, 38619, 38620, 38621, 38622,
      38623, 38625, 38626, 38627, 38628, 38629, 38630, 38631, 38635, 38636,
      38637, 38638, 38640, 38641, 38642, 38644, 38645, 38648, 38650, 38651,
      38652, 38653, 38655, 38658, 38659, 38661, 38666, 38667, 38668, 38672,
      38673, 38674, 38676, 38677, 38679, 38680, 38681, 38682, 38683, 38685,
      38687, 38688, 25663, 25816, 32772, 27626, 27635, 27645, 27637, 27641,
      27653, 27655, 27654, 27661, 27669, 27672, 27673, 27674, 27681, 27689,
      27684, 27690, 27698, 25909, 25941, 25963, 29261, 29266, 29270, 29232,
      34402, 21014, 32927, 32924, 32915, 32956, 26378, 32957, 32945, 32939,
      32941, 32948, 32951, 32999, 33000, 33001, 33002, 32987, 32962, 32964,
      32985, 32973, 32983, 26384, 32989, 33003, 33009, 33012, 33005, 33037,
      33038, 33010, 33020, 26389, 33042, 35930, 33078, 33054, 33068, 33048,
      33074, 33096, 33100, 33107, 33140, 33113, 33114, 33137, 33120, 33129,
      33148, 33149, 33133, 33127, 22605, 23221, 33160, 33154, 33169, 28373,
      33187, 33194, 33228, 26406, 33226, 33211, 38689, 38690, 38691, 38692,
      38693, 38694, 38695, 38696, 38697, 38699, 38700, 38702, 38703, 38705,
      38707, 38708, 38709, 38710, 38711, 38714, 38715, 38716, 38717, 38719,
      38720, 38721, 38722, 38723, 38724, 38725, 38726, 38727, 38728, 38729,
      38730, 38731, 38732, 38733, 38734, 38735, 38736, 38737, 38740, 38741,
      38743, 38744, 38746, 38748, 38749, 38751, 38755, 38756, 38758, 38759,
      38760, 38762, 38763, 38764, 38765, 38766, 38767, 38768, 38769, 38770,
      38773, 38775, 38776, 38777, 38778, 38779, 38781, 38782, 38783, 38784,
      38785, 38786, 38787, 38788, 38790, 38791, 38792, 38793, 38794, 38796,
      38798, 38799, 38800, 38803, 38805, 38806, 38807, 38809, 38810, 38811,
      38812, 38813, 33217, 33190, 27428, 27447, 27449, 27459, 27462, 27481,
      39121, 39122, 39123, 39125, 39129, 39130, 27571, 24384, 27586, 35315,
      26000, 40785, 26003, 26044, 26054, 26052, 26051, 26060, 26062, 26066,
      26070, 28800, 28828, 28822, 28829, 28859, 28864, 28855, 28843, 28849,
      28904, 28874, 28944, 28947, 28950, 28975, 28977, 29043, 29020, 29032,
      28997, 29042, 29002, 29048, 29050, 29080, 29107, 29109, 29096, 29088,
      29152, 29140, 29159, 29177, 29213, 29224, 28780, 28952, 29030, 29113,
      25150, 25149, 25155, 25160, 25161, 31035, 31040, 31046, 31049, 31067,
      31068, 31059, 31066, 31074, 31063, 31072, 31087, 31079, 31098, 31109,
      31114, 31130, 31143, 31155, 24529, 24528, 38814, 38815, 38817, 38818,
      38820, 38821, 38822, 38823, 38824, 38825, 38826, 38828, 38830, 38832,
      38833, 38835, 38837, 38838, 38839, 38840, 38841, 38842, 38843, 38844,
      38845, 38846, 38847, 38848, 38849, 38850, 38851, 38852, 38853, 38854,
      38855, 38856, 38857, 38858, 38859, 38860, 38861, 38862, 38863, 38864,
      38865, 38866, 38867, 38868, 38869, 38870, 38871, 38872, 38873, 38874,
      38875, 38876, 38877, 38878, 38879, 38880, 38881, 38882, 38883, 38884,
      38885, 38888, 38894, 38895, 38896, 38897, 38898, 38900, 38903, 38904,
      38905, 38906, 38907, 38908, 38909, 38910, 38911, 38912, 38913, 38914,
      38915, 38916, 38917, 38918, 38919, 38920, 38921, 38922, 38923, 38924,
      38925, 38926, 24636, 24669, 24666, 24679, 24641, 24665, 24675, 24747,
      24838, 24845, 24925, 25001, 24989, 25035, 25041, 25094, 32896, 32895,
      27795, 27894, 28156, 30710, 30712, 30720, 30729, 30743, 30744, 30737,
      26027, 30765, 30748, 30749, 30777, 30778, 30779, 30751, 30780, 30757,
      30764, 30755, 30761, 30798, 30829, 30806, 30807, 30758, 30800, 30791,
      30796, 30826, 30875, 30867, 30874, 30855, 30876, 30881, 30883, 30898,
      30905, 30885, 30932, 30937, 30921, 30956, 30962, 30981, 30964, 30995,
      31012, 31006, 31028, 40859, 40697, 40699, 40700, 30449, 30468, 30477,
      30457, 30471, 30472, 30490, 30498, 30489, 30509, 30502, 30517, 30520,
      30544, 30545, 30535, 30531, 30554, 30568, 38927, 38928, 38929, 38930,
      38931, 38932, 38933, 38934, 38935, 38936, 38937, 38938, 38939, 38940,
      38941, 38942, 38943, 38944, 38945, 38946, 38947, 38948, 38949, 38950,
      38951, 38952, 38953, 38954, 38955, 38956, 38957, 38958, 38959, 38960,
      38961, 38962, 38963, 38964, 38965, 38966, 38967, 38968, 38969, 38970,
      38971, 38972, 38973, 38974, 38975, 38976, 38977, 38978, 38979, 38980,
      38981, 38982, 38983, 38984, 38985, 38986, 38987, 38988, 38989, 38990,
      38991, 38992, 38993, 38994, 38995, 38996, 38997, 38998, 38999, 39000,
      39001, 39002, 39003, 39004, 39005, 39006, 39007, 39008, 39009, 39010,
      39011, 39012, 39013, 39014, 39015, 39016, 39017, 39018, 39019, 39020,
      39021, 39022, 30562, 30565, 30591, 30605, 30589, 30592, 30604, 30609,
      30623, 30624, 30640, 30645, 30653, 30010, 30016, 30030, 30027, 30024,
      30043, 30066, 30073, 30083, 32600, 32609, 32607, 35400, 32616, 32628,
      32625, 32633, 32641, 32638, 30413, 30437, 34866, 38021, 38022, 38023,
      38027, 38026, 38028, 38029, 38031, 38032, 38036, 38039, 38037, 38042,
      38043, 38044, 38051, 38052, 38059, 38058, 38061, 38060, 38063, 38064,
      38066, 38068, 38070, 38071, 38072, 38073, 38074, 38076, 38077, 38079,
      38084, 38088, 38089, 38090, 38091, 38092, 38093, 38094, 38096, 38097,
      38098, 38101, 38102, 38103, 38105, 38104, 38107, 38110, 38111, 38112,
      38114, 38116, 38117, 38119, 38120, 38122, 39023, 39024, 39025, 39026,
      39027, 39028, 39051, 39054, 39058, 39061, 39065, 39075, 39080, 39081,
      39082, 39083, 39084, 39085, 39086, 39087, 39088, 39089, 39090, 39091,
      39092, 39093, 39094, 39095, 39096, 39097, 39098, 39099, 39100, 39101,
      39102, 39103, 39104, 39105, 39106, 39107, 39108, 39109, 39110, 39111,
      39112, 39113, 39114, 39115, 39116, 39117, 39119, 39120, 39124, 39126,
      39127, 39131, 39132, 39133, 39136, 39137, 39138, 39139, 39140, 39141,
      39142, 39145, 39146, 39147, 39148, 39149, 39150, 39151, 39152, 39153,
      39154, 39155, 39156, 39157, 39158, 39159, 39160, 39161, 39162, 39163,
      39164, 39165, 39166, 39167, 39168, 39169, 39170, 39171, 39172, 39173,
      39174, 39175, 38121, 38123, 38126, 38127, 38131, 38132, 38133, 38135,
      38137, 38140, 38141, 38143, 38147, 38146, 38150, 38151, 38153, 38154,
      38157, 38158, 38159, 38162, 38163, 38164, 38165, 38166, 38168, 38171,
      38173, 38174, 38175, 38178, 38186, 38187, 38185, 38188, 38193, 38194,
      38196, 38198, 38199, 38200, 38204, 38206, 38207, 38210, 38197, 38212,
      38213, 38214, 38217, 38220, 38222, 38223, 38226, 38227, 38228, 38230,
      38231, 38232, 38233, 38235, 38238, 38239, 38237, 38241, 38242, 38244,
      38245, 38246, 38247, 38248, 38249, 38250, 38251, 38252, 38255, 38257,
      38258, 38259, 38202, 30695, 30700, 38601, 31189, 31213, 31203, 31211,
      31238, 23879, 31235, 31234, 31262, 31252, 39176, 39177, 39178, 39179,
      39180, 39182, 39183, 39185, 39186, 39187, 39188, 39189, 39190, 39191,
      39192, 39193, 39194, 39195, 39196, 39197, 39198, 39199, 39200, 39201,
      39202, 39203, 39204, 39205, 39206, 39207, 39208, 39209, 39210, 39211,
      39212, 39213, 39215, 39216, 39217, 39218, 39219, 39220, 39221, 39222,
      39223, 39224, 39225, 39226, 39227, 39228, 39229, 39230, 39231, 39232,
      39233, 39234, 39235, 39236, 39237, 39238, 39239, 39240, 39241, 39242,
      39243, 39244, 39245, 39246, 39247, 39248, 39249, 39250, 39251, 39254,
      39255, 39256, 39257, 39258, 39259, 39260, 39261, 39262, 39263, 39264,
      39265, 39266, 39268, 39270, 39283, 39288, 39289, 39291, 39294, 39298,
      39299, 39305, 31289, 31287, 31313, 40655, 39333, 31344, 30344, 30350,
      30355, 30361, 30372, 29918, 29920, 29996, 40480, 40482, 40488, 40489,
      40490, 40491, 40492, 40498, 40497, 40502, 40504, 40503, 40505, 40506,
      40510, 40513, 40514, 40516, 40518, 40519, 40520, 40521, 40523, 40524,
      40526, 40529, 40533, 40535, 40538, 40539, 40540, 40542, 40547, 40550,
      40551, 40552, 40553, 40554, 40555, 40556, 40561, 40557, 40563, 30098,
      30100, 30102, 30112, 30109, 30124, 30115, 30131, 30132, 30136, 30148,
      30129, 30128, 30147, 30146, 30166, 30157, 30179, 30184, 30182, 30180,
      30187, 30183, 30211, 30193, 30204, 30207, 30224, 30208, 30213, 30220,
      30231, 30218, 30245, 30232, 30229, 30233, 39308, 39310, 39322, 39323,
      39324, 39325, 39326, 39327, 39328, 39329, 39330, 39331, 39332, 39334,
      39335, 39337, 39338, 39339, 39340, 39341, 39342, 39343, 39344, 39345,
      39346, 39347, 39348, 39349, 39350, 39351, 39352, 39353, 39354, 39355,
      39356, 39357, 39358, 39359, 39360, 39361, 39362, 39363, 39364, 39365,
      39366, 39367, 39368, 39369, 39370, 39371, 39372, 39373, 39374, 39375,
      39376, 39377, 39378, 39379, 39380, 39381, 39382, 39383, 39384, 39385,
      39386, 39387, 39388, 39389, 39390, 39391, 39392, 39393, 39394, 39395,
      39396, 39397, 39398, 39399, 39400, 39401, 39402, 39403, 39404, 39405,
      39406, 39407, 39408, 39409, 39410, 39411, 39412, 39413, 39414, 39415,
      39416, 39417, 30235, 30268, 30242, 30240, 30272, 30253, 30256, 30271,
      30261, 30275, 30270, 30259, 30285, 30302, 30292, 30300, 30294, 30315,
      30319, 32714, 31462, 31352, 31353, 31360, 31366, 31368, 31381, 31398,
      31392, 31404, 31400, 31405, 31411, 34916, 34921, 34930, 34941, 34943,
      34946, 34978, 35014, 34999, 35004, 35017, 35042, 35022, 35043, 35045,
      35057, 35098, 35068, 35048, 35070, 35056, 35105, 35097, 35091, 35099,
      35082, 35124, 35115, 35126, 35137, 35174, 35195, 30091, 32997, 30386,
      30388, 30684, 32786, 32788, 32790, 32796, 32800, 32802, 32805, 32806,
      32807, 32809, 32808, 32817, 32779, 32821, 32835, 32838, 32845, 32850,
      32873, 32881, 35203, 39032, 39040, 39043, 39418, 39419, 39420, 39421,
      39422, 39423, 39424, 39425, 39426, 39427, 39428, 39429, 39430, 39431,
      39432, 39433, 39434, 39435, 39436, 39437, 39438, 39439, 39440, 39441,
      39442, 39443, 39444, 39445, 39446, 39447, 39448, 39449, 39450, 39451,
      39452, 39453, 39454, 39455, 39456, 39457, 39458, 39459, 39460, 39461,
      39462, 39463, 39464, 39465, 39466, 39467, 39468, 39469, 39470, 39471,
      39472, 39473, 39474, 39475, 39476, 39477, 39478, 39479, 39480, 39481,
      39482, 39483, 39484, 39485, 39486, 39487, 39488, 39489, 39490, 39491,
      39492, 39493, 39494, 39495, 39496, 39497, 39498, 39499, 39500, 39501,
      39502, 39503, 39504, 39505, 39506, 39507, 39508, 39509, 39510, 39511,
      39512, 39513, 39049, 39052, 39053, 39055, 39060, 39066, 39067, 39070,
      39071, 39073, 39074, 39077, 39078, 34381, 34388, 34412, 34414, 34431,
      34426, 34428, 34427, 34472, 34445, 34443, 34476, 34461, 34471, 34467,
      34474, 34451, 34473, 34486, 34500, 34485, 34510, 34480, 34490, 34481,
      34479, 34505, 34511, 34484, 34537, 34545, 34546, 34541, 34547, 34512,
      34579, 34526, 34548, 34527, 34520, 34513, 34563, 34567, 34552, 34568,
      34570, 34573, 34569, 34595, 34619, 34590, 34597, 34606, 34586, 34622,
      34632, 34612, 34609, 34601, 34615, 34623, 34690, 34594, 34685, 34686,
      34683, 34656, 34672, 34636, 34670, 34699, 34643, 34659, 34684, 34660,
      34649, 34661, 34707, 34735, 34728, 34770, 39514, 39515, 39516, 39517,
      39518, 39519, 39520, 39521, 39522, 39523, 39524, 39525, 39526, 39527,
      39528, 39529, 39530, 39531, 39538, 39555, 39561, 39565, 39566, 39572,
      39573, 39577, 39590, 39593, 39594, 39595, 39596, 39597, 39598, 39599,
      39602, 39603, 39604, 39605, 39609, 39611, 39613, 39614, 39615, 39619,
      39620, 39622, 39623, 39624, 39625, 39626, 39629, 39630, 39631, 39632,
      39634, 39636, 39637, 39638, 39639, 39641, 39642, 39643, 39644, 39645,
      39646, 39648, 39650, 39651, 39652, 39653, 39655, 39656, 39657, 39658,
      39660, 39662, 39664, 39665, 39666, 39667, 39668, 39669, 39670, 39671,
      39672, 39674, 39676, 39677, 39678, 39679, 39680, 39681, 39682, 39684,
      39685, 39686, 34758, 34696, 34693, 34733, 34711, 34691, 34731, 34789,
      34732, 34741, 34739, 34763, 34771, 34749, 34769, 34752, 34762, 34779,
      34794, 34784, 34798, 34838, 34835, 34814, 34826, 34843, 34849, 34873,
      34876, 32566, 32578, 32580, 32581, 33296, 31482, 31485, 31496, 31491,
      31492, 31509, 31498, 31531, 31503, 31559, 31544, 31530, 31513, 31534,
      31537, 31520, 31525, 31524, 31539, 31550, 31518, 31576, 31578, 31557,
      31605, 31564, 31581, 31584, 31598, 31611, 31586, 31602, 31601, 31632,
      31654, 31655, 31672, 31660, 31645, 31656, 31621, 31658, 31644, 31650,
      31659, 31668, 31697, 31681, 31692, 31709, 31706, 31717, 31718, 31722,
      31756, 31742, 31740, 31759, 31766, 31755, 39687, 39689, 39690, 39691,
      39692, 39693, 39694, 39696, 39697, 39698, 39700, 39701, 39702, 39703,
      39704, 39705, 39706, 39707, 39708, 39709, 39710, 39712, 39713, 39714,
      39716, 39717, 39718, 39719, 39720, 39721, 39722, 39723, 39724, 39725,
      39726, 39728, 39729, 39731, 39732, 39733, 39734, 39735, 39736, 39737,
      39738, 39741, 39742, 39743, 39744, 39750, 39754, 39755, 39756, 39758,
      39760, 39762, 39763, 39765, 39766, 39767, 39768, 39769, 39770, 39771,
      39772, 39773, 39774, 39775, 39776, 39777, 39778, 39779, 39780, 39781,
      39782, 39783, 39784, 39785, 39786, 39787, 39788, 39789, 39790, 39791,
      39792, 39793, 39794, 39795, 39796, 39797, 39798, 39799, 39800, 39801,
      39802, 39803, 31775, 31786, 31782, 31800, 31809, 31808, 33278, 33281,
      33282, 33284, 33260, 34884, 33313, 33314, 33315, 33325, 33327, 33320,
      33323, 33336, 33339, 33331, 33332, 33342, 33348, 33353, 33355, 33359,
      33370, 33375, 33384, 34942, 34949, 34952, 35032, 35039, 35166, 32669,
      32671, 32679, 32687, 32688, 32690, 31868, 25929, 31889, 31901, 31900,
      31902, 31906, 31922, 31932, 31933, 31937, 31943, 31948, 31949, 31944,
      31941, 31959, 31976, 33390, 26280, 32703, 32718, 32725, 32741, 32737,
      32742, 32745, 32750, 32755, 31992, 32119, 32166, 32174, 32327, 32411,
      40632, 40628, 36211, 36228, 36244, 36241, 36273, 36199, 36205, 35911,
      35913, 37194, 37200, 37198, 37199, 37220, 39804, 39805, 39806, 39807,
      39808, 39809, 39810, 39811, 39812, 39813, 39814, 39815, 39816, 39817,
      39818, 39819, 39820, 39821, 39822, 39823, 39824, 39825, 39826, 39827,
      39828, 39829, 39830, 39831, 39832, 39833, 39834, 39835, 39836, 39837,
      39838, 39839, 39840, 39841, 39842, 39843, 39844, 39845, 39846, 39847,
      39848, 39849, 39850, 39851, 39852, 39853, 39854, 39855, 39856, 39857,
      39858, 39859, 39860, 39861, 39862, 39863, 39864, 39865, 39866, 39867,
      39868, 39869, 39870, 39871, 39872, 39873, 39874, 39875, 39876, 39877,
      39878, 39879, 39880, 39881, 39882, 39883, 39884, 39885, 39886, 39887,
      39888, 39889, 39890, 39891, 39892, 39893, 39894, 39895, 39896, 39897,
      39898, 39899, 37218, 37217, 37232, 37225, 37231, 37245, 37246, 37234,
      37236, 37241, 37260, 37253, 37264, 37261, 37265, 37282, 37283, 37290,
      37293, 37294, 37295, 37301, 37300, 37306, 35925, 40574, 36280, 36331,
      36357, 36441, 36457, 36277, 36287, 36284, 36282, 36292, 36310, 36311,
      36314, 36318, 36302, 36303, 36315, 36294, 36332, 36343, 36344, 36323,
      36345, 36347, 36324, 36361, 36349, 36372, 36381, 36383, 36396, 36398,
      36387, 36399, 36410, 36416, 36409, 36405, 36413, 36401, 36425, 36417,
      36418, 36433, 36434, 36426, 36464, 36470, 36476, 36463, 36468, 36485,
      36495, 36500, 36496, 36508, 36510, 35960, 35970, 35978, 35973, 35992,
      35988, 26011, 35286, 35294, 35290, 35292, 39900, 39901, 39902, 39903,
      39904, 39905, 39906, 39907, 39908, 39909, 39910, 39911, 39912, 39913,
      39914, 39915, 39916, 39917, 39918, 39919, 39920, 39921, 39922, 39923,
      39924, 39925, 39926, 39927, 39928, 39929, 39930, 39931, 39932, 39933,
      39934, 39935, 39936, 39937, 39938, 39939, 39940, 39941, 39942, 39943,
      39944, 39945, 39946, 39947, 39948, 39949, 39950, 39951, 39952, 39953,
      39954, 39955, 39956, 39957, 39958, 39959, 39960, 39961, 39962, 39963,
      39964, 39965, 39966, 39967, 39968, 39969, 39970, 39971, 39972, 39973,
      39974, 39975, 39976, 39977, 39978, 39979, 39980, 39981, 39982, 39983,
      39984, 39985, 39986, 39987, 39988, 39989, 39990, 39991, 39992, 39993,
      39994, 39995, 35301, 35307, 35311, 35390, 35622, 38739, 38633, 38643,
      38639, 38662, 38657, 38664, 38671, 38670, 38698, 38701, 38704, 38718,
      40832, 40835, 40837, 40838, 40839, 40840, 40841, 40842, 40844, 40702,
      40715, 40717, 38585, 38588, 38589, 38606, 38610, 30655, 38624, 37518,
      37550, 37576, 37694, 37738, 37834, 37775, 37950, 37995, 40063, 40066,
      40069, 40070, 40071, 40072, 31267, 40075, 40078, 40080, 40081, 40082,
      40084, 40085, 40090, 40091, 40094, 40095, 40096, 40097, 40098, 40099,
      40101, 40102, 40103, 40104, 40105, 40107, 40109, 40110, 40112, 40113,
      40114, 40115, 40116, 40117, 40118, 40119, 40122, 40123, 40124, 40125,
      40132, 40133, 40134, 40135, 40138, 40139, 39996, 39997, 39998, 39999,
      40000, 40001, 40002, 40003, 40004, 40005, 40006, 40007, 40008, 40009,
      40010, 40011, 40012, 40013, 40014, 40015, 40016, 40017, 40018, 40019,
      40020, 40021, 40022, 40023, 40024, 40025, 40026, 40027, 40028, 40029,
      40030, 40031, 40032, 40033, 40034, 40035, 40036, 40037, 40038, 40039,
      40040, 40041, 40042, 40043, 40044, 40045, 40046, 40047, 40048, 40049,
      40050, 40051, 40052, 40053, 40054, 40055, 40056, 40057, 40058, 40059,
      40061, 40062, 40064, 40067, 40068, 40073, 40074, 40076, 40079, 40083,
      40086, 40087, 40088, 40089, 40093, 40106, 40108, 40111, 40121, 40126,
      40127, 40128, 40129, 40130, 40136, 40137, 40145, 40146, 40154, 40155,
      40160, 40161, 40140, 40141, 40142, 40143, 40144, 40147, 40148, 40149,
      40151, 40152, 40153, 40156, 40157, 40159, 40162, 38780, 38789, 38801,
      38802, 38804, 38831, 38827, 38819, 38834, 38836, 39601, 39600, 39607,
      40536, 39606, 39610, 39612, 39617, 39616, 39621, 39618, 39627, 39628,
      39633, 39749, 39747, 39751, 39753, 39752, 39757, 39761, 39144, 39181,
      39214, 39253, 39252, 39647, 39649, 39654, 39663, 39659, 39675, 39661,
      39673, 39688, 39695, 39699, 39711, 39715, 40637, 40638, 32315, 40578,
      40583, 40584, 40587, 40594, 37846, 40605, 40607, 40667, 40668, 40669,
      40672, 40671, 40674, 40681, 40679, 40677, 40682, 40687, 40738, 40748,
      40751, 40761, 40759, 40765, 40766, 40772, 40163, 40164, 40165, 40166,
      40167, 40168, 40169, 40170, 40171, 40172, 40173, 40174, 40175, 40176,
      40177, 40178, 40179, 40180, 40181, 40182, 40183, 40184, 40185, 40186,
      40187, 40188, 40189, 40190, 40191, 40192, 40193, 40194, 40195, 40196,
      40197, 40198, 40199, 40200, 40201, 40202, 40203, 40204, 40205, 40206,
      40207, 40208, 40209, 40210, 40211, 40212, 40213, 40214, 40215, 40216,
      40217, 40218, 40219, 40220, 40221, 40222, 40223, 40224, 40225, 40226,
      40227, 40228, 40229, 40230, 40231, 40232, 40233, 40234, 40235, 40236,
      40237, 40238, 40239, 40240, 40241, 40242, 40243, 40244, 40245, 40246,
      40247, 40248, 40249, 40250, 40251, 40252, 40253, 40254, 40255, 40256,
      40257, 40258, 57908, 57909, 57910, 57911, 57912, 57913, 57914, 57915,
      57916, 57917, 57918, 57919, 57920, 57921, 57922, 57923, 57924, 57925,
      57926, 57927, 57928, 57929, 57930, 57931, 57932, 57933, 57934, 57935,
      57936, 57937, 57938, 57939, 57940, 57941, 57942, 57943, 57944, 57945,
      57946, 57947, 57948, 57949, 57950, 57951, 57952, 57953, 57954, 57955,
      57956, 57957, 57958, 57959, 57960, 57961, 57962, 57963, 57964, 57965,
      57966, 57967, 57968, 57969, 57970, 57971, 57972, 57973, 57974, 57975,
      57976, 57977, 57978, 57979, 57980, 57981, 57982, 57983, 57984, 57985,
      57986, 57987, 57988, 57989, 57990, 57991, 57992, 57993, 57994, 57995,
      57996, 57997, 57998, 57999, 58000, 58001, 40259, 40260, 40261, 40262,
      40263, 40264, 40265, 40266, 40267, 40268, 40269, 40270, 40271, 40272,
      40273, 40274, 40275, 40276, 40277, 40278, 40279, 40280, 40281, 40282,
      40283, 40284, 40285, 40286, 40287, 40288, 40289, 40290, 40291, 40292,
      40293, 40294, 40295, 40296, 40297, 40298, 40299, 40300, 40301, 40302,
      40303, 40304, 40305, 40306, 40307, 40308, 40309, 40310, 40311, 40312,
      40313, 40314, 40315, 40316, 40317, 40318, 40319, 40320, 40321, 40322,
      40323, 40324, 40325, 40326, 40327, 40328, 40329, 40330, 40331, 40332,
      40333, 40334, 40335, 40336, 40337, 40338, 40339, 40340, 40341, 40342,
      40343, 40344, 40345, 40346, 40347, 40348, 40349, 40350, 40351, 40352,
      40353, 40354, 58002, 58003, 58004, 58005, 58006, 58007, 58008, 58009,
      58010, 58011, 58012, 58013, 58014, 58015, 58016, 58017, 58018, 58019,
      58020, 58021, 58022, 58023, 58024, 58025, 58026, 58027, 58028, 58029,
      58030, 58031, 58032, 58033, 58034, 58035, 58036, 58037, 58038, 58039,
      58040, 58041, 58042, 58043, 58044, 58045, 58046, 58047, 58048, 58049,
      58050, 58051, 58052, 58053, 58054, 58055, 58056, 58057, 58058, 58059,
      58060, 58061, 58062, 58063, 58064, 58065, 58066, 58067, 58068, 58069,
      58070, 58071, 58072, 58073, 58074, 58075, 58076, 58077, 58078, 58079,
      58080, 58081, 58082, 58083, 58084, 58085, 58086, 58087, 58088, 58089,
      58090, 58091, 58092, 58093, 58094, 58095, 40355, 40356, 40357, 40358,
      40359, 40360, 40361, 40362, 40363, 40364, 40365, 40366, 40367, 40368,
      40369, 40370, 40371, 40372, 40373, 40374, 40375, 40376, 40377, 40378,
      40379, 40380, 40381, 40382, 40383, 40384, 40385, 40386, 40387, 40388,
      40389, 40390, 40391, 40392, 40393, 40394, 40395, 40396, 40397, 40398,
      40399, 40400, 40401, 40402, 40403, 40404, 40405, 40406, 40407, 40408,
      40409, 40410, 40411, 40412, 40413, 40414, 40415, 40416, 40417, 40418,
      40419, 40420, 40421, 40422, 40423, 40424, 40425, 40426, 40427, 40428,
      40429, 40430, 40431, 40432, 40433, 40434, 40435, 40436, 40437, 40438,
      40439, 40440, 40441, 40442, 40443, 40444, 40445, 40446, 40447, 40448,
      40449, 40450, 58096, 58097, 58098, 58099, 58100, 58101, 58102, 58103,
      58104, 58105, 58106, 58107, 58108, 58109, 58110, 58111, 58112, 58113,
      58114, 58115, 58116, 58117, 58118, 58119, 58120, 58121, 58122, 58123,
      58124, 58125, 58126, 58127, 58128, 58129, 58130, 58131, 58132, 58133,
      58134, 58135, 58136, 58137, 58138, 58139, 58140, 58141, 58142, 58143,
      58144, 58145, 58146, 58147, 58148, 58149, 58150, 58151, 58152, 58153,
      58154, 58155, 58156, 58157, 58158, 58159, 58160, 58161, 58162, 58163,
      58164, 58165, 58166, 58167, 58168, 58169, 58170, 58171, 58172, 58173,
      58174, 58175, 58176, 58177, 58178, 58179, 58180, 58181, 58182, 58183,
      58184, 58185, 58186, 58187, 58188, 58189, 40451, 40452, 40453, 40454,
      40455, 40456, 40457, 40458, 40459, 40460, 40461, 40462, 40463, 40464,
      40465, 40466, 40467, 40468, 40469, 40470, 40471, 40472, 40473, 40474,
      40475, 40476, 40477, 40478, 40484, 40487, 40494, 40496, 40500, 40507,
      40508, 40512, 40525, 40528, 40530, 40531, 40532, 40534, 40537, 40541,
      40543, 40544, 40545, 40546, 40549, 40558, 40559, 40562, 40564, 40565,
      40566, 40567, 40568, 40569, 40570, 40571, 40572, 40573, 40576, 40577,
      40579, 40580, 40581, 40582, 40585, 40586, 40588, 40589, 40590, 40591,
      40592, 40593, 40596, 40597, 40598, 40599, 40600, 40601, 40602, 40603,
      40604, 40606, 40608, 40609, 40610, 40611, 40612, 40613, 40615, 40616,
      40617, 40618, 58190, 58191, 58192, 58193, 58194, 58195, 58196, 58197,
      58198, 58199, 58200, 58201, 58202, 58203, 58204, 58205, 58206, 58207,
      58208, 58209, 58210, 58211, 58212, 58213, 58214, 58215, 58216, 58217,
      58218, 58219, 58220, 58221, 58222, 58223, 58224, 58225, 58226, 58227,
      58228, 58229, 58230, 58231, 58232, 58233, 58234, 58235, 58236, 58237,
      58238, 58239, 58240, 58241, 58242, 58243, 58244, 58245, 58246, 58247,
      58248, 58249, 58250, 58251, 58252, 58253, 58254, 58255, 58256, 58257,
      58258, 58259, 58260, 58261, 58262, 58263, 58264, 58265, 58266, 58267,
      58268, 58269, 58270, 58271, 58272, 58273, 58274, 58275, 58276, 58277,
      58278, 58279, 58280, 58281, 58282, 58283, 40619, 40620, 40621, 40622,
      40623, 40624, 40625, 40626, 40627, 40629, 40630, 40631, 40633, 40634,
      40636, 40639, 40640, 40641, 40642, 40643, 40645, 40646, 40647, 40648,
      40650, 40651, 40652, 40656, 40658, 40659, 40661, 40662, 40663, 40665,
      40666, 40670, 40673, 40675, 40676, 40678, 40680, 40683, 40684, 40685,
      40686, 40688, 40689, 40690, 40691, 40692, 40693, 40694, 40695, 40696,
      40698, 40701, 40703, 40704, 40705, 40706, 40707, 40708, 40709, 40710,
      40711, 40712, 40713, 40714, 40716, 40719, 40721, 40722, 40724, 40725,
      40726, 40728, 40730, 40731, 40732, 40733, 40734, 40735, 40737, 40739,
      40740, 40741, 40742, 40743, 40744, 40745, 40746, 40747, 40749, 40750,
      40752, 40753, 58284, 58285, 58286, 58287, 58288, 58289, 58290, 58291,
      58292, 58293, 58294, 58295, 58296, 58297, 58298, 58299, 58300, 58301,
      58302, 58303, 58304, 58305, 58306, 58307, 58308, 58309, 58310, 58311,
      58312, 58313, 58314, 58315, 58316, 58317, 58318, 58319, 58320, 58321,
      58322, 58323, 58324, 58325, 58326, 58327, 58328, 58329, 58330, 58331,
      58332, 58333, 58334, 58335, 58336, 58337, 58338, 58339, 58340, 58341,
      58342, 58343, 58344, 58345, 58346, 58347, 58348, 58349, 58350, 58351,
      58352, 58353, 58354, 58355, 58356, 58357, 58358, 58359, 58360, 58361,
      58362, 58363, 58364, 58365, 58366, 58367, 58368, 58369, 58370, 58371,
      58372, 58373, 58374, 58375, 58376, 58377, 40754, 40755, 40756, 40757,
      40758, 40760, 40762, 40764, 40767, 40768, 40769, 40770, 40771, 40773,
      40774, 40775, 40776, 40777, 40778, 40779, 40780, 40781, 40782, 40783,
      40786, 40787, 40788, 40789, 40790, 40791, 40792, 40793, 40794, 40795,
      40796, 40797, 40798, 40799, 40800, 40801, 40802, 40803, 40804, 40805,
      40806, 40807, 40808, 40809, 40810, 40811, 40812, 40813, 40814, 40815,
      40816, 40817, 40818, 40819, 40820, 40821, 40822, 40823, 40824, 40825,
      40826, 40827, 40828, 40829, 40830, 40833, 40834, 40845, 40846, 40847,
      40848, 40849, 40850, 40851, 40852, 40853, 40854, 40855, 40856, 40860,
      40861, 40862, 40865, 40866, 40867, 40868, 40869, 63788, 63865, 63893,
      63975, 63985, 58378, 58379, 58380, 58381, 58382, 58383, 58384, 58385,
      58386, 58387, 58388, 58389, 58390, 58391, 58392, 58393, 58394, 58395,
      58396, 58397, 58398, 58399, 58400, 58401, 58402, 58403, 58404, 58405,
      58406, 58407, 58408, 58409, 58410, 58411, 58412, 58413, 58414, 58415,
      58416, 58417, 58418, 58419, 58420, 58421, 58422, 58423, 58424, 58425,
      58426, 58427, 58428, 58429, 58430, 58431, 58432, 58433, 58434, 58435,
      58436, 58437, 58438, 58439, 58440, 58441, 58442, 58443, 58444, 58445,
      58446, 58447, 58448, 58449, 58450, 58451, 58452, 58453, 58454, 58455,
      58456, 58457, 58458, 58459, 58460, 58461, 58462, 58463, 58464, 58465,
      58466, 58467, 58468, 58469, 58470, 58471, 64012, 64013, 64014, 64015,
      64017, 64019, 64020, 64024, 64031, 64032, 64033, 64035, 64036, 64039,
      64040, 64041, 11905, 59414, 59415, 59416, 11908, 13427, 13383, 11912,
      11915, 59422, 13726, 13850, 13838, 11916, 11927, 14702, 14616, 59430,
      14799, 14815, 14963, 14800, 59435, 59436, 15182, 15470, 15584, 11943,
      59441, 59442, 11946, 16470, 16735, 11950, 17207, 11955, 11958, 11959,
      59451, 17329, 17324, 11963, 17373, 17622, 18017, 17996, 59459, 18211,
      18217, 18300, 18317, 11978, 18759, 18810, 18813, 18818, 18819, 18821,
      18822, 18847, 18843, 18871, 18870, 59476, 59477, 19619, 19615, 19616,
      19617, 19575, 19618, 19731, 19732, 19733, 19734, 19735, 19736, 19737,
      19886, 59492, 58472, 58473, 58474, 58475, 58476, 58477, 58478, 58479,
      58480, 58481, 58482, 58483, 58484, 58485, 58486, 58487, 58488, 58489,
      58490, 58491, 58492, 58493, 58494, 58495, 58496, 58497, 58498, 58499,
      58500, 58501, 58502, 58503, 58504, 58505, 58506, 58507, 58508, 58509,
      58510, 58511, 58512, 58513, 58514, 58515, 58516, 58517, 58518, 58519,
      58520, 58521, 58522, 58523, 58524, 58525, 58526, 58527, 58528, 58529,
      58530, 58531, 58532, 58533, 58534, 58535, 58536, 58537, 58538, 58539,
      58540, 58541, 58542, 58543, 58544, 58545, 58546, 58547, 58548, 58549,
      58550, 58551, 58552, 58553, 58554, 58555, 58556, 58557, 58558, 58559,
      58560, 58561, 58562, 58563, 58564, 58565,
    ],
    "gb18030-ranges": [
      [0, 128],
      [36, 165],
      [38, 169],
      [45, 178],
      [50, 184],
      [81, 216],
      [89, 226],
      [95, 235],
      [96, 238],
      [100, 244],
      [103, 248],
      [104, 251],
      [105, 253],
      [109, 258],
      [126, 276],
      [133, 284],
      [148, 300],
      [172, 325],
      [175, 329],
      [179, 334],
      [208, 364],
      [306, 463],
      [307, 465],
      [308, 467],
      [309, 469],
      [310, 471],
      [311, 473],
      [312, 475],
      [313, 477],
      [341, 506],
      [428, 594],
      [443, 610],
      [544, 712],
      [545, 716],
      [558, 730],
      [741, 930],
      [742, 938],
      [749, 962],
      [750, 970],
      [805, 1026],
      [819, 1104],
      [820, 1106],
      [7922, 8209],
      [7924, 8215],
      [7925, 8218],
      [7927, 8222],
      [7934, 8231],
      [7943, 8241],
      [7944, 8244],
      [7945, 8246],
      [7950, 8252],
      [8062, 8365],
      [8148, 8452],
      [8149, 8454],
      [8152, 8458],
      [8164, 8471],
      [8174, 8482],
      [8236, 8556],
      [8240, 8570],
      [8262, 8596],
      [8264, 8602],
      [8374, 8713],
      [8380, 8720],
      [8381, 8722],
      [8384, 8726],
      [8388, 8731],
      [8390, 8737],
      [8392, 8740],
      [8393, 8742],
      [8394, 8748],
      [8396, 8751],
      [8401, 8760],
      [8406, 8766],
      [8416, 8777],
      [8419, 8781],
      [8424, 8787],
      [8437, 8802],
      [8439, 8808],
      [8445, 8816],
      [8482, 8854],
      [8485, 8858],
      [8496, 8870],
      [8521, 8896],
      [8603, 8979],
      [8936, 9322],
      [8946, 9372],
      [9046, 9548],
      [9050, 9588],
      [9063, 9616],
      [9066, 9622],
      [9076, 9634],
      [9092, 9652],
      [9100, 9662],
      [9108, 9672],
      [9111, 9676],
      [9113, 9680],
      [9131, 9702],
      [9162, 9735],
      [9164, 9738],
      [9218, 9793],
      [9219, 9795],
      [11329, 11906],
      [11331, 11909],
      [11334, 11913],
      [11336, 11917],
      [11346, 11928],
      [11361, 11944],
      [11363, 11947],
      [11366, 11951],
      [11370, 11956],
      [11372, 11960],
      [11375, 11964],
      [11389, 11979],
      [11682, 12284],
      [11686, 12292],
      [11687, 12312],
      [11692, 12319],
      [11694, 12330],
      [11714, 12351],
      [11716, 12436],
      [11723, 12447],
      [11725, 12535],
      [11730, 12543],
      [11736, 12586],
      [11982, 12842],
      [11989, 12850],
      [12102, 12964],
      [12336, 13200],
      [12348, 13215],
      [12350, 13218],
      [12384, 13253],
      [12393, 13263],
      [12395, 13267],
      [12397, 13270],
      [12510, 13384],
      [12553, 13428],
      [12851, 13727],
      [12962, 13839],
      [12973, 13851],
      [13738, 14617],
      [13823, 14703],
      [13919, 14801],
      [13933, 14816],
      [14080, 14964],
      [14298, 15183],
      [14585, 15471],
      [14698, 15585],
      [15583, 16471],
      [15847, 16736],
      [16318, 17208],
      [16434, 17325],
      [16438, 17330],
      [16481, 17374],
      [16729, 17623],
      [17102, 17997],
      [17122, 18018],
      [17315, 18212],
      [17320, 18218],
      [17402, 18301],
      [17418, 18318],
      [17859, 18760],
      [17909, 18811],
      [17911, 18814],
      [17915, 18820],
      [17916, 18823],
      [17936, 18844],
      [17939, 18848],
      [17961, 18872],
      [18664, 19576],
      [18703, 19620],
      [18814, 19738],
      [18962, 19887],
      [19043, 40870],
      [33469, 59244],
      [33470, 59336],
      [33471, 59367],
      [33484, 59413],
      [33485, 59417],
      [33490, 59423],
      [33497, 59431],
      [33501, 59437],
      [33505, 59443],
      [33513, 59452],
      [33520, 59460],
      [33536, 59478],
      [33550, 59493],
      [37845, 63789],
      [37921, 63866],
      [37948, 63894],
      [38029, 63976],
      [38038, 63986],
      [38064, 64016],
      [38065, 64018],
      [38066, 64021],
      [38069, 64025],
      [38075, 64034],
      [38076, 64037],
      [38078, 64042],
      [39108, 65074],
      [39109, 65093],
      [39113, 65107],
      [39114, 65112],
      [39115, 65127],
      [39116, 65132],
      [39265, 65375],
      [39394, 65510],
      [189000, 65536],
    ],
    jis0208: [
      12288,
      12289,
      12290,
      65292,
      65294,
      12539,
      65306,
      65307,
      65311,
      65281,
      12443,
      12444,
      180,
      65344,
      168,
      65342,
      65507,
      65343,
      12541,
      12542,
      12445,
      12446,
      12291,
      20189,
      12293,
      12294,
      12295,
      12540,
      8213,
      8208,
      65295,
      65340,
      65374,
      8741,
      65372,
      8230,
      8229,
      8216,
      8217,
      8220,
      8221,
      65288,
      65289,
      12308,
      12309,
      65339,
      65341,
      65371,
      65373,
      12296,
      12297,
      12298,
      12299,
      12300,
      12301,
      12302,
      12303,
      12304,
      12305,
      65291,
      65293,
      177,
      215,
      247,
      65309,
      8800,
      65308,
      65310,
      8806,
      8807,
      8734,
      8756,
      9794,
      9792,
      176,
      8242,
      8243,
      8451,
      65509,
      65284,
      65504,
      65505,
      65285,
      65283,
      65286,
      65290,
      65312,
      167,
      9734,
      9733,
      9675,
      9679,
      9678,
      9671,
      9670,
      9633,
      9632,
      9651,
      9650,
      9661,
      9660,
      8251,
      12306,
      8594,
      8592,
      8593,
      8595,
      12307,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      8712,
      8715,
      8838,
      8839,
      8834,
      8835,
      8746,
      8745,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      8743,
      8744,
      65506,
      8658,
      8660,
      8704,
      8707,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      8736,
      8869,
      8978,
      8706,
      8711,
      8801,
      8786,
      8810,
      8811,
      8730,
      8765,
      8733,
      8757,
      8747,
      8748,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      8491,
      8240,
      9839,
      9837,
      9834,
      8224,
      8225,
      182,
      null,
      null,
      null,
      null,
      9711,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      65296,
      65297,
      65298,
      65299,
      65300,
      65301,
      65302,
      65303,
      65304,
      65305,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      65313,
      65314,
      65315,
      65316,
      65317,
      65318,
      65319,
      65320,
      65321,
      65322,
      65323,
      65324,
      65325,
      65326,
      65327,
      65328,
      65329,
      65330,
      65331,
      65332,
      65333,
      65334,
      65335,
      65336,
      65337,
      65338,
      null,
      null,
      null,
      null,
      null,
      null,
      65345,
      65346,
      65347,
      65348,
      65349,
      65350,
      65351,
      65352,
      65353,
      65354,
      65355,
      65356,
      65357,
      65358,
      65359,
      65360,
      65361,
      65362,
      65363,
      65364,
      65365,
      65366,
      65367,
      65368,
      65369,
      65370,
      null,
      null,
      null,
      null,
      12353,
      12354,
      12355,
      12356,
      12357,
      12358,
      12359,
      12360,
      12361,
      12362,
      12363,
      12364,
      12365,
      12366,
      12367,
      12368,
      12369,
      12370,
      12371,
      12372,
      12373,
      12374,
      12375,
      12376,
      12377,
      12378,
      12379,
      12380,
      12381,
      12382,
      12383,
      12384,
      12385,
      12386,
      12387,
      12388,
      12389,
      12390,
      12391,
      12392,
      12393,
      12394,
      12395,
      12396,
      12397,
      12398,
      12399,
      12400,
      12401,
      12402,
      12403,
      12404,
      12405,
      12406,
      12407,
      12408,
      12409,
      12410,
      12411,
      12412,
      12413,
      12414,
      12415,
      12416,
      12417,
      12418,
      12419,
      12420,
      12421,
      12422,
      12423,
      12424,
      12425,
      12426,
      12427,
      12428,
      12429,
      12430,
      12431,
      12432,
      12433,
      12434,
      12435,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      12449,
      12450,
      12451,
      12452,
      12453,
      12454,
      12455,
      12456,
      12457,
      12458,
      12459,
      12460,
      12461,
      12462,
      12463,
      12464,
      12465,
      12466,
      12467,
      12468,
      12469,
      12470,
      12471,
      12472,
      12473,
      12474,
      12475,
      12476,
      12477,
      12478,
      12479,
      12480,
      12481,
      12482,
      12483,
      12484,
      12485,
      12486,
      12487,
      12488,
      12489,
      12490,
      12491,
      12492,
      12493,
      12494,
      12495,
      12496,
      12497,
      12498,
      12499,
      12500,
      12501,
      12502,
      12503,
      12504,
      12505,
      12506,
      12507,
      12508,
      12509,
      12510,
      12511,
      12512,
      12513,
      12514,
      12515,
      12516,
      12517,
      12518,
      12519,
      12520,
      12521,
      12522,
      12523,
      12524,
      12525,
      12526,
      12527,
      12528,
      12529,
      12530,
      12531,
      12532,
      12533,
      12534,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      913,
      914,
      915,
      916,
      917,
      918,
      919,
      920,
      921,
      922,
      923,
      924,
      925,
      926,
      927,
      928,
      929,
      931,
      932,
      933,
      934,
      935,
      936,
      937,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      945,
      946,
      947,
      948,
      949,
      950,
      951,
      952,
      953,
      954,
      955,
      956,
      957,
      958,
      959,
      960,
      961,
      963,
      964,
      965,
      966,
      967,
      968,
      969,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      1040,
      1041,
      1042,
      1043,
      1044,
      1045,
      1025,
      1046,
      1047,
      1048,
      1049,
      1050,
      1051,
      1052,
      1053,
      1054,
      1055,
      1056,
      1057,
      1058,
      1059,
      1060,
      1061,
      1062,
      1063,
      1064,
      1065,
      1066,
      1067,
      1068,
      1069,
      1070,
      1071,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      1072,
      1073,
      1074,
      1075,
      1076,
      1077,
      1105,
      1078,
      1079,
      1080,
      1081,
      1082,
      1083,
      1084,
      1085,
      1086,
      1087,
      1088,
      1089,
      1090,
      1091,
      1092,
      1093,
      1094,
      1095,
      1096,
      1097,
      1098,
      1099,
      1100,
      1101,
      1102,
      1103,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      9472,
      9474,
      9484,
      9488,
      9496,
      9492,
      9500,
      9516,
      9508,
      9524,
      9532,
      9473,
      9475,
      9487,
      9491,
      9499,
      9495,
      9507,
      9523,
      9515,
      9531,
      9547,
      9504,
      9519,
      9512,
      9527,
      9535,
      9501,
      9520,
      9509,
      9528,
      9538,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      9312,
      9313,
      9314,
      9315,
      9316,
      9317,
      9318,
      9319,
      9320,
      9321,
      9322,
      9323,
      9324,
      9325,
      9326,
      9327,
      9328,
      9329,
      9330,
      9331,
      8544,
      8545,
      8546,
      8547,
      8548,
      8549,
      8550,
      8551,
      8552,
      8553,
      null,
      13129,
      13076,
      13090,
      13133,
      13080,
      13095,
      13059,
      13110,
      13137,
      13143,
      13069,
      13094,
      13091,
      13099,
      13130,
      13115,
      13212,
      13213,
      13214,
      13198,
      13199,
      13252,
      13217,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      13179,
      12317,
      12319,
      8470,
      13261,
      8481,
      12964,
      12965,
      12966,
      12967,
      12968,
      12849,
      12850,
      12857,
      13182,
      13181,
      13180,
      8786,
      8801,
      8747,
      8750,
      8721,
      8730,
      8869,
      8736,
      8735,
      8895,
      8757,
      8745,
      8746,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      20124,
      21782,
      23043,
      38463,
      21696,
      24859,
      25384,
      23030,
      36898,
      33909,
      33564,
      31312,
      24746,
      25569,
      28197,
      26093,
      33894,
      33446,
      39925,
      26771,
      22311,
      26017,
      25201,
      23451,
      22992,
      34427,
      39156,
      32098,
      32190,
      39822,
      25110,
      31903,
      34999,
      23433,
      24245,
      25353,
      26263,
      26696,
      38343,
      38797,
      26447,
      20197,
      20234,
      20301,
      20381,
      20553,
      22258,
      22839,
      22996,
      23041,
      23561,
      24799,
      24847,
      24944,
      26131,
      26885,
      28858,
      30031,
      30064,
      31227,
      32173,
      32239,
      32963,
      33806,
      34915,
      35586,
      36949,
      36986,
      21307,
      20117,
      20133,
      22495,
      32946,
      37057,
      30959,
      19968,
      22769,
      28322,
      36920,
      31282,
      33576,
      33419,
      39983,
      20801,
      21360,
      21693,
      21729,
      22240,
      23035,
      24341,
      39154,
      28139,
      32996,
      34093,
      38498,
      38512,
      38560,
      38907,
      21515,
      21491,
      23431,
      28879,
      32701,
      36802,
      38632,
      21359,
      40284,
      31418,
      19985,
      30867,
      33276,
      28198,
      22040,
      21764,
      27421,
      34074,
      39995,
      23013,
      21417,
      28006,
      29916,
      38287,
      22082,
      20113,
      36939,
      38642,
      33615,
      39180,
      21473,
      21942,
      23344,
      24433,
      26144,
      26355,
      26628,
      27704,
      27891,
      27945,
      29787,
      30408,
      31310,
      38964,
      33521,
      34907,
      35424,
      37613,
      28082,
      30123,
      30410,
      39365,
      24742,
      35585,
      36234,
      38322,
      27022,
      21421,
      20870,
      22290,
      22576,
      22852,
      23476,
      24310,
      24616,
      25513,
      25588,
      27839,
      28436,
      28814,
      28948,
      29017,
      29141,
      29503,
      32257,
      33398,
      33489,
      34199,
      36960,
      37467,
      40219,
      22633,
      26044,
      27738,
      29989,
      20985,
      22830,
      22885,
      24448,
      24540,
      25276,
      26106,
      27178,
      27431,
      27572,
      29579,
      32705,
      35158,
      40236,
      40206,
      40644,
      23713,
      27798,
      33659,
      20740,
      23627,
      25014,
      33222,
      26742,
      29281,
      20057,
      20474,
      21368,
      24681,
      28201,
      31311,
      38899,
      19979,
      21270,
      20206,
      20309,
      20285,
      20385,
      20339,
      21152,
      21487,
      22025,
      22799,
      23233,
      23478,
      23521,
      31185,
      26247,
      26524,
      26550,
      27468,
      27827,
      28779,
      29634,
      31117,
      31166,
      31292,
      31623,
      33457,
      33499,
      33540,
      33655,
      33775,
      33747,
      34662,
      35506,
      22057,
      36008,
      36838,
      36942,
      38686,
      34442,
      20420,
      23784,
      25105,
      29273,
      30011,
      33253,
      33469,
      34558,
      36032,
      38597,
      39187,
      39381,
      20171,
      20250,
      35299,
      22238,
      22602,
      22730,
      24315,
      24555,
      24618,
      24724,
      24674,
      25040,
      25106,
      25296,
      25913,
      39745,
      26214,
      26800,
      28023,
      28784,
      30028,
      30342,
      32117,
      33445,
      34809,
      38283,
      38542,
      35997,
      20977,
      21182,
      22806,
      21683,
      23475,
      23830,
      24936,
      27010,
      28079,
      30861,
      33995,
      34903,
      35442,
      37799,
      39608,
      28012,
      39336,
      34521,
      22435,
      26623,
      34510,
      37390,
      21123,
      22151,
      21508,
      24275,
      25313,
      25785,
      26684,
      26680,
      27579,
      29554,
      30906,
      31339,
      35226,
      35282,
      36203,
      36611,
      37101,
      38307,
      38548,
      38761,
      23398,
      23731,
      27005,
      38989,
      38990,
      25499,
      31520,
      27179,
      27263,
      26806,
      39949,
      28511,
      21106,
      21917,
      24688,
      25324,
      27963,
      28167,
      28369,
      33883,
      35088,
      36676,
      19988,
      39993,
      21494,
      26907,
      27194,
      38788,
      26666,
      20828,
      31427,
      33970,
      37340,
      37772,
      22107,
      40232,
      26658,
      33541,
      33841,
      31909,
      21000,
      33477,
      29926,
      20094,
      20355,
      20896,
      23506,
      21002,
      21208,
      21223,
      24059,
      21914,
      22570,
      23014,
      23436,
      23448,
      23515,
      24178,
      24185,
      24739,
      24863,
      24931,
      25022,
      25563,
      25954,
      26577,
      26707,
      26874,
      27454,
      27475,
      27735,
      28450,
      28567,
      28485,
      29872,
      29976,
      30435,
      30475,
      31487,
      31649,
      31777,
      32233,
      32566,
      32752,
      32925,
      33382,
      33694,
      35251,
      35532,
      36011,
      36996,
      37969,
      38291,
      38289,
      38306,
      38501,
      38867,
      39208,
      33304,
      20024,
      21547,
      23736,
      24012,
      29609,
      30284,
      30524,
      23721,
      32747,
      36107,
      38593,
      38929,
      38996,
      39000,
      20225,
      20238,
      21361,
      21916,
      22120,
      22522,
      22855,
      23305,
      23492,
      23696,
      24076,
      24190,
      24524,
      25582,
      26426,
      26071,
      26082,
      26399,
      26827,
      26820,
      27231,
      24112,
      27589,
      27671,
      27773,
      30079,
      31048,
      23395,
      31232,
      32000,
      24509,
      35215,
      35352,
      36020,
      36215,
      36556,
      36637,
      39138,
      39438,
      39740,
      20096,
      20605,
      20736,
      22931,
      23452,
      25135,
      25216,
      25836,
      27450,
      29344,
      30097,
      31047,
      32681,
      34811,
      35516,
      35696,
      25516,
      33738,
      38816,
      21513,
      21507,
      21931,
      26708,
      27224,
      35440,
      30759,
      26485,
      40653,
      21364,
      23458,
      33050,
      34384,
      36870,
      19992,
      20037,
      20167,
      20241,
      21450,
      21560,
      23470,
      24339,
      24613,
      25937,
      26429,
      27714,
      27762,
      27875,
      28792,
      29699,
      31350,
      31406,
      31496,
      32026,
      31998,
      32102,
      26087,
      29275,
      21435,
      23621,
      24040,
      25298,
      25312,
      25369,
      28192,
      34394,
      35377,
      36317,
      37624,
      28417,
      31142,
      39770,
      20136,
      20139,
      20140,
      20379,
      20384,
      20689,
      20807,
      31478,
      20849,
      20982,
      21332,
      21281,
      21375,
      21483,
      21932,
      22659,
      23777,
      24375,
      24394,
      24623,
      24656,
      24685,
      25375,
      25945,
      27211,
      27841,
      29378,
      29421,
      30703,
      33016,
      33029,
      33288,
      34126,
      37111,
      37857,
      38911,
      39255,
      39514,
      20208,
      20957,
      23597,
      26241,
      26989,
      23616,
      26354,
      26997,
      29577,
      26704,
      31873,
      20677,
      21220,
      22343,
      24062,
      37670,
      26020,
      27427,
      27453,
      29748,
      31105,
      31165,
      31563,
      32202,
      33465,
      33740,
      34943,
      35167,
      35641,
      36817,
      37329,
      21535,
      37504,
      20061,
      20534,
      21477,
      21306,
      29399,
      29590,
      30697,
      33510,
      36527,
      39366,
      39368,
      39378,
      20855,
      24858,
      34398,
      21936,
      31354,
      20598,
      23507,
      36935,
      38533,
      20018,
      27355,
      37351,
      23633,
      23624,
      25496,
      31391,
      27795,
      38772,
      36705,
      31402,
      29066,
      38536,
      31874,
      26647,
      32368,
      26705,
      37740,
      21234,
      21531,
      34219,
      35347,
      32676,
      36557,
      37089,
      21350,
      34952,
      31041,
      20418,
      20670,
      21009,
      20804,
      21843,
      22317,
      29674,
      22411,
      22865,
      24418,
      24452,
      24693,
      24950,
      24935,
      25001,
      25522,
      25658,
      25964,
      26223,
      26690,
      28179,
      30054,
      31293,
      31995,
      32076,
      32153,
      32331,
      32619,
      33550,
      33610,
      34509,
      35336,
      35427,
      35686,
      36605,
      38938,
      40335,
      33464,
      36814,
      39912,
      21127,
      25119,
      25731,
      28608,
      38553,
      26689,
      20625,
      27424,
      27770,
      28500,
      31348,
      32080,
      34880,
      35363,
      26376,
      20214,
      20537,
      20518,
      20581,
      20860,
      21048,
      21091,
      21927,
      22287,
      22533,
      23244,
      24314,
      25010,
      25080,
      25331,
      25458,
      26908,
      27177,
      29309,
      29356,
      29486,
      30740,
      30831,
      32121,
      30476,
      32937,
      35211,
      35609,
      36066,
      36562,
      36963,
      37749,
      38522,
      38997,
      39443,
      40568,
      20803,
      21407,
      21427,
      24187,
      24358,
      28187,
      28304,
      29572,
      29694,
      32067,
      33335,
      35328,
      35578,
      38480,
      20046,
      20491,
      21476,
      21628,
      22266,
      22993,
      23396,
      24049,
      24235,
      24359,
      25144,
      25925,
      26543,
      28246,
      29392,
      31946,
      34996,
      32929,
      32993,
      33776,
      34382,
      35463,
      36328,
      37431,
      38599,
      39015,
      40723,
      20116,
      20114,
      20237,
      21320,
      21577,
      21566,
      23087,
      24460,
      24481,
      24735,
      26791,
      27278,
      29786,
      30849,
      35486,
      35492,
      35703,
      37264,
      20062,
      39881,
      20132,
      20348,
      20399,
      20505,
      20502,
      20809,
      20844,
      21151,
      21177,
      21246,
      21402,
      21475,
      21521,
      21518,
      21897,
      22353,
      22434,
      22909,
      23380,
      23389,
      23439,
      24037,
      24039,
      24055,
      24184,
      24195,
      24218,
      24247,
      24344,
      24658,
      24908,
      25239,
      25304,
      25511,
      25915,
      26114,
      26179,
      26356,
      26477,
      26657,
      26775,
      27083,
      27743,
      27946,
      28009,
      28207,
      28317,
      30002,
      30343,
      30828,
      31295,
      31968,
      32005,
      32024,
      32094,
      32177,
      32789,
      32771,
      32943,
      32945,
      33108,
      33167,
      33322,
      33618,
      34892,
      34913,
      35611,
      36002,
      36092,
      37066,
      37237,
      37489,
      30783,
      37628,
      38308,
      38477,
      38917,
      39321,
      39640,
      40251,
      21083,
      21163,
      21495,
      21512,
      22741,
      25335,
      28640,
      35946,
      36703,
      40633,
      20811,
      21051,
      21578,
      22269,
      31296,
      37239,
      40288,
      40658,
      29508,
      28425,
      33136,
      29969,
      24573,
      24794,
      39592,
      29403,
      36796,
      27492,
      38915,
      20170,
      22256,
      22372,
      22718,
      23130,
      24680,
      25031,
      26127,
      26118,
      26681,
      26801,
      28151,
      30165,
      32058,
      33390,
      39746,
      20123,
      20304,
      21449,
      21766,
      23919,
      24038,
      24046,
      26619,
      27801,
      29811,
      30722,
      35408,
      37782,
      35039,
      22352,
      24231,
      25387,
      20661,
      20652,
      20877,
      26368,
      21705,
      22622,
      22971,
      23472,
      24425,
      25165,
      25505,
      26685,
      27507,
      28168,
      28797,
      37319,
      29312,
      30741,
      30758,
      31085,
      25998,
      32048,
      33756,
      35009,
      36617,
      38555,
      21092,
      22312,
      26448,
      32618,
      36001,
      20916,
      22338,
      38442,
      22586,
      27018,
      32948,
      21682,
      23822,
      22524,
      30869,
      40442,
      20316,
      21066,
      21643,
      25662,
      26152,
      26388,
      26613,
      31364,
      31574,
      32034,
      37679,
      26716,
      39853,
      31545,
      21273,
      20874,
      21047,
      23519,
      25334,
      25774,
      25830,
      26413,
      27578,
      34217,
      38609,
      30352,
      39894,
      25420,
      37638,
      39851,
      30399,
      26194,
      19977,
      20632,
      21442,
      23665,
      24808,
      25746,
      25955,
      26719,
      29158,
      29642,
      29987,
      31639,
      32386,
      34453,
      35715,
      36059,
      37240,
      39184,
      26028,
      26283,
      27531,
      20181,
      20180,
      20282,
      20351,
      21050,
      21496,
      21490,
      21987,
      22235,
      22763,
      22987,
      22985,
      23039,
      23376,
      23629,
      24066,
      24107,
      24535,
      24605,
      25351,
      25903,
      23388,
      26031,
      26045,
      26088,
      26525,
      27490,
      27515,
      27663,
      29509,
      31049,
      31169,
      31992,
      32025,
      32043,
      32930,
      33026,
      33267,
      35222,
      35422,
      35433,
      35430,
      35468,
      35566,
      36039,
      36060,
      38604,
      39164,
      27503,
      20107,
      20284,
      20365,
      20816,
      23383,
      23546,
      24904,
      25345,
      26178,
      27425,
      28363,
      27835,
      29246,
      29885,
      30164,
      30913,
      31034,
      32780,
      32819,
      33258,
      33940,
      36766,
      27728,
      40575,
      24335,
      35672,
      40235,
      31482,
      36600,
      23437,
      38635,
      19971,
      21489,
      22519,
      22833,
      23241,
      23460,
      24713,
      28287,
      28422,
      30142,
      36074,
      23455,
      34048,
      31712,
      20594,
      26612,
      33437,
      23649,
      34122,
      32286,
      33294,
      20889,
      23556,
      25448,
      36198,
      26012,
      29038,
      31038,
      32023,
      32773,
      35613,
      36554,
      36974,
      34503,
      37034,
      20511,
      21242,
      23610,
      26451,
      28796,
      29237,
      37196,
      37320,
      37675,
      33509,
      23490,
      24369,
      24825,
      20027,
      21462,
      23432,
      25163,
      26417,
      27530,
      29417,
      29664,
      31278,
      33131,
      36259,
      37202,
      39318,
      20754,
      21463,
      21610,
      23551,
      25480,
      27193,
      32172,
      38656,
      22234,
      21454,
      21608,
      23447,
      23601,
      24030,
      20462,
      24833,
      25342,
      27954,
      31168,
      31179,
      32066,
      32333,
      32722,
      33261,
      33311,
      33936,
      34886,
      35186,
      35728,
      36468,
      36655,
      36913,
      37195,
      37228,
      38598,
      37276,
      20160,
      20303,
      20805,
      21313,
      24467,
      25102,
      26580,
      27713,
      28171,
      29539,
      32294,
      37325,
      37507,
      21460,
      22809,
      23487,
      28113,
      31069,
      32302,
      31899,
      22654,
      29087,
      20986,
      34899,
      36848,
      20426,
      23803,
      26149,
      30636,
      31459,
      33308,
      39423,
      20934,
      24490,
      26092,
      26991,
      27529,
      28147,
      28310,
      28516,
      30462,
      32020,
      24033,
      36981,
      37255,
      38918,
      20966,
      21021,
      25152,
      26257,
      26329,
      28186,
      24246,
      32210,
      32626,
      26360,
      34223,
      34295,
      35576,
      21161,
      21465,
      22899,
      24207,
      24464,
      24661,
      37604,
      38500,
      20663,
      20767,
      21213,
      21280,
      21319,
      21484,
      21736,
      21830,
      21809,
      22039,
      22888,
      22974,
      23100,
      23477,
      23558,
      23567,
      23569,
      23578,
      24196,
      24202,
      24288,
      24432,
      25215,
      25220,
      25307,
      25484,
      25463,
      26119,
      26124,
      26157,
      26230,
      26494,
      26786,
      27167,
      27189,
      27836,
      28040,
      28169,
      28248,
      28988,
      28966,
      29031,
      30151,
      30465,
      30813,
      30977,
      31077,
      31216,
      31456,
      31505,
      31911,
      32057,
      32918,
      33750,
      33931,
      34121,
      34909,
      35059,
      35359,
      35388,
      35412,
      35443,
      35937,
      36062,
      37284,
      37478,
      37758,
      37912,
      38556,
      38808,
      19978,
      19976,
      19998,
      20055,
      20887,
      21104,
      22478,
      22580,
      22732,
      23330,
      24120,
      24773,
      25854,
      26465,
      26454,
      27972,
      29366,
      30067,
      31331,
      33976,
      35698,
      37304,
      37664,
      22065,
      22516,
      39166,
      25325,
      26893,
      27542,
      29165,
      32340,
      32887,
      33394,
      35302,
      39135,
      34645,
      36785,
      23611,
      20280,
      20449,
      20405,
      21767,
      23072,
      23517,
      23529,
      24515,
      24910,
      25391,
      26032,
      26187,
      26862,
      27035,
      28024,
      28145,
      30003,
      30137,
      30495,
      31070,
      31206,
      32051,
      33251,
      33455,
      34218,
      35242,
      35386,
      36523,
      36763,
      36914,
      37341,
      38663,
      20154,
      20161,
      20995,
      22645,
      22764,
      23563,
      29978,
      23613,
      33102,
      35338,
      36805,
      38499,
      38765,
      31525,
      35535,
      38920,
      37218,
      22259,
      21416,
      36887,
      21561,
      22402,
      24101,
      25512,
      27700,
      28810,
      30561,
      31883,
      32736,
      34928,
      36930,
      37204,
      37648,
      37656,
      38543,
      29790,
      39620,
      23815,
      23913,
      25968,
      26530,
      36264,
      38619,
      25454,
      26441,
      26905,
      33733,
      38935,
      38592,
      35070,
      28548,
      25722,
      23544,
      19990,
      28716,
      30045,
      26159,
      20932,
      21046,
      21218,
      22995,
      24449,
      24615,
      25104,
      25919,
      25972,
      26143,
      26228,
      26866,
      26646,
      27491,
      28165,
      29298,
      29983,
      30427,
      31934,
      32854,
      22768,
      35069,
      35199,
      35488,
      35475,
      35531,
      36893,
      37266,
      38738,
      38745,
      25993,
      31246,
      33030,
      38587,
      24109,
      24796,
      25114,
      26021,
      26132,
      26512,
      30707,
      31309,
      31821,
      32318,
      33034,
      36012,
      36196,
      36321,
      36447,
      30889,
      20999,
      25305,
      25509,
      25666,
      25240,
      35373,
      31363,
      31680,
      35500,
      38634,
      32118,
      33292,
      34633,
      20185,
      20808,
      21315,
      21344,
      23459,
      23554,
      23574,
      24029,
      25126,
      25159,
      25776,
      26643,
      26676,
      27849,
      27973,
      27927,
      26579,
      28508,
      29006,
      29053,
      26059,
      31359,
      31661,
      32218,
      32330,
      32680,
      33146,
      33307,
      33337,
      34214,
      35438,
      36046,
      36341,
      36984,
      36983,
      37549,
      37521,
      38275,
      39854,
      21069,
      21892,
      28472,
      28982,
      20840,
      31109,
      32341,
      33203,
      31950,
      22092,
      22609,
      23720,
      25514,
      26366,
      26365,
      26970,
      29401,
      30095,
      30094,
      30990,
      31062,
      31199,
      31895,
      32032,
      32068,
      34311,
      35380,
      38459,
      36961,
      40736,
      20711,
      21109,
      21452,
      21474,
      20489,
      21930,
      22766,
      22863,
      29245,
      23435,
      23652,
      21277,
      24803,
      24819,
      25436,
      25475,
      25407,
      25531,
      25805,
      26089,
      26361,
      24035,
      27085,
      27133,
      28437,
      29157,
      20105,
      30185,
      30456,
      31379,
      31967,
      32207,
      32156,
      32865,
      33609,
      33624,
      33900,
      33980,
      34299,
      35013,
      36208,
      36865,
      36973,
      37783,
      38684,
      39442,
      20687,
      22679,
      24974,
      33235,
      34101,
      36104,
      36896,
      20419,
      20596,
      21063,
      21363,
      24687,
      25417,
      26463,
      28204,
      36275,
      36895,
      20439,
      23646,
      36042,
      26063,
      32154,
      21330,
      34966,
      20854,
      25539,
      23384,
      23403,
      23562,
      25613,
      26449,
      36956,
      20182,
      22810,
      22826,
      27760,
      35409,
      21822,
      22549,
      22949,
      24816,
      25171,
      26561,
      33333,
      26965,
      38464,
      39364,
      39464,
      20307,
      22534,
      23550,
      32784,
      23729,
      24111,
      24453,
      24608,
      24907,
      25140,
      26367,
      27888,
      28382,
      32974,
      33151,
      33492,
      34955,
      36024,
      36864,
      36910,
      38538,
      40667,
      39899,
      20195,
      21488,
      22823,
      31532,
      37261,
      38988,
      40441,
      28381,
      28711,
      21331,
      21828,
      23429,
      25176,
      25246,
      25299,
      27810,
      28655,
      29730,
      35351,
      37944,
      28609,
      35582,
      33592,
      20967,
      34552,
      21482,
      21481,
      20294,
      36948,
      36784,
      22890,
      33073,
      24061,
      31466,
      36799,
      26842,
      35895,
      29432,
      40008,
      27197,
      35504,
      20025,
      21336,
      22022,
      22374,
      25285,
      25506,
      26086,
      27470,
      28129,
      28251,
      28845,
      30701,
      31471,
      31658,
      32187,
      32829,
      32966,
      34507,
      35477,
      37723,
      22243,
      22727,
      24382,
      26029,
      26262,
      27264,
      27573,
      30007,
      35527,
      20516,
      30693,
      22320,
      24347,
      24677,
      26234,
      27744,
      30196,
      31258,
      32622,
      33268,
      34584,
      36933,
      39347,
      31689,
      30044,
      31481,
      31569,
      33988,
      36880,
      31209,
      31378,
      33590,
      23265,
      30528,
      20013,
      20210,
      23449,
      24544,
      25277,
      26172,
      26609,
      27880,
      34411,
      34935,
      35387,
      37198,
      37619,
      39376,
      27159,
      28710,
      29482,
      33511,
      33879,
      36015,
      19969,
      20806,
      20939,
      21899,
      23541,
      24086,
      24115,
      24193,
      24340,
      24373,
      24427,
      24500,
      25074,
      25361,
      26274,
      26397,
      28526,
      29266,
      30010,
      30522,
      32884,
      33081,
      33144,
      34678,
      35519,
      35548,
      36229,
      36339,
      37530,
      38263,
      38914,
      40165,
      21189,
      25431,
      30452,
      26389,
      27784,
      29645,
      36035,
      37806,
      38515,
      27941,
      22684,
      26894,
      27084,
      36861,
      37786,
      30171,
      36890,
      22618,
      26626,
      25524,
      27131,
      20291,
      28460,
      26584,
      36795,
      34086,
      32180,
      37716,
      26943,
      28528,
      22378,
      22775,
      23340,
      32044,
      29226,
      21514,
      37347,
      40372,
      20141,
      20302,
      20572,
      20597,
      21059,
      35998,
      21576,
      22564,
      23450,
      24093,
      24213,
      24237,
      24311,
      24351,
      24716,
      25269,
      25402,
      25552,
      26799,
      27712,
      30855,
      31118,
      31243,
      32224,
      33351,
      35330,
      35558,
      36420,
      36883,
      37048,
      37165,
      37336,
      40718,
      27877,
      25688,
      25826,
      25973,
      28404,
      30340,
      31515,
      36969,
      37841,
      28346,
      21746,
      24505,
      25764,
      36685,
      36845,
      37444,
      20856,
      22635,
      22825,
      23637,
      24215,
      28155,
      32399,
      29980,
      36028,
      36578,
      39003,
      28857,
      20253,
      27583,
      28593,
      30000,
      38651,
      20814,
      21520,
      22581,
      22615,
      22956,
      23648,
      24466,
      26007,
      26460,
      28193,
      30331,
      33759,
      36077,
      36884,
      37117,
      37709,
      30757,
      30778,
      21162,
      24230,
      22303,
      22900,
      24594,
      20498,
      20826,
      20908,
      20941,
      20992,
      21776,
      22612,
      22616,
      22871,
      23445,
      23798,
      23947,
      24764,
      25237,
      25645,
      26481,
      26691,
      26812,
      26847,
      30423,
      28120,
      28271,
      28059,
      28783,
      29128,
      24403,
      30168,
      31095,
      31561,
      31572,
      31570,
      31958,
      32113,
      21040,
      33891,
      34153,
      34276,
      35342,
      35588,
      35910,
      36367,
      36867,
      36879,
      37913,
      38518,
      38957,
      39472,
      38360,
      20685,
      21205,
      21516,
      22530,
      23566,
      24999,
      25758,
      27934,
      30643,
      31461,
      33012,
      33796,
      36947,
      37509,
      23776,
      40199,
      21311,
      24471,
      24499,
      28060,
      29305,
      30563,
      31167,
      31716,
      27602,
      29420,
      35501,
      26627,
      27233,
      20984,
      31361,
      26932,
      23626,
      40182,
      33515,
      23493,
      37193,
      28702,
      22136,
      23663,
      24775,
      25958,
      27788,
      35930,
      36929,
      38931,
      21585,
      26311,
      37389,
      22856,
      37027,
      20869,
      20045,
      20970,
      34201,
      35598,
      28760,
      25466,
      37707,
      26978,
      39348,
      32260,
      30071,
      21335,
      26976,
      36575,
      38627,
      27741,
      20108,
      23612,
      24336,
      36841,
      21250,
      36049,
      32905,
      34425,
      24319,
      26085,
      20083,
      20837,
      22914,
      23615,
      38894,
      20219,
      22922,
      24525,
      35469,
      28641,
      31152,
      31074,
      23527,
      33905,
      29483,
      29105,
      24180,
      24565,
      25467,
      25754,
      29123,
      31896,
      20035,
      24316,
      20043,
      22492,
      22178,
      24745,
      28611,
      32013,
      33021,
      33075,
      33215,
      36786,
      35223,
      34468,
      24052,
      25226,
      25773,
      35207,
      26487,
      27874,
      27966,
      29750,
      30772,
      23110,
      32629,
      33453,
      39340,
      20467,
      24259,
      25309,
      25490,
      25943,
      26479,
      30403,
      29260,
      32972,
      32954,
      36649,
      37197,
      20493,
      22521,
      23186,
      26757,
      26995,
      29028,
      29437,
      36023,
      22770,
      36064,
      38506,
      36889,
      34687,
      31204,
      30695,
      33833,
      20271,
      21093,
      21338,
      25293,
      26575,
      27850,
      30333,
      31636,
      31893,
      33334,
      34180,
      36843,
      26333,
      28448,
      29190,
      32283,
      33707,
      39361,
      40614,
      20989,
      31665,
      30834,
      31672,
      32903,
      31560,
      27368,
      24161,
      32908,
      30033,
      30048,
      20843,
      37474,
      28300,
      30330,
      37271,
      39658,
      20240,
      32624,
      25244,
      31567,
      38309,
      40169,
      22138,
      22617,
      34532,
      38588,
      20276,
      21028,
      21322,
      21453,
      21467,
      24070,
      25644,
      26001,
      26495,
      27710,
      27726,
      29256,
      29359,
      29677,
      30036,
      32321,
      33324,
      34281,
      36009,
      31684,
      37318,
      29033,
      38930,
      39151,
      25405,
      26217,
      30058,
      30436,
      30928,
      34115,
      34542,
      21290,
      21329,
      21542,
      22915,
      24199,
      24444,
      24754,
      25161,
      25209,
      25259,
      26000,
      27604,
      27852,
      30130,
      30382,
      30865,
      31192,
      32203,
      32631,
      32933,
      34987,
      35513,
      36027,
      36991,
      38750,
      39131,
      27147,
      31800,
      20633,
      23614,
      24494,
      26503,
      27608,
      29749,
      30473,
      32654,
      40763,
      26570,
      31255,
      21305,
      30091,
      39661,
      24422,
      33181,
      33777,
      32920,
      24380,
      24517,
      30050,
      31558,
      36924,
      26727,
      23019,
      23195,
      32016,
      30334,
      35628,
      20469,
      24426,
      27161,
      27703,
      28418,
      29922,
      31080,
      34920,
      35413,
      35961,
      24287,
      25551,
      30149,
      31186,
      33495,
      37672,
      37618,
      33948,
      34541,
      39981,
      21697,
      24428,
      25996,
      27996,
      28693,
      36007,
      36051,
      38971,
      25935,
      29942,
      19981,
      20184,
      22496,
      22827,
      23142,
      23500,
      20904,
      24067,
      24220,
      24598,
      25206,
      25975,
      26023,
      26222,
      28014,
      29238,
      31526,
      33104,
      33178,
      33433,
      35676,
      36000,
      36070,
      36212,
      38428,
      38468,
      20398,
      25771,
      27494,
      33310,
      33889,
      34154,
      37096,
      23553,
      26963,
      39080,
      33914,
      34135,
      20239,
      21103,
      24489,
      24133,
      26381,
      31119,
      33145,
      35079,
      35206,
      28149,
      24343,
      25173,
      27832,
      20175,
      29289,
      39826,
      20998,
      21563,
      22132,
      22707,
      24996,
      25198,
      28954,
      22894,
      31881,
      31966,
      32027,
      38640,
      25991,
      32862,
      19993,
      20341,
      20853,
      22592,
      24163,
      24179,
      24330,
      26564,
      20006,
      34109,
      38281,
      38491,
      31859,
      38913,
      20731,
      22721,
      30294,
      30887,
      21029,
      30629,
      34065,
      31622,
      20559,
      22793,
      29255,
      31687,
      32232,
      36794,
      36820,
      36941,
      20415,
      21193,
      23081,
      24321,
      38829,
      20445,
      33303,
      37610,
      22275,
      25429,
      27497,
      29995,
      35036,
      36628,
      31298,
      21215,
      22675,
      24917,
      25098,
      26286,
      27597,
      31807,
      33769,
      20515,
      20472,
      21253,
      21574,
      22577,
      22857,
      23453,
      23792,
      23791,
      23849,
      24214,
      25265,
      25447,
      25918,
      26041,
      26379,
      27861,
      27873,
      28921,
      30770,
      32299,
      32990,
      33459,
      33804,
      34028,
      34562,
      35090,
      35370,
      35914,
      37030,
      37586,
      39165,
      40179,
      40300,
      20047,
      20129,
      20621,
      21078,
      22346,
      22952,
      24125,
      24536,
      24537,
      25151,
      26292,
      26395,
      26576,
      26834,
      20882,
      32033,
      32938,
      33192,
      35584,
      35980,
      36031,
      37502,
      38450,
      21536,
      38956,
      21271,
      20693,
      21340,
      22696,
      25778,
      26420,
      29287,
      30566,
      31302,
      37350,
      21187,
      27809,
      27526,
      22528,
      24140,
      22868,
      26412,
      32763,
      20961,
      30406,
      25705,
      30952,
      39764,
      40635,
      22475,
      22969,
      26151,
      26522,
      27598,
      21737,
      27097,
      24149,
      33180,
      26517,
      39850,
      26622,
      40018,
      26717,
      20134,
      20451,
      21448,
      25273,
      26411,
      27819,
      36804,
      20397,
      32365,
      40639,
      19975,
      24930,
      28288,
      28459,
      34067,
      21619,
      26410,
      39749,
      24051,
      31637,
      23724,
      23494,
      34588,
      28234,
      34001,
      31252,
      33032,
      22937,
      31885,
      27665,
      30496,
      21209,
      22818,
      28961,
      29279,
      30683,
      38695,
      40289,
      26891,
      23167,
      23064,
      20901,
      21517,
      21629,
      26126,
      30431,
      36855,
      37528,
      40180,
      23018,
      29277,
      28357,
      20813,
      26825,
      32191,
      32236,
      38754,
      40634,
      25720,
      27169,
      33538,
      22916,
      23391,
      27611,
      29467,
      30450,
      32178,
      32791,
      33945,
      20786,
      26408,
      40665,
      30446,
      26466,
      21247,
      39173,
      23588,
      25147,
      31870,
      36016,
      21839,
      24758,
      32011,
      38272,
      21249,
      20063,
      20918,
      22812,
      29242,
      32822,
      37326,
      24357,
      30690,
      21380,
      24441,
      32004,
      34220,
      35379,
      36493,
      38742,
      26611,
      34222,
      37971,
      24841,
      24840,
      27833,
      30290,
      35565,
      36664,
      21807,
      20305,
      20778,
      21191,
      21451,
      23461,
      24189,
      24736,
      24962,
      25558,
      26377,
      26586,
      28263,
      28044,
      29494,
      29495,
      30001,
      31056,
      35029,
      35480,
      36938,
      37009,
      37109,
      38596,
      34701,
      22805,
      20104,
      20313,
      19982,
      35465,
      36671,
      38928,
      20653,
      24188,
      22934,
      23481,
      24248,
      25562,
      25594,
      25793,
      26332,
      26954,
      27096,
      27915,
      28342,
      29076,
      29992,
      31407,
      32650,
      32768,
      33865,
      33993,
      35201,
      35617,
      36362,
      36965,
      38525,
      39178,
      24958,
      25233,
      27442,
      27779,
      28020,
      32716,
      32764,
      28096,
      32645,
      34746,
      35064,
      26469,
      33713,
      38972,
      38647,
      27931,
      32097,
      33853,
      37226,
      20081,
      21365,
      23888,
      27396,
      28651,
      34253,
      34349,
      35239,
      21033,
      21519,
      23653,
      26446,
      26792,
      29702,
      29827,
      30178,
      35023,
      35041,
      37324,
      38626,
      38520,
      24459,
      29575,
      31435,
      33870,
      25504,
      30053,
      21129,
      27969,
      28316,
      29705,
      30041,
      30827,
      31890,
      38534,
      31452,
      40845,
      20406,
      24942,
      26053,
      34396,
      20102,
      20142,
      20698,
      20001,
      20940,
      23534,
      26009,
      26753,
      28092,
      29471,
      30274,
      30637,
      31260,
      31975,
      33391,
      35538,
      36988,
      37327,
      38517,
      38936,
      21147,
      32209,
      20523,
      21400,
      26519,
      28107,
      29136,
      29747,
      33256,
      36650,
      38563,
      40023,
      40607,
      29792,
      22593,
      28057,
      32047,
      39006,
      20196,
      20278,
      20363,
      20919,
      21169,
      23994,
      24604,
      29618,
      31036,
      33491,
      37428,
      38583,
      38646,
      38666,
      40599,
      40802,
      26278,
      27508,
      21015,
      21155,
      28872,
      35010,
      24265,
      24651,
      24976,
      28451,
      29001,
      31806,
      32244,
      32879,
      34030,
      36899,
      37676,
      21570,
      39791,
      27347,
      28809,
      36034,
      36335,
      38706,
      21172,
      23105,
      24266,
      24324,
      26391,
      27004,
      27028,
      28010,
      28431,
      29282,
      29436,
      31725,
      32769,
      32894,
      34635,
      37070,
      20845,
      40595,
      31108,
      32907,
      37682,
      35542,
      20525,
      21644,
      35441,
      27498,
      36036,
      33031,
      24785,
      26528,
      40434,
      20121,
      20120,
      39952,
      35435,
      34241,
      34152,
      26880,
      28286,
      30871,
      33109,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      24332,
      19984,
      19989,
      20010,
      20017,
      20022,
      20028,
      20031,
      20034,
      20054,
      20056,
      20098,
      20101,
      35947,
      20106,
      33298,
      24333,
      20110,
      20126,
      20127,
      20128,
      20130,
      20144,
      20147,
      20150,
      20174,
      20173,
      20164,
      20166,
      20162,
      20183,
      20190,
      20205,
      20191,
      20215,
      20233,
      20314,
      20272,
      20315,
      20317,
      20311,
      20295,
      20342,
      20360,
      20367,
      20376,
      20347,
      20329,
      20336,
      20369,
      20335,
      20358,
      20374,
      20760,
      20436,
      20447,
      20430,
      20440,
      20443,
      20433,
      20442,
      20432,
      20452,
      20453,
      20506,
      20520,
      20500,
      20522,
      20517,
      20485,
      20252,
      20470,
      20513,
      20521,
      20524,
      20478,
      20463,
      20497,
      20486,
      20547,
      20551,
      26371,
      20565,
      20560,
      20552,
      20570,
      20566,
      20588,
      20600,
      20608,
      20634,
      20613,
      20660,
      20658,
      20681,
      20682,
      20659,
      20674,
      20694,
      20702,
      20709,
      20717,
      20707,
      20718,
      20729,
      20725,
      20745,
      20737,
      20738,
      20758,
      20757,
      20756,
      20762,
      20769,
      20794,
      20791,
      20796,
      20795,
      20799,
      20800,
      20818,
      20812,
      20820,
      20834,
      31480,
      20841,
      20842,
      20846,
      20864,
      20866,
      22232,
      20876,
      20873,
      20879,
      20881,
      20883,
      20885,
      20886,
      20900,
      20902,
      20898,
      20905,
      20906,
      20907,
      20915,
      20913,
      20914,
      20912,
      20917,
      20925,
      20933,
      20937,
      20955,
      20960,
      34389,
      20969,
      20973,
      20976,
      20981,
      20990,
      20996,
      21003,
      21012,
      21006,
      21031,
      21034,
      21038,
      21043,
      21049,
      21071,
      21060,
      21067,
      21068,
      21086,
      21076,
      21098,
      21108,
      21097,
      21107,
      21119,
      21117,
      21133,
      21140,
      21138,
      21105,
      21128,
      21137,
      36776,
      36775,
      21164,
      21165,
      21180,
      21173,
      21185,
      21197,
      21207,
      21214,
      21219,
      21222,
      39149,
      21216,
      21235,
      21237,
      21240,
      21241,
      21254,
      21256,
      30008,
      21261,
      21264,
      21263,
      21269,
      21274,
      21283,
      21295,
      21297,
      21299,
      21304,
      21312,
      21318,
      21317,
      19991,
      21321,
      21325,
      20950,
      21342,
      21353,
      21358,
      22808,
      21371,
      21367,
      21378,
      21398,
      21408,
      21414,
      21413,
      21422,
      21424,
      21430,
      21443,
      31762,
      38617,
      21471,
      26364,
      29166,
      21486,
      21480,
      21485,
      21498,
      21505,
      21565,
      21568,
      21548,
      21549,
      21564,
      21550,
      21558,
      21545,
      21533,
      21582,
      21647,
      21621,
      21646,
      21599,
      21617,
      21623,
      21616,
      21650,
      21627,
      21632,
      21622,
      21636,
      21648,
      21638,
      21703,
      21666,
      21688,
      21669,
      21676,
      21700,
      21704,
      21672,
      21675,
      21698,
      21668,
      21694,
      21692,
      21720,
      21733,
      21734,
      21775,
      21780,
      21757,
      21742,
      21741,
      21754,
      21730,
      21817,
      21824,
      21859,
      21836,
      21806,
      21852,
      21829,
      21846,
      21847,
      21816,
      21811,
      21853,
      21913,
      21888,
      21679,
      21898,
      21919,
      21883,
      21886,
      21912,
      21918,
      21934,
      21884,
      21891,
      21929,
      21895,
      21928,
      21978,
      21957,
      21983,
      21956,
      21980,
      21988,
      21972,
      22036,
      22007,
      22038,
      22014,
      22013,
      22043,
      22009,
      22094,
      22096,
      29151,
      22068,
      22070,
      22066,
      22072,
      22123,
      22116,
      22063,
      22124,
      22122,
      22150,
      22144,
      22154,
      22176,
      22164,
      22159,
      22181,
      22190,
      22198,
      22196,
      22210,
      22204,
      22209,
      22211,
      22208,
      22216,
      22222,
      22225,
      22227,
      22231,
      22254,
      22265,
      22272,
      22271,
      22276,
      22281,
      22280,
      22283,
      22285,
      22291,
      22296,
      22294,
      21959,
      22300,
      22310,
      22327,
      22328,
      22350,
      22331,
      22336,
      22351,
      22377,
      22464,
      22408,
      22369,
      22399,
      22409,
      22419,
      22432,
      22451,
      22436,
      22442,
      22448,
      22467,
      22470,
      22484,
      22482,
      22483,
      22538,
      22486,
      22499,
      22539,
      22553,
      22557,
      22642,
      22561,
      22626,
      22603,
      22640,
      27584,
      22610,
      22589,
      22649,
      22661,
      22713,
      22687,
      22699,
      22714,
      22750,
      22715,
      22712,
      22702,
      22725,
      22739,
      22737,
      22743,
      22745,
      22744,
      22757,
      22748,
      22756,
      22751,
      22767,
      22778,
      22777,
      22779,
      22780,
      22781,
      22786,
      22794,
      22800,
      22811,
      26790,
      22821,
      22828,
      22829,
      22834,
      22840,
      22846,
      31442,
      22869,
      22864,
      22862,
      22874,
      22872,
      22882,
      22880,
      22887,
      22892,
      22889,
      22904,
      22913,
      22941,
      20318,
      20395,
      22947,
      22962,
      22982,
      23016,
      23004,
      22925,
      23001,
      23002,
      23077,
      23071,
      23057,
      23068,
      23049,
      23066,
      23104,
      23148,
      23113,
      23093,
      23094,
      23138,
      23146,
      23194,
      23228,
      23230,
      23243,
      23234,
      23229,
      23267,
      23255,
      23270,
      23273,
      23254,
      23290,
      23291,
      23308,
      23307,
      23318,
      23346,
      23248,
      23338,
      23350,
      23358,
      23363,
      23365,
      23360,
      23377,
      23381,
      23386,
      23387,
      23397,
      23401,
      23408,
      23411,
      23413,
      23416,
      25992,
      23418,
      23424,
      23427,
      23462,
      23480,
      23491,
      23495,
      23497,
      23508,
      23504,
      23524,
      23526,
      23522,
      23518,
      23525,
      23531,
      23536,
      23542,
      23539,
      23557,
      23559,
      23560,
      23565,
      23571,
      23584,
      23586,
      23592,
      23608,
      23609,
      23617,
      23622,
      23630,
      23635,
      23632,
      23631,
      23409,
      23660,
      23662,
      20066,
      23670,
      23673,
      23692,
      23697,
      23700,
      22939,
      23723,
      23739,
      23734,
      23740,
      23735,
      23749,
      23742,
      23751,
      23769,
      23785,
      23805,
      23802,
      23789,
      23948,
      23786,
      23819,
      23829,
      23831,
      23900,
      23839,
      23835,
      23825,
      23828,
      23842,
      23834,
      23833,
      23832,
      23884,
      23890,
      23886,
      23883,
      23916,
      23923,
      23926,
      23943,
      23940,
      23938,
      23970,
      23965,
      23980,
      23982,
      23997,
      23952,
      23991,
      23996,
      24009,
      24013,
      24019,
      24018,
      24022,
      24027,
      24043,
      24050,
      24053,
      24075,
      24090,
      24089,
      24081,
      24091,
      24118,
      24119,
      24132,
      24131,
      24128,
      24142,
      24151,
      24148,
      24159,
      24162,
      24164,
      24135,
      24181,
      24182,
      24186,
      40636,
      24191,
      24224,
      24257,
      24258,
      24264,
      24272,
      24271,
      24278,
      24291,
      24285,
      24282,
      24283,
      24290,
      24289,
      24296,
      24297,
      24300,
      24305,
      24307,
      24304,
      24308,
      24312,
      24318,
      24323,
      24329,
      24413,
      24412,
      24331,
      24337,
      24342,
      24361,
      24365,
      24376,
      24385,
      24392,
      24396,
      24398,
      24367,
      24401,
      24406,
      24407,
      24409,
      24417,
      24429,
      24435,
      24439,
      24451,
      24450,
      24447,
      24458,
      24456,
      24465,
      24455,
      24478,
      24473,
      24472,
      24480,
      24488,
      24493,
      24508,
      24534,
      24571,
      24548,
      24568,
      24561,
      24541,
      24755,
      24575,
      24609,
      24672,
      24601,
      24592,
      24617,
      24590,
      24625,
      24603,
      24597,
      24619,
      24614,
      24591,
      24634,
      24666,
      24641,
      24682,
      24695,
      24671,
      24650,
      24646,
      24653,
      24675,
      24643,
      24676,
      24642,
      24684,
      24683,
      24665,
      24705,
      24717,
      24807,
      24707,
      24730,
      24708,
      24731,
      24726,
      24727,
      24722,
      24743,
      24715,
      24801,
      24760,
      24800,
      24787,
      24756,
      24560,
      24765,
      24774,
      24757,
      24792,
      24909,
      24853,
      24838,
      24822,
      24823,
      24832,
      24820,
      24826,
      24835,
      24865,
      24827,
      24817,
      24845,
      24846,
      24903,
      24894,
      24872,
      24871,
      24906,
      24895,
      24892,
      24876,
      24884,
      24893,
      24898,
      24900,
      24947,
      24951,
      24920,
      24921,
      24922,
      24939,
      24948,
      24943,
      24933,
      24945,
      24927,
      24925,
      24915,
      24949,
      24985,
      24982,
      24967,
      25004,
      24980,
      24986,
      24970,
      24977,
      25003,
      25006,
      25036,
      25034,
      25033,
      25079,
      25032,
      25027,
      25030,
      25018,
      25035,
      32633,
      25037,
      25062,
      25059,
      25078,
      25082,
      25076,
      25087,
      25085,
      25084,
      25086,
      25088,
      25096,
      25097,
      25101,
      25100,
      25108,
      25115,
      25118,
      25121,
      25130,
      25134,
      25136,
      25138,
      25139,
      25153,
      25166,
      25182,
      25187,
      25179,
      25184,
      25192,
      25212,
      25218,
      25225,
      25214,
      25234,
      25235,
      25238,
      25300,
      25219,
      25236,
      25303,
      25297,
      25275,
      25295,
      25343,
      25286,
      25812,
      25288,
      25308,
      25292,
      25290,
      25282,
      25287,
      25243,
      25289,
      25356,
      25326,
      25329,
      25383,
      25346,
      25352,
      25327,
      25333,
      25424,
      25406,
      25421,
      25628,
      25423,
      25494,
      25486,
      25472,
      25515,
      25462,
      25507,
      25487,
      25481,
      25503,
      25525,
      25451,
      25449,
      25534,
      25577,
      25536,
      25542,
      25571,
      25545,
      25554,
      25590,
      25540,
      25622,
      25652,
      25606,
      25619,
      25638,
      25654,
      25885,
      25623,
      25640,
      25615,
      25703,
      25711,
      25718,
      25678,
      25898,
      25749,
      25747,
      25765,
      25769,
      25736,
      25788,
      25818,
      25810,
      25797,
      25799,
      25787,
      25816,
      25794,
      25841,
      25831,
      33289,
      25824,
      25825,
      25260,
      25827,
      25839,
      25900,
      25846,
      25844,
      25842,
      25850,
      25856,
      25853,
      25880,
      25884,
      25861,
      25892,
      25891,
      25899,
      25908,
      25909,
      25911,
      25910,
      25912,
      30027,
      25928,
      25942,
      25941,
      25933,
      25944,
      25950,
      25949,
      25970,
      25976,
      25986,
      25987,
      35722,
      26011,
      26015,
      26027,
      26039,
      26051,
      26054,
      26049,
      26052,
      26060,
      26066,
      26075,
      26073,
      26080,
      26081,
      26097,
      26482,
      26122,
      26115,
      26107,
      26483,
      26165,
      26166,
      26164,
      26140,
      26191,
      26180,
      26185,
      26177,
      26206,
      26205,
      26212,
      26215,
      26216,
      26207,
      26210,
      26224,
      26243,
      26248,
      26254,
      26249,
      26244,
      26264,
      26269,
      26305,
      26297,
      26313,
      26302,
      26300,
      26308,
      26296,
      26326,
      26330,
      26336,
      26175,
      26342,
      26345,
      26352,
      26357,
      26359,
      26383,
      26390,
      26398,
      26406,
      26407,
      38712,
      26414,
      26431,
      26422,
      26433,
      26424,
      26423,
      26438,
      26462,
      26464,
      26457,
      26467,
      26468,
      26505,
      26480,
      26537,
      26492,
      26474,
      26508,
      26507,
      26534,
      26529,
      26501,
      26551,
      26607,
      26548,
      26604,
      26547,
      26601,
      26552,
      26596,
      26590,
      26589,
      26594,
      26606,
      26553,
      26574,
      26566,
      26599,
      27292,
      26654,
      26694,
      26665,
      26688,
      26701,
      26674,
      26702,
      26803,
      26667,
      26713,
      26723,
      26743,
      26751,
      26783,
      26767,
      26797,
      26772,
      26781,
      26779,
      26755,
      27310,
      26809,
      26740,
      26805,
      26784,
      26810,
      26895,
      26765,
      26750,
      26881,
      26826,
      26888,
      26840,
      26914,
      26918,
      26849,
      26892,
      26829,
      26836,
      26855,
      26837,
      26934,
      26898,
      26884,
      26839,
      26851,
      26917,
      26873,
      26848,
      26863,
      26920,
      26922,
      26906,
      26915,
      26913,
      26822,
      27001,
      26999,
      26972,
      27000,
      26987,
      26964,
      27006,
      26990,
      26937,
      26996,
      26941,
      26969,
      26928,
      26977,
      26974,
      26973,
      27009,
      26986,
      27058,
      27054,
      27088,
      27071,
      27073,
      27091,
      27070,
      27086,
      23528,
      27082,
      27101,
      27067,
      27075,
      27047,
      27182,
      27025,
      27040,
      27036,
      27029,
      27060,
      27102,
      27112,
      27138,
      27163,
      27135,
      27402,
      27129,
      27122,
      27111,
      27141,
      27057,
      27166,
      27117,
      27156,
      27115,
      27146,
      27154,
      27329,
      27171,
      27155,
      27204,
      27148,
      27250,
      27190,
      27256,
      27207,
      27234,
      27225,
      27238,
      27208,
      27192,
      27170,
      27280,
      27277,
      27296,
      27268,
      27298,
      27299,
      27287,
      34327,
      27323,
      27331,
      27330,
      27320,
      27315,
      27308,
      27358,
      27345,
      27359,
      27306,
      27354,
      27370,
      27387,
      27397,
      34326,
      27386,
      27410,
      27414,
      39729,
      27423,
      27448,
      27447,
      30428,
      27449,
      39150,
      27463,
      27459,
      27465,
      27472,
      27481,
      27476,
      27483,
      27487,
      27489,
      27512,
      27513,
      27519,
      27520,
      27524,
      27523,
      27533,
      27544,
      27541,
      27550,
      27556,
      27562,
      27563,
      27567,
      27570,
      27569,
      27571,
      27575,
      27580,
      27590,
      27595,
      27603,
      27615,
      27628,
      27627,
      27635,
      27631,
      40638,
      27656,
      27667,
      27668,
      27675,
      27684,
      27683,
      27742,
      27733,
      27746,
      27754,
      27778,
      27789,
      27802,
      27777,
      27803,
      27774,
      27752,
      27763,
      27794,
      27792,
      27844,
      27889,
      27859,
      27837,
      27863,
      27845,
      27869,
      27822,
      27825,
      27838,
      27834,
      27867,
      27887,
      27865,
      27882,
      27935,
      34893,
      27958,
      27947,
      27965,
      27960,
      27929,
      27957,
      27955,
      27922,
      27916,
      28003,
      28051,
      28004,
      27994,
      28025,
      27993,
      28046,
      28053,
      28644,
      28037,
      28153,
      28181,
      28170,
      28085,
      28103,
      28134,
      28088,
      28102,
      28140,
      28126,
      28108,
      28136,
      28114,
      28101,
      28154,
      28121,
      28132,
      28117,
      28138,
      28142,
      28205,
      28270,
      28206,
      28185,
      28274,
      28255,
      28222,
      28195,
      28267,
      28203,
      28278,
      28237,
      28191,
      28227,
      28218,
      28238,
      28196,
      28415,
      28189,
      28216,
      28290,
      28330,
      28312,
      28361,
      28343,
      28371,
      28349,
      28335,
      28356,
      28338,
      28372,
      28373,
      28303,
      28325,
      28354,
      28319,
      28481,
      28433,
      28748,
      28396,
      28408,
      28414,
      28479,
      28402,
      28465,
      28399,
      28466,
      28364,
      28478,
      28435,
      28407,
      28550,
      28538,
      28536,
      28545,
      28544,
      28527,
      28507,
      28659,
      28525,
      28546,
      28540,
      28504,
      28558,
      28561,
      28610,
      28518,
      28595,
      28579,
      28577,
      28580,
      28601,
      28614,
      28586,
      28639,
      28629,
      28652,
      28628,
      28632,
      28657,
      28654,
      28635,
      28681,
      28683,
      28666,
      28689,
      28673,
      28687,
      28670,
      28699,
      28698,
      28532,
      28701,
      28696,
      28703,
      28720,
      28734,
      28722,
      28753,
      28771,
      28825,
      28818,
      28847,
      28913,
      28844,
      28856,
      28851,
      28846,
      28895,
      28875,
      28893,
      28889,
      28937,
      28925,
      28956,
      28953,
      29029,
      29013,
      29064,
      29030,
      29026,
      29004,
      29014,
      29036,
      29071,
      29179,
      29060,
      29077,
      29096,
      29100,
      29143,
      29113,
      29118,
      29138,
      29129,
      29140,
      29134,
      29152,
      29164,
      29159,
      29173,
      29180,
      29177,
      29183,
      29197,
      29200,
      29211,
      29224,
      29229,
      29228,
      29232,
      29234,
      29243,
      29244,
      29247,
      29248,
      29254,
      29259,
      29272,
      29300,
      29310,
      29314,
      29313,
      29319,
      29330,
      29334,
      29346,
      29351,
      29369,
      29362,
      29379,
      29382,
      29380,
      29390,
      29394,
      29410,
      29408,
      29409,
      29433,
      29431,
      20495,
      29463,
      29450,
      29468,
      29462,
      29469,
      29492,
      29487,
      29481,
      29477,
      29502,
      29518,
      29519,
      40664,
      29527,
      29546,
      29544,
      29552,
      29560,
      29557,
      29563,
      29562,
      29640,
      29619,
      29646,
      29627,
      29632,
      29669,
      29678,
      29662,
      29858,
      29701,
      29807,
      29733,
      29688,
      29746,
      29754,
      29781,
      29759,
      29791,
      29785,
      29761,
      29788,
      29801,
      29808,
      29795,
      29802,
      29814,
      29822,
      29835,
      29854,
      29863,
      29898,
      29903,
      29908,
      29681,
      29920,
      29923,
      29927,
      29929,
      29934,
      29938,
      29936,
      29937,
      29944,
      29943,
      29956,
      29955,
      29957,
      29964,
      29966,
      29965,
      29973,
      29971,
      29982,
      29990,
      29996,
      30012,
      30020,
      30029,
      30026,
      30025,
      30043,
      30022,
      30042,
      30057,
      30052,
      30055,
      30059,
      30061,
      30072,
      30070,
      30086,
      30087,
      30068,
      30090,
      30089,
      30082,
      30100,
      30106,
      30109,
      30117,
      30115,
      30146,
      30131,
      30147,
      30133,
      30141,
      30136,
      30140,
      30129,
      30157,
      30154,
      30162,
      30169,
      30179,
      30174,
      30206,
      30207,
      30204,
      30209,
      30192,
      30202,
      30194,
      30195,
      30219,
      30221,
      30217,
      30239,
      30247,
      30240,
      30241,
      30242,
      30244,
      30260,
      30256,
      30267,
      30279,
      30280,
      30278,
      30300,
      30296,
      30305,
      30306,
      30312,
      30313,
      30314,
      30311,
      30316,
      30320,
      30322,
      30326,
      30328,
      30332,
      30336,
      30339,
      30344,
      30347,
      30350,
      30358,
      30355,
      30361,
      30362,
      30384,
      30388,
      30392,
      30393,
      30394,
      30402,
      30413,
      30422,
      30418,
      30430,
      30433,
      30437,
      30439,
      30442,
      34351,
      30459,
      30472,
      30471,
      30468,
      30505,
      30500,
      30494,
      30501,
      30502,
      30491,
      30519,
      30520,
      30535,
      30554,
      30568,
      30571,
      30555,
      30565,
      30591,
      30590,
      30585,
      30606,
      30603,
      30609,
      30624,
      30622,
      30640,
      30646,
      30649,
      30655,
      30652,
      30653,
      30651,
      30663,
      30669,
      30679,
      30682,
      30684,
      30691,
      30702,
      30716,
      30732,
      30738,
      31014,
      30752,
      31018,
      30789,
      30862,
      30836,
      30854,
      30844,
      30874,
      30860,
      30883,
      30901,
      30890,
      30895,
      30929,
      30918,
      30923,
      30932,
      30910,
      30908,
      30917,
      30922,
      30956,
      30951,
      30938,
      30973,
      30964,
      30983,
      30994,
      30993,
      31001,
      31020,
      31019,
      31040,
      31072,
      31063,
      31071,
      31066,
      31061,
      31059,
      31098,
      31103,
      31114,
      31133,
      31143,
      40779,
      31146,
      31150,
      31155,
      31161,
      31162,
      31177,
      31189,
      31207,
      31212,
      31201,
      31203,
      31240,
      31245,
      31256,
      31257,
      31264,
      31263,
      31104,
      31281,
      31291,
      31294,
      31287,
      31299,
      31319,
      31305,
      31329,
      31330,
      31337,
      40861,
      31344,
      31353,
      31357,
      31368,
      31383,
      31381,
      31384,
      31382,
      31401,
      31432,
      31408,
      31414,
      31429,
      31428,
      31423,
      36995,
      31431,
      31434,
      31437,
      31439,
      31445,
      31443,
      31449,
      31450,
      31453,
      31457,
      31458,
      31462,
      31469,
      31472,
      31490,
      31503,
      31498,
      31494,
      31539,
      31512,
      31513,
      31518,
      31541,
      31528,
      31542,
      31568,
      31610,
      31492,
      31565,
      31499,
      31564,
      31557,
      31605,
      31589,
      31604,
      31591,
      31600,
      31601,
      31596,
      31598,
      31645,
      31640,
      31647,
      31629,
      31644,
      31642,
      31627,
      31634,
      31631,
      31581,
      31641,
      31691,
      31681,
      31692,
      31695,
      31668,
      31686,
      31709,
      31721,
      31761,
      31764,
      31718,
      31717,
      31840,
      31744,
      31751,
      31763,
      31731,
      31735,
      31767,
      31757,
      31734,
      31779,
      31783,
      31786,
      31775,
      31799,
      31787,
      31805,
      31820,
      31811,
      31828,
      31823,
      31808,
      31824,
      31832,
      31839,
      31844,
      31830,
      31845,
      31852,
      31861,
      31875,
      31888,
      31908,
      31917,
      31906,
      31915,
      31905,
      31912,
      31923,
      31922,
      31921,
      31918,
      31929,
      31933,
      31936,
      31941,
      31938,
      31960,
      31954,
      31964,
      31970,
      39739,
      31983,
      31986,
      31988,
      31990,
      31994,
      32006,
      32002,
      32028,
      32021,
      32010,
      32069,
      32075,
      32046,
      32050,
      32063,
      32053,
      32070,
      32115,
      32086,
      32078,
      32114,
      32104,
      32110,
      32079,
      32099,
      32147,
      32137,
      32091,
      32143,
      32125,
      32155,
      32186,
      32174,
      32163,
      32181,
      32199,
      32189,
      32171,
      32317,
      32162,
      32175,
      32220,
      32184,
      32159,
      32176,
      32216,
      32221,
      32228,
      32222,
      32251,
      32242,
      32225,
      32261,
      32266,
      32291,
      32289,
      32274,
      32305,
      32287,
      32265,
      32267,
      32290,
      32326,
      32358,
      32315,
      32309,
      32313,
      32323,
      32311,
      32306,
      32314,
      32359,
      32349,
      32342,
      32350,
      32345,
      32346,
      32377,
      32362,
      32361,
      32380,
      32379,
      32387,
      32213,
      32381,
      36782,
      32383,
      32392,
      32393,
      32396,
      32402,
      32400,
      32403,
      32404,
      32406,
      32398,
      32411,
      32412,
      32568,
      32570,
      32581,
      32588,
      32589,
      32590,
      32592,
      32593,
      32597,
      32596,
      32600,
      32607,
      32608,
      32616,
      32617,
      32615,
      32632,
      32642,
      32646,
      32643,
      32648,
      32647,
      32652,
      32660,
      32670,
      32669,
      32666,
      32675,
      32687,
      32690,
      32697,
      32686,
      32694,
      32696,
      35697,
      32709,
      32710,
      32714,
      32725,
      32724,
      32737,
      32742,
      32745,
      32755,
      32761,
      39132,
      32774,
      32772,
      32779,
      32786,
      32792,
      32793,
      32796,
      32801,
      32808,
      32831,
      32827,
      32842,
      32838,
      32850,
      32856,
      32858,
      32863,
      32866,
      32872,
      32883,
      32882,
      32880,
      32886,
      32889,
      32893,
      32895,
      32900,
      32902,
      32901,
      32923,
      32915,
      32922,
      32941,
      20880,
      32940,
      32987,
      32997,
      32985,
      32989,
      32964,
      32986,
      32982,
      33033,
      33007,
      33009,
      33051,
      33065,
      33059,
      33071,
      33099,
      38539,
      33094,
      33086,
      33107,
      33105,
      33020,
      33137,
      33134,
      33125,
      33126,
      33140,
      33155,
      33160,
      33162,
      33152,
      33154,
      33184,
      33173,
      33188,
      33187,
      33119,
      33171,
      33193,
      33200,
      33205,
      33214,
      33208,
      33213,
      33216,
      33218,
      33210,
      33225,
      33229,
      33233,
      33241,
      33240,
      33224,
      33242,
      33247,
      33248,
      33255,
      33274,
      33275,
      33278,
      33281,
      33282,
      33285,
      33287,
      33290,
      33293,
      33296,
      33302,
      33321,
      33323,
      33336,
      33331,
      33344,
      33369,
      33368,
      33373,
      33370,
      33375,
      33380,
      33378,
      33384,
      33386,
      33387,
      33326,
      33393,
      33399,
      33400,
      33406,
      33421,
      33426,
      33451,
      33439,
      33467,
      33452,
      33505,
      33507,
      33503,
      33490,
      33524,
      33523,
      33530,
      33683,
      33539,
      33531,
      33529,
      33502,
      33542,
      33500,
      33545,
      33497,
      33589,
      33588,
      33558,
      33586,
      33585,
      33600,
      33593,
      33616,
      33605,
      33583,
      33579,
      33559,
      33560,
      33669,
      33690,
      33706,
      33695,
      33698,
      33686,
      33571,
      33678,
      33671,
      33674,
      33660,
      33717,
      33651,
      33653,
      33696,
      33673,
      33704,
      33780,
      33811,
      33771,
      33742,
      33789,
      33795,
      33752,
      33803,
      33729,
      33783,
      33799,
      33760,
      33778,
      33805,
      33826,
      33824,
      33725,
      33848,
      34054,
      33787,
      33901,
      33834,
      33852,
      34138,
      33924,
      33911,
      33899,
      33965,
      33902,
      33922,
      33897,
      33862,
      33836,
      33903,
      33913,
      33845,
      33994,
      33890,
      33977,
      33983,
      33951,
      34009,
      33997,
      33979,
      34010,
      34000,
      33985,
      33990,
      34006,
      33953,
      34081,
      34047,
      34036,
      34071,
      34072,
      34092,
      34079,
      34069,
      34068,
      34044,
      34112,
      34147,
      34136,
      34120,
      34113,
      34306,
      34123,
      34133,
      34176,
      34212,
      34184,
      34193,
      34186,
      34216,
      34157,
      34196,
      34203,
      34282,
      34183,
      34204,
      34167,
      34174,
      34192,
      34249,
      34234,
      34255,
      34233,
      34256,
      34261,
      34269,
      34277,
      34268,
      34297,
      34314,
      34323,
      34315,
      34302,
      34298,
      34310,
      34338,
      34330,
      34352,
      34367,
      34381,
      20053,
      34388,
      34399,
      34407,
      34417,
      34451,
      34467,
      34473,
      34474,
      34443,
      34444,
      34486,
      34479,
      34500,
      34502,
      34480,
      34505,
      34851,
      34475,
      34516,
      34526,
      34537,
      34540,
      34527,
      34523,
      34543,
      34578,
      34566,
      34568,
      34560,
      34563,
      34555,
      34577,
      34569,
      34573,
      34553,
      34570,
      34612,
      34623,
      34615,
      34619,
      34597,
      34601,
      34586,
      34656,
      34655,
      34680,
      34636,
      34638,
      34676,
      34647,
      34664,
      34670,
      34649,
      34643,
      34659,
      34666,
      34821,
      34722,
      34719,
      34690,
      34735,
      34763,
      34749,
      34752,
      34768,
      38614,
      34731,
      34756,
      34739,
      34759,
      34758,
      34747,
      34799,
      34802,
      34784,
      34831,
      34829,
      34814,
      34806,
      34807,
      34830,
      34770,
      34833,
      34838,
      34837,
      34850,
      34849,
      34865,
      34870,
      34873,
      34855,
      34875,
      34884,
      34882,
      34898,
      34905,
      34910,
      34914,
      34923,
      34945,
      34942,
      34974,
      34933,
      34941,
      34997,
      34930,
      34946,
      34967,
      34962,
      34990,
      34969,
      34978,
      34957,
      34980,
      34992,
      35007,
      34993,
      35011,
      35012,
      35028,
      35032,
      35033,
      35037,
      35065,
      35074,
      35068,
      35060,
      35048,
      35058,
      35076,
      35084,
      35082,
      35091,
      35139,
      35102,
      35109,
      35114,
      35115,
      35137,
      35140,
      35131,
      35126,
      35128,
      35148,
      35101,
      35168,
      35166,
      35174,
      35172,
      35181,
      35178,
      35183,
      35188,
      35191,
      35198,
      35203,
      35208,
      35210,
      35219,
      35224,
      35233,
      35241,
      35238,
      35244,
      35247,
      35250,
      35258,
      35261,
      35263,
      35264,
      35290,
      35292,
      35293,
      35303,
      35316,
      35320,
      35331,
      35350,
      35344,
      35340,
      35355,
      35357,
      35365,
      35382,
      35393,
      35419,
      35410,
      35398,
      35400,
      35452,
      35437,
      35436,
      35426,
      35461,
      35458,
      35460,
      35496,
      35489,
      35473,
      35493,
      35494,
      35482,
      35491,
      35524,
      35533,
      35522,
      35546,
      35563,
      35571,
      35559,
      35556,
      35569,
      35604,
      35552,
      35554,
      35575,
      35550,
      35547,
      35596,
      35591,
      35610,
      35553,
      35606,
      35600,
      35607,
      35616,
      35635,
      38827,
      35622,
      35627,
      35646,
      35624,
      35649,
      35660,
      35663,
      35662,
      35657,
      35670,
      35675,
      35674,
      35691,
      35679,
      35692,
      35695,
      35700,
      35709,
      35712,
      35724,
      35726,
      35730,
      35731,
      35734,
      35737,
      35738,
      35898,
      35905,
      35903,
      35912,
      35916,
      35918,
      35920,
      35925,
      35938,
      35948,
      35960,
      35962,
      35970,
      35977,
      35973,
      35978,
      35981,
      35982,
      35988,
      35964,
      35992,
      25117,
      36013,
      36010,
      36029,
      36018,
      36019,
      36014,
      36022,
      36040,
      36033,
      36068,
      36067,
      36058,
      36093,
      36090,
      36091,
      36100,
      36101,
      36106,
      36103,
      36111,
      36109,
      36112,
      40782,
      36115,
      36045,
      36116,
      36118,
      36199,
      36205,
      36209,
      36211,
      36225,
      36249,
      36290,
      36286,
      36282,
      36303,
      36314,
      36310,
      36300,
      36315,
      36299,
      36330,
      36331,
      36319,
      36323,
      36348,
      36360,
      36361,
      36351,
      36381,
      36382,
      36368,
      36383,
      36418,
      36405,
      36400,
      36404,
      36426,
      36423,
      36425,
      36428,
      36432,
      36424,
      36441,
      36452,
      36448,
      36394,
      36451,
      36437,
      36470,
      36466,
      36476,
      36481,
      36487,
      36485,
      36484,
      36491,
      36490,
      36499,
      36497,
      36500,
      36505,
      36522,
      36513,
      36524,
      36528,
      36550,
      36529,
      36542,
      36549,
      36552,
      36555,
      36571,
      36579,
      36604,
      36603,
      36587,
      36606,
      36618,
      36613,
      36629,
      36626,
      36633,
      36627,
      36636,
      36639,
      36635,
      36620,
      36646,
      36659,
      36667,
      36665,
      36677,
      36674,
      36670,
      36684,
      36681,
      36678,
      36686,
      36695,
      36700,
      36706,
      36707,
      36708,
      36764,
      36767,
      36771,
      36781,
      36783,
      36791,
      36826,
      36837,
      36834,
      36842,
      36847,
      36999,
      36852,
      36869,
      36857,
      36858,
      36881,
      36885,
      36897,
      36877,
      36894,
      36886,
      36875,
      36903,
      36918,
      36917,
      36921,
      36856,
      36943,
      36944,
      36945,
      36946,
      36878,
      36937,
      36926,
      36950,
      36952,
      36958,
      36968,
      36975,
      36982,
      38568,
      36978,
      36994,
      36989,
      36993,
      36992,
      37002,
      37001,
      37007,
      37032,
      37039,
      37041,
      37045,
      37090,
      37092,
      25160,
      37083,
      37122,
      37138,
      37145,
      37170,
      37168,
      37194,
      37206,
      37208,
      37219,
      37221,
      37225,
      37235,
      37234,
      37259,
      37257,
      37250,
      37282,
      37291,
      37295,
      37290,
      37301,
      37300,
      37306,
      37312,
      37313,
      37321,
      37323,
      37328,
      37334,
      37343,
      37345,
      37339,
      37372,
      37365,
      37366,
      37406,
      37375,
      37396,
      37420,
      37397,
      37393,
      37470,
      37463,
      37445,
      37449,
      37476,
      37448,
      37525,
      37439,
      37451,
      37456,
      37532,
      37526,
      37523,
      37531,
      37466,
      37583,
      37561,
      37559,
      37609,
      37647,
      37626,
      37700,
      37678,
      37657,
      37666,
      37658,
      37667,
      37690,
      37685,
      37691,
      37724,
      37728,
      37756,
      37742,
      37718,
      37808,
      37804,
      37805,
      37780,
      37817,
      37846,
      37847,
      37864,
      37861,
      37848,
      37827,
      37853,
      37840,
      37832,
      37860,
      37914,
      37908,
      37907,
      37891,
      37895,
      37904,
      37942,
      37931,
      37941,
      37921,
      37946,
      37953,
      37970,
      37956,
      37979,
      37984,
      37986,
      37982,
      37994,
      37417,
      38000,
      38005,
      38007,
      38013,
      37978,
      38012,
      38014,
      38017,
      38015,
      38274,
      38279,
      38282,
      38292,
      38294,
      38296,
      38297,
      38304,
      38312,
      38311,
      38317,
      38332,
      38331,
      38329,
      38334,
      38346,
      28662,
      38339,
      38349,
      38348,
      38357,
      38356,
      38358,
      38364,
      38369,
      38373,
      38370,
      38433,
      38440,
      38446,
      38447,
      38466,
      38476,
      38479,
      38475,
      38519,
      38492,
      38494,
      38493,
      38495,
      38502,
      38514,
      38508,
      38541,
      38552,
      38549,
      38551,
      38570,
      38567,
      38577,
      38578,
      38576,
      38580,
      38582,
      38584,
      38585,
      38606,
      38603,
      38601,
      38605,
      35149,
      38620,
      38669,
      38613,
      38649,
      38660,
      38662,
      38664,
      38675,
      38670,
      38673,
      38671,
      38678,
      38681,
      38692,
      38698,
      38704,
      38713,
      38717,
      38718,
      38724,
      38726,
      38728,
      38722,
      38729,
      38748,
      38752,
      38756,
      38758,
      38760,
      21202,
      38763,
      38769,
      38777,
      38789,
      38780,
      38785,
      38778,
      38790,
      38795,
      38799,
      38800,
      38812,
      38824,
      38822,
      38819,
      38835,
      38836,
      38851,
      38854,
      38856,
      38859,
      38876,
      38893,
      40783,
      38898,
      31455,
      38902,
      38901,
      38927,
      38924,
      38968,
      38948,
      38945,
      38967,
      38973,
      38982,
      38991,
      38987,
      39019,
      39023,
      39024,
      39025,
      39028,
      39027,
      39082,
      39087,
      39089,
      39094,
      39108,
      39107,
      39110,
      39145,
      39147,
      39171,
      39177,
      39186,
      39188,
      39192,
      39201,
      39197,
      39198,
      39204,
      39200,
      39212,
      39214,
      39229,
      39230,
      39234,
      39241,
      39237,
      39248,
      39243,
      39249,
      39250,
      39244,
      39253,
      39319,
      39320,
      39333,
      39341,
      39342,
      39356,
      39391,
      39387,
      39389,
      39384,
      39377,
      39405,
      39406,
      39409,
      39410,
      39419,
      39416,
      39425,
      39439,
      39429,
      39394,
      39449,
      39467,
      39479,
      39493,
      39490,
      39488,
      39491,
      39486,
      39509,
      39501,
      39515,
      39511,
      39519,
      39522,
      39525,
      39524,
      39529,
      39531,
      39530,
      39597,
      39600,
      39612,
      39616,
      39631,
      39633,
      39635,
      39636,
      39646,
      39647,
      39650,
      39651,
      39654,
      39663,
      39659,
      39662,
      39668,
      39665,
      39671,
      39675,
      39686,
      39704,
      39706,
      39711,
      39714,
      39715,
      39717,
      39719,
      39720,
      39721,
      39722,
      39726,
      39727,
      39730,
      39748,
      39747,
      39759,
      39757,
      39758,
      39761,
      39768,
      39796,
      39827,
      39811,
      39825,
      39830,
      39831,
      39839,
      39840,
      39848,
      39860,
      39872,
      39882,
      39865,
      39878,
      39887,
      39889,
      39890,
      39907,
      39906,
      39908,
      39892,
      39905,
      39994,
      39922,
      39921,
      39920,
      39957,
      39956,
      39945,
      39955,
      39948,
      39942,
      39944,
      39954,
      39946,
      39940,
      39982,
      39963,
      39973,
      39972,
      39969,
      39984,
      40007,
      39986,
      40006,
      39998,
      40026,
      40032,
      40039,
      40054,
      40056,
      40167,
      40172,
      40176,
      40201,
      40200,
      40171,
      40195,
      40198,
      40234,
      40230,
      40367,
      40227,
      40223,
      40260,
      40213,
      40210,
      40257,
      40255,
      40254,
      40262,
      40264,
      40285,
      40286,
      40292,
      40273,
      40272,
      40281,
      40306,
      40329,
      40327,
      40363,
      40303,
      40314,
      40346,
      40356,
      40361,
      40370,
      40388,
      40385,
      40379,
      40376,
      40378,
      40390,
      40399,
      40386,
      40409,
      40403,
      40440,
      40422,
      40429,
      40431,
      40445,
      40474,
      40475,
      40478,
      40565,
      40569,
      40573,
      40577,
      40584,
      40587,
      40588,
      40594,
      40597,
      40593,
      40605,
      40613,
      40617,
      40632,
      40618,
      40621,
      38753,
      40652,
      40654,
      40655,
      40656,
      40660,
      40668,
      40670,
      40669,
      40672,
      40677,
      40680,
      40687,
      40692,
      40694,
      40695,
      40697,
      40699,
      40700,
      40701,
      40711,
      40712,
      30391,
      40725,
      40737,
      40748,
      40766,
      40778,
      40786,
      40788,
      40803,
      40799,
      40800,
      40801,
      40806,
      40807,
      40812,
      40810,
      40823,
      40818,
      40822,
      40853,
      40860,
      40864,
      22575,
      27079,
      36953,
      29796,
      20956,
      29081,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      32394,
      35100,
      37704,
      37512,
      34012,
      20425,
      28859,
      26161,
      26824,
      37625,
      26363,
      24389,
      20008,
      20193,
      20220,
      20224,
      20227,
      20281,
      20310,
      20370,
      20362,
      20378,
      20372,
      20429,
      20544,
      20514,
      20479,
      20510,
      20550,
      20592,
      20546,
      20628,
      20724,
      20696,
      20810,
      20836,
      20893,
      20926,
      20972,
      21013,
      21148,
      21158,
      21184,
      21211,
      21248,
      21255,
      21284,
      21362,
      21395,
      21426,
      21469,
      64014,
      21660,
      21642,
      21673,
      21759,
      21894,
      22361,
      22373,
      22444,
      22472,
      22471,
      64015,
      64016,
      22686,
      22706,
      22795,
      22867,
      22875,
      22877,
      22883,
      22948,
      22970,
      23382,
      23488,
      29999,
      23512,
      23532,
      23582,
      23718,
      23738,
      23797,
      23847,
      23891,
      64017,
      23874,
      23917,
      23992,
      23993,
      24016,
      24353,
      24372,
      24423,
      24503,
      24542,
      24669,
      24709,
      24714,
      24798,
      24789,
      24864,
      24818,
      24849,
      24887,
      24880,
      24984,
      25107,
      25254,
      25589,
      25696,
      25757,
      25806,
      25934,
      26112,
      26133,
      26171,
      26121,
      26158,
      26142,
      26148,
      26213,
      26199,
      26201,
      64018,
      26227,
      26265,
      26272,
      26290,
      26303,
      26362,
      26382,
      63785,
      26470,
      26555,
      26706,
      26560,
      26625,
      26692,
      26831,
      64019,
      26984,
      64020,
      27032,
      27106,
      27184,
      27243,
      27206,
      27251,
      27262,
      27362,
      27364,
      27606,
      27711,
      27740,
      27782,
      27759,
      27866,
      27908,
      28039,
      28015,
      28054,
      28076,
      28111,
      28152,
      28146,
      28156,
      28217,
      28252,
      28199,
      28220,
      28351,
      28552,
      28597,
      28661,
      28677,
      28679,
      28712,
      28805,
      28843,
      28943,
      28932,
      29020,
      28998,
      28999,
      64021,
      29121,
      29182,
      29361,
      29374,
      29476,
      64022,
      29559,
      29629,
      29641,
      29654,
      29667,
      29650,
      29703,
      29685,
      29734,
      29738,
      29737,
      29742,
      29794,
      29833,
      29855,
      29953,
      30063,
      30338,
      30364,
      30366,
      30363,
      30374,
      64023,
      30534,
      21167,
      30753,
      30798,
      30820,
      30842,
      31024,
      64024,
      64025,
      64026,
      31124,
      64027,
      31131,
      31441,
      31463,
      64028,
      31467,
      31646,
      64029,
      32072,
      32092,
      32183,
      32160,
      32214,
      32338,
      32583,
      32673,
      64030,
      33537,
      33634,
      33663,
      33735,
      33782,
      33864,
      33972,
      34131,
      34137,
      34155,
      64031,
      34224,
      64032,
      64033,
      34823,
      35061,
      35346,
      35383,
      35449,
      35495,
      35518,
      35551,
      64034,
      35574,
      35667,
      35711,
      36080,
      36084,
      36114,
      36214,
      64035,
      36559,
      64036,
      64037,
      36967,
      37086,
      64038,
      37141,
      37159,
      37338,
      37335,
      37342,
      37357,
      37358,
      37348,
      37349,
      37382,
      37392,
      37386,
      37434,
      37440,
      37436,
      37454,
      37465,
      37457,
      37433,
      37479,
      37543,
      37495,
      37496,
      37607,
      37591,
      37593,
      37584,
      64039,
      37589,
      37600,
      37587,
      37669,
      37665,
      37627,
      64040,
      37662,
      37631,
      37661,
      37634,
      37744,
      37719,
      37796,
      37830,
      37854,
      37880,
      37937,
      37957,
      37960,
      38290,
      63964,
      64041,
      38557,
      38575,
      38707,
      38715,
      38723,
      38733,
      38735,
      38737,
      38741,
      38999,
      39013,
      64042,
      64043,
      39207,
      64044,
      39326,
      39502,
      39641,
      39644,
      39797,
      39794,
      39823,
      39857,
      39867,
      39936,
      40304,
      40299,
      64045,
      40473,
      40657,
      null,
      null,
      8560,
      8561,
      8562,
      8563,
      8564,
      8565,
      8566,
      8567,
      8568,
      8569,
      65506,
      65508,
      65287,
      65282,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      8560,
      8561,
      8562,
      8563,
      8564,
      8565,
      8566,
      8567,
      8568,
      8569,
      8544,
      8545,
      8546,
      8547,
      8548,
      8549,
      8550,
      8551,
      8552,
      8553,
      65506,
      65508,
      65287,
      65282,
      12849,
      8470,
      8481,
      8757,
      32394,
      35100,
      37704,
      37512,
      34012,
      20425,
      28859,
      26161,
      26824,
      37625,
      26363,
      24389,
      20008,
      20193,
      20220,
      20224,
      20227,
      20281,
      20310,
      20370,
      20362,
      20378,
      20372,
      20429,
      20544,
      20514,
      20479,
      20510,
      20550,
      20592,
      20546,
      20628,
      20724,
      20696,
      20810,
      20836,
      20893,
      20926,
      20972,
      21013,
      21148,
      21158,
      21184,
      21211,
      21248,
      21255,
      21284,
      21362,
      21395,
      21426,
      21469,
      64014,
      21660,
      21642,
      21673,
      21759,
      21894,
      22361,
      22373,
      22444,
      22472,
      22471,
      64015,
      64016,
      22686,
      22706,
      22795,
      22867,
      22875,
      22877,
      22883,
      22948,
      22970,
      23382,
      23488,
      29999,
      23512,
      23532,
      23582,
      23718,
      23738,
      23797,
      23847,
      23891,
      64017,
      23874,
      23917,
      23992,
      23993,
      24016,
      24353,
      24372,
      24423,
      24503,
      24542,
      24669,
      24709,
      24714,
      24798,
      24789,
      24864,
      24818,
      24849,
      24887,
      24880,
      24984,
      25107,
      25254,
      25589,
      25696,
      25757,
      25806,
      25934,
      26112,
      26133,
      26171,
      26121,
      26158,
      26142,
      26148,
      26213,
      26199,
      26201,
      64018,
      26227,
      26265,
      26272,
      26290,
      26303,
      26362,
      26382,
      63785,
      26470,
      26555,
      26706,
      26560,
      26625,
      26692,
      26831,
      64019,
      26984,
      64020,
      27032,
      27106,
      27184,
      27243,
      27206,
      27251,
      27262,
      27362,
      27364,
      27606,
      27711,
      27740,
      27782,
      27759,
      27866,
      27908,
      28039,
      28015,
      28054,
      28076,
      28111,
      28152,
      28146,
      28156,
      28217,
      28252,
      28199,
      28220,
      28351,
      28552,
      28597,
      28661,
      28677,
      28679,
      28712,
      28805,
      28843,
      28943,
      28932,
      29020,
      28998,
      28999,
      64021,
      29121,
      29182,
      29361,
      29374,
      29476,
      64022,
      29559,
      29629,
      29641,
      29654,
      29667,
      29650,
      29703,
      29685,
      29734,
      29738,
      29737,
      29742,
      29794,
      29833,
      29855,
      29953,
      30063,
      30338,
      30364,
      30366,
      30363,
      30374,
      64023,
      30534,
      21167,
      30753,
      30798,
      30820,
      30842,
      31024,
      64024,
      64025,
      64026,
      31124,
      64027,
      31131,
      31441,
      31463,
      64028,
      31467,
      31646,
      64029,
      32072,
      32092,
      32183,
      32160,
      32214,
      32338,
      32583,
      32673,
      64030,
      33537,
      33634,
      33663,
      33735,
      33782,
      33864,
      33972,
      34131,
      34137,
      34155,
      64031,
      34224,
      64032,
      64033,
      34823,
      35061,
      35346,
      35383,
      35449,
      35495,
      35518,
      35551,
      64034,
      35574,
      35667,
      35711,
      36080,
      36084,
      36114,
      36214,
      64035,
      36559,
      64036,
      64037,
      36967,
      37086,
      64038,
      37141,
      37159,
      37338,
      37335,
      37342,
      37357,
      37358,
      37348,
      37349,
      37382,
      37392,
      37386,
      37434,
      37440,
      37436,
      37454,
      37465,
      37457,
      37433,
      37479,
      37543,
      37495,
      37496,
      37607,
      37591,
      37593,
      37584,
      64039,
      37589,
      37600,
      37587,
      37669,
      37665,
      37627,
      64040,
      37662,
      37631,
      37661,
      37634,
      37744,
      37719,
      37796,
      37830,
      37854,
      37880,
      37937,
      37957,
      37960,
      38290,
      63964,
      64041,
      38557,
      38575,
      38707,
      38715,
      38723,
      38733,
      38735,
      38737,
      38741,
      38999,
      39013,
      64042,
      64043,
      39207,
      64044,
      39326,
      39502,
      39641,
      39644,
      39797,
      39794,
      39823,
      39857,
      39867,
      39936,
      40304,
      40299,
      64045,
      40473,
      40657,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
    ],
    jis0212: [
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      728,
      711,
      184,
      729,
      733,
      175,
      731,
      730,
      65374,
      900,
      901,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      161,
      166,
      191,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      186,
      170,
      169,
      174,
      8482,
      164,
      8470,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      902,
      904,
      905,
      906,
      938,
      null,
      908,
      null,
      910,
      939,
      null,
      911,
      null,
      null,
      null,
      null,
      940,
      941,
      942,
      943,
      970,
      912,
      972,
      962,
      973,
      971,
      944,
      974,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      1026,
      1027,
      1028,
      1029,
      1030,
      1031,
      1032,
      1033,
      1034,
      1035,
      1036,
      1038,
      1039,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      1106,
      1107,
      1108,
      1109,
      1110,
      1111,
      1112,
      1113,
      1114,
      1115,
      1116,
      1118,
      1119,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      198,
      272,
      null,
      294,
      null,
      306,
      null,
      321,
      319,
      null,
      330,
      216,
      338,
      null,
      358,
      222,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      230,
      273,
      240,
      295,
      305,
      307,
      312,
      322,
      320,
      329,
      331,
      248,
      339,
      223,
      359,
      254,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      193,
      192,
      196,
      194,
      258,
      461,
      256,
      260,
      197,
      195,
      262,
      264,
      268,
      199,
      266,
      270,
      201,
      200,
      203,
      202,
      282,
      278,
      274,
      280,
      null,
      284,
      286,
      290,
      288,
      292,
      205,
      204,
      207,
      206,
      463,
      304,
      298,
      302,
      296,
      308,
      310,
      313,
      317,
      315,
      323,
      327,
      325,
      209,
      211,
      210,
      214,
      212,
      465,
      336,
      332,
      213,
      340,
      344,
      342,
      346,
      348,
      352,
      350,
      356,
      354,
      218,
      217,
      220,
      219,
      364,
      467,
      368,
      362,
      370,
      366,
      360,
      471,
      475,
      473,
      469,
      372,
      221,
      376,
      374,
      377,
      381,
      379,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      225,
      224,
      228,
      226,
      259,
      462,
      257,
      261,
      229,
      227,
      263,
      265,
      269,
      231,
      267,
      271,
      233,
      232,
      235,
      234,
      283,
      279,
      275,
      281,
      501,
      285,
      287,
      null,
      289,
      293,
      237,
      236,
      239,
      238,
      464,
      null,
      299,
      303,
      297,
      309,
      311,
      314,
      318,
      316,
      324,
      328,
      326,
      241,
      243,
      242,
      246,
      244,
      466,
      337,
      333,
      245,
      341,
      345,
      343,
      347,
      349,
      353,
      351,
      357,
      355,
      250,
      249,
      252,
      251,
      365,
      468,
      369,
      363,
      371,
      367,
      361,
      472,
      476,
      474,
      470,
      373,
      253,
      255,
      375,
      378,
      382,
      380,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      19970,
      19972,
      19973,
      19980,
      19986,
      19999,
      20003,
      20004,
      20008,
      20011,
      20014,
      20015,
      20016,
      20021,
      20032,
      20033,
      20036,
      20039,
      20049,
      20058,
      20060,
      20067,
      20072,
      20073,
      20084,
      20085,
      20089,
      20095,
      20109,
      20118,
      20119,
      20125,
      20143,
      20153,
      20163,
      20176,
      20186,
      20187,
      20192,
      20193,
      20194,
      20200,
      20207,
      20209,
      20211,
      20213,
      20221,
      20222,
      20223,
      20224,
      20226,
      20227,
      20232,
      20235,
      20236,
      20242,
      20245,
      20246,
      20247,
      20249,
      20270,
      20273,
      20320,
      20275,
      20277,
      20279,
      20281,
      20283,
      20286,
      20288,
      20290,
      20296,
      20297,
      20299,
      20300,
      20306,
      20308,
      20310,
      20312,
      20319,
      20323,
      20330,
      20332,
      20334,
      20337,
      20343,
      20344,
      20345,
      20346,
      20349,
      20350,
      20353,
      20354,
      20356,
      20357,
      20361,
      20362,
      20364,
      20366,
      20368,
      20370,
      20371,
      20372,
      20375,
      20377,
      20378,
      20382,
      20383,
      20402,
      20407,
      20409,
      20411,
      20412,
      20413,
      20414,
      20416,
      20417,
      20421,
      20422,
      20424,
      20425,
      20427,
      20428,
      20429,
      20431,
      20434,
      20444,
      20448,
      20450,
      20464,
      20466,
      20476,
      20477,
      20479,
      20480,
      20481,
      20484,
      20487,
      20490,
      20492,
      20494,
      20496,
      20499,
      20503,
      20504,
      20507,
      20508,
      20509,
      20510,
      20514,
      20519,
      20526,
      20528,
      20530,
      20531,
      20533,
      20544,
      20545,
      20546,
      20549,
      20550,
      20554,
      20556,
      20558,
      20561,
      20562,
      20563,
      20567,
      20569,
      20575,
      20576,
      20578,
      20579,
      20582,
      20583,
      20586,
      20589,
      20592,
      20593,
      20539,
      20609,
      20611,
      20612,
      20614,
      20618,
      20622,
      20623,
      20624,
      20626,
      20627,
      20628,
      20630,
      20635,
      20636,
      20638,
      20639,
      20640,
      20641,
      20642,
      20650,
      20655,
      20656,
      20665,
      20666,
      20669,
      20672,
      20675,
      20676,
      20679,
      20684,
      20686,
      20688,
      20691,
      20692,
      20696,
      20700,
      20701,
      20703,
      20706,
      20708,
      20710,
      20712,
      20713,
      20719,
      20721,
      20726,
      20730,
      20734,
      20739,
      20742,
      20743,
      20744,
      20747,
      20748,
      20749,
      20750,
      20722,
      20752,
      20759,
      20761,
      20763,
      20764,
      20765,
      20766,
      20771,
      20775,
      20776,
      20780,
      20781,
      20783,
      20785,
      20787,
      20788,
      20789,
      20792,
      20793,
      20802,
      20810,
      20815,
      20819,
      20821,
      20823,
      20824,
      20831,
      20836,
      20838,
      20862,
      20867,
      20868,
      20875,
      20878,
      20888,
      20893,
      20897,
      20899,
      20909,
      20920,
      20922,
      20924,
      20926,
      20927,
      20930,
      20936,
      20943,
      20945,
      20946,
      20947,
      20949,
      20952,
      20958,
      20962,
      20965,
      20974,
      20978,
      20979,
      20980,
      20983,
      20993,
      20994,
      20997,
      21010,
      21011,
      21013,
      21014,
      21016,
      21026,
      21032,
      21041,
      21042,
      21045,
      21052,
      21061,
      21065,
      21077,
      21079,
      21080,
      21082,
      21084,
      21087,
      21088,
      21089,
      21094,
      21102,
      21111,
      21112,
      21113,
      21120,
      21122,
      21125,
      21130,
      21132,
      21139,
      21141,
      21142,
      21143,
      21144,
      21146,
      21148,
      21156,
      21157,
      21158,
      21159,
      21167,
      21168,
      21174,
      21175,
      21176,
      21178,
      21179,
      21181,
      21184,
      21188,
      21190,
      21192,
      21196,
      21199,
      21201,
      21204,
      21206,
      21211,
      21212,
      21217,
      21221,
      21224,
      21225,
      21226,
      21228,
      21232,
      21233,
      21236,
      21238,
      21239,
      21248,
      21251,
      21258,
      21259,
      21260,
      21265,
      21267,
      21272,
      21275,
      21276,
      21278,
      21279,
      21285,
      21287,
      21288,
      21289,
      21291,
      21292,
      21293,
      21296,
      21298,
      21301,
      21308,
      21309,
      21310,
      21314,
      21324,
      21323,
      21337,
      21339,
      21345,
      21347,
      21349,
      21356,
      21357,
      21362,
      21369,
      21374,
      21379,
      21383,
      21384,
      21390,
      21395,
      21396,
      21401,
      21405,
      21409,
      21412,
      21418,
      21419,
      21423,
      21426,
      21428,
      21429,
      21431,
      21432,
      21434,
      21437,
      21440,
      21445,
      21455,
      21458,
      21459,
      21461,
      21466,
      21469,
      21470,
      21472,
      21478,
      21479,
      21493,
      21506,
      21523,
      21530,
      21537,
      21543,
      21544,
      21546,
      21551,
      21553,
      21556,
      21557,
      21571,
      21572,
      21575,
      21581,
      21583,
      21598,
      21602,
      21604,
      21606,
      21607,
      21609,
      21611,
      21613,
      21614,
      21620,
      21631,
      21633,
      21635,
      21637,
      21640,
      21641,
      21645,
      21649,
      21653,
      21654,
      21660,
      21663,
      21665,
      21670,
      21671,
      21673,
      21674,
      21677,
      21678,
      21681,
      21687,
      21689,
      21690,
      21691,
      21695,
      21702,
      21706,
      21709,
      21710,
      21728,
      21738,
      21740,
      21743,
      21750,
      21756,
      21758,
      21759,
      21760,
      21761,
      21765,
      21768,
      21769,
      21772,
      21773,
      21774,
      21781,
      21802,
      21803,
      21810,
      21813,
      21814,
      21819,
      21820,
      21821,
      21825,
      21831,
      21833,
      21834,
      21837,
      21840,
      21841,
      21848,
      21850,
      21851,
      21854,
      21856,
      21857,
      21860,
      21862,
      21887,
      21889,
      21890,
      21894,
      21896,
      21902,
      21903,
      21905,
      21906,
      21907,
      21908,
      21911,
      21923,
      21924,
      21933,
      21938,
      21951,
      21953,
      21955,
      21958,
      21961,
      21963,
      21964,
      21966,
      21969,
      21970,
      21971,
      21975,
      21976,
      21979,
      21982,
      21986,
      21993,
      22006,
      22015,
      22021,
      22024,
      22026,
      22029,
      22030,
      22031,
      22032,
      22033,
      22034,
      22041,
      22060,
      22064,
      22067,
      22069,
      22071,
      22073,
      22075,
      22076,
      22077,
      22079,
      22080,
      22081,
      22083,
      22084,
      22086,
      22089,
      22091,
      22093,
      22095,
      22100,
      22110,
      22112,
      22113,
      22114,
      22115,
      22118,
      22121,
      22125,
      22127,
      22129,
      22130,
      22133,
      22148,
      22149,
      22152,
      22155,
      22156,
      22165,
      22169,
      22170,
      22173,
      22174,
      22175,
      22182,
      22183,
      22184,
      22185,
      22187,
      22188,
      22189,
      22193,
      22195,
      22199,
      22206,
      22213,
      22217,
      22218,
      22219,
      22223,
      22224,
      22220,
      22221,
      22233,
      22236,
      22237,
      22239,
      22241,
      22244,
      22245,
      22246,
      22247,
      22248,
      22257,
      22251,
      22253,
      22262,
      22263,
      22273,
      22274,
      22279,
      22282,
      22284,
      22289,
      22293,
      22298,
      22299,
      22301,
      22304,
      22306,
      22307,
      22308,
      22309,
      22313,
      22314,
      22316,
      22318,
      22319,
      22323,
      22324,
      22333,
      22334,
      22335,
      22341,
      22342,
      22348,
      22349,
      22354,
      22370,
      22373,
      22375,
      22376,
      22379,
      22381,
      22382,
      22383,
      22384,
      22385,
      22387,
      22388,
      22389,
      22391,
      22393,
      22394,
      22395,
      22396,
      22398,
      22401,
      22403,
      22412,
      22420,
      22423,
      22425,
      22426,
      22428,
      22429,
      22430,
      22431,
      22433,
      22421,
      22439,
      22440,
      22441,
      22444,
      22456,
      22461,
      22471,
      22472,
      22476,
      22479,
      22485,
      22493,
      22494,
      22500,
      22502,
      22503,
      22505,
      22509,
      22512,
      22517,
      22518,
      22520,
      22525,
      22526,
      22527,
      22531,
      22532,
      22536,
      22537,
      22497,
      22540,
      22541,
      22555,
      22558,
      22559,
      22560,
      22566,
      22567,
      22573,
      22578,
      22585,
      22591,
      22601,
      22604,
      22605,
      22607,
      22608,
      22613,
      22623,
      22625,
      22628,
      22631,
      22632,
      22648,
      22652,
      22655,
      22656,
      22657,
      22663,
      22664,
      22665,
      22666,
      22668,
      22669,
      22671,
      22672,
      22676,
      22678,
      22685,
      22688,
      22689,
      22690,
      22694,
      22697,
      22705,
      22706,
      22724,
      22716,
      22722,
      22728,
      22733,
      22734,
      22736,
      22738,
      22740,
      22742,
      22746,
      22749,
      22753,
      22754,
      22761,
      22771,
      22789,
      22790,
      22795,
      22796,
      22802,
      22803,
      22804,
      34369,
      22813,
      22817,
      22819,
      22820,
      22824,
      22831,
      22832,
      22835,
      22837,
      22838,
      22847,
      22851,
      22854,
      22866,
      22867,
      22873,
      22875,
      22877,
      22878,
      22879,
      22881,
      22883,
      22891,
      22893,
      22895,
      22898,
      22901,
      22902,
      22905,
      22907,
      22908,
      22923,
      22924,
      22926,
      22930,
      22933,
      22935,
      22943,
      22948,
      22951,
      22957,
      22958,
      22959,
      22960,
      22963,
      22967,
      22970,
      22972,
      22977,
      22979,
      22980,
      22984,
      22986,
      22989,
      22994,
      23005,
      23006,
      23007,
      23011,
      23012,
      23015,
      23022,
      23023,
      23025,
      23026,
      23028,
      23031,
      23040,
      23044,
      23052,
      23053,
      23054,
      23058,
      23059,
      23070,
      23075,
      23076,
      23079,
      23080,
      23082,
      23085,
      23088,
      23108,
      23109,
      23111,
      23112,
      23116,
      23120,
      23125,
      23134,
      23139,
      23141,
      23143,
      23149,
      23159,
      23162,
      23163,
      23166,
      23179,
      23184,
      23187,
      23190,
      23193,
      23196,
      23198,
      23199,
      23200,
      23202,
      23207,
      23212,
      23217,
      23218,
      23219,
      23221,
      23224,
      23226,
      23227,
      23231,
      23236,
      23238,
      23240,
      23247,
      23258,
      23260,
      23264,
      23269,
      23274,
      23278,
      23285,
      23286,
      23293,
      23296,
      23297,
      23304,
      23319,
      23348,
      23321,
      23323,
      23325,
      23329,
      23333,
      23341,
      23352,
      23361,
      23371,
      23372,
      23378,
      23382,
      23390,
      23400,
      23406,
      23407,
      23420,
      23421,
      23422,
      23423,
      23425,
      23428,
      23430,
      23434,
      23438,
      23440,
      23441,
      23443,
      23444,
      23446,
      23464,
      23465,
      23468,
      23469,
      23471,
      23473,
      23474,
      23479,
      23482,
      23484,
      23488,
      23489,
      23501,
      23503,
      23510,
      23511,
      23512,
      23513,
      23514,
      23520,
      23535,
      23537,
      23540,
      23549,
      23564,
      23575,
      23582,
      23583,
      23587,
      23590,
      23593,
      23595,
      23596,
      23598,
      23600,
      23602,
      23605,
      23606,
      23641,
      23642,
      23644,
      23650,
      23651,
      23655,
      23656,
      23657,
      23661,
      23664,
      23668,
      23669,
      23674,
      23675,
      23676,
      23677,
      23687,
      23688,
      23690,
      23695,
      23698,
      23709,
      23711,
      23712,
      23714,
      23715,
      23718,
      23722,
      23730,
      23732,
      23733,
      23738,
      23753,
      23755,
      23762,
      23773,
      23767,
      23790,
      23793,
      23794,
      23796,
      23809,
      23814,
      23821,
      23826,
      23851,
      23843,
      23844,
      23846,
      23847,
      23857,
      23860,
      23865,
      23869,
      23871,
      23874,
      23875,
      23878,
      23880,
      23893,
      23889,
      23897,
      23882,
      23903,
      23904,
      23905,
      23906,
      23908,
      23914,
      23917,
      23920,
      23929,
      23930,
      23934,
      23935,
      23937,
      23939,
      23944,
      23946,
      23954,
      23955,
      23956,
      23957,
      23961,
      23963,
      23967,
      23968,
      23975,
      23979,
      23984,
      23988,
      23992,
      23993,
      24003,
      24007,
      24011,
      24016,
      24014,
      24024,
      24025,
      24032,
      24036,
      24041,
      24056,
      24057,
      24064,
      24071,
      24077,
      24082,
      24084,
      24085,
      24088,
      24095,
      24096,
      24110,
      24104,
      24114,
      24117,
      24126,
      24139,
      24144,
      24137,
      24145,
      24150,
      24152,
      24155,
      24156,
      24158,
      24168,
      24170,
      24171,
      24172,
      24173,
      24174,
      24176,
      24192,
      24203,
      24206,
      24226,
      24228,
      24229,
      24232,
      24234,
      24236,
      24241,
      24243,
      24253,
      24254,
      24255,
      24262,
      24268,
      24267,
      24270,
      24273,
      24274,
      24276,
      24277,
      24284,
      24286,
      24293,
      24299,
      24322,
      24326,
      24327,
      24328,
      24334,
      24345,
      24348,
      24349,
      24353,
      24354,
      24355,
      24356,
      24360,
      24363,
      24364,
      24366,
      24368,
      24372,
      24374,
      24379,
      24381,
      24383,
      24384,
      24388,
      24389,
      24391,
      24397,
      24400,
      24404,
      24408,
      24411,
      24416,
      24419,
      24420,
      24423,
      24431,
      24434,
      24436,
      24437,
      24440,
      24442,
      24445,
      24446,
      24457,
      24461,
      24463,
      24470,
      24476,
      24477,
      24482,
      24487,
      24491,
      24484,
      24492,
      24495,
      24496,
      24497,
      24504,
      24516,
      24519,
      24520,
      24521,
      24523,
      24528,
      24529,
      24530,
      24531,
      24532,
      24542,
      24545,
      24546,
      24552,
      24553,
      24554,
      24556,
      24557,
      24558,
      24559,
      24562,
      24563,
      24566,
      24570,
      24572,
      24583,
      24586,
      24589,
      24595,
      24596,
      24599,
      24600,
      24602,
      24607,
      24612,
      24621,
      24627,
      24629,
      24640,
      24647,
      24648,
      24649,
      24652,
      24657,
      24660,
      24662,
      24663,
      24669,
      24673,
      24679,
      24689,
      24702,
      24703,
      24706,
      24710,
      24712,
      24714,
      24718,
      24721,
      24723,
      24725,
      24728,
      24733,
      24734,
      24738,
      24740,
      24741,
      24744,
      24752,
      24753,
      24759,
      24763,
      24766,
      24770,
      24772,
      24776,
      24777,
      24778,
      24779,
      24782,
      24783,
      24788,
      24789,
      24793,
      24795,
      24797,
      24798,
      24802,
      24805,
      24818,
      24821,
      24824,
      24828,
      24829,
      24834,
      24839,
      24842,
      24844,
      24848,
      24849,
      24850,
      24851,
      24852,
      24854,
      24855,
      24857,
      24860,
      24862,
      24866,
      24874,
      24875,
      24880,
      24881,
      24885,
      24886,
      24887,
      24889,
      24897,
      24901,
      24902,
      24905,
      24926,
      24928,
      24940,
      24946,
      24952,
      24955,
      24956,
      24959,
      24960,
      24961,
      24963,
      24964,
      24971,
      24973,
      24978,
      24979,
      24983,
      24984,
      24988,
      24989,
      24991,
      24992,
      24997,
      25000,
      25002,
      25005,
      25016,
      25017,
      25020,
      25024,
      25025,
      25026,
      25038,
      25039,
      25045,
      25052,
      25053,
      25054,
      25055,
      25057,
      25058,
      25063,
      25065,
      25061,
      25068,
      25069,
      25071,
      25089,
      25091,
      25092,
      25095,
      25107,
      25109,
      25116,
      25120,
      25122,
      25123,
      25127,
      25129,
      25131,
      25145,
      25149,
      25154,
      25155,
      25156,
      25158,
      25164,
      25168,
      25169,
      25170,
      25172,
      25174,
      25178,
      25180,
      25188,
      25197,
      25199,
      25203,
      25210,
      25213,
      25229,
      25230,
      25231,
      25232,
      25254,
      25256,
      25267,
      25270,
      25271,
      25274,
      25278,
      25279,
      25284,
      25294,
      25301,
      25302,
      25306,
      25322,
      25330,
      25332,
      25340,
      25341,
      25347,
      25348,
      25354,
      25355,
      25357,
      25360,
      25363,
      25366,
      25368,
      25385,
      25386,
      25389,
      25397,
      25398,
      25401,
      25404,
      25409,
      25410,
      25411,
      25412,
      25414,
      25418,
      25419,
      25422,
      25426,
      25427,
      25428,
      25432,
      25435,
      25445,
      25446,
      25452,
      25453,
      25457,
      25460,
      25461,
      25464,
      25468,
      25469,
      25471,
      25474,
      25476,
      25479,
      25482,
      25488,
      25492,
      25493,
      25497,
      25498,
      25502,
      25508,
      25510,
      25517,
      25518,
      25519,
      25533,
      25537,
      25541,
      25544,
      25550,
      25553,
      25555,
      25556,
      25557,
      25564,
      25568,
      25573,
      25578,
      25580,
      25586,
      25587,
      25589,
      25592,
      25593,
      25609,
      25610,
      25616,
      25618,
      25620,
      25624,
      25630,
      25632,
      25634,
      25636,
      25637,
      25641,
      25642,
      25647,
      25648,
      25653,
      25661,
      25663,
      25675,
      25679,
      25681,
      25682,
      25683,
      25684,
      25690,
      25691,
      25692,
      25693,
      25695,
      25696,
      25697,
      25699,
      25709,
      25715,
      25716,
      25723,
      25725,
      25733,
      25735,
      25743,
      25744,
      25745,
      25752,
      25753,
      25755,
      25757,
      25759,
      25761,
      25763,
      25766,
      25768,
      25772,
      25779,
      25789,
      25790,
      25791,
      25796,
      25801,
      25802,
      25803,
      25804,
      25806,
      25808,
      25809,
      25813,
      25815,
      25828,
      25829,
      25833,
      25834,
      25837,
      25840,
      25845,
      25847,
      25851,
      25855,
      25857,
      25860,
      25864,
      25865,
      25866,
      25871,
      25875,
      25876,
      25878,
      25881,
      25883,
      25886,
      25887,
      25890,
      25894,
      25897,
      25902,
      25905,
      25914,
      25916,
      25917,
      25923,
      25927,
      25929,
      25936,
      25938,
      25940,
      25951,
      25952,
      25959,
      25963,
      25978,
      25981,
      25985,
      25989,
      25994,
      26002,
      26005,
      26008,
      26013,
      26016,
      26019,
      26022,
      26030,
      26034,
      26035,
      26036,
      26047,
      26050,
      26056,
      26057,
      26062,
      26064,
      26068,
      26070,
      26072,
      26079,
      26096,
      26098,
      26100,
      26101,
      26105,
      26110,
      26111,
      26112,
      26116,
      26120,
      26121,
      26125,
      26129,
      26130,
      26133,
      26134,
      26141,
      26142,
      26145,
      26146,
      26147,
      26148,
      26150,
      26153,
      26154,
      26155,
      26156,
      26158,
      26160,
      26161,
      26163,
      26169,
      26167,
      26176,
      26181,
      26182,
      26186,
      26188,
      26193,
      26190,
      26199,
      26200,
      26201,
      26203,
      26204,
      26208,
      26209,
      26363,
      26218,
      26219,
      26220,
      26238,
      26227,
      26229,
      26239,
      26231,
      26232,
      26233,
      26235,
      26240,
      26236,
      26251,
      26252,
      26253,
      26256,
      26258,
      26265,
      26266,
      26267,
      26268,
      26271,
      26272,
      26276,
      26285,
      26289,
      26290,
      26293,
      26299,
      26303,
      26304,
      26306,
      26307,
      26312,
      26316,
      26318,
      26319,
      26324,
      26331,
      26335,
      26344,
      26347,
      26348,
      26350,
      26362,
      26373,
      26375,
      26382,
      26387,
      26393,
      26396,
      26400,
      26402,
      26419,
      26430,
      26437,
      26439,
      26440,
      26444,
      26452,
      26453,
      26461,
      26470,
      26476,
      26478,
      26484,
      26486,
      26491,
      26497,
      26500,
      26510,
      26511,
      26513,
      26515,
      26518,
      26520,
      26521,
      26523,
      26544,
      26545,
      26546,
      26549,
      26555,
      26556,
      26557,
      26617,
      26560,
      26562,
      26563,
      26565,
      26568,
      26569,
      26578,
      26583,
      26585,
      26588,
      26593,
      26598,
      26608,
      26610,
      26614,
      26615,
      26706,
      26644,
      26649,
      26653,
      26655,
      26664,
      26663,
      26668,
      26669,
      26671,
      26672,
      26673,
      26675,
      26683,
      26687,
      26692,
      26693,
      26698,
      26700,
      26709,
      26711,
      26712,
      26715,
      26731,
      26734,
      26735,
      26736,
      26737,
      26738,
      26741,
      26745,
      26746,
      26747,
      26748,
      26754,
      26756,
      26758,
      26760,
      26774,
      26776,
      26778,
      26780,
      26785,
      26787,
      26789,
      26793,
      26794,
      26798,
      26802,
      26811,
      26821,
      26824,
      26828,
      26831,
      26832,
      26833,
      26835,
      26838,
      26841,
      26844,
      26845,
      26853,
      26856,
      26858,
      26859,
      26860,
      26861,
      26864,
      26865,
      26869,
      26870,
      26875,
      26876,
      26877,
      26886,
      26889,
      26890,
      26896,
      26897,
      26899,
      26902,
      26903,
      26929,
      26931,
      26933,
      26936,
      26939,
      26946,
      26949,
      26953,
      26958,
      26967,
      26971,
      26979,
      26980,
      26981,
      26982,
      26984,
      26985,
      26988,
      26992,
      26993,
      26994,
      27002,
      27003,
      27007,
      27008,
      27021,
      27026,
      27030,
      27032,
      27041,
      27045,
      27046,
      27048,
      27051,
      27053,
      27055,
      27063,
      27064,
      27066,
      27068,
      27077,
      27080,
      27089,
      27094,
      27095,
      27106,
      27109,
      27118,
      27119,
      27121,
      27123,
      27125,
      27134,
      27136,
      27137,
      27139,
      27151,
      27153,
      27157,
      27162,
      27165,
      27168,
      27172,
      27176,
      27184,
      27186,
      27188,
      27191,
      27195,
      27198,
      27199,
      27205,
      27206,
      27209,
      27210,
      27214,
      27216,
      27217,
      27218,
      27221,
      27222,
      27227,
      27236,
      27239,
      27242,
      27249,
      27251,
      27262,
      27265,
      27267,
      27270,
      27271,
      27273,
      27275,
      27281,
      27291,
      27293,
      27294,
      27295,
      27301,
      27307,
      27311,
      27312,
      27313,
      27316,
      27325,
      27326,
      27327,
      27334,
      27337,
      27336,
      27340,
      27344,
      27348,
      27349,
      27350,
      27356,
      27357,
      27364,
      27367,
      27372,
      27376,
      27377,
      27378,
      27388,
      27389,
      27394,
      27395,
      27398,
      27399,
      27401,
      27407,
      27408,
      27409,
      27415,
      27419,
      27422,
      27428,
      27432,
      27435,
      27436,
      27439,
      27445,
      27446,
      27451,
      27455,
      27462,
      27466,
      27469,
      27474,
      27478,
      27480,
      27485,
      27488,
      27495,
      27499,
      27502,
      27504,
      27509,
      27517,
      27518,
      27522,
      27525,
      27543,
      27547,
      27551,
      27552,
      27554,
      27555,
      27560,
      27561,
      27564,
      27565,
      27566,
      27568,
      27576,
      27577,
      27581,
      27582,
      27587,
      27588,
      27593,
      27596,
      27606,
      27610,
      27617,
      27619,
      27622,
      27623,
      27630,
      27633,
      27639,
      27641,
      27647,
      27650,
      27652,
      27653,
      27657,
      27661,
      27662,
      27664,
      27666,
      27673,
      27679,
      27686,
      27687,
      27688,
      27692,
      27694,
      27699,
      27701,
      27702,
      27706,
      27707,
      27711,
      27722,
      27723,
      27725,
      27727,
      27730,
      27732,
      27737,
      27739,
      27740,
      27755,
      27757,
      27759,
      27764,
      27766,
      27768,
      27769,
      27771,
      27781,
      27782,
      27783,
      27785,
      27796,
      27797,
      27799,
      27800,
      27804,
      27807,
      27824,
      27826,
      27828,
      27842,
      27846,
      27853,
      27855,
      27856,
      27857,
      27858,
      27860,
      27862,
      27866,
      27868,
      27872,
      27879,
      27881,
      27883,
      27884,
      27886,
      27890,
      27892,
      27908,
      27911,
      27914,
      27918,
      27919,
      27921,
      27923,
      27930,
      27942,
      27943,
      27944,
      27751,
      27950,
      27951,
      27953,
      27961,
      27964,
      27967,
      27991,
      27998,
      27999,
      28001,
      28005,
      28007,
      28015,
      28016,
      28028,
      28034,
      28039,
      28049,
      28050,
      28052,
      28054,
      28055,
      28056,
      28074,
      28076,
      28084,
      28087,
      28089,
      28093,
      28095,
      28100,
      28104,
      28106,
      28110,
      28111,
      28118,
      28123,
      28125,
      28127,
      28128,
      28130,
      28133,
      28137,
      28143,
      28144,
      28148,
      28150,
      28156,
      28160,
      28164,
      28190,
      28194,
      28199,
      28210,
      28214,
      28217,
      28219,
      28220,
      28228,
      28229,
      28232,
      28233,
      28235,
      28239,
      28241,
      28242,
      28243,
      28244,
      28247,
      28252,
      28253,
      28254,
      28258,
      28259,
      28264,
      28275,
      28283,
      28285,
      28301,
      28307,
      28313,
      28320,
      28327,
      28333,
      28334,
      28337,
      28339,
      28347,
      28351,
      28352,
      28353,
      28355,
      28359,
      28360,
      28362,
      28365,
      28366,
      28367,
      28395,
      28397,
      28398,
      28409,
      28411,
      28413,
      28420,
      28424,
      28426,
      28428,
      28429,
      28438,
      28440,
      28442,
      28443,
      28454,
      28457,
      28458,
      28463,
      28464,
      28467,
      28470,
      28475,
      28476,
      28461,
      28495,
      28497,
      28498,
      28499,
      28503,
      28505,
      28506,
      28509,
      28510,
      28513,
      28514,
      28520,
      28524,
      28541,
      28542,
      28547,
      28551,
      28552,
      28555,
      28556,
      28557,
      28560,
      28562,
      28563,
      28564,
      28566,
      28570,
      28575,
      28576,
      28581,
      28582,
      28583,
      28584,
      28590,
      28591,
      28592,
      28597,
      28598,
      28604,
      28613,
      28615,
      28616,
      28618,
      28634,
      28638,
      28648,
      28649,
      28656,
      28661,
      28665,
      28668,
      28669,
      28672,
      28677,
      28678,
      28679,
      28685,
      28695,
      28704,
      28707,
      28719,
      28724,
      28727,
      28729,
      28732,
      28739,
      28740,
      28744,
      28745,
      28746,
      28747,
      28756,
      28757,
      28765,
      28766,
      28750,
      28772,
      28773,
      28780,
      28782,
      28789,
      28790,
      28798,
      28801,
      28805,
      28806,
      28820,
      28821,
      28822,
      28823,
      28824,
      28827,
      28836,
      28843,
      28848,
      28849,
      28852,
      28855,
      28874,
      28881,
      28883,
      28884,
      28885,
      28886,
      28888,
      28892,
      28900,
      28922,
      28931,
      28932,
      28933,
      28934,
      28935,
      28939,
      28940,
      28943,
      28958,
      28960,
      28971,
      28973,
      28975,
      28976,
      28977,
      28984,
      28993,
      28997,
      28998,
      28999,
      29002,
      29003,
      29008,
      29010,
      29015,
      29018,
      29020,
      29022,
      29024,
      29032,
      29049,
      29056,
      29061,
      29063,
      29068,
      29074,
      29082,
      29083,
      29088,
      29090,
      29103,
      29104,
      29106,
      29107,
      29114,
      29119,
      29120,
      29121,
      29124,
      29131,
      29132,
      29139,
      29142,
      29145,
      29146,
      29148,
      29176,
      29182,
      29184,
      29191,
      29192,
      29193,
      29203,
      29207,
      29210,
      29213,
      29215,
      29220,
      29227,
      29231,
      29236,
      29240,
      29241,
      29249,
      29250,
      29251,
      29253,
      29262,
      29263,
      29264,
      29267,
      29269,
      29270,
      29274,
      29276,
      29278,
      29280,
      29283,
      29288,
      29291,
      29294,
      29295,
      29297,
      29303,
      29304,
      29307,
      29308,
      29311,
      29316,
      29321,
      29325,
      29326,
      29331,
      29339,
      29352,
      29357,
      29358,
      29361,
      29364,
      29374,
      29377,
      29383,
      29385,
      29388,
      29397,
      29398,
      29400,
      29407,
      29413,
      29427,
      29428,
      29434,
      29435,
      29438,
      29442,
      29444,
      29445,
      29447,
      29451,
      29453,
      29458,
      29459,
      29464,
      29465,
      29470,
      29474,
      29476,
      29479,
      29480,
      29484,
      29489,
      29490,
      29493,
      29498,
      29499,
      29501,
      29507,
      29517,
      29520,
      29522,
      29526,
      29528,
      29533,
      29534,
      29535,
      29536,
      29542,
      29543,
      29545,
      29547,
      29548,
      29550,
      29551,
      29553,
      29559,
      29561,
      29564,
      29568,
      29569,
      29571,
      29573,
      29574,
      29582,
      29584,
      29587,
      29589,
      29591,
      29592,
      29596,
      29598,
      29599,
      29600,
      29602,
      29605,
      29606,
      29610,
      29611,
      29613,
      29621,
      29623,
      29625,
      29628,
      29629,
      29631,
      29637,
      29638,
      29641,
      29643,
      29644,
      29647,
      29650,
      29651,
      29654,
      29657,
      29661,
      29665,
      29667,
      29670,
      29671,
      29673,
      29684,
      29685,
      29687,
      29689,
      29690,
      29691,
      29693,
      29695,
      29696,
      29697,
      29700,
      29703,
      29706,
      29713,
      29722,
      29723,
      29732,
      29734,
      29736,
      29737,
      29738,
      29739,
      29740,
      29741,
      29742,
      29743,
      29744,
      29745,
      29753,
      29760,
      29763,
      29764,
      29766,
      29767,
      29771,
      29773,
      29777,
      29778,
      29783,
      29789,
      29794,
      29798,
      29799,
      29800,
      29803,
      29805,
      29806,
      29809,
      29810,
      29824,
      29825,
      29829,
      29830,
      29831,
      29833,
      29839,
      29840,
      29841,
      29842,
      29848,
      29849,
      29850,
      29852,
      29855,
      29856,
      29857,
      29859,
      29862,
      29864,
      29865,
      29866,
      29867,
      29870,
      29871,
      29873,
      29874,
      29877,
      29881,
      29883,
      29887,
      29896,
      29897,
      29900,
      29904,
      29907,
      29912,
      29914,
      29915,
      29918,
      29919,
      29924,
      29928,
      29930,
      29931,
      29935,
      29940,
      29946,
      29947,
      29948,
      29951,
      29958,
      29970,
      29974,
      29975,
      29984,
      29985,
      29988,
      29991,
      29993,
      29994,
      29999,
      30006,
      30009,
      30013,
      30014,
      30015,
      30016,
      30019,
      30023,
      30024,
      30030,
      30032,
      30034,
      30039,
      30046,
      30047,
      30049,
      30063,
      30065,
      30073,
      30074,
      30075,
      30076,
      30077,
      30078,
      30081,
      30085,
      30096,
      30098,
      30099,
      30101,
      30105,
      30108,
      30114,
      30116,
      30132,
      30138,
      30143,
      30144,
      30145,
      30148,
      30150,
      30156,
      30158,
      30159,
      30167,
      30172,
      30175,
      30176,
      30177,
      30180,
      30183,
      30188,
      30190,
      30191,
      30193,
      30201,
      30208,
      30210,
      30211,
      30212,
      30215,
      30216,
      30218,
      30220,
      30223,
      30226,
      30227,
      30229,
      30230,
      30233,
      30235,
      30236,
      30237,
      30238,
      30243,
      30245,
      30246,
      30249,
      30253,
      30258,
      30259,
      30261,
      30264,
      30265,
      30266,
      30268,
      30282,
      30272,
      30273,
      30275,
      30276,
      30277,
      30281,
      30283,
      30293,
      30297,
      30303,
      30308,
      30309,
      30317,
      30318,
      30319,
      30321,
      30324,
      30337,
      30341,
      30348,
      30349,
      30357,
      30363,
      30364,
      30365,
      30367,
      30368,
      30370,
      30371,
      30372,
      30373,
      30374,
      30375,
      30376,
      30378,
      30381,
      30397,
      30401,
      30405,
      30409,
      30411,
      30412,
      30414,
      30420,
      30425,
      30432,
      30438,
      30440,
      30444,
      30448,
      30449,
      30454,
      30457,
      30460,
      30464,
      30470,
      30474,
      30478,
      30482,
      30484,
      30485,
      30487,
      30489,
      30490,
      30492,
      30498,
      30504,
      30509,
      30510,
      30511,
      30516,
      30517,
      30518,
      30521,
      30525,
      30526,
      30530,
      30533,
      30534,
      30538,
      30541,
      30542,
      30543,
      30546,
      30550,
      30551,
      30556,
      30558,
      30559,
      30560,
      30562,
      30564,
      30567,
      30570,
      30572,
      30576,
      30578,
      30579,
      30580,
      30586,
      30589,
      30592,
      30596,
      30604,
      30605,
      30612,
      30613,
      30614,
      30618,
      30623,
      30626,
      30631,
      30634,
      30638,
      30639,
      30641,
      30645,
      30654,
      30659,
      30665,
      30673,
      30674,
      30677,
      30681,
      30686,
      30687,
      30688,
      30692,
      30694,
      30698,
      30700,
      30704,
      30705,
      30708,
      30712,
      30715,
      30725,
      30726,
      30729,
      30733,
      30734,
      30737,
      30749,
      30753,
      30754,
      30755,
      30765,
      30766,
      30768,
      30773,
      30775,
      30787,
      30788,
      30791,
      30792,
      30796,
      30798,
      30802,
      30812,
      30814,
      30816,
      30817,
      30819,
      30820,
      30824,
      30826,
      30830,
      30842,
      30846,
      30858,
      30863,
      30868,
      30872,
      30881,
      30877,
      30878,
      30879,
      30884,
      30888,
      30892,
      30893,
      30896,
      30897,
      30898,
      30899,
      30907,
      30909,
      30911,
      30919,
      30920,
      30921,
      30924,
      30926,
      30930,
      30931,
      30933,
      30934,
      30948,
      30939,
      30943,
      30944,
      30945,
      30950,
      30954,
      30962,
      30963,
      30976,
      30966,
      30967,
      30970,
      30971,
      30975,
      30982,
      30988,
      30992,
      31002,
      31004,
      31006,
      31007,
      31008,
      31013,
      31015,
      31017,
      31021,
      31025,
      31028,
      31029,
      31035,
      31037,
      31039,
      31044,
      31045,
      31046,
      31050,
      31051,
      31055,
      31057,
      31060,
      31064,
      31067,
      31068,
      31079,
      31081,
      31083,
      31090,
      31097,
      31099,
      31100,
      31102,
      31115,
      31116,
      31121,
      31123,
      31124,
      31125,
      31126,
      31128,
      31131,
      31132,
      31137,
      31144,
      31145,
      31147,
      31151,
      31153,
      31156,
      31160,
      31163,
      31170,
      31172,
      31175,
      31176,
      31178,
      31183,
      31188,
      31190,
      31194,
      31197,
      31198,
      31200,
      31202,
      31205,
      31210,
      31211,
      31213,
      31217,
      31224,
      31228,
      31234,
      31235,
      31239,
      31241,
      31242,
      31244,
      31249,
      31253,
      31259,
      31262,
      31265,
      31271,
      31275,
      31277,
      31279,
      31280,
      31284,
      31285,
      31288,
      31289,
      31290,
      31300,
      31301,
      31303,
      31304,
      31308,
      31317,
      31318,
      31321,
      31324,
      31325,
      31327,
      31328,
      31333,
      31335,
      31338,
      31341,
      31349,
      31352,
      31358,
      31360,
      31362,
      31365,
      31366,
      31370,
      31371,
      31376,
      31377,
      31380,
      31390,
      31392,
      31395,
      31404,
      31411,
      31413,
      31417,
      31419,
      31420,
      31430,
      31433,
      31436,
      31438,
      31441,
      31451,
      31464,
      31465,
      31467,
      31468,
      31473,
      31476,
      31483,
      31485,
      31486,
      31495,
      31508,
      31519,
      31523,
      31527,
      31529,
      31530,
      31531,
      31533,
      31534,
      31535,
      31536,
      31537,
      31540,
      31549,
      31551,
      31552,
      31553,
      31559,
      31566,
      31573,
      31584,
      31588,
      31590,
      31593,
      31594,
      31597,
      31599,
      31602,
      31603,
      31607,
      31620,
      31625,
      31630,
      31632,
      31633,
      31638,
      31643,
      31646,
      31648,
      31653,
      31660,
      31663,
      31664,
      31666,
      31669,
      31670,
      31674,
      31675,
      31676,
      31677,
      31682,
      31685,
      31688,
      31690,
      31700,
      31702,
      31703,
      31705,
      31706,
      31707,
      31720,
      31722,
      31730,
      31732,
      31733,
      31736,
      31737,
      31738,
      31740,
      31742,
      31745,
      31746,
      31747,
      31748,
      31750,
      31753,
      31755,
      31756,
      31758,
      31759,
      31769,
      31771,
      31776,
      31781,
      31782,
      31784,
      31788,
      31793,
      31795,
      31796,
      31798,
      31801,
      31802,
      31814,
      31818,
      31829,
      31825,
      31826,
      31827,
      31833,
      31834,
      31835,
      31836,
      31837,
      31838,
      31841,
      31843,
      31847,
      31849,
      31853,
      31854,
      31856,
      31858,
      31865,
      31868,
      31869,
      31878,
      31879,
      31887,
      31892,
      31902,
      31904,
      31910,
      31920,
      31926,
      31927,
      31930,
      31931,
      31932,
      31935,
      31940,
      31943,
      31944,
      31945,
      31949,
      31951,
      31955,
      31956,
      31957,
      31959,
      31961,
      31962,
      31965,
      31974,
      31977,
      31979,
      31989,
      32003,
      32007,
      32008,
      32009,
      32015,
      32017,
      32018,
      32019,
      32022,
      32029,
      32030,
      32035,
      32038,
      32042,
      32045,
      32049,
      32060,
      32061,
      32062,
      32064,
      32065,
      32071,
      32072,
      32077,
      32081,
      32083,
      32087,
      32089,
      32090,
      32092,
      32093,
      32101,
      32103,
      32106,
      32112,
      32120,
      32122,
      32123,
      32127,
      32129,
      32130,
      32131,
      32133,
      32134,
      32136,
      32139,
      32140,
      32141,
      32145,
      32150,
      32151,
      32157,
      32158,
      32166,
      32167,
      32170,
      32179,
      32182,
      32183,
      32185,
      32194,
      32195,
      32196,
      32197,
      32198,
      32204,
      32205,
      32206,
      32215,
      32217,
      32256,
      32226,
      32229,
      32230,
      32234,
      32235,
      32237,
      32241,
      32245,
      32246,
      32249,
      32250,
      32264,
      32272,
      32273,
      32277,
      32279,
      32284,
      32285,
      32288,
      32295,
      32296,
      32300,
      32301,
      32303,
      32307,
      32310,
      32319,
      32324,
      32325,
      32327,
      32334,
      32336,
      32338,
      32344,
      32351,
      32353,
      32354,
      32357,
      32363,
      32366,
      32367,
      32371,
      32376,
      32382,
      32385,
      32390,
      32391,
      32394,
      32397,
      32401,
      32405,
      32408,
      32410,
      32413,
      32414,
      32572,
      32571,
      32573,
      32574,
      32575,
      32579,
      32580,
      32583,
      32591,
      32594,
      32595,
      32603,
      32604,
      32605,
      32609,
      32611,
      32612,
      32613,
      32614,
      32621,
      32625,
      32637,
      32638,
      32639,
      32640,
      32651,
      32653,
      32655,
      32656,
      32657,
      32662,
      32663,
      32668,
      32673,
      32674,
      32678,
      32682,
      32685,
      32692,
      32700,
      32703,
      32704,
      32707,
      32712,
      32718,
      32719,
      32731,
      32735,
      32739,
      32741,
      32744,
      32748,
      32750,
      32751,
      32754,
      32762,
      32765,
      32766,
      32767,
      32775,
      32776,
      32778,
      32781,
      32782,
      32783,
      32785,
      32787,
      32788,
      32790,
      32797,
      32798,
      32799,
      32800,
      32804,
      32806,
      32812,
      32814,
      32816,
      32820,
      32821,
      32823,
      32825,
      32826,
      32828,
      32830,
      32832,
      32836,
      32864,
      32868,
      32870,
      32877,
      32881,
      32885,
      32897,
      32904,
      32910,
      32924,
      32926,
      32934,
      32935,
      32939,
      32952,
      32953,
      32968,
      32973,
      32975,
      32978,
      32980,
      32981,
      32983,
      32984,
      32992,
      33005,
      33006,
      33008,
      33010,
      33011,
      33014,
      33017,
      33018,
      33022,
      33027,
      33035,
      33046,
      33047,
      33048,
      33052,
      33054,
      33056,
      33060,
      33063,
      33068,
      33072,
      33077,
      33082,
      33084,
      33093,
      33095,
      33098,
      33100,
      33106,
      33111,
      33120,
      33121,
      33127,
      33128,
      33129,
      33133,
      33135,
      33143,
      33153,
      33168,
      33156,
      33157,
      33158,
      33163,
      33166,
      33174,
      33176,
      33179,
      33182,
      33186,
      33198,
      33202,
      33204,
      33211,
      33227,
      33219,
      33221,
      33226,
      33230,
      33231,
      33237,
      33239,
      33243,
      33245,
      33246,
      33249,
      33252,
      33259,
      33260,
      33264,
      33265,
      33266,
      33269,
      33270,
      33272,
      33273,
      33277,
      33279,
      33280,
      33283,
      33295,
      33299,
      33300,
      33305,
      33306,
      33309,
      33313,
      33314,
      33320,
      33330,
      33332,
      33338,
      33347,
      33348,
      33349,
      33350,
      33355,
      33358,
      33359,
      33361,
      33366,
      33372,
      33376,
      33379,
      33383,
      33389,
      33396,
      33403,
      33405,
      33407,
      33408,
      33409,
      33411,
      33412,
      33415,
      33417,
      33418,
      33422,
      33425,
      33428,
      33430,
      33432,
      33434,
      33435,
      33440,
      33441,
      33443,
      33444,
      33447,
      33448,
      33449,
      33450,
      33454,
      33456,
      33458,
      33460,
      33463,
      33466,
      33468,
      33470,
      33471,
      33478,
      33488,
      33493,
      33498,
      33504,
      33506,
      33508,
      33512,
      33514,
      33517,
      33519,
      33526,
      33527,
      33533,
      33534,
      33536,
      33537,
      33543,
      33544,
      33546,
      33547,
      33620,
      33563,
      33565,
      33566,
      33567,
      33569,
      33570,
      33580,
      33581,
      33582,
      33584,
      33587,
      33591,
      33594,
      33596,
      33597,
      33602,
      33603,
      33604,
      33607,
      33613,
      33614,
      33617,
      33621,
      33622,
      33623,
      33648,
      33656,
      33661,
      33663,
      33664,
      33666,
      33668,
      33670,
      33677,
      33682,
      33684,
      33685,
      33688,
      33689,
      33691,
      33692,
      33693,
      33702,
      33703,
      33705,
      33708,
      33726,
      33727,
      33728,
      33735,
      33737,
      33743,
      33744,
      33745,
      33748,
      33757,
      33619,
      33768,
      33770,
      33782,
      33784,
      33785,
      33788,
      33793,
      33798,
      33802,
      33807,
      33809,
      33813,
      33817,
      33709,
      33839,
      33849,
      33861,
      33863,
      33864,
      33866,
      33869,
      33871,
      33873,
      33874,
      33878,
      33880,
      33881,
      33882,
      33884,
      33888,
      33892,
      33893,
      33895,
      33898,
      33904,
      33907,
      33908,
      33910,
      33912,
      33916,
      33917,
      33921,
      33925,
      33938,
      33939,
      33941,
      33950,
      33958,
      33960,
      33961,
      33962,
      33967,
      33969,
      33972,
      33978,
      33981,
      33982,
      33984,
      33986,
      33991,
      33992,
      33996,
      33999,
      34003,
      34012,
      34023,
      34026,
      34031,
      34032,
      34033,
      34034,
      34039,
      34098,
      34042,
      34043,
      34045,
      34050,
      34051,
      34055,
      34060,
      34062,
      34064,
      34076,
      34078,
      34082,
      34083,
      34084,
      34085,
      34087,
      34090,
      34091,
      34095,
      34099,
      34100,
      34102,
      34111,
      34118,
      34127,
      34128,
      34129,
      34130,
      34131,
      34134,
      34137,
      34140,
      34141,
      34142,
      34143,
      34144,
      34145,
      34146,
      34148,
      34155,
      34159,
      34169,
      34170,
      34171,
      34173,
      34175,
      34177,
      34181,
      34182,
      34185,
      34187,
      34188,
      34191,
      34195,
      34200,
      34205,
      34207,
      34208,
      34210,
      34213,
      34215,
      34228,
      34230,
      34231,
      34232,
      34236,
      34237,
      34238,
      34239,
      34242,
      34247,
      34250,
      34251,
      34254,
      34221,
      34264,
      34266,
      34271,
      34272,
      34278,
      34280,
      34285,
      34291,
      34294,
      34300,
      34303,
      34304,
      34308,
      34309,
      34317,
      34318,
      34320,
      34321,
      34322,
      34328,
      34329,
      34331,
      34334,
      34337,
      34343,
      34345,
      34358,
      34360,
      34362,
      34364,
      34365,
      34368,
      34370,
      34374,
      34386,
      34387,
      34390,
      34391,
      34392,
      34393,
      34397,
      34400,
      34401,
      34402,
      34403,
      34404,
      34409,
      34412,
      34415,
      34421,
      34422,
      34423,
      34426,
      34445,
      34449,
      34454,
      34456,
      34458,
      34460,
      34465,
      34470,
      34471,
      34472,
      34477,
      34481,
      34483,
      34484,
      34485,
      34487,
      34488,
      34489,
      34495,
      34496,
      34497,
      34499,
      34501,
      34513,
      34514,
      34517,
      34519,
      34522,
      34524,
      34528,
      34531,
      34533,
      34535,
      34440,
      34554,
      34556,
      34557,
      34564,
      34565,
      34567,
      34571,
      34574,
      34575,
      34576,
      34579,
      34580,
      34585,
      34590,
      34591,
      34593,
      34595,
      34600,
      34606,
      34607,
      34609,
      34610,
      34617,
      34618,
      34620,
      34621,
      34622,
      34624,
      34627,
      34629,
      34637,
      34648,
      34653,
      34657,
      34660,
      34661,
      34671,
      34673,
      34674,
      34683,
      34691,
      34692,
      34693,
      34694,
      34695,
      34696,
      34697,
      34699,
      34700,
      34704,
      34707,
      34709,
      34711,
      34712,
      34713,
      34718,
      34720,
      34723,
      34727,
      34732,
      34733,
      34734,
      34737,
      34741,
      34750,
      34751,
      34753,
      34760,
      34761,
      34762,
      34766,
      34773,
      34774,
      34777,
      34778,
      34780,
      34783,
      34786,
      34787,
      34788,
      34794,
      34795,
      34797,
      34801,
      34803,
      34808,
      34810,
      34815,
      34817,
      34819,
      34822,
      34825,
      34826,
      34827,
      34832,
      34841,
      34834,
      34835,
      34836,
      34840,
      34842,
      34843,
      34844,
      34846,
      34847,
      34856,
      34861,
      34862,
      34864,
      34866,
      34869,
      34874,
      34876,
      34881,
      34883,
      34885,
      34888,
      34889,
      34890,
      34891,
      34894,
      34897,
      34901,
      34902,
      34904,
      34906,
      34908,
      34911,
      34912,
      34916,
      34921,
      34929,
      34937,
      34939,
      34944,
      34968,
      34970,
      34971,
      34972,
      34975,
      34976,
      34984,
      34986,
      35002,
      35005,
      35006,
      35008,
      35018,
      35019,
      35020,
      35021,
      35022,
      35025,
      35026,
      35027,
      35035,
      35038,
      35047,
      35055,
      35056,
      35057,
      35061,
      35063,
      35073,
      35078,
      35085,
      35086,
      35087,
      35093,
      35094,
      35096,
      35097,
      35098,
      35100,
      35104,
      35110,
      35111,
      35112,
      35120,
      35121,
      35122,
      35125,
      35129,
      35130,
      35134,
      35136,
      35138,
      35141,
      35142,
      35145,
      35151,
      35154,
      35159,
      35162,
      35163,
      35164,
      35169,
      35170,
      35171,
      35179,
      35182,
      35184,
      35187,
      35189,
      35194,
      35195,
      35196,
      35197,
      35209,
      35213,
      35216,
      35220,
      35221,
      35227,
      35228,
      35231,
      35232,
      35237,
      35248,
      35252,
      35253,
      35254,
      35255,
      35260,
      35284,
      35285,
      35286,
      35287,
      35288,
      35301,
      35305,
      35307,
      35309,
      35313,
      35315,
      35318,
      35321,
      35325,
      35327,
      35332,
      35333,
      35335,
      35343,
      35345,
      35346,
      35348,
      35349,
      35358,
      35360,
      35362,
      35364,
      35366,
      35371,
      35372,
      35375,
      35381,
      35383,
      35389,
      35390,
      35392,
      35395,
      35397,
      35399,
      35401,
      35405,
      35406,
      35411,
      35414,
      35415,
      35416,
      35420,
      35421,
      35425,
      35429,
      35431,
      35445,
      35446,
      35447,
      35449,
      35450,
      35451,
      35454,
      35455,
      35456,
      35459,
      35462,
      35467,
      35471,
      35472,
      35474,
      35478,
      35479,
      35481,
      35487,
      35495,
      35497,
      35502,
      35503,
      35507,
      35510,
      35511,
      35515,
      35518,
      35523,
      35526,
      35528,
      35529,
      35530,
      35537,
      35539,
      35540,
      35541,
      35543,
      35549,
      35551,
      35564,
      35568,
      35572,
      35573,
      35574,
      35580,
      35583,
      35589,
      35590,
      35595,
      35601,
      35612,
      35614,
      35615,
      35594,
      35629,
      35632,
      35639,
      35644,
      35650,
      35651,
      35652,
      35653,
      35654,
      35656,
      35666,
      35667,
      35668,
      35673,
      35661,
      35678,
      35683,
      35693,
      35702,
      35704,
      35705,
      35708,
      35710,
      35713,
      35716,
      35717,
      35723,
      35725,
      35727,
      35732,
      35733,
      35740,
      35742,
      35743,
      35896,
      35897,
      35901,
      35902,
      35909,
      35911,
      35913,
      35915,
      35919,
      35921,
      35923,
      35924,
      35927,
      35928,
      35931,
      35933,
      35929,
      35939,
      35940,
      35942,
      35944,
      35945,
      35949,
      35955,
      35957,
      35958,
      35963,
      35966,
      35974,
      35975,
      35979,
      35984,
      35986,
      35987,
      35993,
      35995,
      35996,
      36004,
      36025,
      36026,
      36037,
      36038,
      36041,
      36043,
      36047,
      36054,
      36053,
      36057,
      36061,
      36065,
      36072,
      36076,
      36079,
      36080,
      36082,
      36085,
      36087,
      36088,
      36094,
      36095,
      36097,
      36099,
      36105,
      36114,
      36119,
      36123,
      36197,
      36201,
      36204,
      36206,
      36223,
      36226,
      36228,
      36232,
      36237,
      36240,
      36241,
      36245,
      36254,
      36255,
      36256,
      36262,
      36267,
      36268,
      36271,
      36274,
      36277,
      36279,
      36281,
      36283,
      36288,
      36293,
      36294,
      36295,
      36296,
      36298,
      36302,
      36305,
      36308,
      36309,
      36311,
      36313,
      36324,
      36325,
      36327,
      36332,
      36336,
      36284,
      36337,
      36338,
      36340,
      36349,
      36353,
      36356,
      36357,
      36358,
      36363,
      36369,
      36372,
      36374,
      36384,
      36385,
      36386,
      36387,
      36390,
      36391,
      36401,
      36403,
      36406,
      36407,
      36408,
      36409,
      36413,
      36416,
      36417,
      36427,
      36429,
      36430,
      36431,
      36436,
      36443,
      36444,
      36445,
      36446,
      36449,
      36450,
      36457,
      36460,
      36461,
      36463,
      36464,
      36465,
      36473,
      36474,
      36475,
      36482,
      36483,
      36489,
      36496,
      36498,
      36501,
      36506,
      36507,
      36509,
      36510,
      36514,
      36519,
      36521,
      36525,
      36526,
      36531,
      36533,
      36538,
      36539,
      36544,
      36545,
      36547,
      36548,
      36551,
      36559,
      36561,
      36564,
      36572,
      36584,
      36590,
      36592,
      36593,
      36599,
      36601,
      36602,
      36589,
      36608,
      36610,
      36615,
      36616,
      36623,
      36624,
      36630,
      36631,
      36632,
      36638,
      36640,
      36641,
      36643,
      36645,
      36647,
      36648,
      36652,
      36653,
      36654,
      36660,
      36661,
      36662,
      36663,
      36666,
      36672,
      36673,
      36675,
      36679,
      36687,
      36689,
      36690,
      36691,
      36692,
      36693,
      36696,
      36701,
      36702,
      36709,
      36765,
      36768,
      36769,
      36772,
      36773,
      36774,
      36789,
      36790,
      36792,
      36798,
      36800,
      36801,
      36806,
      36810,
      36811,
      36813,
      36816,
      36818,
      36819,
      36821,
      36832,
      36835,
      36836,
      36840,
      36846,
      36849,
      36853,
      36854,
      36859,
      36862,
      36866,
      36868,
      36872,
      36876,
      36888,
      36891,
      36904,
      36905,
      36911,
      36906,
      36908,
      36909,
      36915,
      36916,
      36919,
      36927,
      36931,
      36932,
      36940,
      36955,
      36957,
      36962,
      36966,
      36967,
      36972,
      36976,
      36980,
      36985,
      36997,
      37000,
      37003,
      37004,
      37006,
      37008,
      37013,
      37015,
      37016,
      37017,
      37019,
      37024,
      37025,
      37026,
      37029,
      37040,
      37042,
      37043,
      37044,
      37046,
      37053,
      37068,
      37054,
      37059,
      37060,
      37061,
      37063,
      37064,
      37077,
      37079,
      37080,
      37081,
      37084,
      37085,
      37087,
      37093,
      37074,
      37110,
      37099,
      37103,
      37104,
      37108,
      37118,
      37119,
      37120,
      37124,
      37125,
      37126,
      37128,
      37133,
      37136,
      37140,
      37142,
      37143,
      37144,
      37146,
      37148,
      37150,
      37152,
      37157,
      37154,
      37155,
      37159,
      37161,
      37166,
      37167,
      37169,
      37172,
      37174,
      37175,
      37177,
      37178,
      37180,
      37181,
      37187,
      37191,
      37192,
      37199,
      37203,
      37207,
      37209,
      37210,
      37211,
      37217,
      37220,
      37223,
      37229,
      37236,
      37241,
      37242,
      37243,
      37249,
      37251,
      37253,
      37254,
      37258,
      37262,
      37265,
      37267,
      37268,
      37269,
      37272,
      37278,
      37281,
      37286,
      37288,
      37292,
      37293,
      37294,
      37296,
      37297,
      37298,
      37299,
      37302,
      37307,
      37308,
      37309,
      37311,
      37314,
      37315,
      37317,
      37331,
      37332,
      37335,
      37337,
      37338,
      37342,
      37348,
      37349,
      37353,
      37354,
      37356,
      37357,
      37358,
      37359,
      37360,
      37361,
      37367,
      37369,
      37371,
      37373,
      37376,
      37377,
      37380,
      37381,
      37382,
      37383,
      37385,
      37386,
      37388,
      37392,
      37394,
      37395,
      37398,
      37400,
      37404,
      37405,
      37411,
      37412,
      37413,
      37414,
      37416,
      37422,
      37423,
      37424,
      37427,
      37429,
      37430,
      37432,
      37433,
      37434,
      37436,
      37438,
      37440,
      37442,
      37443,
      37446,
      37447,
      37450,
      37453,
      37454,
      37455,
      37457,
      37464,
      37465,
      37468,
      37469,
      37472,
      37473,
      37477,
      37479,
      37480,
      37481,
      37486,
      37487,
      37488,
      37493,
      37494,
      37495,
      37496,
      37497,
      37499,
      37500,
      37501,
      37503,
      37512,
      37513,
      37514,
      37517,
      37518,
      37522,
      37527,
      37529,
      37535,
      37536,
      37540,
      37541,
      37543,
      37544,
      37547,
      37551,
      37554,
      37558,
      37560,
      37562,
      37563,
      37564,
      37565,
      37567,
      37568,
      37569,
      37570,
      37571,
      37573,
      37574,
      37575,
      37576,
      37579,
      37580,
      37581,
      37582,
      37584,
      37587,
      37589,
      37591,
      37592,
      37593,
      37596,
      37597,
      37599,
      37600,
      37601,
      37603,
      37605,
      37607,
      37608,
      37612,
      37614,
      37616,
      37625,
      37627,
      37631,
      37632,
      37634,
      37640,
      37645,
      37649,
      37652,
      37653,
      37660,
      37661,
      37662,
      37663,
      37665,
      37668,
      37669,
      37671,
      37673,
      37674,
      37683,
      37684,
      37686,
      37687,
      37703,
      37704,
      37705,
      37712,
      37713,
      37714,
      37717,
      37719,
      37720,
      37722,
      37726,
      37732,
      37733,
      37735,
      37737,
      37738,
      37741,
      37743,
      37744,
      37745,
      37747,
      37748,
      37750,
      37754,
      37757,
      37759,
      37760,
      37761,
      37762,
      37768,
      37770,
      37771,
      37773,
      37775,
      37778,
      37781,
      37784,
      37787,
      37790,
      37793,
      37795,
      37796,
      37798,
      37800,
      37803,
      37812,
      37813,
      37814,
      37818,
      37801,
      37825,
      37828,
      37829,
      37830,
      37831,
      37833,
      37834,
      37835,
      37836,
      37837,
      37843,
      37849,
      37852,
      37854,
      37855,
      37858,
      37862,
      37863,
      37881,
      37879,
      37880,
      37882,
      37883,
      37885,
      37889,
      37890,
      37892,
      37896,
      37897,
      37901,
      37902,
      37903,
      37909,
      37910,
      37911,
      37919,
      37934,
      37935,
      37937,
      37938,
      37939,
      37940,
      37947,
      37951,
      37949,
      37955,
      37957,
      37960,
      37962,
      37964,
      37973,
      37977,
      37980,
      37983,
      37985,
      37987,
      37992,
      37995,
      37997,
      37998,
      37999,
      38001,
      38002,
      38020,
      38019,
      38264,
      38265,
      38270,
      38276,
      38280,
      38284,
      38285,
      38286,
      38301,
      38302,
      38303,
      38305,
      38310,
      38313,
      38315,
      38316,
      38324,
      38326,
      38330,
      38333,
      38335,
      38342,
      38344,
      38345,
      38347,
      38352,
      38353,
      38354,
      38355,
      38361,
      38362,
      38365,
      38366,
      38367,
      38368,
      38372,
      38374,
      38429,
      38430,
      38434,
      38436,
      38437,
      38438,
      38444,
      38449,
      38451,
      38455,
      38456,
      38457,
      38458,
      38460,
      38461,
      38465,
      38482,
      38484,
      38486,
      38487,
      38488,
      38497,
      38510,
      38516,
      38523,
      38524,
      38526,
      38527,
      38529,
      38530,
      38531,
      38532,
      38537,
      38545,
      38550,
      38554,
      38557,
      38559,
      38564,
      38565,
      38566,
      38569,
      38574,
      38575,
      38579,
      38586,
      38602,
      38610,
      23986,
      38616,
      38618,
      38621,
      38622,
      38623,
      38633,
      38639,
      38641,
      38650,
      38658,
      38659,
      38661,
      38665,
      38682,
      38683,
      38685,
      38689,
      38690,
      38691,
      38696,
      38705,
      38707,
      38721,
      38723,
      38730,
      38734,
      38735,
      38741,
      38743,
      38744,
      38746,
      38747,
      38755,
      38759,
      38762,
      38766,
      38771,
      38774,
      38775,
      38776,
      38779,
      38781,
      38783,
      38784,
      38793,
      38805,
      38806,
      38807,
      38809,
      38810,
      38814,
      38815,
      38818,
      38828,
      38830,
      38833,
      38834,
      38837,
      38838,
      38840,
      38841,
      38842,
      38844,
      38846,
      38847,
      38849,
      38852,
      38853,
      38855,
      38857,
      38858,
      38860,
      38861,
      38862,
      38864,
      38865,
      38868,
      38871,
      38872,
      38873,
      38877,
      38878,
      38880,
      38875,
      38881,
      38884,
      38895,
      38897,
      38900,
      38903,
      38904,
      38906,
      38919,
      38922,
      38937,
      38925,
      38926,
      38932,
      38934,
      38940,
      38942,
      38944,
      38947,
      38950,
      38955,
      38958,
      38959,
      38960,
      38962,
      38963,
      38965,
      38949,
      38974,
      38980,
      38983,
      38986,
      38993,
      38994,
      38995,
      38998,
      38999,
      39001,
      39002,
      39010,
      39011,
      39013,
      39014,
      39018,
      39020,
      39083,
      39085,
      39086,
      39088,
      39092,
      39095,
      39096,
      39098,
      39099,
      39103,
      39106,
      39109,
      39112,
      39116,
      39137,
      39139,
      39141,
      39142,
      39143,
      39146,
      39155,
      39158,
      39170,
      39175,
      39176,
      39185,
      39189,
      39190,
      39191,
      39194,
      39195,
      39196,
      39199,
      39202,
      39206,
      39207,
      39211,
      39217,
      39218,
      39219,
      39220,
      39221,
      39225,
      39226,
      39227,
      39228,
      39232,
      39233,
      39238,
      39239,
      39240,
      39245,
      39246,
      39252,
      39256,
      39257,
      39259,
      39260,
      39262,
      39263,
      39264,
      39323,
      39325,
      39327,
      39334,
      39344,
      39345,
      39346,
      39349,
      39353,
      39354,
      39357,
      39359,
      39363,
      39369,
      39379,
      39380,
      39385,
      39386,
      39388,
      39390,
      39399,
      39402,
      39403,
      39404,
      39408,
      39412,
      39413,
      39417,
      39421,
      39422,
      39426,
      39427,
      39428,
      39435,
      39436,
      39440,
      39441,
      39446,
      39454,
      39456,
      39458,
      39459,
      39460,
      39463,
      39469,
      39470,
      39475,
      39477,
      39478,
      39480,
      39495,
      39489,
      39492,
      39498,
      39499,
      39500,
      39502,
      39505,
      39508,
      39510,
      39517,
      39594,
      39596,
      39598,
      39599,
      39602,
      39604,
      39605,
      39606,
      39609,
      39611,
      39614,
      39615,
      39617,
      39619,
      39622,
      39624,
      39630,
      39632,
      39634,
      39637,
      39638,
      39639,
      39643,
      39644,
      39648,
      39652,
      39653,
      39655,
      39657,
      39660,
      39666,
      39667,
      39669,
      39673,
      39674,
      39677,
      39679,
      39680,
      39681,
      39682,
      39683,
      39684,
      39685,
      39688,
      39689,
      39691,
      39692,
      39693,
      39694,
      39696,
      39698,
      39702,
      39705,
      39707,
      39708,
      39712,
      39718,
      39723,
      39725,
      39731,
      39732,
      39733,
      39735,
      39737,
      39738,
      39741,
      39752,
      39755,
      39756,
      39765,
      39766,
      39767,
      39771,
      39774,
      39777,
      39779,
      39781,
      39782,
      39784,
      39786,
      39787,
      39788,
      39789,
      39790,
      39795,
      39797,
      39799,
      39800,
      39801,
      39807,
      39808,
      39812,
      39813,
      39814,
      39815,
      39817,
      39818,
      39819,
      39821,
      39823,
      39824,
      39828,
      39834,
      39837,
      39838,
      39846,
      39847,
      39849,
      39852,
      39856,
      39857,
      39858,
      39863,
      39864,
      39867,
      39868,
      39870,
      39871,
      39873,
      39879,
      39880,
      39886,
      39888,
      39895,
      39896,
      39901,
      39903,
      39909,
      39911,
      39914,
      39915,
      39919,
      39923,
      39927,
      39928,
      39929,
      39930,
      39933,
      39935,
      39936,
      39938,
      39947,
      39951,
      39953,
      39958,
      39960,
      39961,
      39962,
      39964,
      39966,
      39970,
      39971,
      39974,
      39975,
      39976,
      39977,
      39978,
      39985,
      39989,
      39990,
      39991,
      39997,
      40001,
      40003,
      40004,
      40005,
      40009,
      40010,
      40014,
      40015,
      40016,
      40019,
      40020,
      40022,
      40024,
      40027,
      40029,
      40030,
      40031,
      40035,
      40041,
      40042,
      40028,
      40043,
      40040,
      40046,
      40048,
      40050,
      40053,
      40055,
      40059,
      40166,
      40178,
      40183,
      40185,
      40203,
      40194,
      40209,
      40215,
      40216,
      40220,
      40221,
      40222,
      40239,
      40240,
      40242,
      40243,
      40244,
      40250,
      40252,
      40261,
      40253,
      40258,
      40259,
      40263,
      40266,
      40275,
      40276,
      40287,
      40291,
      40290,
      40293,
      40297,
      40298,
      40299,
      40304,
      40310,
      40311,
      40315,
      40316,
      40318,
      40323,
      40324,
      40326,
      40330,
      40333,
      40334,
      40338,
      40339,
      40341,
      40342,
      40343,
      40344,
      40353,
      40362,
      40364,
      40366,
      40369,
      40373,
      40377,
      40380,
      40383,
      40387,
      40391,
      40393,
      40394,
      40404,
      40405,
      40406,
      40407,
      40410,
      40414,
      40415,
      40416,
      40421,
      40423,
      40425,
      40427,
      40430,
      40432,
      40435,
      40436,
      40446,
      40458,
      40450,
      40455,
      40462,
      40464,
      40465,
      40466,
      40469,
      40470,
      40473,
      40476,
      40477,
      40570,
      40571,
      40572,
      40576,
      40578,
      40579,
      40580,
      40581,
      40583,
      40590,
      40591,
      40598,
      40600,
      40603,
      40606,
      40612,
      40616,
      40620,
      40622,
      40623,
      40624,
      40627,
      40628,
      40629,
      40646,
      40648,
      40651,
      40661,
      40671,
      40676,
      40679,
      40684,
      40685,
      40686,
      40688,
      40689,
      40690,
      40693,
      40696,
      40703,
      40706,
      40707,
      40713,
      40719,
      40720,
      40721,
      40722,
      40724,
      40726,
      40727,
      40729,
      40730,
      40731,
      40735,
      40738,
      40742,
      40746,
      40747,
      40751,
      40753,
      40754,
      40756,
      40759,
      40761,
      40762,
      40764,
      40765,
      40767,
      40769,
      40771,
      40772,
      40773,
      40774,
      40775,
      40787,
      40789,
      40790,
      40791,
      40792,
      40794,
      40797,
      40798,
      40808,
      40809,
      40813,
      40814,
      40815,
      40816,
      40817,
      40819,
      40821,
      40826,
      40829,
      40847,
      40848,
      40849,
      40850,
      40852,
      40854,
      40855,
      40862,
      40865,
      40866,
      40867,
      40869,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
    ],
    ibm866: [
      1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
      1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063,
      1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
      1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
      9617, 9618, 9619, 9474, 9508, 9569, 9570, 9558, 9557, 9571, 9553, 9559,
      9565, 9564, 9563, 9488, 9492, 9524, 9516, 9500, 9472, 9532, 9566, 9567,
      9562, 9556, 9577, 9574, 9568, 9552, 9580, 9575, 9576, 9572, 9573, 9561,
      9560, 9554, 9555, 9579, 9578, 9496, 9484, 9608, 9604, 9612, 9616, 9600,
      1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
      1100, 1101, 1102, 1103, 1025, 1105, 1028, 1108, 1031, 1111, 1038, 1118,
      176, 8729, 183, 8730, 8470, 164, 9632, 160,
    ],
    "iso-8859-2": [
      128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
      143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
      158, 159, 160, 260, 728, 321, 164, 317, 346, 167, 168, 352, 350, 356, 377,
      173, 381, 379, 176, 261, 731, 322, 180, 318, 347, 711, 184, 353, 351, 357,
      378, 733, 382, 380, 340, 193, 194, 258, 196, 313, 262, 199, 268, 201, 280,
      203, 282, 205, 206, 270, 272, 323, 327, 211, 212, 336, 214, 215, 344, 366,
      218, 368, 220, 221, 354, 223, 341, 225, 226, 259, 228, 314, 263, 231, 269,
      233, 281, 235, 283, 237, 238, 271, 273, 324, 328, 243, 244, 337, 246, 247,
      345, 367, 250, 369, 252, 253, 355, 729,
    ],
    "iso-8859-3": [
      128,
      129,
      130,
      131,
      132,
      133,
      134,
      135,
      136,
      137,
      138,
      139,
      140,
      141,
      142,
      143,
      144,
      145,
      146,
      147,
      148,
      149,
      150,
      151,
      152,
      153,
      154,
      155,
      156,
      157,
      158,
      159,
      160,
      294,
      728,
      163,
      164,
      null,
      292,
      167,
      168,
      304,
      350,
      286,
      308,
      173,
      null,
      379,
      176,
      295,
      178,
      179,
      180,
      181,
      293,
      183,
      184,
      305,
      351,
      287,
      309,
      189,
      null,
      380,
      192,
      193,
      194,
      null,
      196,
      266,
      264,
      199,
      200,
      201,
      202,
      203,
      204,
      205,
      206,
      207,
      null,
      209,
      210,
      211,
      212,
      288,
      214,
      215,
      284,
      217,
      218,
      219,
      220,
      364,
      348,
      223,
      224,
      225,
      226,
      null,
      228,
      267,
      265,
      231,
      232,
      233,
      234,
      235,
      236,
      237,
      238,
      239,
      null,
      241,
      242,
      243,
      244,
      289,
      246,
      247,
      285,
      249,
      250,
      251,
      252,
      365,
      349,
      729,
    ],
    "iso-8859-4": [
      128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
      143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
      158, 159, 160, 260, 312, 342, 164, 296, 315, 167, 168, 352, 274, 290, 358,
      173, 381, 175, 176, 261, 731, 343, 180, 297, 316, 711, 184, 353, 275, 291,
      359, 330, 382, 331, 256, 193, 194, 195, 196, 197, 198, 302, 268, 201, 280,
      203, 278, 205, 206, 298, 272, 325, 332, 310, 212, 213, 214, 215, 216, 370,
      218, 219, 220, 360, 362, 223, 257, 225, 226, 227, 228, 229, 230, 303, 269,
      233, 281, 235, 279, 237, 238, 299, 273, 326, 333, 311, 244, 245, 246, 247,
      248, 371, 250, 251, 252, 361, 363, 729,
    ],
    "iso-8859-5": [
      128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
      143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
      158, 159, 160, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
      1035, 1036, 173, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
      1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
      1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
      1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
      1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
      1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 8470, 1105, 1106,
      1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 167, 1118,
      1119,
    ],
    "iso-8859-6": [
      128,
      129,
      130,
      131,
      132,
      133,
      134,
      135,
      136,
      137,
      138,
      139,
      140,
      141,
      142,
      143,
      144,
      145,
      146,
      147,
      148,
      149,
      150,
      151,
      152,
      153,
      154,
      155,
      156,
      157,
      158,
      159,
      160,
      null,
      null,
      null,
      164,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      1548,
      173,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      1563,
      null,
      null,
      null,
      1567,
      null,
      1569,
      1570,
      1571,
      1572,
      1573,
      1574,
      1575,
      1576,
      1577,
      1578,
      1579,
      1580,
      1581,
      1582,
      1583,
      1584,
      1585,
      1586,
      1587,
      1588,
      1589,
      1590,
      1591,
      1592,
      1593,
      1594,
      null,
      null,
      null,
      null,
      null,
      1600,
      1601,
      1602,
      1603,
      1604,
      1605,
      1606,
      1607,
      1608,
      1609,
      1610,
      1611,
      1612,
      1613,
      1614,
      1615,
      1616,
      1617,
      1618,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
    ],
    "iso-8859-7": [
      128,
      129,
      130,
      131,
      132,
      133,
      134,
      135,
      136,
      137,
      138,
      139,
      140,
      141,
      142,
      143,
      144,
      145,
      146,
      147,
      148,
      149,
      150,
      151,
      152,
      153,
      154,
      155,
      156,
      157,
      158,
      159,
      160,
      8216,
      8217,
      163,
      8364,
      8367,
      166,
      167,
      168,
      169,
      890,
      171,
      172,
      173,
      null,
      8213,
      176,
      177,
      178,
      179,
      900,
      901,
      902,
      183,
      904,
      905,
      906,
      187,
      908,
      189,
      910,
      911,
      912,
      913,
      914,
      915,
      916,
      917,
      918,
      919,
      920,
      921,
      922,
      923,
      924,
      925,
      926,
      927,
      928,
      929,
      null,
      931,
      932,
      933,
      934,
      935,
      936,
      937,
      938,
      939,
      940,
      941,
      942,
      943,
      944,
      945,
      946,
      947,
      948,
      949,
      950,
      951,
      952,
      953,
      954,
      955,
      956,
      957,
      958,
      959,
      960,
      961,
      962,
      963,
      964,
      965,
      966,
      967,
      968,
      969,
      970,
      971,
      972,
      973,
      974,
      null,
    ],
    "iso-8859-8": [
      128,
      129,
      130,
      131,
      132,
      133,
      134,
      135,
      136,
      137,
      138,
      139,
      140,
      141,
      142,
      143,
      144,
      145,
      146,
      147,
      148,
      149,
      150,
      151,
      152,
      153,
      154,
      155,
      156,
      157,
      158,
      159,
      160,
      null,
      162,
      163,
      164,
      165,
      166,
      167,
      168,
      169,
      215,
      171,
      172,
      173,
      174,
      175,
      176,
      177,
      178,
      179,
      180,
      181,
      182,
      183,
      184,
      185,
      247,
      187,
      188,
      189,
      190,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      8215,
      1488,
      1489,
      1490,
      1491,
      1492,
      1493,
      1494,
      1495,
      1496,
      1497,
      1498,
      1499,
      1500,
      1501,
      1502,
      1503,
      1504,
      1505,
      1506,
      1507,
      1508,
      1509,
      1510,
      1511,
      1512,
      1513,
      1514,
      null,
      null,
      8206,
      8207,
      null,
    ],
    "iso-8859-10": [
      128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
      143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
      158, 159, 160, 260, 274, 290, 298, 296, 310, 167, 315, 272, 352, 358, 381,
      173, 362, 330, 176, 261, 275, 291, 299, 297, 311, 183, 316, 273, 353, 359,
      382, 8213, 363, 331, 256, 193, 194, 195, 196, 197, 198, 302, 268, 201,
      280, 203, 278, 205, 206, 207, 208, 325, 332, 211, 212, 213, 214, 360, 216,
      370, 218, 219, 220, 221, 222, 223, 257, 225, 226, 227, 228, 229, 230, 303,
      269, 233, 281, 235, 279, 237, 238, 239, 240, 326, 333, 243, 244, 245, 246,
      361, 248, 371, 250, 251, 252, 253, 254, 312,
    ],
    "iso-8859-13": [
      128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
      143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
      158, 159, 160, 8221, 162, 163, 164, 8222, 166, 167, 216, 169, 342, 171,
      172, 173, 174, 198, 176, 177, 178, 179, 8220, 181, 182, 183, 248, 185,
      343, 187, 188, 189, 190, 230, 260, 302, 256, 262, 196, 197, 280, 274, 268,
      201, 377, 278, 290, 310, 298, 315, 352, 323, 325, 211, 332, 213, 214, 215,
      370, 321, 346, 362, 220, 379, 381, 223, 261, 303, 257, 263, 228, 229, 281,
      275, 269, 233, 378, 279, 291, 311, 299, 316, 353, 324, 326, 243, 333, 245,
      246, 247, 371, 322, 347, 363, 252, 380, 382, 8217,
    ],
    "iso-8859-14": [
      128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
      143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
      158, 159, 160, 7682, 7683, 163, 266, 267, 7690, 167, 7808, 169, 7810,
      7691, 7922, 173, 174, 376, 7710, 7711, 288, 289, 7744, 7745, 182, 7766,
      7809, 7767, 7811, 7776, 7923, 7812, 7813, 7777, 192, 193, 194, 195, 196,
      197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 372, 209, 210, 211,
      212, 213, 214, 7786, 216, 217, 218, 219, 220, 221, 374, 223, 224, 225,
      226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 373,
      241, 242, 243, 244, 245, 246, 7787, 248, 249, 250, 251, 252, 253, 375,
      255,
    ],
    "iso-8859-15": [
      128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
      143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
      158, 159, 160, 161, 162, 163, 8364, 165, 352, 167, 353, 169, 170, 171,
      172, 173, 174, 175, 176, 177, 178, 179, 381, 181, 182, 183, 382, 185, 186,
      187, 338, 339, 376, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
      202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
      217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
      232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
      247, 248, 249, 250, 251, 252, 253, 254, 255,
    ],
    "iso-8859-16": [
      128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
      143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
      158, 159, 160, 260, 261, 321, 8364, 8222, 352, 167, 353, 169, 536, 171,
      377, 173, 378, 379, 176, 177, 268, 322, 381, 8221, 182, 183, 382, 269,
      537, 187, 338, 339, 376, 380, 192, 193, 194, 258, 196, 262, 198, 199, 200,
      201, 202, 203, 204, 205, 206, 207, 272, 323, 210, 211, 212, 336, 214, 346,
      368, 217, 218, 219, 220, 280, 538, 223, 224, 225, 226, 259, 228, 263, 230,
      231, 232, 233, 234, 235, 236, 237, 238, 239, 273, 324, 242, 243, 244, 337,
      246, 347, 369, 249, 250, 251, 252, 281, 539, 255,
    ],
    "koi8-r": [
      9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9600,
      9604, 9608, 9612, 9616, 9617, 9618, 9619, 8992, 9632, 8729, 8730, 8776,
      8804, 8805, 160, 8993, 176, 178, 183, 247, 9552, 9553, 9554, 1105, 9555,
      9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567,
      9568, 9569, 1025, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578,
      9579, 9580, 169, 1102, 1072, 1073, 1094, 1076, 1077, 1092, 1075, 1093,
      1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1103, 1088, 1089, 1090,
      1091, 1078, 1074, 1100, 1099, 1079, 1096, 1101, 1097, 1095, 1098, 1070,
      1040, 1041, 1062, 1044, 1045, 1060, 1043, 1061, 1048, 1049, 1050, 1051,
      1052, 1053, 1054, 1055, 1071, 1056, 1057, 1058, 1059, 1046, 1042, 1068,
      1067, 1047, 1064, 1069, 1065, 1063, 1066,
    ],
    "koi8-u": [
      9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9600,
      9604, 9608, 9612, 9616, 9617, 9618, 9619, 8992, 9632, 8729, 8730, 8776,
      8804, 8805, 160, 8993, 176, 178, 183, 247, 9552, 9553, 9554, 1105, 1108,
      9556, 1110, 1111, 9559, 9560, 9561, 9562, 9563, 1169, 1118, 9566, 9567,
      9568, 9569, 1025, 1028, 9571, 1030, 1031, 9574, 9575, 9576, 9577, 9578,
      1168, 1038, 169, 1102, 1072, 1073, 1094, 1076, 1077, 1092, 1075, 1093,
      1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1103, 1088, 1089, 1090,
      1091, 1078, 1074, 1100, 1099, 1079, 1096, 1101, 1097, 1095, 1098, 1070,
      1040, 1041, 1062, 1044, 1045, 1060, 1043, 1061, 1048, 1049, 1050, 1051,
      1052, 1053, 1054, 1055, 1071, 1056, 1057, 1058, 1059, 1046, 1042, 1068,
      1067, 1047, 1064, 1069, 1065, 1063, 1066,
    ],
    macintosh: [
      196, 197, 199, 201, 209, 214, 220, 225, 224, 226, 228, 227, 229, 231, 233,
      232, 234, 235, 237, 236, 238, 239, 241, 243, 242, 244, 246, 245, 250, 249,
      251, 252, 8224, 176, 162, 163, 167, 8226, 182, 223, 174, 169, 8482, 180,
      168, 8800, 198, 216, 8734, 177, 8804, 8805, 165, 181, 8706, 8721, 8719,
      960, 8747, 170, 186, 937, 230, 248, 191, 161, 172, 8730, 402, 8776, 8710,
      171, 187, 8230, 160, 192, 195, 213, 338, 339, 8211, 8212, 8220, 8221,
      8216, 8217, 247, 9674, 255, 376, 8260, 8364, 8249, 8250, 64257, 64258,
      8225, 183, 8218, 8222, 8240, 194, 202, 193, 203, 200, 205, 206, 207, 204,
      211, 212, 63743, 210, 218, 219, 217, 305, 710, 732, 175, 728, 729, 730,
      184, 733, 731, 711,
    ],
    "windows-874": [
      8364,
      129,
      130,
      131,
      132,
      8230,
      134,
      135,
      136,
      137,
      138,
      139,
      140,
      141,
      142,
      143,
      144,
      8216,
      8217,
      8220,
      8221,
      8226,
      8211,
      8212,
      152,
      153,
      154,
      155,
      156,
      157,
      158,
      159,
      160,
      3585,
      3586,
      3587,
      3588,
      3589,
      3590,
      3591,
      3592,
      3593,
      3594,
      3595,
      3596,
      3597,
      3598,
      3599,
      3600,
      3601,
      3602,
      3603,
      3604,
      3605,
      3606,
      3607,
      3608,
      3609,
      3610,
      3611,
      3612,
      3613,
      3614,
      3615,
      3616,
      3617,
      3618,
      3619,
      3620,
      3621,
      3622,
      3623,
      3624,
      3625,
      3626,
      3627,
      3628,
      3629,
      3630,
      3631,
      3632,
      3633,
      3634,
      3635,
      3636,
      3637,
      3638,
      3639,
      3640,
      3641,
      3642,
      null,
      null,
      null,
      null,
      3647,
      3648,
      3649,
      3650,
      3651,
      3652,
      3653,
      3654,
      3655,
      3656,
      3657,
      3658,
      3659,
      3660,
      3661,
      3662,
      3663,
      3664,
      3665,
      3666,
      3667,
      3668,
      3669,
      3670,
      3671,
      3672,
      3673,
      3674,
      3675,
      null,
      null,
      null,
      null,
    ],
    "windows-1250": [
      8364, 129, 8218, 131, 8222, 8230, 8224, 8225, 136, 8240, 352, 8249, 346,
      356, 381, 377, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 152, 8482,
      353, 8250, 347, 357, 382, 378, 160, 711, 728, 321, 164, 260, 166, 167,
      168, 169, 350, 171, 172, 173, 174, 379, 176, 177, 731, 322, 180, 181, 182,
      183, 184, 261, 351, 187, 317, 733, 318, 380, 340, 193, 194, 258, 196, 313,
      262, 199, 268, 201, 280, 203, 282, 205, 206, 270, 272, 323, 327, 211, 212,
      336, 214, 215, 344, 366, 218, 368, 220, 221, 354, 223, 341, 225, 226, 259,
      228, 314, 263, 231, 269, 233, 281, 235, 283, 237, 238, 271, 273, 324, 328,
      243, 244, 337, 246, 247, 345, 367, 250, 369, 252, 253, 355, 729,
    ],
    "windows-1251": [
      1026, 1027, 8218, 1107, 8222, 8230, 8224, 8225, 8364, 8240, 1033, 8249,
      1034, 1036, 1035, 1039, 1106, 8216, 8217, 8220, 8221, 8226, 8211, 8212,
      152, 8482, 1113, 8250, 1114, 1116, 1115, 1119, 160, 1038, 1118, 1032, 164,
      1168, 166, 167, 1025, 169, 1028, 171, 172, 173, 174, 1031, 176, 177, 1030,
      1110, 1169, 181, 182, 183, 1105, 8470, 1108, 187, 1112, 1029, 1109, 1111,
      1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
      1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063,
      1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
      1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
      1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
      1100, 1101, 1102, 1103,
    ],
    "windows-1252": [
      8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338,
      141, 381, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482,
      353, 8250, 339, 157, 382, 376, 160, 161, 162, 163, 164, 165, 166, 167,
      168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
      183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
      198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
      213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
      228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
      243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255,
    ],
    "windows-1253": [
      8364,
      129,
      8218,
      402,
      8222,
      8230,
      8224,
      8225,
      136,
      8240,
      138,
      8249,
      140,
      141,
      142,
      143,
      144,
      8216,
      8217,
      8220,
      8221,
      8226,
      8211,
      8212,
      152,
      8482,
      154,
      8250,
      156,
      157,
      158,
      159,
      160,
      901,
      902,
      163,
      164,
      165,
      166,
      167,
      168,
      169,
      null,
      171,
      172,
      173,
      174,
      8213,
      176,
      177,
      178,
      179,
      900,
      181,
      182,
      183,
      904,
      905,
      906,
      187,
      908,
      189,
      910,
      911,
      912,
      913,
      914,
      915,
      916,
      917,
      918,
      919,
      920,
      921,
      922,
      923,
      924,
      925,
      926,
      927,
      928,
      929,
      null,
      931,
      932,
      933,
      934,
      935,
      936,
      937,
      938,
      939,
      940,
      941,
      942,
      943,
      944,
      945,
      946,
      947,
      948,
      949,
      950,
      951,
      952,
      953,
      954,
      955,
      956,
      957,
      958,
      959,
      960,
      961,
      962,
      963,
      964,
      965,
      966,
      967,
      968,
      969,
      970,
      971,
      972,
      973,
      974,
      null,
    ],
    "windows-1254": [
      8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338,
      141, 142, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482,
      353, 8250, 339, 157, 158, 376, 160, 161, 162, 163, 164, 165, 166, 167,
      168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
      183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
      198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 286, 209, 210, 211, 212,
      213, 214, 215, 216, 217, 218, 219, 220, 304, 350, 223, 224, 225, 226, 227,
      228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 287, 241, 242,
      243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 305, 351, 255,
    ],
    "windows-1255": [
      8364,
      129,
      8218,
      402,
      8222,
      8230,
      8224,
      8225,
      710,
      8240,
      138,
      8249,
      140,
      141,
      142,
      143,
      144,
      8216,
      8217,
      8220,
      8221,
      8226,
      8211,
      8212,
      732,
      8482,
      154,
      8250,
      156,
      157,
      158,
      159,
      160,
      161,
      162,
      163,
      8362,
      165,
      166,
      167,
      168,
      169,
      215,
      171,
      172,
      173,
      174,
      175,
      176,
      177,
      178,
      179,
      180,
      181,
      182,
      183,
      184,
      185,
      247,
      187,
      188,
      189,
      190,
      191,
      1456,
      1457,
      1458,
      1459,
      1460,
      1461,
      1462,
      1463,
      1464,
      1465,
      null,
      1467,
      1468,
      1469,
      1470,
      1471,
      1472,
      1473,
      1474,
      1475,
      1520,
      1521,
      1522,
      1523,
      1524,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      1488,
      1489,
      1490,
      1491,
      1492,
      1493,
      1494,
      1495,
      1496,
      1497,
      1498,
      1499,
      1500,
      1501,
      1502,
      1503,
      1504,
      1505,
      1506,
      1507,
      1508,
      1509,
      1510,
      1511,
      1512,
      1513,
      1514,
      null,
      null,
      8206,
      8207,
      null,
    ],
    "windows-1256": [
      8364, 1662, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 1657, 8249, 338,
      1670, 1688, 1672, 1711, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 1705,
      8482, 1681, 8250, 339, 8204, 8205, 1722, 160, 1548, 162, 163, 164, 165,
      166, 167, 168, 169, 1726, 171, 172, 173, 174, 175, 176, 177, 178, 179,
      180, 181, 182, 183, 184, 185, 1563, 187, 188, 189, 190, 1567, 1729, 1569,
      1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
      1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 215, 1591, 1592,
      1593, 1594, 1600, 1601, 1602, 1603, 224, 1604, 226, 1605, 1606, 1607,
      1608, 231, 232, 233, 234, 235, 1609, 1610, 238, 239, 1611, 1612, 1613,
      1614, 244, 1615, 1616, 247, 1617, 249, 1618, 251, 252, 8206, 8207, 1746,
    ],
    "windows-1257": [
      8364,
      129,
      8218,
      131,
      8222,
      8230,
      8224,
      8225,
      136,
      8240,
      138,
      8249,
      140,
      168,
      711,
      184,
      144,
      8216,
      8217,
      8220,
      8221,
      8226,
      8211,
      8212,
      152,
      8482,
      154,
      8250,
      156,
      175,
      731,
      159,
      160,
      null,
      162,
      163,
      164,
      null,
      166,
      167,
      216,
      169,
      342,
      171,
      172,
      173,
      174,
      198,
      176,
      177,
      178,
      179,
      180,
      181,
      182,
      183,
      248,
      185,
      343,
      187,
      188,
      189,
      190,
      230,
      260,
      302,
      256,
      262,
      196,
      197,
      280,
      274,
      268,
      201,
      377,
      278,
      290,
      310,
      298,
      315,
      352,
      323,
      325,
      211,
      332,
      213,
      214,
      215,
      370,
      321,
      346,
      362,
      220,
      379,
      381,
      223,
      261,
      303,
      257,
      263,
      228,
      229,
      281,
      275,
      269,
      233,
      378,
      279,
      291,
      311,
      299,
      316,
      353,
      324,
      326,
      243,
      333,
      245,
      246,
      247,
      371,
      322,
      347,
      363,
      252,
      380,
      382,
      729,
    ],
    "windows-1258": [
      8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 138, 8249, 338,
      141, 142, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482,
      154, 8250, 339, 157, 158, 376, 160, 161, 162, 163, 164, 165, 166, 167,
      168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
      183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 258, 196, 197,
      198, 199, 200, 201, 202, 203, 768, 205, 206, 207, 272, 209, 777, 211, 212,
      416, 214, 215, 216, 217, 218, 219, 220, 431, 771, 223, 224, 225, 226, 259,
      228, 229, 230, 231, 232, 233, 234, 235, 769, 237, 238, 239, 273, 241, 803,
      243, 244, 417, 246, 247, 248, 249, 250, 251, 252, 432, 8363, 255,
    ],
    "x-mac-cyrillic": [
      1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
      1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063,
      1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 8224, 176, 1168, 163, 167,
      8226, 182, 1030, 174, 169, 8482, 1026, 1106, 8800, 1027, 1107, 8734, 177,
      8804, 8805, 1110, 181, 1169, 1032, 1028, 1108, 1031, 1111, 1033, 1113,
      1034, 1114, 1112, 1029, 172, 8730, 402, 8776, 8710, 171, 187, 8230, 160,
      1035, 1115, 1036, 1116, 1109, 8211, 8212, 8220, 8221, 8216, 8217, 247,
      8222, 1038, 1118, 1039, 1119, 8470, 1025, 1105, 1103, 1072, 1073, 1074,
      1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
      1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098,
      1099, 1100, 1101, 1102, 8364,
    ],
  };
})(this);
if (typeof module !== "undefined" && module.exports) {
  this["encoding-indexes"] = require("./encoding-indexes.js")[
    "encoding-indexes"
  ];
}
(function (c) {
  function Y(aa, ab, Z) {
    return ab <= aa && aa <= Z;
  }
  function X(aa, Z) {
    return Math.floor(aa / Z);
  }
  function V(Z) {
    if (Z === undefined) {
      return {};
    }
    if (Z === Object(Z)) {
      return Z;
    }
    throw TypeError("Could not convert argument to dictionary");
  }
  function o(ab) {
    var ah = String(ab);
    var Z = ah.length;
    var aa = 0;
    var ag = [];
    while (aa < Z) {
      var ad = ah.charCodeAt(aa);
      if (ad < 55296 || ad > 57343) {
        ag.push(ad);
      } else {
        if (56320 <= ad && ad <= 57343) {
          ag.push(65533);
        } else {
          if (55296 <= ad && ad <= 56319) {
            if (aa === Z - 1) {
              ag.push(65533);
            } else {
              var ac = ab.charCodeAt(aa + 1);
              if (56320 <= ac && ac <= 57343) {
                var af = ad & 1023;
                var ae = ac & 1023;
                ag.push(65536 + (af << 10) + ae);
                aa += 1;
              } else {
                ag.push(65533);
              }
            }
          }
        }
      }
      aa += 1;
    }
    return ag;
  }
  function m(aa) {
    var ab = "";
    for (var Z = 0; Z < aa.length; ++Z) {
      var ac = aa[Z];
      if (ac <= 65535) {
        ab += String.fromCharCode(ac);
      } else {
        ac -= 65536;
        ab += String.fromCharCode((ac >> 10) + 55296, (ac & 1023) + 56320);
      }
    }
    return ab;
  }
  var U = -1;
  function w(Z) {
    this.tokens = [].slice.call(Z);
  }
  w.prototype = {
    endOfStream: function () {
      return !this.tokens.length;
    },
    read: function () {
      if (!this.tokens.length) {
        return U;
      }
      return this.tokens.shift();
    },
    prepend: function (Z) {
      if (Array.isArray(Z)) {
        var aa = Z;
        while (aa.length) {
          this.tokens.unshift(aa.pop());
        }
      } else {
        this.tokens.unshift(Z);
      }
    },
    push: function (Z) {
      if (Array.isArray(Z)) {
        var aa = Z;
        while (aa.length) {
          this.tokens.push(aa.shift());
        }
      } else {
        this.tokens.push(Z);
      }
    },
  };
  var x = -1;
  function e(aa, Z) {
    if (aa) {
      throw TypeError("Decoder error");
    }
    return Z || 65533;
  }
  function B(Z) {
    throw TypeError("The code point " + Z + " could not be encoded.");
  }
  function b() {}
  b.prototype = { handler: function (Z, aa) {} };
  function L() {}
  L.prototype = { handler: function (aa, Z) {} };
  function J(Z) {
    Z = String(Z).trim().toLowerCase();
    if (Object.prototype.hasOwnProperty.call(Q, Z)) {
      return Q[Z];
    }
    return null;
  }
  var t = [
    {
      encodings: [
        { labels: ["unicode-1-1-utf-8", "utf-8", "utf8"], name: "utf-8" },
      ],
      heading: "The Encoding",
    },
    {
      encodings: [
        { labels: ["866", "cp866", "csibm866", "ibm866"], name: "ibm866" },
        {
          labels: [
            "csisolatin2",
            "iso-8859-2",
            "iso-ir-101",
            "iso8859-2",
            "iso88592",
            "iso_8859-2",
            "iso_8859-2:1987",
            "l2",
            "latin2",
          ],
          name: "iso-8859-2",
        },
        {
          labels: [
            "csisolatin3",
            "iso-8859-3",
            "iso-ir-109",
            "iso8859-3",
            "iso88593",
            "iso_8859-3",
            "iso_8859-3:1988",
            "l3",
            "latin3",
          ],
          name: "iso-8859-3",
        },
        {
          labels: [
            "csisolatin4",
            "iso-8859-4",
            "iso-ir-110",
            "iso8859-4",
            "iso88594",
            "iso_8859-4",
            "iso_8859-4:1988",
            "l4",
            "latin4",
          ],
          name: "iso-8859-4",
        },
        {
          labels: [
            "csisolatincyrillic",
            "cyrillic",
            "iso-8859-5",
            "iso-ir-144",
            "iso8859-5",
            "iso88595",
            "iso_8859-5",
            "iso_8859-5:1988",
          ],
          name: "iso-8859-5",
        },
        {
          labels: [
            "arabic",
            "asmo-708",
            "csiso88596e",
            "csiso88596i",
            "csisolatinarabic",
            "ecma-114",
            "iso-8859-6",
            "iso-8859-6-e",
            "iso-8859-6-i",
            "iso-ir-127",
            "iso8859-6",
            "iso88596",
            "iso_8859-6",
            "iso_8859-6:1987",
          ],
          name: "iso-8859-6",
        },
        {
          labels: [
            "csisolatingreek",
            "ecma-118",
            "elot_928",
            "greek",
            "greek8",
            "iso-8859-7",
            "iso-ir-126",
            "iso8859-7",
            "iso88597",
            "iso_8859-7",
            "iso_8859-7:1987",
            "sun_eu_greek",
          ],
          name: "iso-8859-7",
        },
        {
          labels: [
            "csiso88598e",
            "csisolatinhebrew",
            "hebrew",
            "iso-8859-8",
            "iso-8859-8-e",
            "iso-ir-138",
            "iso8859-8",
            "iso88598",
            "iso_8859-8",
            "iso_8859-8:1988",
            "visual",
          ],
          name: "iso-8859-8",
        },
        {
          labels: ["csiso88598i", "iso-8859-8-i", "logical"],
          name: "iso-8859-8-i",
        },
        {
          labels: [
            "csisolatin6",
            "iso-8859-10",
            "iso-ir-157",
            "iso8859-10",
            "iso885910",
            "l6",
            "latin6",
          ],
          name: "iso-8859-10",
        },
        {
          labels: ["iso-8859-13", "iso8859-13", "iso885913"],
          name: "iso-8859-13",
        },
        {
          labels: ["iso-8859-14", "iso8859-14", "iso885914"],
          name: "iso-8859-14",
        },
        {
          labels: [
            "csisolatin9",
            "iso-8859-15",
            "iso8859-15",
            "iso885915",
            "iso_8859-15",
            "l9",
          ],
          name: "iso-8859-15",
        },
        { labels: ["iso-8859-16"], name: "iso-8859-16" },
        {
          labels: ["cskoi8r", "koi", "koi8", "koi8-r", "koi8_r"],
          name: "koi8-r",
        },
        { labels: ["koi8-ru", "koi8-u"], name: "koi8-u" },
        {
          labels: ["csmacintosh", "mac", "macintosh", "x-mac-roman"],
          name: "macintosh",
        },
        {
          labels: [
            "dos-874",
            "iso-8859-11",
            "iso8859-11",
            "iso885911",
            "tis-620",
            "windows-874",
          ],
          name: "windows-874",
        },
        {
          labels: ["cp1250", "windows-1250", "x-cp1250"],
          name: "windows-1250",
        },
        {
          labels: ["cp1251", "windows-1251", "x-cp1251"],
          name: "windows-1251",
        },
        {
          labels: [
            "ansi_x3.4-1968",
            "ascii",
            "cp1252",
            "cp819",
            "csisolatin1",
            "ibm819",
            "iso-8859-1",
            "iso-ir-100",
            "iso8859-1",
            "iso88591",
            "iso_8859-1",
            "iso_8859-1:1987",
            "l1",
            "latin1",
            "us-ascii",
            "windows-1252",
            "x-cp1252",
          ],
          name: "windows-1252",
        },
        {
          labels: ["cp1253", "windows-1253", "x-cp1253"],
          name: "windows-1253",
        },
        {
          labels: [
            "cp1254",
            "csisolatin5",
            "iso-8859-9",
            "iso-ir-148",
            "iso8859-9",
            "iso88599",
            "iso_8859-9",
            "iso_8859-9:1989",
            "l5",
            "latin5",
            "windows-1254",
            "x-cp1254",
          ],
          name: "windows-1254",
        },
        {
          labels: ["cp1255", "windows-1255", "x-cp1255"],
          name: "windows-1255",
        },
        {
          labels: ["cp1256", "windows-1256", "x-cp1256"],
          name: "windows-1256",
        },
        {
          labels: ["cp1257", "windows-1257", "x-cp1257"],
          name: "windows-1257",
        },
        {
          labels: ["cp1258", "windows-1258", "x-cp1258"],
          name: "windows-1258",
        },
        {
          labels: ["x-mac-cyrillic", "x-mac-ukrainian"],
          name: "x-mac-cyrillic",
        },
      ],
      heading: "Legacy single-byte encodings",
    },
    {
      encodings: [
        {
          labels: [
            "chinese",
            "csgb2312",
            "csiso58gb231280",
            "gb2312",
            "gb_2312",
            "gb_2312-80",
            "gbk",
            "iso-ir-58",
            "x-gbk",
          ],
          name: "gbk",
        },
        { labels: ["gb18030"], name: "gb18030" },
      ],
      heading: "Legacy multi-byte Chinese (simplified) encodings",
    },
    {
      encodings: [
        {
          labels: ["big5", "big5-hkscs", "cn-big5", "csbig5", "x-x-big5"],
          name: "big5",
        },
      ],
      heading: "Legacy multi-byte Chinese (traditional) encodings",
    },
    {
      encodings: [
        {
          labels: ["cseucpkdfmtjapanese", "euc-jp", "x-euc-jp"],
          name: "euc-jp",
        },
        { labels: ["csiso2022jp", "iso-2022-jp"], name: "iso-2022-jp" },
        {
          labels: [
            "csshiftjis",
            "ms932",
            "ms_kanji",
            "shift-jis",
            "shift_jis",
            "sjis",
            "windows-31j",
            "x-sjis",
          ],
          name: "shift_jis",
        },
      ],
      heading: "Legacy multi-byte Japanese encodings",
    },
    {
      encodings: [
        {
          labels: [
            "cseuckr",
            "csksc56011987",
            "euc-kr",
            "iso-ir-149",
            "korean",
            "ks_c_5601-1987",
            "ks_c_5601-1989",
            "ksc5601",
            "ksc_5601",
            "windows-949",
          ],
          name: "euc-kr",
        },
      ],
      heading: "Legacy multi-byte Korean encodings",
    },
    {
      encodings: [
        {
          labels: [
            "csiso2022kr",
            "hz-gb-2312",
            "iso-2022-cn",
            "iso-2022-cn-ext",
            "iso-2022-kr",
          ],
          name: "replacement",
        },
        { labels: ["utf-16be"], name: "utf-16be" },
        { labels: ["utf-16", "utf-16le"], name: "utf-16le" },
        { labels: ["x-user-defined"], name: "x-user-defined" },
      ],
      heading: "Legacy miscellaneous encodings",
    },
  ];
  var Q = {};
  t.forEach(function (Z) {
    Z.encodings.forEach(function (aa) {
      aa.labels.forEach(function (ab) {
        Q[ab] = aa;
      });
    });
  });
  var R = {};
  var M = {};
  function C(aa, Z) {
    if (!Z) {
      return null;
    }
    return Z[aa] || null;
  }
  function q(aa, Z) {
    var ab = Z.indexOf(aa);
    return ab === -1 ? null : ab;
  }
  function G(Z) {
    if (!("encoding-indexes" in c)) {
      throw Error(
        "Indexes missing. Did you forget to include encoding-indexes.js?"
      );
    }
    return c["encoding-indexes"][Z];
  }
  function g(ae) {
    if ((ae > 39419 && ae < 189000) || ae > 1237575) {
      return null;
    }
    var ad = 0;
    var ab = 0;
    var Z = G("gb18030");
    var aa;
    for (aa = 0; aa < Z.length; ++aa) {
      var ac = Z[aa];
      if (ac[0] <= ae) {
        ad = ac[0];
        ab = ac[1];
      } else {
        break;
      }
    }
    return ab + ae - ad;
  }
  function n(ac) {
    var ae = 0;
    var ab = 0;
    var Z = G("gb18030");
    var aa;
    for (aa = 0; aa < Z.length; ++aa) {
      var ad = Z[aa];
      if (ad[1] <= ac) {
        ae = ad[1];
        ab = ad[0];
      } else {
        break;
      }
    }
    return ab + ac - ae;
  }
  function E(Z) {
    var aa = q(Z, G("jis0208"));
    if (aa === null || Y(aa, 8272, 8835)) {
      return null;
    }
    return aa;
  }
  function r(Z) {
    var aa = G("big5");
    if (
      Z === 9552 ||
      Z === 9566 ||
      Z === 9569 ||
      Z === 9578 ||
      Z === 21313 ||
      Z === 21317
    ) {
      return G.lastIndexOf(Z);
    }
    return q(Z, aa);
  }
  var T = "utf-8";
  function W(aa, Z) {
    if (!(this instanceof W)) {
      return new W(aa, Z);
    }
    aa = aa !== undefined ? String(aa) : T;
    Z = V(Z);
    this._encoding = J(aa);
    if (this._encoding === null || this._encoding.name === "replacement") {
      throw RangeError("Unknown encoding: " + aa);
    }
    if (!M[this._encoding.name]) {
      throw Error(
        "Decoder not present. Did you forget to include encoding-indexes.js?"
      );
    }
    this._streaming = false;
    this._BOMseen = false;
    this._decoder = null;
    this._fatal = Boolean(Z.fatal);
    this._ignoreBOM = Boolean(Z.ignoreBOM);
    if (Object.defineProperty) {
      Object.defineProperty(this, "encoding", { value: this._encoding.name });
      Object.defineProperty(this, "fatal", { value: this._fatal });
      Object.defineProperty(this, "ignoreBOM", { value: this._ignoreBOM });
    } else {
      this.encoding = this._encoding.name;
      this.fatal = this._fatal;
      this.ignoreBOM = this._ignoreBOM;
    }
    return this;
  }
  W.prototype = {
    decode: function h(ab, ac) {
      var aa;
      if (typeof ab === "object" && ab instanceof ArrayBuffer) {
        aa = new Uint8Array(ab);
      } else {
        if (
          typeof ab === "object" &&
          "buffer" in ab &&
          ab.buffer instanceof ArrayBuffer
        ) {
          aa = new Uint8Array(ab.buffer, ab.byteOffset, ab.byteLength);
        } else {
          aa = new Uint8Array(0);
        }
      }
      ac = V(ac);
      if (!this._streaming) {
        this._decoder = M[this._encoding.name]({ fatal: this._fatal });
        this._BOMseen = false;
      }
      this._streaming = Boolean(ac.stream);
      var ae = new w(aa);
      var ad = [];
      var Z;
      while (!ae.endOfStream()) {
        Z = this._decoder.handler(ae, ae.read());
        if (Z === x) {
          break;
        }
        if (Z === null) {
          continue;
        }
        if (Array.isArray(Z)) {
          ad.push.apply(ad, Z);
        } else {
          ad.push(Z);
        }
      }
      if (!this._streaming) {
        do {
          Z = this._decoder.handler(ae, ae.read());
          if (Z === x) {
            break;
          }
          if (Z === null) {
            continue;
          }
          if (Array.isArray(Z)) {
            ad.push.apply(ad, Z);
          } else {
            ad.push(Z);
          }
        } while (!ae.endOfStream());
        this._decoder = null;
      }
      if (ad.length) {
        if (
          ["utf-8", "utf-16le", "utf-16be"].indexOf(this.encoding) !== -1 &&
          !this._ignoreBOM &&
          !this._BOMseen
        ) {
          if (ad[0] === 65279) {
            this._BOMseen = true;
            ad.shift();
          } else {
            this._BOMseen = true;
          }
        }
      }
      return m(ad);
    },
  };
  function D(ac, Z) {
    if (!(this instanceof D)) {
      return new D(ac, Z);
    }
    ac = ac !== undefined ? String(ac) : T;
    Z = V(Z);
    this._encoding = J(ac);
    if (this._encoding === null || this._encoding.name === "replacement") {
      throw RangeError("Unknown encoding: " + ac);
    }
    var ab = Boolean(Z.NONSTANDARD_allowLegacyEncoding);
    var aa =
      this._encoding.name !== "utf-8" &&
      this._encoding.name !== "utf-16le" &&
      this._encoding.name !== "utf-16be";
    if (this._encoding === null || (aa && !ab)) {
      throw RangeError("Unknown encoding: " + ac);
    }
    if (!R[this._encoding.name]) {
      throw Error(
        "Encoder not present. Did you forget to include encoding-indexes.js?"
      );
    }
    this._streaming = false;
    this._encoder = null;
    this._options = { fatal: Boolean(Z.fatal) };
    if (Object.defineProperty) {
      Object.defineProperty(this, "encoding", { value: this._encoding.name });
    } else {
      this.encoding = this._encoding.name;
    }
    return this;
  }
  D.prototype = {
    encode: function i(aa, ac) {
      aa = aa ? String(aa) : "";
      ac = V(ac);
      if (!this._streaming) {
        this._encoder = R[this._encoding.name](this._options);
      }
      this._streaming = Boolean(ac.stream);
      var ab = [];
      var ad = new w(o(aa));
      var Z;
      while (!ad.endOfStream()) {
        Z = this._encoder.handler(ad, ad.read());
        if (Z === x) {
          break;
        }
        if (Array.isArray(Z)) {
          ab.push.apply(ab, Z);
        } else {
          ab.push(Z);
        }
      }
      if (!this._streaming) {
        while (true) {
          Z = this._encoder.handler(ad, ad.read());
          if (Z === x) {
            break;
          }
          if (Array.isArray(Z)) {
            ab.push.apply(ab, Z);
          } else {
            ab.push(Z);
          }
        }
        this._encoder = null;
      }
      return new Uint8Array(ab);
    },
  };
  function P(aa) {
    var ae = aa.fatal;
    var ac = 0,
      ab = 0,
      af = 0,
      ad = 128,
      Z = 191;
    this.handler = function (ah, ai) {
      if (ai === U && af !== 0) {
        af = 0;
        return e(ae);
      }
      if (ai === U) {
        return x;
      }
      if (af === 0) {
        if (Y(ai, 0, 127)) {
          return ai;
        }
        if (Y(ai, 194, 223)) {
          af = 1;
          ac = ai - 192;
        } else {
          if (Y(ai, 224, 239)) {
            if (ai === 224) {
              ad = 160;
            }
            if (ai === 237) {
              Z = 159;
            }
            af = 2;
            ac = ai - 224;
          } else {
            if (Y(ai, 240, 244)) {
              if (ai === 240) {
                ad = 144;
              }
              if (ai === 244) {
                Z = 143;
              }
              af = 3;
              ac = ai - 240;
            } else {
              return e(ae);
            }
          }
        }
        ac = ac << (6 * af);
        return null;
      }
      if (!Y(ai, ad, Z)) {
        ac = af = ab = 0;
        ad = 128;
        Z = 191;
        ah.prepend(ai);
        return e(ae);
      }
      ad = 128;
      Z = 191;
      ab += 1;
      ac += (ai - 128) << (6 * (af - ab));
      if (ab !== af) {
        return null;
      }
      var ag = ac;
      ac = af = ab = 0;
      return ag;
    };
  }
  function y(Z) {
    var aa = Z.fatal;
    this.handler = function (ag, ad) {
      if (ad === U) {
        return x;
      }
      if (Y(ad, 0, 127)) {
        return ad;
      }
      var ae, af;
      if (Y(ad, 128, 2047)) {
        ae = 1;
        af = 192;
      } else {
        if (Y(ad, 2048, 65535)) {
          ae = 2;
          af = 224;
        } else {
          if (Y(ad, 65536, 1114111)) {
            ae = 3;
            af = 240;
          }
        }
      }
      var ab = [(ad >> (6 * ae)) + af];
      while (ae > 0) {
        var ac = ad >> (6 * (ae - 1));
        ab.push(128 | (ac & 63));
        ae -= 1;
      }
      return ab;
    };
  }
  R["utf-8"] = function (Z) {
    return new y(Z);
  };
  M["utf-8"] = function (Z) {
    return new P(Z);
  };
  function l(aa, Z) {
    var ab = Z.fatal;
    this.handler = function (ad, ae) {
      if (ae === U) {
        return x;
      }
      if (Y(ae, 0, 127)) {
        return ae;
      }
      var ac = aa[ae - 128];
      if (ac === null) {
        return e(ab);
      }
      return ac;
    };
  }
  function N(aa, Z) {
    var ab = Z.fatal;
    this.handler = function (ae, ac) {
      if (ac === U) {
        return x;
      }
      if (Y(ac, 0, 127)) {
        return ac;
      }
      var ad = q(ac, aa);
      if (ad === null) {
        B(ac);
      }
      return ad + 128;
    };
  }
  (function () {
    if (!("encoding-indexes" in c)) {
      return;
    }
    t.forEach(function (Z) {
      if (Z.heading !== "Legacy single-byte encodings") {
        return;
      }
      Z.encodings.forEach(function (ac) {
        var ab = ac.name;
        var aa = G(ab);
        M[ab] = function (ad) {
          return new l(aa, ad);
        };
        R[ab] = function (ad) {
          return new N(aa, ad);
        };
      });
    });
  })();
  M.gbk = function (Z) {
    return new v(Z);
  };
  R.gbk = function (Z) {
    return new f(Z, true);
  };
  function v(ab) {
    var ad = ab.fatal;
    var ac = 0,
      aa = 0,
      Z = 0;
    this.handler = function (aj, ak) {
      if (ak === U && ac === 0 && aa === 0 && Z === 0) {
        return x;
      }
      if (ak === U && (ac !== 0 || aa !== 0 || Z !== 0)) {
        ac = 0;
        aa = 0;
        Z = 0;
        e(ad);
      }
      var ag;
      if (Z !== 0) {
        ag = null;
        if (Y(ak, 48, 57)) {
          ag = g(
            (((ac - 129) * 10 + (aa - 48)) * 126 + (Z - 129)) * 10 + ak - 48
          );
        }
        var ae = [aa, Z, ak];
        ac = 0;
        aa = 0;
        Z = 0;
        if (ag === null) {
          aj.prepend(ae);
          return e(ad);
        }
        return ag;
      }
      if (aa !== 0) {
        if (Y(ak, 129, 254)) {
          Z = ak;
          return null;
        }
        aj.prepend([aa, ak]);
        ac = 0;
        aa = 0;
        return e(ad);
      }
      if (ac !== 0) {
        if (Y(ak, 48, 57)) {
          aa = ak;
          return null;
        }
        var af = ac;
        var ai = null;
        ac = 0;
        var ah = ak < 127 ? 64 : 65;
        if (Y(ak, 64, 126) || Y(ak, 128, 254)) {
          ai = (af - 129) * 190 + (ak - ah);
        }
        ag = ai === null ? null : C(ai, G("gb18030"));
        if (ag === null && Y(ak, 0, 127)) {
          aj.prepend(ak);
        }
        if (ag === null) {
          return e(ad);
        }
        return ag;
      }
      if (Y(ak, 0, 127)) {
        return ak;
      }
      if (ak === 128) {
        return 8364;
      }
      if (Y(ak, 129, 254)) {
        ac = ak;
        return null;
      }
      return e(ad);
    };
  }
  function f(aa, Z) {
    var ab = aa.fatal;
    this.handler = function (al, af) {
      if (af === U) {
        return x;
      }
      if (Y(af, 0, 127)) {
        return af;
      }
      if (Z && af === 8364) {
        return 128;
      }
      var ac = q(af, G("gb18030"));
      if (ac !== null) {
        var ag = X(ac, 190) + 129;
        var ad = ac % 190;
        var ae = ad < 63 ? 64 : 65;
        return [ag, ad + ae];
      }
      if (Z) {
        return B(af);
      }
      ac = n(af);
      var ak = X(X(X(ac, 10), 126), 10);
      ac = ac - ak * 10 * 126 * 10;
      var aj = X(X(ac, 10), 126);
      ac = ac - aj * 10 * 126;
      var ai = X(ac, 10);
      var ah = ac - ai * 10;
      return [ak + 129, aj + 48, ai + 129, ah + 48];
    };
  }
  R.gb18030 = function (Z) {
    return new f(Z);
  };
  M.gb18030 = function (Z) {
    return new v(Z);
  };
  function I(aa) {
    var ab = aa.fatal;
    var Z = 0;
    this.handler = function (ag, ah) {
      if (ah === U && Z !== 0) {
        Z = 0;
        return e(ab);
      }
      if (ah === U && Z === 0) {
        return x;
      }
      if (Z !== 0) {
        var ac = Z;
        var af = null;
        Z = 0;
        var ae = ah < 127 ? 64 : 98;
        if (Y(ah, 64, 126) || Y(ah, 161, 254)) {
          af = (ac - 129) * 157 + (ah - ae);
        }
        switch (af) {
          case 1133:
            return [202, 772];
          case 1135:
            return [202, 780];
          case 1164:
            return [234, 772];
          case 1166:
            return [234, 780];
        }
        var ad = af === null ? null : C(af, G("big5"));
        if (ad === null && Y(ah, 0, 127)) {
          ag.prepend(ah);
        }
        if (ad === null) {
          return e(ab);
        }
        return ad;
      }
      if (Y(ah, 0, 127)) {
        return ah;
      }
      if (Y(ah, 129, 254)) {
        Z = ah;
        return null;
      }
      return e(ab);
    };
  }
  function s(Z) {
    var aa = Z.fatal;
    this.handler = function (ag, ad) {
      if (ad === U) {
        return x;
      }
      if (Y(ad, 0, 127)) {
        return ad;
      }
      var af = r(ad, G("big5"));
      if (af === null) {
        return B(ad);
      }
      var ac = X(af, 157) + 129;
      if (ac < 161) {
        return B(ad);
      }
      var ab = af % 157;
      var ae = ab < 63 ? 64 : 98;
      return [ac, ab + ae];
    };
  }
  R.big5 = function (Z) {
    return new s(Z);
  };
  M.big5 = function (Z) {
    return new I(Z);
  };
  function d(ab) {
    var ac = ab.fatal;
    var Z = false,
      aa = 0;
    this.handler = function (af, ag) {
      if (ag === U && aa !== 0) {
        aa = 0;
        return e(ac);
      }
      if (ag === U && aa === 0) {
        return x;
      }
      if (aa === 142 && Y(ag, 161, 223)) {
        aa = 0;
        return 65377 + ag - 161;
      }
      if (aa === 143 && Y(ag, 161, 254)) {
        Z = true;
        aa = ag;
        return null;
      }
      if (aa !== 0) {
        var ad = aa;
        aa = 0;
        var ae = null;
        if (Y(ad, 161, 254) && Y(ag, 161, 254)) {
          ae = C((ad - 161) * 94 + (ag - 161), G(!Z ? "jis0208" : "jis0212"));
        }
        Z = false;
        if (!Y(ag, 161, 254)) {
          af.prepend(ag);
        }
        if (ae === null) {
          return e(ac);
        }
        return ae;
      }
      if (Y(ag, 0, 127)) {
        return ag;
      }
      if (ag === 142 || ag === 143 || Y(ag, 161, 254)) {
        aa = ag;
        return null;
      }
      return e(ac);
    };
  }
  function H(Z) {
    var aa = Z.fatal;
    this.handler = function (af, ad) {
      if (ad === U) {
        return x;
      }
      if (Y(ad, 0, 127)) {
        return ad;
      }
      if (ad === 165) {
        return 92;
      }
      if (ad === 8254) {
        return 126;
      }
      if (Y(ad, 65377, 65439)) {
        return [142, ad - 65377 + 161];
      }
      if (ad === 8226) {
        ad = 65293;
      }
      var ae = q(ad, G("jis0208"));
      if (ae === null) {
        return B(ad);
      }
      var ac = X(ae, 94) + 161;
      var ab = (ae % 94) + 161;
      return [ac, ab];
    };
  }
  R["euc-jp"] = function (Z) {
    return new H(Z);
  };
  M["euc-jp"] = function (Z) {
    return new d(Z);
  };
  function A(ac) {
    var af = ac.fatal;
    var ab = {
      ASCII: 0,
      Roman: 1,
      Katakana: 2,
      LeadByte: 3,
      TrailByte: 4,
      EscapeStart: 5,
      Escape: 6,
    };
    var aa = ab.ASCII,
      Z = ab.ASCII,
      ad = 0,
      ae = false;
    this.handler = function (al, am) {
      switch (aa) {
        default:
        case ab.ASCII:
          if (am === 27) {
            aa = ab.EscapeStart;
            return null;
          }
          if (Y(am, 0, 127) && am !== 14 && am !== 15 && am !== 27) {
            ae = false;
            return am;
          }
          if (am === U) {
            return x;
          }
          ae = false;
          return e(af);
        case ab.Roman:
          if (am === 27) {
            aa = ab.EscapeStart;
            return null;
          }
          if (am === 92) {
            ae = false;
            return 165;
          }
          if (am === 126) {
            ae = false;
            return 8254;
          }
          if (
            Y(am, 0, 127) &&
            am !== 14 &&
            am !== 15 &&
            am !== 27 &&
            am !== 92 &&
            am !== 126
          ) {
            ae = false;
            return am;
          }
          if (am === U) {
            return x;
          }
          ae = false;
          return e(af);
        case ab.Katakana:
          if (am === 27) {
            aa = ab.EscapeStart;
            return null;
          }
          if (Y(am, 33, 95)) {
            ae = false;
            return 65377 + am - 33;
          }
          if (am === U) {
            return x;
          }
          ae = false;
          return e(af);
        case ab.LeadByte:
          if (am === 27) {
            aa = ab.EscapeStart;
            return null;
          }
          if (Y(am, 33, 126)) {
            ae = false;
            ad = am;
            aa = ab.TrailByte;
            return null;
          }
          if (am === U) {
            return x;
          }
          ae = false;
          return e(af);
        case ab.TrailByte:
          if (am === 27) {
            aa = ab.EscapeStart;
            return e(af);
          }
          if (Y(am, 33, 126)) {
            aa = ab.LeadByte;
            var ak = (ad - 33) * 94 + am - 33;
            var ah = C(ak, G("jis0208"));
            if (ah === null) {
              return e(af);
            }
            return ah;
          }
          if (am === U) {
            aa = ab.LeadByte;
            al.prepend(am);
            return e(af);
          }
          aa = ab.LeadByte;
          return e(af);
        case ab.EscapeStart:
          if (am === 36 || am === 40) {
            ad = am;
            aa = ab.Escape;
            return null;
          }
          al.prepend(am);
          ae = false;
          aa = Z;
          return e(af);
        case ab.Escape:
          var ag = ad;
          ad = 0;
          var ai = null;
          if (ag === 40 && am === 66) {
            ai = ab.ASCII;
          }
          if (ag === 40 && am === 74) {
            ai = ab.Roman;
          }
          if (ag === 40 && am === 73) {
            ai = ab.Katakana;
          }
          if (ag === 36 && (am === 64 || am === 66)) {
            ai = ab.LeadByte;
          }
          if (ai !== null) {
            aa = aa = ai;
            var aj = ae;
            ae = true;
            return !aj ? null : e(af);
          }
          al.prepend([ag, am]);
          ae = false;
          aa = Z;
          return e(af);
      }
    };
  }
  function j(aa) {
    var ab = aa.fatal;
    var Z = { ASCII: 0, Roman: 1, jis0208: 2 };
    var ac = Z.ASCII;
    this.handler = function (ah, af) {
      if (af === U && ac !== Z.ASCII) {
        ah.prepend(af);
        return [27, 40, 66];
      }
      if (af === U && ac === Z.ASCII) {
        return x;
      }
      if (ac === Z.ASCII && Y(af, 0, 127)) {
        return af;
      }
      if (ac === Z.Roman && Y(af, 0, 127) && af !== 92 && af !== 126) {
        if (Y(af, 0, 127)) {
          return af;
        }
        if (af === 165) {
          return 92;
        }
        if (af === 8254) {
          return 126;
        }
      }
      if (Y(af, 0, 127) && ac !== Z.ASCII) {
        ah.prepend(af);
        ac = Z.ASCII;
        return [27, 40, 66];
      }
      if ((af === 165 || af === 8254) && ac !== Z.Roman) {
        ah.prepend(af);
        ac = Z.Roman;
        return [27, 40, 74];
      }
      if (af === 8226) {
        af = 65293;
      }
      var ag = q(af, G("jis0208"));
      if (ag === null) {
        return B(af);
      }
      if (ac !== Z.jis0208) {
        ah.prepend(af);
        ac = Z.jis0208;
        return [27, 36, 66];
      }
      var ae = X(ag, 94) + 33;
      var ad = (ag % 94) + 33;
      return [ae, ad];
    };
  }
  R["iso-2022-jp"] = function (Z) {
    return new j(Z);
  };
  M["iso-2022-jp"] = function (Z) {
    return new A(Z);
  };
  function S(Z) {
    var ab = Z.fatal;
    var aa = 0;
    this.handler = function (ag, ai) {
      if (ai === U && aa !== 0) {
        aa = 0;
        return e(ab);
      }
      if (ai === U && aa === 0) {
        return x;
      }
      if (aa !== 0) {
        var ac = aa;
        var af = null;
        aa = 0;
        var ae = ai < 127 ? 64 : 65;
        var ah = ac < 160 ? 129 : 193;
        if (Y(ai, 64, 126) || Y(ai, 128, 252)) {
          af = (ac - ah) * 188 + ai - ae;
        }
        var ad = af === null ? null : C(af, G("jis0208"));
        if (ad === null && af !== null && Y(af, 8836, 10528)) {
          return 57344 + af - 8836;
        }
        if (ad === null && Y(ai, 0, 127)) {
          ag.prepend(ai);
        }
        if (ad === null) {
          return e(ab);
        }
        return ad;
      }
      if (Y(ai, 0, 128)) {
        return ai;
      }
      if (Y(ai, 161, 223)) {
        return 65377 + ai - 161;
      }
      if (Y(ai, 129, 159) || Y(ai, 224, 252)) {
        aa = ai;
        return null;
      }
      return e(ab);
    };
  }
  function z(Z) {
    var aa = Z.fatal;
    this.handler = function (ag, ad) {
      if (ad === U) {
        return x;
      }
      if (Y(ad, 0, 128)) {
        return ad;
      }
      if (ad === 165) {
        return 92;
      }
      if (ad === 8254) {
        return 126;
      }
      if (Y(ad, 65377, 65439)) {
        return ad - 65377 + 161;
      }
      if (ad === 8226) {
        ad = 65293;
      }
      var af = E(ad);
      if (af === null) {
        return B(ad);
      }
      var ac = X(af, 188);
      var ah = ac < 31 ? 129 : 193;
      var ab = af % 188;
      var ae = ab < 63 ? 64 : 65;
      return [ac + ah, ab + ae];
    };
  }
  R.shift_jis = function (Z) {
    return new z(Z);
  };
  M.shift_jis = function (Z) {
    return new S(Z);
  };
  function F(aa) {
    var ab = aa.fatal;
    var Z = 0;
    this.handler = function (af, ag) {
      if (ag === U && Z !== 0) {
        Z = 0;
        return e(ab);
      }
      if (ag === U && Z === 0) {
        return x;
      }
      if (Z !== 0) {
        var ac = Z;
        var ae = null;
        Z = 0;
        if (Y(ag, 65, 254)) {
          ae = (ac - 129) * 190 + (ag - 65);
        }
        var ad = ae === null ? null : C(ae, G("euc-kr"));
        if (ae === null && Y(ag, 0, 127)) {
          af.prepend(ag);
        }
        if (ad === null) {
          return e(ab);
        }
        return ad;
      }
      if (Y(ag, 0, 127)) {
        return ag;
      }
      if (Y(ag, 129, 254)) {
        Z = ag;
        return null;
      }
      return e(ab);
    };
  }
  function p(Z) {
    var aa = Z.fatal;
    this.handler = function (af, ad) {
      if (ad === U) {
        return x;
      }
      if (Y(ad, 0, 127)) {
        return ad;
      }
      var ae = q(ad, G("euc-kr"));
      if (ae === null) {
        return B(ad);
      }
      var ac = X(ae, 190) + 129;
      var ab = (ae % 190) + 65;
      return [ac, ab];
    };
  }
  R["euc-kr"] = function (Z) {
    return new p(Z);
  };
  M["euc-kr"] = function (Z) {
    return new F(Z);
  };
  function K(ab, ac) {
    var aa = ab >> 8;
    var Z = ab & 255;
    if (ac) {
      return [aa, Z];
    }
    return [Z, aa];
  }
  function k(ad, aa) {
    var ac = aa.fatal;
    var ab = null,
      Z = null;
    this.handler = function (ag, ah) {
      if (ah === U && (ab !== null || Z !== null)) {
        return e(ac);
      }
      if (ah === U && ab === null && Z === null) {
        return x;
      }
      if (ab === null) {
        ab = ah;
        return null;
      }
      var ae;
      if (ad) {
        ae = (ab << 8) + ah;
      } else {
        ae = (ah << 8) + ab;
      }
      ab = null;
      if (Z !== null) {
        var af = Z;
        Z = null;
        if (Y(ae, 56320, 57343)) {
          return 65536 + (af - 55296) * 1024 + (ae - 56320);
        }
        ag.prepend(K(ae, ad));
        return e(ac);
      }
      if (Y(ae, 55296, 56319)) {
        Z = ae;
        return null;
      }
      if (Y(ae, 56320, 57343)) {
        return e(ac);
      }
      return ae;
    };
  }
  function O(ab, Z) {
    var aa = Z.fatal;
    this.handler = function (af, ae) {
      if (ae === U) {
        return x;
      }
      if (Y(ae, 0, 65535)) {
        return K(ae, ab);
      }
      var ad = K(((ae - 65536) >> 10) + 55296, ab);
      var ac = K(((ae - 65536) & 1023) + 56320, ab);
      return ad.concat(ac);
    };
  }
  R["utf-16be"] = function (Z) {
    return new O(true, Z);
  };
  M["utf-16be"] = function (Z) {
    return new k(true, Z);
  };
  R["utf-16le"] = function (Z) {
    return new O(false, Z);
  };
  M["utf-16le"] = function (Z) {
    return new k(false, Z);
  };
  function u(Z) {
    var aa = Z.fatal;
    this.handler = function (ab, ac) {
      if (ac === U) {
        return x;
      }
      if (Y(ac, 0, 127)) {
        return ac;
      }
      return 63360 + ac - 128;
    };
  }
  function a(Z) {
    var aa = Z.fatal;
    this.handler = function (ac, ab) {
      if (ab === U) {
        return x;
      }
      if (Y(ab, 0, 127)) {
        return ab;
      }
      if (Y(ab, 63360, 63487)) {
        return ab - 63360 + 128;
      }
      return B(ab);
    };
  }
  R["x-user-defined"] = function (Z) {
    return new a(Z);
  };
  M["x-user-defined"] = function (Z) {
    return new u(Z);
  };
  c.TextEncoder = D;
  if (!c.TextDecoder) {
    c.TextDecoder = W;
  }
})(this);
/*! Hammer.JS - v2.0.8 - 2016-04-23
 * http://hammerjs.github.io/
 *
 * Copyright (c) 2016 Jorik Tangelder;
 * Licensed under the MIT license */
(function () {
  !(function (a, b, c, d) {
    "use strict";
    function e(a, b, c) {
      return setTimeout(j(a, c), b);
    }
    function f(a, b, c) {
      return Array.isArray(a) ? (g(a, c[b], c), !0) : !1;
    }
    function g(a, b, c) {
      var e;
      if (a)
        if (a.forEach) a.forEach(b, c);
        else if (a.length !== d)
          for (e = 0; e < a.length; ) b.call(c, a[e], e, a), e++;
        else for (e in a) a.hasOwnProperty(e) && b.call(c, a[e], e, a);
    }
    function h(b, c, d) {
      var e = "DEPRECATED METHOD: " + c + "\n" + d + " AT \n";
      return function () {
        var c = new Error("get-stack-trace"),
          d =
            c && c.stack
              ? c.stack
                  .replace(/^[^\(]+?[\n$]/gm, "")
                  .replace(/^\s+at\s+/gm, "")
                  .replace(/^Object.<anonymous>\s*\(/gm, "{anonymous}()@")
              : "Unknown Stack Trace",
          f = a.console && (a.console.warn || a.console.log);
        return f && f.call(a.console, e, d), b.apply(this, arguments);
      };
    }
    function i(a, b, c) {
      var d,
        e = b.prototype;
      (d = a.prototype = Object.create(e)),
        (d.constructor = a),
        (d._super = e),
        c && la(d, c);
    }
    function j(a, b) {
      return function () {
        return a.apply(b, arguments);
      };
    }
    function k(a, b) {
      return typeof a == oa ? a.apply(b ? b[0] || d : d, b) : a;
    }
    function l(a, b) {
      return a === d ? b : a;
    }
    function m(a, b, c) {
      g(q(b), function (b) {
        a.addEventListener(b, c, !1);
      });
    }
    function n(a, b, c) {
      g(q(b), function (b) {
        a.removeEventListener(b, c, !1);
      });
    }
    function o(a, b) {
      for (; a; ) {
        if (a == b) return !0;
        a = a.parentNode;
      }
      return !1;
    }
    function p(a, b) {
      return a.indexOf(b) > -1;
    }
    function q(a) {
      return a.trim().split(/\s+/g);
    }
    function r(a, b, c) {
      if (a.indexOf && !c) return a.indexOf(b);
      for (var d = 0; d < a.length; ) {
        if ((c && a[d][c] == b) || (!c && a[d] === b)) return d;
        d++;
      }
      return -1;
    }
    function s(a) {
      return Array.prototype.slice.call(a, 0);
    }
    function t(a, b, c) {
      for (var d = [], e = [], f = 0; f < a.length; ) {
        var g = b ? a[f][b] : a[f];
        r(e, g) < 0 && d.push(a[f]), (e[f] = g), f++;
      }
      return (
        c &&
          (d = b
            ? d.sort(function (a, c) {
                return a[b] > c[b];
              })
            : d.sort()),
        d
      );
    }
    function u(a, b) {
      for (
        var c, e, f = b[0].toUpperCase() + b.slice(1), g = 0;
        g < ma.length;

      ) {
        if (((c = ma[g]), (e = c ? c + f : b), e in a)) return e;
        g++;
      }
      return d;
    }
    function v() {
      return ua++;
    }
    function w(b) {
      var c = b.ownerDocument || b;
      return c.defaultView || c.parentWindow || a;
    }
    function x(a, b) {
      var c = this;
      (this.manager = a),
        (this.callback = b),
        (this.element = a.element),
        (this.target = a.options.inputTarget),
        (this.domHandler = function (b) {
          k(a.options.enable, [a]) && c.handler(b);
        }),
        this.init();
    }
    function y(a) {
      var b,
        c = a.options.inputClass;
      return new (b = c ? c : xa ? M : ya ? P : wa ? R : L)(a, z);
    }
    function z(a, b, c) {
      var d = c.pointers.length,
        e = c.changedPointers.length,
        f = b & Ea && d - e === 0,
        g = b & (Ga | Ha) && d - e === 0;
      (c.isFirst = !!f),
        (c.isFinal = !!g),
        f && (a.session = {}),
        (c.eventType = b),
        A(a, c),
        a.emit("hammer.input", c),
        a.recognize(c),
        (a.session.prevInput = c);
    }
    function A(a, b) {
      var c = a.session,
        d = b.pointers,
        e = d.length;
      c.firstInput || (c.firstInput = D(b)),
        e > 1 && !c.firstMultiple
          ? (c.firstMultiple = D(b))
          : 1 === e && (c.firstMultiple = !1);
      var f = c.firstInput,
        g = c.firstMultiple,
        h = g ? g.center : f.center,
        i = (b.center = E(d));
      (b.timeStamp = ra()),
        (b.deltaTime = b.timeStamp - f.timeStamp),
        (b.angle = I(h, i)),
        (b.distance = H(h, i)),
        B(c, b),
        (b.offsetDirection = G(b.deltaX, b.deltaY));
      var j = F(b.deltaTime, b.deltaX, b.deltaY);
      (b.overallVelocityX = j.x),
        (b.overallVelocityY = j.y),
        (b.overallVelocity = qa(j.x) > qa(j.y) ? j.x : j.y),
        (b.scale = g ? K(g.pointers, d) : 1),
        (b.rotation = g ? J(g.pointers, d) : 0),
        (b.maxPointers = c.prevInput
          ? b.pointers.length > c.prevInput.maxPointers
            ? b.pointers.length
            : c.prevInput.maxPointers
          : b.pointers.length),
        C(c, b);
      var k = a.element;
      o(b.srcEvent.target, k) && (k = b.srcEvent.target), (b.target = k);
    }
    function B(a, b) {
      var c = b.center,
        d = a.offsetDelta || {},
        e = a.prevDelta || {},
        f = a.prevInput || {};
      (b.eventType !== Ea && f.eventType !== Ga) ||
        ((e = a.prevDelta = { x: f.deltaX || 0, y: f.deltaY || 0 }),
        (d = a.offsetDelta = { x: c.x, y: c.y })),
        (b.deltaX = e.x + (c.x - d.x)),
        (b.deltaY = e.y + (c.y - d.y));
    }
    function C(a, b) {
      var c,
        e,
        f,
        g,
        h = a.lastInterval || b,
        i = b.timeStamp - h.timeStamp;
      if (b.eventType != Ha && (i > Da || h.velocity === d)) {
        var j = b.deltaX - h.deltaX,
          k = b.deltaY - h.deltaY,
          l = F(i, j, k);
        (e = l.x),
          (f = l.y),
          (c = qa(l.x) > qa(l.y) ? l.x : l.y),
          (g = G(j, k)),
          (a.lastInterval = b);
      } else
        (c = h.velocity),
          (e = h.velocityX),
          (f = h.velocityY),
          (g = h.direction);
      (b.velocity = c), (b.velocityX = e), (b.velocityY = f), (b.direction = g);
    }
    function D(a) {
      for (var b = [], c = 0; c < a.pointers.length; )
        (b[c] = {
          clientX: pa(a.pointers[c].clientX),
          clientY: pa(a.pointers[c].clientY),
        }),
          c++;
      return {
        timeStamp: ra(),
        pointers: b,
        center: E(b),
        deltaX: a.deltaX,
        deltaY: a.deltaY,
      };
    }
    function E(a) {
      var b = a.length;
      if (1 === b) return { x: pa(a[0].clientX), y: pa(a[0].clientY) };
      for (var c = 0, d = 0, e = 0; b > e; )
        (c += a[e].clientX), (d += a[e].clientY), e++;
      return { x: pa(c / b), y: pa(d / b) };
    }
    function F(a, b, c) {
      return { x: b / a || 0, y: c / a || 0 };
    }
    function G(a, b) {
      return a === b
        ? Ia
        : qa(a) >= qa(b)
        ? 0 > a
          ? Ja
          : Ka
        : 0 > b
        ? La
        : Ma;
    }
    function H(a, b, c) {
      c || (c = Qa);
      var d = b[c[0]] - a[c[0]],
        e = b[c[1]] - a[c[1]];
      return Math.sqrt(d * d + e * e);
    }
    function I(a, b, c) {
      c || (c = Qa);
      var d = b[c[0]] - a[c[0]],
        e = b[c[1]] - a[c[1]];
      return (180 * Math.atan2(e, d)) / Math.PI;
    }
    function J(a, b) {
      return I(b[1], b[0], Ra) + I(a[1], a[0], Ra);
    }
    function K(a, b) {
      return H(b[0], b[1], Ra) / H(a[0], a[1], Ra);
    }
    function L() {
      (this.evEl = Ta),
        (this.evWin = Ua),
        (this.pressed = !1),
        x.apply(this, arguments);
    }
    function M() {
      (this.evEl = Xa),
        (this.evWin = Ya),
        x.apply(this, arguments),
        (this.store = this.manager.session.pointerEvents = []);
    }
    function N() {
      (this.evTarget = $a),
        (this.evWin = _a),
        (this.started = !1),
        x.apply(this, arguments);
    }
    function O(a, b) {
      var c = s(a.touches),
        d = s(a.changedTouches);
      return b & (Ga | Ha) && (c = t(c.concat(d), "identifier", !0)), [c, d];
    }
    function P() {
      (this.evTarget = bb), (this.targetIds = {}), x.apply(this, arguments);
    }
    function Q(a, b) {
      var c = s(a.touches),
        d = this.targetIds;
      if (b & (Ea | Fa) && 1 === c.length)
        return (d[c[0].identifier] = !0), [c, c];
      var e,
        f,
        g = s(a.changedTouches),
        h = [],
        i = this.target;
      if (
        ((f = c.filter(function (a) {
          return o(a.target, i);
        })),
        b === Ea)
      )
        for (e = 0; e < f.length; ) (d[f[e].identifier] = !0), e++;
      for (e = 0; e < g.length; )
        d[g[e].identifier] && h.push(g[e]),
          b & (Ga | Ha) && delete d[g[e].identifier],
          e++;
      return h.length ? [t(f.concat(h), "identifier", !0), h] : void 0;
    }
    function R() {
      x.apply(this, arguments);
      var a = j(this.handler, this);
      (this.touch = new P(this.manager, a)),
        (this.mouse = new L(this.manager, a)),
        (this.primaryTouch = null),
        (this.lastTouches = []);
    }
    function S(a, b) {
      a & Ea
        ? ((this.primaryTouch = b.changedPointers[0].identifier),
          T.call(this, b))
        : a & (Ga | Ha) && T.call(this, b);
    }
    function T(a) {
      var b = a.changedPointers[0];
      if (b.identifier === this.primaryTouch) {
        var c = { x: b.clientX, y: b.clientY };
        this.lastTouches.push(c);
        var d = this.lastTouches,
          e = function () {
            var a = d.indexOf(c);
            a > -1 && d.splice(a, 1);
          };
        setTimeout(e, cb);
      }
    }
    function U(a) {
      for (
        var b = a.srcEvent.clientX, c = a.srcEvent.clientY, d = 0;
        d < this.lastTouches.length;
        d++
      ) {
        var e = this.lastTouches[d],
          f = Math.abs(b - e.x),
          g = Math.abs(c - e.y);
        if (db >= f && db >= g) return !0;
      }
      return !1;
    }
    function V(a, b) {
      (this.manager = a), this.set(b);
    }
    function W(a) {
      if (p(a, jb)) return jb;
      var b = p(a, kb),
        c = p(a, lb);
      return b && c ? jb : b || c ? (b ? kb : lb) : p(a, ib) ? ib : hb;
    }
    function X() {
      if (!fb) return !1;
      var b = {},
        c = a.CSS && a.CSS.supports;
      return (
        [
          "auto",
          "manipulation",
          "pan-y",
          "pan-x",
          "pan-x pan-y",
          "none",
        ].forEach(function (d) {
          b[d] = c ? a.CSS.supports("touch-action", d) : !0;
        }),
        b
      );
    }
    function Y(a) {
      (this.options = la({}, this.defaults, a || {})),
        (this.id = v()),
        (this.manager = null),
        (this.options.enable = l(this.options.enable, !0)),
        (this.state = nb),
        (this.simultaneous = {}),
        (this.requireFail = []);
    }
    function Z(a) {
      return a & sb
        ? "cancel"
        : a & qb
        ? "end"
        : a & pb
        ? "move"
        : a & ob
        ? "start"
        : "";
    }
    function $(a) {
      return a == Ma
        ? "down"
        : a == La
        ? "up"
        : a == Ja
        ? "left"
        : a == Ka
        ? "right"
        : "";
    }
    function _(a, b) {
      var c = b.manager;
      return c ? c.get(a) : a;
    }
    function aa() {
      Y.apply(this, arguments);
    }
    function ba() {
      aa.apply(this, arguments), (this.pX = null), (this.pY = null);
    }
    function ca() {
      aa.apply(this, arguments);
    }
    function da() {
      Y.apply(this, arguments), (this._timer = null), (this._input = null);
    }
    function ea() {
      aa.apply(this, arguments);
    }
    function fa() {
      aa.apply(this, arguments);
    }
    function ga() {
      Y.apply(this, arguments),
        (this.pTime = !1),
        (this.pCenter = !1),
        (this._timer = null),
        (this._input = null),
        (this.count = 0);
    }
    function ha(a, b) {
      return (
        (b = b || {}),
        (b.recognizers = l(b.recognizers, ha.defaults.preset)),
        new ia(a, b)
      );
    }
    function ia(a, b) {
      (this.options = la({}, ha.defaults, b || {})),
        (this.options.inputTarget = this.options.inputTarget || a),
        (this.handlers = {}),
        (this.session = {}),
        (this.recognizers = []),
        (this.oldCssProps = {}),
        (this.element = a),
        (this.input = y(this)),
        (this.touchAction = new V(this, this.options.touchAction)),
        ja(this, !0),
        g(
          this.options.recognizers,
          function (a) {
            var b = this.add(new a[0](a[1]));
            a[2] && b.recognizeWith(a[2]), a[3] && b.requireFailure(a[3]);
          },
          this
        );
    }
    function ja(a, b) {
      var c = a.element;
      if (c.style) {
        var d;
        g(a.options.cssProps, function (e, f) {
          (d = u(c.style, f)),
            b
              ? ((a.oldCssProps[d] = c.style[d]), (c.style[d] = e))
              : (c.style[d] = a.oldCssProps[d] || "");
        }),
          b || (a.oldCssProps = {});
      }
    }
    function ka(a, c) {
      var d = b.createEvent("Event");
      d.initEvent(a, !0, !0), (d.gesture = c), c.target.dispatchEvent(d);
    }
    var la,
      ma = ["", "webkit", "Moz", "MS", "ms", "o"],
      na = b.createElement("div"),
      oa = "function",
      pa = Math.round,
      qa = Math.abs,
      ra = Date.now;
    la =
      "function" != typeof Object.assign
        ? function (a) {
            if (a === d || null === a)
              throw new TypeError("Cannot convert undefined or null to object");
            for (var b = Object(a), c = 1; c < arguments.length; c++) {
              var e = arguments[c];
              if (e !== d && null !== e)
                for (var f in e) e.hasOwnProperty(f) && (b[f] = e[f]);
            }
            return b;
          }
        : Object.assign;
    var sa = h(
        function (a, b, c) {
          for (var e = Object.keys(b), f = 0; f < e.length; )
            (!c || (c && a[e[f]] === d)) && (a[e[f]] = b[e[f]]), f++;
          return a;
        },
        "extend",
        "Use `assign`."
      ),
      ta = h(
        function (a, b) {
          return sa(a, b, !0);
        },
        "merge",
        "Use `assign`."
      ),
      ua = 1,
      va = /mobile|tablet|ip(ad|hone|od)|android/i,
      wa = "ontouchstart" in a,
      xa = u(a, "PointerEvent") !== d,
      ya = wa && va.test(navigator.userAgent),
      za = "touch",
      Aa = "pen",
      Ba = "mouse",
      Ca = "kinect",
      Da = 25,
      Ea = 1,
      Fa = 2,
      Ga = 4,
      Ha = 8,
      Ia = 1,
      Ja = 2,
      Ka = 4,
      La = 8,
      Ma = 16,
      Na = Ja | Ka,
      Oa = La | Ma,
      Pa = Na | Oa,
      Qa = ["x", "y"],
      Ra = ["clientX", "clientY"];
    x.prototype = {
      handler: function () {},
      init: function () {
        this.evEl && m(this.element, this.evEl, this.domHandler),
          this.evTarget && m(this.target, this.evTarget, this.domHandler),
          this.evWin && m(w(this.element), this.evWin, this.domHandler);
      },
      destroy: function () {
        this.evEl && n(this.element, this.evEl, this.domHandler),
          this.evTarget && n(this.target, this.evTarget, this.domHandler),
          this.evWin && n(w(this.element), this.evWin, this.domHandler);
      },
    };
    var Sa = { mousedown: Ea, mousemove: Fa, mouseup: Ga },
      Ta = "mousedown",
      Ua = "mousemove mouseup";
    i(L, x, {
      handler: function (a) {
        var b = Sa[a.type];
        b & Ea && 0 === a.button && (this.pressed = !0),
          b & Fa && 1 !== a.which && (b = Ga),
          this.pressed &&
            (b & Ga && (this.pressed = !1),
            this.callback(this.manager, b, {
              pointers: [a],
              changedPointers: [a],
              pointerType: Ba,
              srcEvent: a,
            }));
      },
    });
    var Va = {
        pointerdown: Ea,
        pointermove: Fa,
        pointerup: Ga,
        pointercancel: Ha,
        pointerout: Ha,
      },
      Wa = { 2: za, 3: Aa, 4: Ba, 5: Ca },
      Xa = "pointerdown",
      Ya = "pointermove pointerup pointercancel";
    a.MSPointerEvent &&
      !a.PointerEvent &&
      ((Xa = "MSPointerDown"),
      (Ya = "MSPointerMove MSPointerUp MSPointerCancel")),
      i(M, x, {
        handler: function (a) {
          var b = this.store,
            c = !1,
            d = a.type.toLowerCase().replace("ms", ""),
            e = Va[d],
            f = Wa[a.pointerType] || a.pointerType,
            g = f == za,
            h = r(b, a.pointerId, "pointerId");
          e & Ea && (0 === a.button || g)
            ? 0 > h && (b.push(a), (h = b.length - 1))
            : e & (Ga | Ha) && (c = !0),
            0 > h ||
              ((b[h] = a),
              this.callback(this.manager, e, {
                pointers: b,
                changedPointers: [a],
                pointerType: f,
                srcEvent: a,
              }),
              c && b.splice(h, 1));
        },
      });
    var Za = { touchstart: Ea, touchmove: Fa, touchend: Ga, touchcancel: Ha },
      $a = "touchstart",
      _a = "touchstart touchmove touchend touchcancel";
    i(N, x, {
      handler: function (a) {
        var b = Za[a.type];
        if ((b === Ea && (this.started = !0), this.started)) {
          var c = O.call(this, a, b);
          b & (Ga | Ha) &&
            c[0].length - c[1].length === 0 &&
            (this.started = !1),
            this.callback(this.manager, b, {
              pointers: c[0],
              changedPointers: c[1],
              pointerType: za,
              srcEvent: a,
            });
        }
      },
    });
    var ab = { touchstart: Ea, touchmove: Fa, touchend: Ga, touchcancel: Ha },
      bb = "touchstart touchmove touchend touchcancel";
    i(P, x, {
      handler: function (a) {
        var b = ab[a.type],
          c = Q.call(this, a, b);
        c &&
          this.callback(this.manager, b, {
            pointers: c[0],
            changedPointers: c[1],
            pointerType: za,
            srcEvent: a,
          });
      },
    });
    var cb = 2500,
      db = 25;
    i(R, x, {
      handler: function (a, b, c) {
        var d = c.pointerType == za,
          e = c.pointerType == Ba;
        if (
          !(e && c.sourceCapabilities && c.sourceCapabilities.firesTouchEvents)
        ) {
          if (d) S.call(this, b, c);
          else if (e && U.call(this, c)) return;
          this.callback(a, b, c);
        }
      },
      destroy: function () {
        this.touch.destroy(), this.mouse.destroy();
      },
    });
    var eb = u(na.style, "touchAction"),
      fb = eb !== d,
      gb = "compute",
      hb = "auto",
      ib = "manipulation",
      jb = "none",
      kb = "pan-x",
      lb = "pan-y",
      mb = X();
    V.prototype = {
      set: function (a) {
        a == gb && (a = this.compute()),
          fb &&
            this.manager.element.style &&
            mb[a] &&
            (this.manager.element.style[eb] = a),
          (this.actions = a.toLowerCase().trim());
      },
      update: function () {
        this.set(this.manager.options.touchAction);
      },
      compute: function () {
        var a = [];
        return (
          g(this.manager.recognizers, function (b) {
            k(b.options.enable, [b]) && (a = a.concat(b.getTouchAction()));
          }),
          W(a.join(" "))
        );
      },
      preventDefaults: function (a) {
        var b = a.srcEvent,
          c = a.offsetDirection;
        if (this.manager.session.prevented) return void b.preventDefault();
        var d = this.actions,
          e = p(d, jb) && !mb[jb],
          f = p(d, lb) && !mb[lb],
          g = p(d, kb) && !mb[kb];
        if (e) {
          var h = 1 === a.pointers.length,
            i = a.distance < 2,
            j = a.deltaTime < 250;
          if (h && i && j) return;
        }
        return g && f
          ? void 0
          : e || (f && c & Na) || (g && c & Oa)
          ? this.preventSrc(b)
          : void 0;
      },
      preventSrc: function (a) {
        (this.manager.session.prevented = !0), a.preventDefault();
      },
    };
    var nb = 1,
      ob = 2,
      pb = 4,
      qb = 8,
      rb = qb,
      sb = 16,
      tb = 32;
    (Y.prototype = {
      defaults: {},
      set: function (a) {
        return (
          la(this.options, a),
          this.manager && this.manager.touchAction.update(),
          this
        );
      },
      recognizeWith: function (a) {
        if (f(a, "recognizeWith", this)) return this;
        var b = this.simultaneous;
        return (
          (a = _(a, this)),
          b[a.id] || ((b[a.id] = a), a.recognizeWith(this)),
          this
        );
      },
      dropRecognizeWith: function (a) {
        return f(a, "dropRecognizeWith", this)
          ? this
          : ((a = _(a, this)), delete this.simultaneous[a.id], this);
      },
      requireFailure: function (a) {
        if (f(a, "requireFailure", this)) return this;
        var b = this.requireFail;
        return (
          (a = _(a, this)),
          -1 === r(b, a) && (b.push(a), a.requireFailure(this)),
          this
        );
      },
      dropRequireFailure: function (a) {
        if (f(a, "dropRequireFailure", this)) return this;
        a = _(a, this);
        var b = r(this.requireFail, a);
        return b > -1 && this.requireFail.splice(b, 1), this;
      },
      hasRequireFailures: function () {
        return this.requireFail.length > 0;
      },
      canRecognizeWith: function (a) {
        return !!this.simultaneous[a.id];
      },
      emit: function (a) {
        function b(b) {
          c.manager.emit(b, a);
        }
        var c = this,
          d = this.state;
        qb > d && b(c.options.event + Z(d)),
          b(c.options.event),
          a.additionalEvent && b(a.additionalEvent),
          d >= qb && b(c.options.event + Z(d));
      },
      tryEmit: function (a) {
        return this.canEmit() ? this.emit(a) : void (this.state = tb);
      },
      canEmit: function () {
        for (var a = 0; a < this.requireFail.length; ) {
          if (!(this.requireFail[a].state & (tb | nb))) return !1;
          a++;
        }
        return !0;
      },
      recognize: function (a) {
        var b = la({}, a);
        return k(this.options.enable, [this, b])
          ? (this.state & (rb | sb | tb) && (this.state = nb),
            (this.state = this.process(b)),
            void (this.state & (ob | pb | qb | sb) && this.tryEmit(b)))
          : (this.reset(), void (this.state = tb));
      },
      process: function (a) {},
      getTouchAction: function () {},
      reset: function () {},
    }),
      i(aa, Y, {
        defaults: { pointers: 1 },
        attrTest: function (a) {
          var b = this.options.pointers;
          return 0 === b || a.pointers.length === b;
        },
        process: function (a) {
          var b = this.state,
            c = a.eventType,
            d = b & (ob | pb),
            e = this.attrTest(a);
          return d && (c & Ha || !e)
            ? b | sb
            : d || e
            ? c & Ga
              ? b | qb
              : b & ob
              ? b | pb
              : ob
            : tb;
        },
      }),
      i(ba, aa, {
        defaults: { event: "pan", threshold: 10, pointers: 1, direction: Pa },
        getTouchAction: function () {
          var a = this.options.direction,
            b = [];
          return a & Na && b.push(lb), a & Oa && b.push(kb), b;
        },
        directionTest: function (a) {
          var b = this.options,
            c = !0,
            d = a.distance,
            e = a.direction,
            f = a.deltaX,
            g = a.deltaY;
          return (
            e & b.direction ||
              (b.direction & Na
                ? ((e = 0 === f ? Ia : 0 > f ? Ja : Ka),
                  (c = f != this.pX),
                  (d = Math.abs(a.deltaX)))
                : ((e = 0 === g ? Ia : 0 > g ? La : Ma),
                  (c = g != this.pY),
                  (d = Math.abs(a.deltaY)))),
            (a.direction = e),
            c && d > b.threshold && e & b.direction
          );
        },
        attrTest: function (a) {
          return (
            aa.prototype.attrTest.call(this, a) &&
            (this.state & ob || (!(this.state & ob) && this.directionTest(a)))
          );
        },
        emit: function (a) {
          (this.pX = a.deltaX), (this.pY = a.deltaY);
          var b = $(a.direction);
          b && (a.additionalEvent = this.options.event + b),
            this._super.emit.call(this, a);
        },
      }),
      i(ca, aa, {
        defaults: { event: "pinch", threshold: 0, pointers: 2 },
        getTouchAction: function () {
          return [jb];
        },
        attrTest: function (a) {
          return (
            this._super.attrTest.call(this, a) &&
            (Math.abs(a.scale - 1) > this.options.threshold || this.state & ob)
          );
        },
        emit: function (a) {
          if (1 !== a.scale) {
            var b = a.scale < 1 ? "in" : "out";
            a.additionalEvent = this.options.event + b;
          }
          this._super.emit.call(this, a);
        },
      }),
      i(da, Y, {
        defaults: { event: "press", pointers: 1, time: 251, threshold: 9 },
        getTouchAction: function () {
          return [hb];
        },
        process: function (a) {
          var b = this.options,
            c = a.pointers.length === b.pointers,
            d = a.distance < b.threshold,
            f = a.deltaTime > b.time;
          if (((this._input = a), !d || !c || (a.eventType & (Ga | Ha) && !f)))
            this.reset();
          else if (a.eventType & Ea)
            this.reset(),
              (this._timer = e(
                function () {
                  (this.state = rb), this.tryEmit();
                },
                b.time,
                this
              ));
          else if (a.eventType & Ga) return rb;
          return tb;
        },
        reset: function () {
          clearTimeout(this._timer);
        },
        emit: function (a) {
          this.state === rb &&
            (a && a.eventType & Ga
              ? this.manager.emit(this.options.event + "up", a)
              : ((this._input.timeStamp = ra()),
                this.manager.emit(this.options.event, this._input)));
        },
      }),
      i(ea, aa, {
        defaults: { event: "rotate", threshold: 0, pointers: 2 },
        getTouchAction: function () {
          return [jb];
        },
        attrTest: function (a) {
          return (
            this._super.attrTest.call(this, a) &&
            (Math.abs(a.rotation) > this.options.threshold || this.state & ob)
          );
        },
      }),
      i(fa, aa, {
        defaults: {
          event: "swipe",
          threshold: 10,
          velocity: 0.3,
          direction: Na | Oa,
          pointers: 1,
        },
        getTouchAction: function () {
          return ba.prototype.getTouchAction.call(this);
        },
        attrTest: function (a) {
          var b,
            c = this.options.direction;
          return (
            c & (Na | Oa)
              ? (b = a.overallVelocity)
              : c & Na
              ? (b = a.overallVelocityX)
              : c & Oa && (b = a.overallVelocityY),
            this._super.attrTest.call(this, a) &&
              c & a.offsetDirection &&
              a.distance > this.options.threshold &&
              a.maxPointers == this.options.pointers &&
              qa(b) > this.options.velocity &&
              a.eventType & Ga
          );
        },
        emit: function (a) {
          var b = $(a.offsetDirection);
          b && this.manager.emit(this.options.event + b, a),
            this.manager.emit(this.options.event, a);
        },
      }),
      i(ga, Y, {
        defaults: {
          event: "tap",
          pointers: 1,
          taps: 1,
          interval: 300,
          time: 250,
          threshold: 9,
          posThreshold: 10,
        },
        getTouchAction: function () {
          return [ib];
        },
        process: function (a) {
          var b = this.options,
            c = a.pointers.length === b.pointers,
            d = a.distance < b.threshold,
            f = a.deltaTime < b.time;
          if ((this.reset(), a.eventType & Ea && 0 === this.count))
            return this.failTimeout();
          if (d && f && c) {
            if (a.eventType != Ga) return this.failTimeout();
            var g = this.pTime ? a.timeStamp - this.pTime < b.interval : !0,
              h = !this.pCenter || H(this.pCenter, a.center) < b.posThreshold;
            (this.pTime = a.timeStamp),
              (this.pCenter = a.center),
              h && g ? (this.count += 1) : (this.count = 1),
              (this._input = a);
            var i = this.count % b.taps;
            if (0 === i)
              return this.hasRequireFailures()
                ? ((this._timer = e(
                    function () {
                      (this.state = rb), this.tryEmit();
                    },
                    b.interval,
                    this
                  )),
                  ob)
                : rb;
          }
          return tb;
        },
        failTimeout: function () {
          return (
            (this._timer = e(
              function () {
                this.state = tb;
              },
              this.options.interval,
              this
            )),
            tb
          );
        },
        reset: function () {
          clearTimeout(this._timer);
        },
        emit: function () {
          this.state == rb &&
            ((this._input.tapCount = this.count),
            this.manager.emit(this.options.event, this._input));
        },
      }),
      (ha.VERSION = "2.0.8"),
      (ha.defaults = {
        domEvents: !1,
        touchAction: gb,
        enable: !0,
        inputTarget: null,
        inputClass: null,
        preset: [
          [ea, { enable: !1 }],
          [ca, { enable: !1 }, ["rotate"]],
          [fa, { direction: Na }],
          [ba, { direction: Na }, ["swipe"]],
          [ga],
          [ga, { event: "doubletap", taps: 2 }, ["tap"]],
          [da],
        ],
        cssProps: {
          userSelect: "none",
          touchSelect: "none",
          touchCallout: "none",
          contentZooming: "none",
          userDrag: "none",
          tapHighlightColor: "rgba(0,0,0,0)",
        },
      });
    var ub = 1,
      vb = 2;
    (ia.prototype = {
      set: function (a) {
        return (
          la(this.options, a),
          a.touchAction && this.touchAction.update(),
          a.inputTarget &&
            (this.input.destroy(),
            (this.input.target = a.inputTarget),
            this.input.init()),
          this
        );
      },
      stop: function (a) {
        this.session.stopped = a ? vb : ub;
      },
      recognize: function (a) {
        var b = this.session;
        if (!b.stopped) {
          this.touchAction.preventDefaults(a);
          var c,
            d = this.recognizers,
            e = b.curRecognizer;
          (!e || (e && e.state & rb)) && (e = b.curRecognizer = null);
          for (var f = 0; f < d.length; )
            (c = d[f]),
              b.stopped === vb || (e && c != e && !c.canRecognizeWith(e))
                ? c.reset()
                : c.recognize(a),
              !e && c.state & (ob | pb | qb) && (e = b.curRecognizer = c),
              f++;
        }
      },
      get: function (a) {
        if (a instanceof Y) return a;
        for (var b = this.recognizers, c = 0; c < b.length; c++)
          if (b[c].options.event == a) return b[c];
        return null;
      },
      add: function (a) {
        if (f(a, "add", this)) return this;
        var b = this.get(a.options.event);
        return (
          b && this.remove(b),
          this.recognizers.push(a),
          (a.manager = this),
          this.touchAction.update(),
          a
        );
      },
      remove: function (a) {
        if (f(a, "remove", this)) return this;
        if ((a = this.get(a))) {
          var b = this.recognizers,
            c = r(b, a);
          -1 !== c && (b.splice(c, 1), this.touchAction.update());
        }
        return this;
      },
      on: function (a, b) {
        if (a !== d && b !== d) {
          var c = this.handlers;
          return (
            g(q(a), function (a) {
              (c[a] = c[a] || []), c[a].push(b);
            }),
            this
          );
        }
      },
      off: function (a, b) {
        if (a !== d) {
          var c = this.handlers;
          return (
            g(q(a), function (a) {
              b ? c[a] && c[a].splice(r(c[a], b), 1) : delete c[a];
            }),
            this
          );
        }
      },
      emit: function (a, b) {
        this.options.domEvents && ka(a, b);
        var c = this.handlers[a] && this.handlers[a].slice();
        if (c && c.length) {
          (b.type = a),
            (b.preventDefault = function () {
              b.srcEvent.preventDefault();
            });
          for (var d = 0; d < c.length; ) c[d](b), d++;
        }
      },
      destroy: function () {
        this.element && ja(this, !1),
          (this.handlers = {}),
          (this.session = {}),
          this.input.destroy(),
          (this.element = null);
      },
    }),
      la(ha, {
        INPUT_START: Ea,
        INPUT_MOVE: Fa,
        INPUT_END: Ga,
        INPUT_CANCEL: Ha,
        STATE_POSSIBLE: nb,
        STATE_BEGAN: ob,
        STATE_CHANGED: pb,
        STATE_ENDED: qb,
        STATE_RECOGNIZED: rb,
        STATE_CANCELLED: sb,
        STATE_FAILED: tb,
        DIRECTION_NONE: Ia,
        DIRECTION_LEFT: Ja,
        DIRECTION_RIGHT: Ka,
        DIRECTION_UP: La,
        DIRECTION_DOWN: Ma,
        DIRECTION_HORIZONTAL: Na,
        DIRECTION_VERTICAL: Oa,
        DIRECTION_ALL: Pa,
        Manager: ia,
        Input: x,
        TouchAction: V,
        TouchInput: P,
        MouseInput: L,
        PointerEventInput: M,
        TouchMouseInput: R,
        SingleTouchInput: N,
        Recognizer: Y,
        AttrRecognizer: aa,
        Tap: ga,
        Pan: ba,
        Swipe: fa,
        Pinch: ca,
        Rotate: ea,
        Press: da,
        on: m,
        off: n,
        each: g,
        merge: ta,
        extend: sa,
        assign: la,
        inherit: i,
        bindFn: j,
        prefixed: u,
      });
    var wb =
      "undefined" != typeof a ? a : "undefined" != typeof self ? self : {};
    (wb.Hammer = ha),
      "function" == typeof define && define.amd
        ? define(function () {
            return ha;
          })
        : "undefined" != typeof module && module.exports
        ? (module.exports = ha)
        : (a[c] = ha);
  })(window, document, "Hammer");
})();
!(function (n) {
  "use strict";
  function t(n, t) {
    var r = (65535 & n) + (65535 & t);
    return (((n >> 16) + (t >> 16) + (r >> 16)) << 16) | (65535 & r);
  }
  function r(n, t) {
    return (n << t) | (n >>> (32 - t));
  }
  function e(n, e, o, u, c, f) {
    return t(r(t(t(e, n), t(u, f)), c), o);
  }
  function o(n, t, r, o, u, c, f) {
    return e((t & r) | (~t & o), n, t, u, c, f);
  }
  function u(n, t, r, o, u, c, f) {
    return e((t & o) | (r & ~o), n, t, u, c, f);
  }
  function c(n, t, r, o, u, c, f) {
    return e(t ^ r ^ o, n, t, u, c, f);
  }
  function f(n, t, r, o, u, c, f) {
    return e(r ^ (t | ~o), n, t, u, c, f);
  }
  function i(n, r) {
    (n[r >> 5] |= 128 << r % 32), (n[14 + (((r + 64) >>> 9) << 4)] = r);
    var e,
      i,
      a,
      d,
      h,
      l = 1732584193,
      g = -271733879,
      v = -1732584194,
      m = 271733878;
    for (e = 0; e < n.length; e += 16)
      (i = l),
        (a = g),
        (d = v),
        (h = m),
        (g = f(
          (g = f(
            (g = f(
              (g = f(
                (g = c(
                  (g = c(
                    (g = c(
                      (g = c(
                        (g = u(
                          (g = u(
                            (g = u(
                              (g = u(
                                (g = o(
                                  (g = o(
                                    (g = o(
                                      (g = o(
                                        g,
                                        (v = o(
                                          v,
                                          (m = o(
                                            m,
                                            (l = o(
                                              l,
                                              g,
                                              v,
                                              m,
                                              n[e],
                                              7,
                                              -680876936
                                            )),
                                            g,
                                            v,
                                            n[e + 1],
                                            12,
                                            -389564586
                                          )),
                                          l,
                                          g,
                                          n[e + 2],
                                          17,
                                          606105819
                                        )),
                                        m,
                                        l,
                                        n[e + 3],
                                        22,
                                        -1044525330
                                      )),
                                      (v = o(
                                        v,
                                        (m = o(
                                          m,
                                          (l = o(
                                            l,
                                            g,
                                            v,
                                            m,
                                            n[e + 4],
                                            7,
                                            -176418897
                                          )),
                                          g,
                                          v,
                                          n[e + 5],
                                          12,
                                          1200080426
                                        )),
                                        l,
                                        g,
                                        n[e + 6],
                                        17,
                                        -1473231341
                                      )),
                                      m,
                                      l,
                                      n[e + 7],
                                      22,
                                      -45705983
                                    )),
                                    (v = o(
                                      v,
                                      (m = o(
                                        m,
                                        (l = o(
                                          l,
                                          g,
                                          v,
                                          m,
                                          n[e + 8],
                                          7,
                                          1770035416
                                        )),
                                        g,
                                        v,
                                        n[e + 9],
                                        12,
                                        -1958414417
                                      )),
                                      l,
                                      g,
                                      n[e + 10],
                                      17,
                                      -42063
                                    )),
                                    m,
                                    l,
                                    n[e + 11],
                                    22,
                                    -1990404162
                                  )),
                                  (v = o(
                                    v,
                                    (m = o(
                                      m,
                                      (l = o(
                                        l,
                                        g,
                                        v,
                                        m,
                                        n[e + 12],
                                        7,
                                        1804603682
                                      )),
                                      g,
                                      v,
                                      n[e + 13],
                                      12,
                                      -40341101
                                    )),
                                    l,
                                    g,
                                    n[e + 14],
                                    17,
                                    -1502002290
                                  )),
                                  m,
                                  l,
                                  n[e + 15],
                                  22,
                                  1236535329
                                )),
                                (v = u(
                                  v,
                                  (m = u(
                                    m,
                                    (l = u(
                                      l,
                                      g,
                                      v,
                                      m,
                                      n[e + 1],
                                      5,
                                      -165796510
                                    )),
                                    g,
                                    v,
                                    n[e + 6],
                                    9,
                                    -1069501632
                                  )),
                                  l,
                                  g,
                                  n[e + 11],
                                  14,
                                  643717713
                                )),
                                m,
                                l,
                                n[e],
                                20,
                                -373897302
                              )),
                              (v = u(
                                v,
                                (m = u(
                                  m,
                                  (l = u(l, g, v, m, n[e + 5], 5, -701558691)),
                                  g,
                                  v,
                                  n[e + 10],
                                  9,
                                  38016083
                                )),
                                l,
                                g,
                                n[e + 15],
                                14,
                                -660478335
                              )),
                              m,
                              l,
                              n[e + 4],
                              20,
                              -405537848
                            )),
                            (v = u(
                              v,
                              (m = u(
                                m,
                                (l = u(l, g, v, m, n[e + 9], 5, 568446438)),
                                g,
                                v,
                                n[e + 14],
                                9,
                                -1019803690
                              )),
                              l,
                              g,
                              n[e + 3],
                              14,
                              -187363961
                            )),
                            m,
                            l,
                            n[e + 8],
                            20,
                            1163531501
                          )),
                          (v = u(
                            v,
                            (m = u(
                              m,
                              (l = u(l, g, v, m, n[e + 13], 5, -1444681467)),
                              g,
                              v,
                              n[e + 2],
                              9,
                              -51403784
                            )),
                            l,
                            g,
                            n[e + 7],
                            14,
                            1735328473
                          )),
                          m,
                          l,
                          n[e + 12],
                          20,
                          -1926607734
                        )),
                        (v = c(
                          v,
                          (m = c(
                            m,
                            (l = c(l, g, v, m, n[e + 5], 4, -378558)),
                            g,
                            v,
                            n[e + 8],
                            11,
                            -2022574463
                          )),
                          l,
                          g,
                          n[e + 11],
                          16,
                          1839030562
                        )),
                        m,
                        l,
                        n[e + 14],
                        23,
                        -35309556
                      )),
                      (v = c(
                        v,
                        (m = c(
                          m,
                          (l = c(l, g, v, m, n[e + 1], 4, -1530992060)),
                          g,
                          v,
                          n[e + 4],
                          11,
                          1272893353
                        )),
                        l,
                        g,
                        n[e + 7],
                        16,
                        -155497632
                      )),
                      m,
                      l,
                      n[e + 10],
                      23,
                      -1094730640
                    )),
                    (v = c(
                      v,
                      (m = c(
                        m,
                        (l = c(l, g, v, m, n[e + 13], 4, 681279174)),
                        g,
                        v,
                        n[e],
                        11,
                        -358537222
                      )),
                      l,
                      g,
                      n[e + 3],
                      16,
                      -722521979
                    )),
                    m,
                    l,
                    n[e + 6],
                    23,
                    76029189
                  )),
                  (v = c(
                    v,
                    (m = c(
                      m,
                      (l = c(l, g, v, m, n[e + 9], 4, -640364487)),
                      g,
                      v,
                      n[e + 12],
                      11,
                      -421815835
                    )),
                    l,
                    g,
                    n[e + 15],
                    16,
                    530742520
                  )),
                  m,
                  l,
                  n[e + 2],
                  23,
                  -995338651
                )),
                (v = f(
                  v,
                  (m = f(
                    m,
                    (l = f(l, g, v, m, n[e], 6, -198630844)),
                    g,
                    v,
                    n[e + 7],
                    10,
                    1126891415
                  )),
                  l,
                  g,
                  n[e + 14],
                  15,
                  -1416354905
                )),
                m,
                l,
                n[e + 5],
                21,
                -57434055
              )),
              (v = f(
                v,
                (m = f(
                  m,
                  (l = f(l, g, v, m, n[e + 12], 6, 1700485571)),
                  g,
                  v,
                  n[e + 3],
                  10,
                  -1894986606
                )),
                l,
                g,
                n[e + 10],
                15,
                -1051523
              )),
              m,
              l,
              n[e + 1],
              21,
              -2054922799
            )),
            (v = f(
              v,
              (m = f(
                m,
                (l = f(l, g, v, m, n[e + 8], 6, 1873313359)),
                g,
                v,
                n[e + 15],
                10,
                -30611744
              )),
              l,
              g,
              n[e + 6],
              15,
              -1560198380
            )),
            m,
            l,
            n[e + 13],
            21,
            1309151649
          )),
          (v = f(
            v,
            (m = f(
              m,
              (l = f(l, g, v, m, n[e + 4], 6, -145523070)),
              g,
              v,
              n[e + 11],
              10,
              -1120210379
            )),
            l,
            g,
            n[e + 2],
            15,
            718787259
          )),
          m,
          l,
          n[e + 9],
          21,
          -343485551
        )),
        (l = t(l, i)),
        (g = t(g, a)),
        (v = t(v, d)),
        (m = t(m, h));
    return [l, g, v, m];
  }
  function a(n) {
    var t,
      r = "",
      e = 32 * n.length;
    for (t = 0; t < e; t += 8)
      r += String.fromCharCode((n[t >> 5] >>> t % 32) & 255);
    return r;
  }
  function d(n) {
    var t,
      r = [];
    for (r[(n.length >> 2) - 1] = void 0, t = 0; t < r.length; t += 1) r[t] = 0;
    var e = 8 * n.length;
    for (t = 0; t < e; t += 8)
      r[t >> 5] |= (255 & n.charCodeAt(t / 8)) << t % 32;
    return r;
  }
  function h(n) {
    return a(i(d(n), 8 * n.length));
  }
  function l(n, t) {
    var r,
      e,
      o = d(n),
      u = [],
      c = [];
    for (
      u[15] = c[15] = void 0, o.length > 16 && (o = i(o, 8 * n.length)), r = 0;
      r < 16;
      r += 1
    )
      (u[r] = 909522486 ^ o[r]), (c[r] = 1549556828 ^ o[r]);
    return (e = i(u.concat(d(t)), 512 + 8 * t.length)), a(i(c.concat(e), 640));
  }
  function g(n) {
    var t,
      r,
      e = "";
    for (r = 0; r < n.length; r += 1)
      (t = n.charCodeAt(r)),
        (e +=
          "0123456789abcdef".charAt((t >>> 4) & 15) +
          "0123456789abcdef".charAt(15 & t));
    return e;
  }
  function v(n) {
    return unescape(encodeURIComponent(n));
  }
  function m(n) {
    return h(v(n));
  }
  function p(n) {
    return g(m(n));
  }
  function s(n, t) {
    return l(v(n), v(t));
  }
  function C(n, t) {
    return g(s(n, t));
  }
  function A(n, t, r) {
    return t ? (r ? s(t, n) : C(t, n)) : r ? m(n) : p(n);
  }
  "function" == typeof define && define.amd
    ? define(function () {
        return A;
      })
    : "object" == typeof module && module.exports
    ? (module.exports = A)
    : (n.md5 = A);
})(this);
var E = (window.J = {});
E.dfa = {};
E.ext = {};
E.controls = {};
E.controls.page = {};
E.controls.input = {};
E.controls.q4 = {};
E.controls.L = {};
E.controls.L.Sc = {};
E.controls.L.Sc.Pa = {};
E.controls.L.Sc.vh = {};
E.controls.L.Sc.nr = {};
E.controls.L.Sc.Gm = {};
E.controls.L.Sc.yt = {};
E.controls.L.Sc.C3 = {};
E.controls.L.Sc.oE = {};
E.controls.L.Sc.TM = {};
E.controls.L.Nc = {};
E.controls.L.Nc.af = {};
E.controls.L.Nc.Gd = {};
E.controls.L.Nc.ik = {};
E.controls.L.Nc.Sj = {};
E.ba = {};
E.Un = {};
E.Un.Rg = {};
E.Un.control = {};
E.Un.la = {};
E.Un.data = {};
E.Un.view = {};
E.Un.Im = {};
E.V = {};
E.V.Rg = {};
E.V.control = {};
E.V.la = {};
E.V.data = {};
E.V.view = {};
E.V.Im = {};
window.webtrader = {};
(function () {
  function v(c) {
    h.yp = c.clientX;
    h.zp = c.clientY;
  }
  function r() {
    var c = k.va.window;
    h.se = c.innerWidth;
    h.Cj = c.innerHeight;
  }
  function l() {
    window.te = !0;
  }
  function e(c) {
    return ((c = c.target) &&
      "input" == c.nodeName.toLowerCase() &&
      ("text" == c.type || "password" == c.type)) ||
      (c &&
        c.className &&
        c.className.indexOf &&
        -1 !== c.className.indexOf("selected-enabled"))
      ? !0
      : !1;
  }
  var k = window.J,
    h = (k.Qa = {});
  h.ha = function () {
    var c = k.va,
      a = c.body,
      d = c.hb,
      b = k.oc.i;
    b(c.document, "mousemove", v);
    b(c.window, "resize", r);
    b(c.window, "beforeunload", l);
    b(a, "contextmenu", e);
    h.wf && (d(a, "ie"), d(a, ["ie", h.Ap].join("")));
    h.Ok && d(a, "presto");
    h.Sn && d(a, "webkit");
    h.mk && d(a, "gecko");
    h.j4 && d(a, "win");
    h.d4 && d(a, "mac");
    h.sa && d(a, "hdpi");
    r();
  };
  var b = window.navigator,
    a = b.userAgent,
    g = b.platform.toLowerCase(),
    d;
  window.opera && (h.Ok = !0);
  -1 != a.indexOf("Gecko/") && (h.mk = !0);
  -1 != a.indexOf("Edge/") && (h.gh = !0);
  -1 == a.indexOf("WebKit") || h.gh || (h.Sn = !0);
  -1 != a.indexOf("Trident") && (h.wf = !0);
  -1 == a.indexOf("Safari") ||
    (-1 == a.indexOf("Macintosh") &&
      -1 == a.indexOf("iPad") &&
      -1 == a.indexOf("iPhone") &&
      -1 == a.indexOf("iPod")) ||
    (h.wM = !0);
  if (-1 !== a.indexOf("HeadlessChrome") || "" === b.languages || b.webdriver)
    h.tM = !0;
  -1 !== a.indexOf("WebTaf") && (h.tM = !1);
  h.Ok && ((h.mk = h.Sn = h.wf = !1), (h.Ap = parseFloat(opera.version())));
  h.Sn &&
    ((h.mk = !1), -1 != a.indexOf("iPad") || -1 != a.indexOf("TouchPad/")) &&
    (h.vM = !0);
  h.wf &&
    ((d = a.indexOf("MSIE ")),
    0 < d &&
      ((d = a.substr(d + 5)),
      (h.Ap = parseInt(d, 10)),
      8 > h.Ap && void 0 !== "arr"[0] && (h.Ap = 8)));
  h.mk &&
    ((d = /Gecko\/(\d+)/.exec(a)) &&
      2 == d.length &&
      (h.Ap = parseInt(d[1], 10)),
    (d = /Firefox\/(\d+.\d+)/.exec(a)) &&
      2 == d.length &&
      (h.O3 = parseFloat(d[1])));
  -1 != g.indexOf("win") && (h.j4 = !0);
  -1 != g.indexOf("mac") && (h.d4 = !0);
  "undefined" != typeof WebSocket && (h.sr = !0);
  "undefined" != typeof FileReader && (h.mM = !0);
  "undefined" != typeof FormData && (h.tE = !0);
  window.google && window.google.Uea && (!h.wf || 7 <= h.Ap) && (h.oM = !0);
  h.Xea = !(
    !document.createElementNS ||
    !document.createElementNS("http://www.w3.org/2000/svg", "svg").Bl
  );
  h.W3 = !1;
  h.yd = !1;
  try {
    var f = document.createElement("canvas"),
      c;
    f && (c = f.getContext("2d")) && c.fillText && (h.W3 = !0);
    -1 !== a.indexOf("Vivaldi") || -1 !== a.indexOf("OPR")
      ? (h.yd = !1)
      : (f = document.createElement("canvas")) &&
        (c = f.getContext("webgl") || f.getContext("experimental-webgl")) &&
        c.createProgram &&
        (h.yd = !0);
  } catch (z) {}
  if (b.plugins && b.mimeTypes.length)
    h.nM = void 0 !== b.plugins["Shockwave Flash"];
  else
    try {
      new ActiveXObject("ShockwaveFlash.ShockwaveFlash"), (h.nM = !0);
    } catch (A) {
      h.nM = !1;
    }
  "draggable" in document.createElement("span") && (h.Wea = !0);
  h.Y3 = !1;
  window.SharedWorker && !h.Ok && (h.Y3 = !0);
  h.kM = !1;
  try {
    var m = document.createElement("audio");
    m && ((h.kM = !0), (h.Mea = m.canPlayType("audio/mp3")));
  } catch (u) {
    h.kM = !1;
  }
  h.Pd = !1;
  try {
    window.localStorage &&
      ((window.localStorage.a = "b"),
      window.localStorage.removeItem("a"),
      (h.Pd = !0),
      (h.o4 = window.localStorage
        ? window.localStorage.J
          ? window.localStorage.J
          : 5242880 -
            unescape(encodeURIComponent(JSON.stringify(window.localStorage)))
              .length
        : null));
  } catch (q) {}
  h.Rj = (function () {
    var c = window.name,
      a;
    if ((a = c))
      a: {
        a = 0;
        for (var d = c.length; a < d; a++)
          if (isNaN(parseInt(c.charAt(a), 10))) {
            a = !1;
            break a;
          }
        a = !0;
      }
    if (a) return c.substr(0, 12);
    if ((c = document.cookie))
      if ((c = c.split(";")))
        for (var d = 0, b = c.length; d < b; d++)
          if (
            (a = c[d].trim()) &&
            (0 === a.indexOf("uniq=") || 0 === a.indexOf("_fz_uniq=")) &&
            (a = a.split("=")[1]) &&
            (a = a.split("-"))
          ) {
            if (1 === a.length && 12 <= a[0].length) return a[0].substr(0, 12);
            if (1 < a.length) return [a[0], a[1]].join("");
          }
    return "";
  })();
  h.X3 = !!h.Rj;
  b = document.createElement("div");
  b.setAttribute(
    "style",
    "transition:top 1s ease;-webkit-transition:top 1s ease;-moz-transition:top 1s ease;-o-transition:top 1s ease;-ms-transition:top 1s ease;transform:translate(0,0);-ms-transform:translate(0,0);-webkit-transform:translate(0,0);-o-transform:translate(0,0);-moz-transform:translate(0,0);"
  );
  h.lM = !!(
    b.style.transition ||
    b.style.webkitTransition ||
    b.style.MozTransition ||
    b.style.te ||
    b.style.qa
  );
  h.V3 = !!(
    b.style.transform ||
    b.style.webkitTransform ||
    b.style.MozTransform ||
    b.style.Yb ||
    b.style.J
  );
  h.wf && (h.lM = !1);
  h.lM &&
    ((g = a = "transition"),
    h.wf && ((a = "-ms-transition"), (g = "MSTransition")),
    h.Sn && ((a = "-webkit-transition"), (g = "webkitTransition")),
    h.mk && ((a = "-moz-transition"), (g = "MozTransition")),
    h.Ok && ((a = "-o-transition"), (g = "OTransition")),
    (h.Cfa = a),
    (h.Dfa = g));
  h.V3 &&
    ((g = a = "transform"),
    h.wf && ((a = "-ms-transform"), (g = "MSTransform")),
    h.Sn && ((a = "-webkit-transform"), (g = "webkitTransform")),
    h.mk && ((a = "-moz-transform"), (g = "MozTransform")),
    h.Ok && ((a = "-o-transform"), (g = "OTransform")),
    (h.Afa = a),
    (h.Bfa = g));
  h.LE = !1;
  if (
    b.requestFullScreen ||
    b.mozRequestFullScreen ||
    b.webkitRequestFullScreen ||
    b.msRequestFullscreen
  )
    h.LE = !0;
  h.rE = !1;
  if (
    document.fullscreenEnabled ||
    document.mozFullScreenEnabled ||
    document.webkitFullscreenEnabled ||
    document.msFullscreenEnabled
  )
    h.rE = !0;
  window.console || (window.console = { log: function () {} });
  b = window.crypto || window.msCrypto;
  h.eh = (b && (b.subtle || b.webkitSubtle)) || null;
  try {
    (h.indexedDB =
      window.indexedDB ||
      window.mozIndexedDB ||
      window.webkitIndexedDB ||
      window.msIndexedDB),
      (h.$ea =
        window.IDBTransaction ||
        window.webkitIDBTransaction ||
        window.msIDBTransaction);
  } catch (w) {}
  h.wM && (h.indexedDB = null);
  h.sa =
    1 < window.devicePixelRatio ||
    (window.matchMedia &&
      window.matchMedia(
        "(-webkit-min-device-pixel-ratio: 1.5),(min--moz-device-pixel-ratio: 1.5),(-o-min-device-pixel-ratio: 3/2),(min-resolution: 1.5dppx)"
      ).matches)
      ? !0
      : !1;
  h.devicePixelRatio = window.devicePixelRatio;
  h.$M = "&nbsp;";
  h.uE = !1;
})();
(function () {
  function v(e) {
    e && e.parentNode && e.parentNode.removeChild(e);
  }
  function r(e, b) {
    if (e) {
      if ("number" == typeof b && 0 < b) {
        for (var a = e, g = 0; g < b; g++) a && (a = a.firstChild);
        return a;
      }
      return e.firstChild;
    }
    return null;
  }
  function l(e) {
    for (var b; (b = r(e)); ) l(b), v(b);
  }
  function e(e, b) {
    if (!b) return !1;
    if (e && e.className) {
      var a = e.classList;
      if (a && a.contains) return a.contains(b);
      if (e.className == b) return !0;
      if ((a = e.className.split(" ")))
        for (var g = 0, d = a.length; g < d; g++) if (a[g] == b) return !0;
    }
    return !1;
  }
  var k = (E.va = {});
  k.ha = function (e) {
    k.window = e;
    k.document = e.document;
    k.body = e.document.body;
  };
  k.sb = function (e, b) {
    return b
      ? window.document.createElementNS(b, e)
      : window.document.createElement(e);
  };
  k.tb = function (e, b, a) {
    e && e.appendChild && (a ? e.insertBefore(b, a) : e.appendChild(b));
  };
  k.mm = v;
  k.hb = function (e, b, a) {
    if (e && b) {
      var g, d, f;
      if (e) {
        var c = e.classList;
        if (c) {
          if ((g = b.split(" ")))
            for (d = 0, f = g.length; d < f; d++)
              g[d] && (a ? c.remove(g[d]) : c.add(g[d]));
        } else if (e.className) {
          if ((g = e.className.split(" "))) {
            d = 0;
            for (f = g.length; d < f; d++)
              if (g[d] == b)
                if (a) g.splice(d, 1);
                else return;
            a || g.push(b);
            e.className = g.join(" ");
          }
        } else a || (e.className = b);
      }
    }
  };
  k.$a = function (e, b, a) {
    if (e) {
      e = e.style;
      if ("object" == typeof b) {
        var g,
          d = 0,
          f;
        for (g in b) if ((d++, 2 < d)) break;
        void 0 !== b.display &&
          "none" == b.display &&
          ((e.display = "none"), (b.display = null), delete b.display);
        void 0 !== b.display &&
          ((f = b.display),
          (e.display = "none"),
          (b.display = null),
          delete b.display);
        for (g in b) e[g] = b[g];
        f && (e.display = f);
      }
      "string" == typeof b && (e[b] = a);
    }
  };
  k.Cd = function (e, b) {
    e && (e.innerHTML = b);
  };
  k.sS = function () {
    return window.document.getElementById("preloader");
  };
  k.Ad = function (e, b) {
    if (e) {
      if (void 0 === b) return e.parentNode;
      var a = 0;
      for (b = parseInt(b, 10); a < b; ) e && (e = e.parentNode), a++;
      return e;
    }
  };
  k.Ig = function (e, b) {
    if (e) {
      if (void 0 === b) return e.nextSibling;
      var a = 0;
      for (b = parseInt(b, 10); a < b; ) e && (e = e.nextSibling), a++;
      return e;
    }
  };
  k.Vl = function (e, b) {
    if (e) {
      if (void 0 === b) return e.previousSibling;
      var a = 0;
      for (b = parseInt(b, 10); a < b; ) e && (e = e.previousSibling), a++;
      return e;
    }
  };
  k.Uj = l;
  k.Xb = r;
  k.lh = function (e, b) {
    if ("number" == typeof b && 0 < b) {
      for (var a = e, g = 0; g < b; g++) a && (a = a.lastChild);
      return a;
    }
    return (e && e.lastChild) || null;
  };
  k.md = function (e) {
    return e ? e.nodeName.toLowerCase() : "";
  };
  k.wg = e;
  k.Wf = function () {
    return k.document.activeElement;
  };
  k.vS = function () {
    var e = k.document;
    return (
      e.fullscreenElement ||
      e.mozFullScreenElement ||
      e.webkitFullscreenElement ||
      e.msFullscreenElement
    );
  };
  k.fS = function (e) {
    e.Kj
      ? e.Kj()
      : e.mozRequestFullScreen
      ? e.mozRequestFullScreen()
      : e.webkitRequestFullScreen
      ? e.webkitRequestFullScreen()
      : e.te && e.te();
  };
  k.MP = function () {
    var e = k.document;
    e.G3
      ? e.G3()
      : e.mozCancelFullScreen
      ? e.mozCancelFullScreen()
      : e.webkitCancelFullScreen
      ? e.webkitCancelFullScreen()
      : e.r4 && e.r4();
  };
  k.lS = function (e, b) {
    if (!e) return null;
    b = b.replace(/-([a-z])/gi, function (a, b) {
      return b.toUpperCase();
    });
    var a = {};
    if (e.currentStyle) a.value = (e.currentStyle[b] || "").toLowerCase();
    else {
      var g = e.ownerDocument.defaultView || e.ownerDocument.parentWindow;
      if (g.getComputedStyle && (g = g.getComputedStyle(e)))
        a.value = (g[b] || "").toLowerCase();
      else return null;
    }
    a.Tea = e.style[b] == a.value;
    return a;
  };
  k.gq = function (h, b, a) {
    if (h.querySelectorAll)
      return Array.prototype.slice.call(h.querySelectorAll(b + "." + a));
    var g = [];
    if ((h = h.getElementsByTagName(b)))
      for (var d = 0, f = h.length; d < f; d++)
        (b = h[d]) && e(b, a) && g.push(b);
    return g;
  };
  k.tG = function (e, b) {
    return e.getElementsByTagName(b);
  };
  k.Jba = function (e, b) {
    return e && b ? e.querySelector(b) : null;
  };
  k.Kba = function (e, b) {
    return e && b ? e.querySelectorAll(b) : null;
  };
})();
(function () {
  function v(a, b, f, g) {
    a &&
      ((b = k(b)),
      "touchclick" == b && v(a, "touchstart", h),
      void 0 === f.SD && (f.SD = z++),
      a.ke ||
        ((a.ke = {}),
        (a.J = function (a) {
          try {
            if (c || "undefined" !== typeof Event) {
              var b = a || this.event,
                f = this.ke[b.type] || [],
                g;
              b.Gi ||
                (void 0 === b.target && (b.target = b.srcElement),
                b.preventDefault || (b.preventDefault = l),
                b.stopPropagation || (b.stopPropagation = e),
                void 0 === b.which &&
                  void 0 !== b.button &&
                  (b.which = d.wf
                    ? "click" == b.type
                      ? 1
                      : b.button & 1
                      ? 1
                      : b.button & 2
                      ? 3
                      : b.button & 4
                      ? 2
                      : 0
                    : 0 === b.button
                    ? 1
                    : 1 == b.button
                    ? 2
                    : 3),
                (b.J = 0),
                b.wheelDelta
                  ? ((b.J = b.wheelDelta / 120), d.Ok && (b.J = -b.qa))
                  : b.detail && (b.J = -b.detail / 3),
                (b.Gi = !0));
              a = 0;
              for (var q = f.length; a < q; a++)
                if ((g = f[a]))
                  try {
                    !1 === g.call(this, b) &&
                      (b.stopPropagation(), b.preventDefault(), (a = q));
                  } catch (m) {
                    console.log(b.type + ":", m.message);
                  }
            }
          } catch (u) {
            console.log("Global event handler error", u.message);
          }
        })),
      a.ke[b] ||
        ((a.ke[b] = []),
        a.addEventListener
          ? a.addEventListener(b, a.J, !1)
          : a.attachEvent("on" + b, a.J)),
      isNaN(g) ? a.ke[b].push(f) : a.ke[b].splice(g, 0, f));
  }
  function r(c, a, b) {
    a = k(a);
    "touchclick" == a && r(c, "touchstart", h);
    var d = c.ke && c.ke[a];
    b = b.SD;
    var f;
    if (d && void 0 !== b) {
      for (var g = 0, n = d.length; g < n; g++)
        if ((f = d[g]) && f.SD == b) {
          d[g] = null;
          break;
        }
      b = 0;
      for (f = d.length; b < f; b++) if (d[b]) return;
      c.removeEventListener
        ? c.removeEventListener(a, c.J, !1)
        : c.detachEvent(["on", a].join(""), c.J);
      delete c.ke[a];
      for (f in c.ke) return;
      try {
        delete c.ke, delete c.J;
      } catch (e) {
        c.removeAttribute("__events"), c.removeAttribute("__eventHandler");
      }
    }
  }
  function l() {
    this.returnValue = !1;
  }
  function e() {
    this.cancelBubble = !0;
  }
  function k(c) {
    d.uE && "click" == c && (c = "touchclick");
    d.mk && "mousewheel" == c && (c = "DOMMouseScroll");
    return c;
  }
  function h(c) {
    var d = c.currentTarget;
    d.NL = !1;
    d.OL = !1;
    c &&
      c.touches &&
      1 == c.touches.length &&
      ((d.NL = !0),
      (d.v3 = c.touches[0].clientX),
      (d.w3 = c.touches[0].clientY));
    v(d, "touchend", a);
    v(d, "touchcancel", a);
    v(d, "touchmove", b);
    1 != d.nodeType ||
      (d.className && -1 < d.className.indexOf("disabled")) ||
      f.hb(d, "pressed");
    if (f.wg(d, "but")) return !1;
  }
  function b(c) {
    c = c.currentTarget;
    this.OL = !0;
    1 == c.nodeType && f.hb(c, "pressed", !0);
  }
  function a(c) {
    var d = c.currentTarget;
    c.preventDefault();
    f.hb(d, "pressed", !0);
    r(d, "touchmove", b);
    r(d, "touchend", a);
    r(d, "touchcancel", a);
    var g = !1;
    d.NL
      ? (c = c.changedTouches && c.changedTouches[0]) &&
        4 > Math.abs(c.clientX - d.v3) &&
        4 > Math.abs(c.clientY - d.w3) &&
        (g = !0)
      : (g = !d.OL);
    !g ||
      (1 == d.nodeType &&
        d.className &&
        -1 < d.className.indexOf("disabled")) ||
      d.Gea ||
      (document.activeElement && document.activeElement.blur(),
      (g = document.createEvent("MouseEvents")),
      g.initEvent("touchclick", !0, !0),
      d.dispatchEvent(g));
  }
  var g = (E.oc = {});
  g.i = v;
  g.hc = r;
  g.mu = function (c) {
    var a = c.ke,
      d;
    if (a) {
      for (d in a)
        c.removeEventListener
          ? c.removeEventListener(d, c.J, !1)
          : c.detachEvent(["on", d].join(""), c.J);
      try {
        delete c.ke, delete c.J;
      } catch (b) {
        try {
          c.removeAttribute("__events"), c.removeAttribute("__eventHandler");
        } catch (f) {
          (c.ke = void 0), (c.J = void 0);
        }
      }
    }
  };
  g.vx = function (c, a, b, g) {
    g || (g = {});
    var e = f.document.createEvent(a);
    "MouseEvent" == a &&
      e.initMouseEvent(
        b,
        !0,
        !0,
        f.window,
        0,
        d.yp,
        d.zp,
        d.yp,
        d.zp,
        g.ctrlKey || !1,
        g.altKey || !1,
        g.shiftKey || !1,
        g.metaKey || !1,
        2,
        null
      );
    "Event" == a && e.initEvent(b, !1, !1);
    c.dispatchEvent(e);
  };
  var d = E.Qa,
    f = E.va,
    c = d.wf && 8 > d.Ap,
    z = 0;
  window.KeyEvent ||
    (window.KeyEvent = {
      U6: 3,
      I7: 6,
      S6: 8,
      u8: 9,
      W6: 12,
      NR: 13,
      HR: 14,
      p8: 16,
      a7: 17,
      O6: 18,
      f8: 19,
      V6: 20,
      g7: 27,
      r8: 32,
      MR: 33,
      LR: 34,
      GR: 35,
      IR: 36,
      KR: 37,
      PR: 38,
      OR: 39,
      FR: 40,
      h8: 44,
      JR: 45,
      ER: 46,
      C6: 48,
      D6: 49,
      E6: 50,
      F6: 51,
      G6: 52,
      H6: 53,
      I6: 54,
      J6: 55,
      K6: 56,
      L6: 57,
      n8: 59,
      f7: 61,
      M6: 65,
      P6: 66,
      T6: 67,
      b7: 68,
      e7: 69,
      h7: 70,
      G7: 71,
      H7: 72,
      J7: 73,
      K7: 74,
      L7: 75,
      M7: 76,
      N7: 77,
      Q7: 78,
      c8: 79,
      e8: 80,
      i8: 81,
      k8: 82,
      l8: 83,
      t8: 84,
      v8: 85,
      w8: 86,
      x8: 87,
      y8: 88,
      z8: 89,
      A8: 90,
      Z6: 93,
      R7: 96,
      S7: 97,
      T7: 98,
      U7: 99,
      V7: 100,
      W7: 101,
      X7: 102,
      Y7: 103,
      Z7: 104,
      a8: 105,
      P7: 106,
      N6: 107,
      o8: 108,
      s8: 109,
      c7: 110,
      d7: 111,
      i7: 112,
      t7: 113,
      z7: 114,
      A7: 115,
      B7: 116,
      C7: 117,
      D7: 118,
      E7: 119,
      F7: 120,
      j7: 121,
      k7: 122,
      l7: 123,
      m7: 124,
      n7: 125,
      o7: 126,
      p7: 127,
      q7: 128,
      r7: 129,
      s7: 130,
      u7: 131,
      v7: 132,
      w7: 133,
      x7: 134,
      y7: 135,
      b8: 144,
      m8: 145,
      Y6: 188,
      g8: 190,
      q8: 191,
      Q6: 192,
      d8: 219,
      R6: 220,
      X6: 221,
      j8: 222,
      O7: 224,
    });
})();
(function () {
  function v(c) {
    if (!c || "object" != typeof c || c.iw) return c;
    var a = c instanceof Array ? [] : {},
      d,
      b;
    for (d in c)
      (b = c[d]),
        "object" != typeof b || null === b || b.iw || (b = v(b)),
        (a[d] = b);
    return a;
  }
  function r(c, a, d) {
    var b = [];
    c = new Date(c);
    d
      ? (b.push(e(c.getUTCHours())),
        b.push(":"),
        b.push(e(c.getUTCMinutes())),
        b.push(":"),
        b.push(e(c.getUTCSeconds())),
        a && (b.push("."), b.push(k(c.getUTCMilliseconds()))))
      : (b.push(e(c.getHours())),
        b.push(":"),
        b.push(e(c.getMinutes())),
        b.push(":"),
        b.push(e(c.getSeconds())),
        a && (b.push("."), b.push(k(c.getMilliseconds()))));
    return b.join("");
  }
  function l(c, a) {
    var b = [];
    c = new Date(c);
    a
      ? (b.push(e(c.getUTCFullYear())),
        b.push(e(c.getUTCMonth() + 1)),
        b.push(e(c.getUTCDate())))
      : (b.push(e(c.getFullYear())),
        b.push(e(c.getMonth() + 1)),
        b.push(e(c.getDate())));
    return b.join(".");
  }
  function e(c) {
    return 10 > c ? "0" + c : c + "";
  }
  function k(c) {
    return 10 > c ? "00" + c : 100 > c ? "0" + c : c + "";
  }
  var h = (E.ma = {});
  h.Kc = function (c) {
    return "string" != typeof c
      ? c
      : c
      ? c.replace(/(<|>|&)/g, function (c, a) {
          switch (a) {
            case "<":
              return "&lt;";
            case ">":
              return "&gt;";
            case "&":
              return "&amp;";
            case '"':
              return "&quote;";
            case "'":
              return "&#39;";
            default:
              return "&#" + a.charCodeAt(0) + ";";
          }
        })
      : "";
  };
  h.Vh = function (c, a) {
    var f;
    if (!(f = c)) return [0, 0];
    var g = 0,
      e = 0,
      q = !1;
    do
      if (
        (q ||
          "fixed" !== d(f, "position").value ||
          ((g += f.offsetLeft), (e += f.offsetTop), (q = !0)),
        q)
      ) {
        if (f == a || "BODY" == f.nodeName)
          e += f.scrollTop || f.parentNode.scrollTop;
        f = f.offsetParent || f.parentNode;
      } else
        (g += f.offsetLeft),
          (e += f.offsetTop),
          (b.mk && 3.6 > b.O3) || b.Ok
            ? f.offsetParent &&
              f.offsetParent != f.parentNode &&
              f.parentNode.scrollHeight != f.parentNode.clientHeight
              ? ((f = f.parentNode), (g -= f.offsetLeft), (e -= f.offsetTop))
              : (f = f.offsetParent)
            : (f = f.offsetParent);
    while (f && f != a);
    return [g, e];
  };
  h.he = function (c, a) {
    function b() {}
    b.prototype = a.prototype;
    var d = c.prototype;
    c.prototype = new b();
    c.prototype.constructor = c;
    for (var f in d) c.prototype[f] = d[f];
    c.G = a.prototype;
  };
  h.AN = function (c, a) {
    var b;
    b = function () {};
    b.prototype = c.prototype;
    b = new b();
    c.apply(b, a);
    return b;
  };
  h.lo = v;
  h.ve = function (c) {
    for (; c; ) {
      if (c.ag) return c.ag;
      c = g(c);
    }
    return null;
  };
  h.e9 = r;
  h.HS = function () {
    var c = [],
      a = new Date().getTimezoneOffset(),
      b = 0,
      d = Math.abs(a);
    60 <= d && ((b = Math.floor(d / 60)), (d -= 60 * b));
    0 < a ? c.push("-") : c.push("+");
    c.push(e(b));
    c.push(":");
    c.push(e(d));
    return c.join("");
  };
  h.pj = function (c, a, b) {
    var d = l(c, b);
    c = new Date(c);
    return [d, r(c.getTime(), a, b)].join(" ");
  };
  h.bn = function (c, a, b, d, f, g, e, p) {
    var n = {};
    n.id = c;
    n.label = a;
    void 0 !== b && (n.icon = b);
    void 0 !== d && (n.disabled = d);
    void 0 !== f && (n.checked = f);
    void 0 !== g && (n.key = g);
    void 0 !== e && (n.items = e);
    void 0 !== p && (n.Tw = p);
    return n;
  };
  h.d9 = function (c, a, b, d) {
    var f = {};
    f.code = c;
    a && (f.Em = !0);
    b && (f.shift = !0);
    d && (f.alt = !0);
    return f;
  };
  h.DS = function (c) {
    c = (c + "").split(" ").join("");
    c = Math.floor(Number(c));
    return 1048576 < c
      ? Number(c / 1048576).toFixed(1) + " Mb"
      : 1024 < c
      ? Number(c / 1024).toFixed(1) + " Kb"
      : c.toFixed(1) + " byte";
  };
  h.Du = l;
  h.be = function (c) {
    if (0 === c.indexOf("#")) {
      var a = [];
      a[0] = Number("0x" + c.substr(1, 2));
      a[1] = Number("0x" + c.substr(3, 2));
      a[2] = Number("0x" + c.substr(5, 2));
      a[0] /= 255;
      a[1] /= 255;
      a[2] /= 255;
      return a;
    }
    return null;
  };
  h.xk = function (c) {
    return ["rgb(", 255 * c[0], ",", 255 * c[1], ",", 255 * c[2], ")"].join("");
  };
  h.D8 = function (c, a) {
    var b;
    return function () {
      var d = this,
        f = arguments;
      if (0 === a) return c.apply(d, f);
      clearTimeout(b);
      b = setTimeout(function () {
        b = null;
        c.apply(d, f);
      }, a);
    };
  };
  h.al = function (c, a) {
    c.Se || (c.Se = 1e6 * Math.random());
    f[c.Se] ||
      (f[c.Se] = setTimeout(function () {
        c();
        clearTimeout(f[c.Se]);
        f[c.Se] = null;
      }, a));
  };
  h.Vc = function (c) {
    for (var a = Array(c), b = 0; b < c; b++) a[b] = 0;
    return a;
  };
  h.kq = function (c) {
    var b = a.sb("a");
    b.href = c;
    c = {};
    var b = b.search || "",
      d;
    if (b && 0 == b.indexOf("?") && (b = b.substr(1).split("&")))
      for (var f = 0, g = b.length; f < g; f++)
        (d = b[f]) && (d = d.split("=")) && (c[d[0]] = d[1]);
    return c;
  };
  h.xq = function (c, b) {
    var d = a.sb("a");
    d.href = c;
    var f = "",
      g;
    for (g in b)
      b.hasOwnProperty(g) &&
        ((f = f ? f + "&" : f + "?"), (f += g + "=" + b[g]));
    d.search = f;
    return d.href;
  };
  h.gG = function (c, a) {
    if (c && a) for (var b in c) c.hasOwnProperty(b) && (a[b] = c[b]);
  };
  var b = E.Qa,
    a = E.va,
    g = a.Ad,
    d = a.lS,
    f = {};
})();
(function () {
  function v(c) {
    return [
      c.code,
      c.Em ? "1" : "0",
      c.alt ? "1" : "0",
      c.shift ? "1" : "0",
    ].join("_");
  }
  function r(c) {
    var b = c.target.nodeName;
    if ("INPUT" == b || "TEXTAREA" == b || "SELECT" == b)
      switch (c.keyCode) {
        case a.MR:
        case a.LR:
        case a.GR:
        case a.IR:
        case a.KR:
        case a.PR:
        case a.OR:
        case a.FR:
        case a.JR:
        case a.ER:
        case a.NR:
        case a.HR:
          return;
      }
    var g;
    a: if (
      (b =
        d[
          v({
            code: c.keyCode,
            Em: c.ctrlKey,
            alt: c.altKey || c.altLeft,
            shift: c.shiftKey || c.shiftLeft,
          })
        ])
    ) {
      try {
        var m = b.listener,
          h = b.context,
          q = b.B3;
        if (!m) {
          g = !1;
          break a;
        }
        h ? (q ? m.apply(h, q) : m.call(h)) : q ? m.apply(e, q) : m.call(e);
      } catch (w) {
        console.Wb(w.message);
      }
      c.preventDefault && c.preventDefault();
      g = !0;
    } else g = !1;
    g && (f = !0);
  }
  function l(c) {
    f && c.preventDefault();
    f = !1;
  }
  var e = (E.Zea = {});
  e.ha = function () {
    d = {};
    b(k.window, "keydown", r);
    h.Ok && b(k.window, "keypress", l);
  };
  e.l5 = function (c, a, b, f) {
    c && c.code && (d[v(c)] = { listener: a, context: b, B3: f });
  };
  e.bca = function (c) {
    c && c.code && ((c = v(c)), (d[c] = null), delete d[c]);
  };
  e.c9 = function (c) {
    var a = [];
    c.Em && a.push("Ctrl");
    c.shift && a.push("Shift");
    c.alt && a.push("Alt");
    a.push(g[c.code]);
    return a.join("+");
  };
  var k = E.va,
    h = E.Qa,
    b = E.oc.i,
    a = window.FE,
    g = {
      8: "BackSpace",
      9: "Tab",
      13: "Return",
      16: "Shift",
      17: "Ctrl",
      18: "Alt",
      19: "PauseBreak",
      20: "CapsLock",
      27: "Escape",
      32: "Space",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "Left",
      38: "Up",
      39: "Right",
      40: "Down",
      43: "+",
      44: "PrintScreen",
      45: "Insert",
      46: "Delete",
      48: "0",
      49: "1",
      50: "2",
      51: "3",
      52: "4",
      53: "5",
      54: "6",
      55: "7",
      56: "8",
      57: "9",
      59: ";",
      61: "=",
      65: "A",
      66: "B",
      67: "C",
      68: "D",
      69: "E",
      70: "F",
      71: "G",
      72: "H",
      73: "I",
      74: "J",
      75: "K",
      76: "L",
      77: "M",
      78: "N",
      79: "O",
      80: "P",
      81: "Q",
      82: "R",
      83: "S",
      84: "T",
      85: "U",
      86: "V",
      87: "W",
      88: "X",
      89: "Y",
      90: "Z",
      96: "0",
      97: "1",
      98: "2",
      99: "3",
      100: "4",
      101: "5",
      102: "6",
      103: "7",
      104: "8",
      105: "9",
      106: "*",
      107: "+",
      109: "-",
      110: ".",
      111: "/",
      112: "F1",
      113: "F2",
      114: "F3",
      115: "F4",
      116: "F5",
      117: "F6",
      118: "F7",
      119: "F8",
      120: "F9",
      121: "F10",
      122: "F11",
      123: "F12",
      144: "NumLock",
      145: "ScrollLock",
      186: ";",
      187: "=",
      188: ",",
      189: "-",
      190: ".",
      191: "/",
      192: "`",
      219: "[",
      220: "\\",
      221: "]",
      222: "'",
    },
    d,
    f;
})();
(function () {
  function v(e) {
    e = e.split(".");
    var k;
    if (4 !== e.length) return !1;
    for (var h = 0, b = e.length; h < b; h++)
      if (((k = parseInt(e[h], 10)), isNaN(k) || 255 < k)) return !1;
    return !0;
  }
  function r(e) {
    var k = e.split(":"),
      h;
    if (1 < k.length)
      for (var b = 0, a = k.length; b < a; b++)
        if ((h = k[b]))
          if (((h = Number("0x" + h)), isNaN(h) || 65535 < h)) return !1;
    return 8 != k.length && -1 == e.indexOf("::") ? !1 : !0;
  }
  var l = (E.gN = {});
  l.kH = function (e) {
    var k, h, b, a, g, d, f;
    if (!e) return !0;
    if (-1 == e.indexOf("@")) return !1;
    k = e.split("@");
    2 == k.length
      ? ((h = k[0]), (g = k[1]))
      : -1 !== e.indexOf('"@')
      ? ((k = e.split('"@')), (h = k[0] + '"'), (g = k[1]))
      : -1 !== e.indexOf("@[") &&
        ((k = e.split("@[")), (h = k[0]), (g = "[" + k[1]));
    if (
      !h ||
      !g ||
      64 < h.length ||
      252 < g.length ||
      "." === h.charAt(0) ||
      "." === h.charAt(h.length - 1) ||
      "." === g.charAt(0) ||
      "." === g.charAt(g.length - 1) ||
      -1 !== g.indexOf("..")
    )
      return !1;
    if ('"' === h.charAt(0)) {
      b = { 91: !0, 93: !0, 34: !0 };
      if ('"' != h.charAt(h.length - 1)) return !1;
      f = h.substring(1, h.length - 1);
      k = 0;
      for (h = f.length; k < h; k++)
        if (
          ((e = f.charCodeAt(k)),
          10 == e || 13 == e || (b[e] && ((e = f.charAt(k - 1)), "\\" !== e)))
        )
          return !1;
    } else {
      if (-1 !== h.indexOf("..")) return !1;
      d = h.split(".");
      b = 0;
      for (a = d.length; b < a; b++) {
        f = d[b];
        if (!f) return !1;
        k = 0;
        for (h = f.length; k < h; k++)
          if (
            ((e = f.charAt(k)),
            -1 ===
              "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!#$%&'*+-/=?^_`{|}~".indexOf(
                e
              ))
          )
            return !1;
      }
    }
    k = v(g);
    h = r(g);
    if (!k && !h)
      if ("[" !== g.charAt(0))
        for (d = g.split("."), k = 0, h = d.length; k < h; k++) {
          f = d[k];
          if (
            !f ||
            63 < f.length ||
            "-" === f.charAt(0) ||
            "-" === f.charAt(f.length - 1) ||
            -1 !== f.indexOf("--")
          )
            return !1;
          if (k === h - 1)
            for (b = 0, a = f.length; b < a; b++) {
              if (((e = f.charAt(b)), !isNaN(parseInt(e, 10)))) return !1;
            }
          else for (b = 0, a = f.length; b < a; b++);
        }
      else {
        if ("]" !== g.charAt(g.length - 1)) return !1;
        g = g.substring(1, g.length - 1);
        k = 0;
        for (h = g.length; k < h; k++) {
          e = g.charCodeAt(k);
          if (10 == e || 13 == e) return !1;
          if (123 == e || 125 == e || 124 == e || 94 == e)
            if (((e = f.charAt(k - 1)), "\\" !== e)) return !1;
        }
        d = g.split(".");
        k = 0;
        for (h = d.length; k < h; k++) {
          f = d[k];
          if (
            !f ||
            63 < f.length ||
            "-" === f.charAt(0) ||
            "-" === f.charAt(f.length - 1) ||
            -1 !== f.indexOf("--")
          )
            return !1;
          if (k === h - 1)
            for (b = 0, a = f.length; b < a; b++)
              if (((e = f.charAt(b)), !isNaN(parseInt(e, 10)))) return !1;
        }
      }
    return !0;
  };
  l.g$ = v;
  l.h$ = r;
  l.dB = function (e) {
    return !(
      !e ||
      6 > e.length ||
      -1 < e.indexOf("<") ||
      -1 < e.indexOf(">") ||
      e.test(/(\ud83c[\udde8-\uddfa])(\ud83c[\udde7-\uddfa])/g) ||
      e.test(/[\u0023-\u0039]\u20E3/g) ||
      e.test(/[\u2139-\u3299]/g) ||
      e.test(/[\u203C\u2049]/g) ||
      e.test(/([\ud800-\udbff])([\udc00-\udfff])/g)
    );
  };
  l.uH = function (e) {
    return !(
      !e ||
      2 > e.length ||
      -1 < e.indexOf("<") ||
      -1 < e.indexOf(">") ||
      e.test(/(\ud83c[\udde8-\uddfa])(\ud83c[\udde7-\uddfa])/g) ||
      e.test(/[\u0023-\u0039]\u20E3/g) ||
      e.test(/[\u2139-\u3299]/g) ||
      e.test(/[\u203C\u2049]/g) ||
      e.test(/([\ud800-\udbff])([\udc00-\udfff])/g)
    );
  };
})();
(function () {
  function v() {
    var a = this.lk;
    if (a) {
      var b = (this.QM = a.createProgram());
      a.attachShader(
        b,
        r(
          a,
          a.VERTEX_SHADER,
          "attribute vec2 a_position;attribute vec4 a_color;uniform vec2 u_resolution;void main() {vec2 zeroToOne = a_position / u_resolution;vec2 zeroToTwo = zeroToOne * 2.0;vec2 clipSpace = zeroToTwo - 1.0;gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);}"
        )
      );
      a.attachShader(
        b,
        r(
          a,
          a.FRAGMENT_SHADER,
          "precision mediump float;varying vec4 v_color;uniform vec4 u_color;void main(void) {   gl_FragColor = u_color;}"
        )
      );
      a.linkProgram(b);
      a.getProgramParameter(b, a.LINK_STATUS) &&
        ((b = this.DM = a.createProgram()),
        a.attachShader(
          b,
          r(
            a,
            a.VERTEX_SHADER,
            "attribute vec2 a_position;attribute float a_distance;uniform vec2 u_resolution;varying float v_distance;void main() {   vec2 zeroToOne = a_position / u_resolution;   vec2 zeroToTwo = zeroToOne * 2.0;   vec2 clipSpace = zeroToTwo - 1.0;   gl_Position = vec4(clipSpace * vec2(1, -1) - 1.0 / u_resolution , 0, 1);   v_distance = a_distance;}"
          )
        ),
        a.attachShader(
          b,
          r(
            a,
            a.FRAGMENT_SHADER,
            "precision mediump float;uniform float u_dash;uniform vec4 u_color;uniform vec4 u_background;varying float v_distance;void main(void) {   if(u_dash>0.0)     {      if(mod(v_distance,u_dash*2.0)>u_dash) gl_FragColor=u_background;      else                                  gl_FragColor=u_color;     }   else      gl_FragColor=u_color;}"
          )
        ),
        a.linkProgram(b),
        a.getProgramParameter(b, a.LINK_STATUS) &&
          ((b = this.I3 = a.createProgram()),
          a.attachShader(
            b,
            r(
              a,
              a.VERTEX_SHADER,
              " uniform vec2 u_resolution;  attribute vec2 a_position;attribute vec2 a_center;attribute float a_radius;varying vec2 center;varying vec2 resolution;varying float radius;void main() {  vec2 clipspace = a_position / u_resolution * 2.0 - 1.0;  gl_Position = vec4(clipspace * vec2(1, -1), 0, 1);  radius = a_radius;  center = a_center;  resolution = u_resolution;}"
            )
          ),
          a.attachShader(
            b,
            r(
              a,
              a.FRAGMENT_SHADER,
              "precision mediump float;varying vec2 center;varying vec2 resolution;varying float radius;uniform vec4 u_color;void main() {  vec4 color0 = vec4(0.0, 0.0, 0.0, 0.0);  float x = gl_FragCoord.x;  float y = resolution[1] - gl_FragCoord.y;  float dx = center[0] - x;  float dy = center[1] - y;  float distance = sqrt(dx*dx + dy*dy);  if ( distance < radius )    gl_FragColor = u_color;  else    gl_FragColor = color0;}"
            )
          ),
          a.linkProgram(b)));
    }
  }
  function r(a, b, f) {
    b = a.createShader(b);
    a.shaderSource(b, f);
    a.compileShader(b);
    return b;
  }
  function l(a) {
    var b = new Float32Array(0.5 * a.length),
      f = 0;
    b[0] = 0;
    for (var c = 2, e = a.length, h = 1, m, u, q, w; c < e; c += 2, h++)
      (m = a[c]),
        (u = a[c + 1]),
        (q = a[c - 2]),
        (w = a[c - 1]),
        (b[h] = f + Math.sqrt((q - m) * (q - m) + (w - u) * (w - u))),
        (f = b[h]);
    return b;
  }
  function e(a) {
    return ["rgb(", 255 * a[0], ",", 255 * a[1], ",", 255 * a[2], ")"].join("");
  }
  function k(a) {
    a.preventDefault();
  }
  function h() {
    var a = this.Ub,
      b = { antialias: !1, premultipliedAlpha: !1, alpha: !0 };
    a.lk =
      this.getContext("webgl", b) || this.getContext("experimental-webgl", b);
    v.call(a);
  }
  var b = E.Qa,
    a = (E.Bh = function (a) {
      if (b.yd) {
        var d = { antialias: !1, premultipliedAlpha: !1, alpha: !0 };
        this.lk =
          a.getContext("webgl", d) || a.getContext("experimental-webgl", d);
        this.canvas = a;
        a.addEventListener("webglcontextlost", k, !1);
        a.addEventListener("webglcontextrestored", h, !1);
        a.Ub = this;
        v.call(this);
      } else this.Lk = a.getContext("2d");
    });
  a.prototype.Oa = function () {
    if (!b.yd) {
      var a = this.Lk;
      a &&
        a.clearRect(
          0,
          0,
          parseInt(a.canvas.width, 10) * b.devicePixelRatio,
          parseInt(a.canvas.height, 10) * b.devicePixelRatio
        );
      return this;
    }
    a = this.lk;
    if (!a) return this;
    a.viewport(0, 0, a.drawingBufferWidth, a.drawingBufferHeight);
    a.clear(a.COLOR_BUFFER_BIT | a.DEPTH_BUFFER_BIT);
    return this;
  };
  a.prototype.Dg = function (a) {
    if (b.yd) {
      var d = this.lk;
      if (d) {
        var f = this.QM;
        f &&
          ((this.$e = []),
          d.useProgram(f),
          (this.Kk = d.getAttribLocation(f, "a_position")),
          (this.Qp = d.getUniformLocation(f, "u_resolution")),
          (this.Pp = d.getUniformLocation(f, "u_color")),
          d.enableVertexAttribArray(this.Kk),
          d.uniform2f(
            this.Qp,
            parseInt(d.canvas.style.width, 10),
            parseInt(d.canvas.style.height, 10)
          ),
          d.uniform4f(
            this.Pp,
            (a && a[0]) || 0,
            (a && a[1]) || 0,
            (a && a[2]) || 0,
            1
          ));
      }
    } else if ((d = this.Lk)) d.beginPath(), (d.fillStyle = e(a));
  };
  a.prototype.Gg = function (a, d, f, c) {
    if (!b.yd) {
      var e = this.Lk;
      e &&
        e.fillRect(
          a * b.devicePixelRatio,
          d * b.devicePixelRatio,
          f * b.devicePixelRatio,
          c * b.devicePixelRatio
        );
      return this;
    }
    if (!this.lk) return this;
    f = a + f;
    c = d + c;
    this.$e[this.$e.length] = a;
    this.$e[this.$e.length] = d;
    this.$e[this.$e.length] = f;
    this.$e[this.$e.length] = d;
    this.$e[this.$e.length] = a;
    this.$e[this.$e.length] = c;
    this.$e[this.$e.length] = a;
    this.$e[this.$e.length] = c;
    this.$e[this.$e.length] = f;
    this.$e[this.$e.length] = d;
    this.$e[this.$e.length] = f;
    this.$e[this.$e.length] = c;
    return this;
  };
  a.prototype.Fg = function () {
    if (b.yd) {
      var a = this.lk;
      if (a && this.$e.length) {
        var d = a.createBuffer();
        a.bindBuffer(a.ARRAY_BUFFER, d);
        a.bufferData(a.ARRAY_BUFFER, new Float32Array(this.$e), a.STATIC_DRAW);
        a.vertexAttribPointer(this.Kk, 2, a.FLOAT, !1, 0, 0);
        a.drawArrays(a.TRIANGLES, 0, 0.5 * this.$e.length);
        a.bindBuffer(a.ARRAY_BUFFER, null);
        this.$e = null;
      }
    } else (a = this.Lk) && a.closePath();
  };
  a.prototype.dF = function (a) {
    if (b.yd) {
      var d = this.lk;
      if (d) {
        var f = this.QM;
        f &&
          ((this.pi = []),
          d.useProgram(f),
          (this.Kk = d.getAttribLocation(f, "a_position")),
          (this.Qp = d.getUniformLocation(f, "u_resolution")),
          (this.Pp = d.getUniformLocation(f, "u_color")),
          d.enableVertexAttribArray(this.Kk),
          d.uniform2f(
            this.Qp,
            parseInt(d.canvas.style.width, 10),
            parseInt(d.canvas.style.height, 10)
          ),
          d.uniform4f(
            this.Pp,
            (a && a[0]) || 0,
            (a && a[1]) || 0,
            (a && a[2]) || 0,
            1
          ));
      }
    } else if ((d = this.Lk)) d.beginPath(), (d.fillStyle = e(a));
  };
  a.prototype.$r = function (a, d, f, c, e, h) {
    if (b.yd)
      this.lk &&
        ((this.pi[this.pi.length] = a),
        (this.pi[this.pi.length] = d),
        (this.pi[this.pi.length] = f),
        (this.pi[this.pi.length] = c),
        (this.pi[this.pi.length] = e),
        (this.pi[this.pi.length] = h));
    else {
      var m = this.Lk;
      m &&
        (m.beginPath(),
        m.moveTo(a * b.devicePixelRatio, d * b.devicePixelRatio),
        m.lineTo(f * b.devicePixelRatio, c * b.devicePixelRatio),
        m.lineTo(e * b.devicePixelRatio, h * b.devicePixelRatio),
        m.fill());
    }
  };
  a.prototype.eG = function () {
    if (b.yd) {
      var a = this.lk;
      if (a && this.pi.length) {
        var d = a.createBuffer();
        a.bindBuffer(a.ARRAY_BUFFER, d);
        a.bufferData(a.ARRAY_BUFFER, new Float32Array(this.pi), a.STATIC_DRAW);
        a.vertexAttribPointer(this.Kk, 2, a.FLOAT, !1, 0, 0);
        a.drawArrays(a.TRIANGLES, 0, 0.5 * this.pi.length);
        a.bindBuffer(a.ARRAY_BUFFER, null);
        this.pi = null;
      }
    } else (a = this.Lk) && a.closePath();
  };
  a.prototype.RR = function (a, d) {
    if (0 !== (a || []).length)
      if (b.yd) {
        var f = this.lk;
        if (f) {
          var c = this.I3;
          if (c) {
            f.useProgram(c);
            for (var h = [], k = a.length, m = 0, u = 0; m < k; m++) {
              var q = a[m],
                w = q[0],
                p = q[1],
                q = q[2];
              h[u++] = w - q;
              h[u++] = p - q;
              h[u++] = w;
              h[u++] = p;
              h[u++] = q;
              h[u++] = w + (1 + Math.sqrt(2)) * q;
              h[u++] = p - q;
              h[u++] = w;
              h[u++] = p;
              h[u++] = q;
              h[u++] = w - q;
              h[u++] = p + (1 + Math.sqrt(2)) * q;
              h[u++] = w;
              h[u++] = p;
              h[u++] = q;
            }
            k = new Float32Array(h);
            q = f.createBuffer();
            f.bindBuffer(f.ARRAY_BUFFER, q);
            f.bufferData(f.ARRAY_BUFFER, k, f.STATIC_DRAW);
            f.uniform2f(
              f.getUniformLocation(c, "u_resolution"),
              parseInt(f.canvas.style.width, 10),
              parseInt(f.canvas.style.height, 10)
            );
            f.uniform4f(
              f.getUniformLocation(c, "u_color"),
              (d && d[0]) || 0,
              (d && d[1]) || 0,
              (d && d[2]) || 0,
              1
            );
            k = f.getAttribLocation(c, "a_position");
            q = f.getAttribLocation(c, "a_center");
            c = f.getAttribLocation(c, "a_radius");
            f.enableVertexAttribArray(k);
            f.enableVertexAttribArray(q);
            f.enableVertexAttribArray(c);
            f.vertexAttribPointer(
              k,
              2,
              f.FLOAT,
              !1,
              5 * Float32Array.BYTES_PER_ELEMENT,
              0
            );
            f.vertexAttribPointer(
              q,
              2,
              f.FLOAT,
              !1,
              5 * Float32Array.BYTES_PER_ELEMENT,
              8
            );
            f.vertexAttribPointer(
              c,
              1,
              f.FLOAT,
              !1,
              5 * Float32Array.BYTES_PER_ELEMENT,
              16
            );
            f.drawArrays(f.TRIANGLES, 0, h.length / 5);
          }
        }
      } else if ((f = this.Lk)) {
        f.fillStyle = e(d);
        k = a.length;
        for (h = 0; h < k; h++)
          f.beginPath(),
            (q = a[h]),
            f.arc(
              q[0] * b.devicePixelRatio,
              q[1] * b.devicePixelRatio,
              q[2] * b.devicePixelRatio,
              0,
              2 * Math.PI,
              !0
            ),
            f.fill();
        f.stroke();
      }
  };
  a.prototype.Ue = function (a, d, f) {
    void 0 === f && (f = 0);
    if (0 !== (a || []).length)
      if (b.yd) {
        var c = this.lk;
        if (c) {
          var h = this.DM;
          h &&
            (c.useProgram(h),
            (this.Kk = c.getAttribLocation(h, "a_position")),
            (this.J = c.getAttribLocation(h, "a_distance")),
            (this.Pp = c.getUniformLocation(h, "u_color")),
            (this.qa = c.getUniformLocation(h, "u_background")),
            (this.Qp = c.getUniformLocation(h, "u_resolution")),
            (this.Yb = c.getUniformLocation(h, "u_dash")),
            c.enableVertexAttribArray(this.Kk),
            c.disableVertexAttribArray(this.J),
            c.uniform4f(
              this.Pp,
              (d && d[0]) || 0,
              (d && d[1]) || 0,
              (d && d[2]) || 0,
              1
            ),
            c.uniform4f(this.qa, 0, 0, 0, 0),
            c.uniform2f(
              this.Qp,
              parseInt(c.canvas.style.width, 10),
              parseInt(c.canvas.style.height, 10)
            ),
            c.uniform1f(this.Yb, f),
            (d = c.createBuffer()),
            c.bindBuffer(c.ARRAY_BUFFER, d),
            c.bufferData(
              c.ARRAY_BUFFER,
              a instanceof Float32Array ? a : new Float32Array(a),
              c.STATIC_DRAW
            ),
            c.vertexAttribPointer(this.Kk, 2, c.FLOAT, !1, 0, 0),
            0 < f &&
              ((this.J = c.getAttribLocation(h, "a_distance")),
              c.enableVertexAttribArray(this.J),
              (d = c.createBuffer()),
              c.bindBuffer(c.ARRAY_BUFFER, d),
              c.bufferData(c.ARRAY_BUFFER, l(a), c.STATIC_DRAW),
              c.vertexAttribPointer(this.J, 1, c.FLOAT, !1, 0, 0)),
            c.drawArrays(c.LINE_STRIP, 0, 0.5 * a.length),
            c.bindBuffer(c.ARRAY_BUFFER, null));
        }
      } else if ((c = this.Lk)) {
        c.beginPath();
        c.strokeStyle = e(d);
        c.setLineDash && c.setLineDash([f]);
        f = 0;
        d = 0.5 * a.length;
        for (h = 0; f < d; f++, h++)
          0 == h
            ? c.moveTo(
                a[2 * f] * b.devicePixelRatio + 0.5,
                a[2 * f + 1] * b.devicePixelRatio + 0.5
              )
            : c.lineTo(
                a[2 * f] * b.devicePixelRatio + 0.5,
                a[2 * f + 1] * b.devicePixelRatio + 0.5
              );
        c.stroke();
        c.closePath();
      }
  };
  a.prototype.ud = function (a, d, f) {
    void 0 === f && (f = 0);
    if (0 !== (a || []).length)
      if (b.yd) {
        var c = this.lk;
        if (c) {
          var h = this.DM;
          h &&
            (c.useProgram(h),
            (this.Kk = c.getAttribLocation(h, "a_position")),
            (this.J = c.getAttribLocation(h, "a_distance")),
            (this.Pp = c.getUniformLocation(h, "u_color")),
            (this.qa = c.getUniformLocation(h, "u_background")),
            (this.Qp = c.getUniformLocation(h, "u_resolution")),
            (this.Yb = c.getUniformLocation(h, "u_dash")),
            c.enableVertexAttribArray(this.Kk),
            c.disableVertexAttribArray(this.J),
            c.uniform4f(
              this.Pp,
              (d && d[0]) || 0,
              (d && d[1]) || 0,
              (d && d[2]) || 0,
              1
            ),
            c.uniform4f(this.qa, 0, 0, 0, 0),
            c.uniform2f(
              this.Qp,
              parseInt(c.canvas.style.width, 10),
              parseInt(c.canvas.style.height, 10)
            ),
            c.uniform1f(this.Yb, f),
            (d = c.createBuffer()),
            c.bindBuffer(c.ARRAY_BUFFER, d),
            c.bufferData(
              c.ARRAY_BUFFER,
              a instanceof Float32Array ? a : new Float32Array(a),
              c.STATIC_DRAW
            ),
            c.vertexAttribPointer(this.Kk, 2, c.FLOAT, !1, 0, 0),
            0 < f &&
              (c.enableVertexAttribArray(this.J),
              (d = c.createBuffer()),
              c.bindBuffer(c.ARRAY_BUFFER, d),
              c.bufferData(c.ARRAY_BUFFER, l(a), c.STATIC_DRAW),
              c.vertexAttribPointer(this.J, 1, c.FLOAT, !1, 0, 0)),
            c.drawArrays(c.LINES, 0, 0.5 * a.length),
            c.bindBuffer(c.ARRAY_BUFFER, null));
        }
      } else if ((c = this.Lk)) {
        c.beginPath();
        c.strokeStyle = e(d);
        c.setLineDash && c.setLineDash([f]);
        f = 0;
        for (d = a.length / 4; f < d; f++)
          c.moveTo(
            a[4 * f] * b.devicePixelRatio + 0.5,
            a[4 * f + 1] * b.devicePixelRatio + 0.5
          ),
            c.lineTo(
              a[4 * f + 2] * b.devicePixelRatio + 0.5,
              a[4 * f + 3] * b.devicePixelRatio + 0.5
            );
        c.stroke();
        c.closePath();
      }
  };
  a.prototype.vi = function () {
    if (!b.yd) {
      var a = this.Lk;
      if (a) return a;
    }
    return null;
  };
})();
(function () {
  function v(a) {
    return !0 === (a && a.__isLong__);
  }
  function r(a, c) {
    var b, n;
    if (c) {
      a >>>= 0;
      if ((n = 0 <= a && 256 > a)) if ((b = f[a])) return b;
      b = e(a, 0 > (a | 0) ? -1 : 0, !0);
      n && (f[a] = b);
    } else {
      a |= 0;
      if ((n = -128 <= a && 128 > a)) if ((b = d[a])) return b;
      b = e(a, 0 > a ? -1 : 0, !1);
      n && (d[a] = b);
    }
    return b;
  }
  function l(a, c) {
    if (isNaN(a)) return c ? q : u;
    if (c) {
      if (0 > a) return q;
      if (a >= z) return C;
    } else {
      if (a <= -A) return O;
      if (a + 1 >= A) return x;
    }
    return 0 > a
      ? l(-a, c).Nh()
      : e(a % 4294967296 | 0, (a / 4294967296) | 0, c);
  }
  function e(a, c, b) {
    return new g(a, c, b);
  }
  function k(a, b, d) {
    void 0 === b && (b = !0);
    if (0 === a.length) throw Error("empty string");
    if (
      "NaN" === a ||
      "Infinity" === a ||
      "+Infinity" === a ||
      "-Infinity" === a
    )
      return u;
    "number" === typeof b ? ((d = b), (b = !1)) : (b = !!b);
    d = d || 10;
    if (2 > d || 36 < d) throw RangeError("radix");
    var f;
    if (0 < (f = a.indexOf("-"))) throw Error("interior hyphen");
    if (0 === f) return k(a.substring(1), b, d).Nh();
    f = l(c(d, 8));
    for (var n = u, e = 0; e < a.length; e += 8) {
      var p = Math.min(8, a.length - e),
        g = parseInt(a.substring(e, e + p), d);
      8 > p
        ? ((p = l(c(d, p))), (n = n.Ki(p).add(l(g))))
        : ((n = n.Ki(f)), (n = n.add(l(g))));
    }
    n.td = b;
    return n;
  }
  function h(a, c) {
    return "number" === typeof a
      ? l(a, c)
      : "string" === typeof a
      ? k(a, c)
      : e(a.Dc, a.kc, "boolean" === typeof c ? c : a.td);
  }
  var b = null;
  try {
    b = new WebAssembly.Instance(
      new WebAssembly.Module(
        new Uint8Array([
          0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127,
          127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0,
          11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2,
          5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5,
          114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103,
          104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173,
          32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134,
          132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1,
          126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173,
          66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11,
          36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173,
          32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32,
          4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132,
          32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135,
          167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66,
          32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4,
          66, 32, 135, 167, 36, 0, 32, 4, 167, 11,
        ])
      ),
      {}
    ).Sea;
  } catch (a) {}
  var g = (window.Long = function (a, c, b) {
    this.Dc = a | 0;
    this.kc = c | 0;
    this.td = !!b;
  });
  Object.defineProperty(g.prototype, "__isLong__", { value: !0 });
  g.fN = v;
  var d = {},
    f = {};
  g.Bl = r;
  g.S3 = l;
  g.Kj = e;
  var c = Math.pow;
  g.ec = k;
  g.sp = h;
  var z = 4294967296 * 4294967296,
    A = z / 2,
    m = r(16777216),
    u = r(0);
  g.ZERO = u;
  var q = r(0, !0);
  g.Ga = q;
  var w = r(1);
  g.eN = w;
  var p = r(1, !0);
  g.te = p;
  var n = r(-1);
  g.Yb = n;
  var x = e(-1, 2147483647, !1);
  g.xr = x;
  var C = e(-1, -1, !0);
  g.rs = C;
  var O = e(0, -2147483648, !1);
  g.FE = O;
  var I = g.prototype;
  I.La = function () {
    return new g(this.Dc, this.kc, this.td);
  };
  I.co = function () {
    return this.td ? this.Dc >>> 0 : this.Dc;
  };
  I.Tc = function () {
    return this.td
      ? 4294967296 * (this.kc >>> 0) + (this.Dc >>> 0)
      : 4294967296 * this.kc + (this.Dc >>> 0);
  };
  I.toString = function (a) {
    a = a || 10;
    if (2 > a || 36 < a) throw RangeError("radix");
    if (this.ab()) return "0";
    if (this.Jj()) {
      if (this.Hj(O)) {
        var b = l(a),
          d = this.Al(b),
          b = d.Ki(b).sub(this);
        return d.toString(a) + b.co().toString(a);
      }
      return "-" + this.Nh().toString(a);
    }
    for (var d = l(c(a, 6), this.td), b = this, f = ""; ; ) {
      var n = b.Al(d),
        e = (b.sub(n.Ki(d)).co() >>> 0).toString(a),
        b = n;
      if (b.ab()) return e + f;
      for (; 6 > e.length; ) e = "0" + e;
      f = "" + e + f;
    }
  };
  I.R5 = function () {
    return this.kc;
  };
  I.L8 = function () {
    return this.kc >>> 0;
  };
  I.X8 = function () {
    return this.Dc;
  };
  I.f9 = function () {
    return this.Dc >>> 0;
  };
  I.T3 = function () {
    if (this.Jj()) return this.Hj(O) ? 64 : this.Nh().T3();
    for (
      var a = 0 != this.kc ? this.kc : this.Dc, c = 31;
      0 < c && 0 == (a & (1 << c));
      c--
    );
    return 0 != this.kc ? c + 33 : c + 1;
  };
  I.ab = function () {
    return 0 === this.kc && 0 === this.Dc;
  };
  I.u5 = I.ab;
  I.Jj = function () {
    return !this.td && 0 > this.kc;
  };
  I.i$ = function () {
    return this.td || 0 <= this.kc;
  };
  I.uM = function () {
    return 1 === (this.Dc & 1);
  };
  I.W9 = function () {
    return 0 === (this.Dc & 1);
  };
  I.FE = function (a) {
    v(a) || (a = h(a));
    return this.td !== a.td && 1 === this.kc >>> 31 && 1 === a.kc >>> 31
      ? !1
      : this.kc === a.kc && this.Dc === a.Dc;
  };
  I.Hj = I.FE;
  I.te = function (a) {
    return !this.Hj(a);
  };
  I.A$ = I.te;
  I.m$ = I.te;
  I.fN = function (a) {
    return 0 > this.rw(a);
  };
  I.Pk = I.fN;
  I.qa = function (a) {
    return 0 >= this.rw(a);
  };
  I.l$ = I.qa;
  I.Cl = I.qa;
  I.eN = function (a) {
    return 0 < this.rw(a);
  };
  I.lf = I.eN;
  I.J = function (a) {
    return 0 <= this.rw(a);
  };
  I.U3 = I.J;
  I.Jm = I.J;
  I.compare = function (a) {
    v(a) || (a = h(a));
    if (this.Hj(a)) return 0;
    var c = this.Jj(),
      b = a.Jj();
    return c && !b
      ? -1
      : !c && b
      ? 1
      : this.td
      ? a.kc >>> 0 > this.kc >>> 0 ||
        (a.kc === this.kc && a.Dc >>> 0 > this.Dc >>> 0)
        ? -1
        : 1
      : this.sub(a).Jj()
      ? -1
      : 1;
  };
  I.rw = I.compare;
  I.P4 = function () {
    return !this.td && this.Hj(O) ? O : this.Et().add(w);
  };
  I.Nh = I.P4;
  I.add = function (a) {
    v(a) || (a = h(a));
    var c = this.kc >>> 16,
      b = this.kc & 65535,
      d = this.Dc >>> 16,
      f = a.kc >>> 16,
      n = a.kc & 65535,
      p = a.Dc >>> 16,
      g;
    g = 0 + ((this.Dc & 65535) + (a.Dc & 65535));
    a = 0 + (g >>> 16);
    a += d + p;
    d = 0 + (a >>> 16);
    d += b + n;
    b = 0 + (d >>> 16);
    b = (b + (c + f)) & 65535;
    return e(
      ((a & 65535) << 16) | (g & 65535),
      (b << 16) | (d & 65535),
      this.td
    );
  };
  I.CN = function (a) {
    v(a) || (a = h(a));
    return this.add(a.Nh());
  };
  I.sub = I.CN;
  I.Bl = function (a) {
    if (this.ab()) return u;
    v(a) || (a = h(a));
    if (b) {
      var c = b.Ki(this.Dc, this.kc, a.Dc, a.kc);
      return e(c, b.jM(), this.td);
    }
    if (a.ab()) return u;
    if (this.Hj(O)) return a.uM() ? O : u;
    if (a.Hj(O)) return this.uM() ? O : u;
    if (this.Jj()) return a.Jj() ? this.Nh().Ki(a.Nh()) : this.Nh().Ki(a).Nh();
    if (a.Jj()) return this.Ki(a.Nh()).Nh();
    if (this.Pk(m) && a.Pk(m)) return l(this.Tc() * a.Tc(), this.td);
    var c = this.kc >>> 16,
      d = this.kc & 65535,
      f = this.Dc >>> 16,
      n = this.Dc & 65535,
      p = a.kc >>> 16,
      g = a.kc & 65535,
      q = a.Dc >>> 16;
    a = a.Dc & 65535;
    var x, C, w, z;
    z = 0 + n * a;
    w = 0 + (z >>> 16);
    w += f * a;
    C = 0 + (w >>> 16);
    w = (w & 65535) + n * q;
    C += w >>> 16;
    w &= 65535;
    C += d * a;
    x = 0 + (C >>> 16);
    C = (C & 65535) + f * q;
    x += C >>> 16;
    C &= 65535;
    C += n * g;
    x += C >>> 16;
    C &= 65535;
    x = (x + (c * a + d * q + f * g + n * p)) & 65535;
    return e((w << 16) | (z & 65535), (x << 16) | C, this.td);
  };
  I.Ki = I.Bl;
  I.xr = function (a) {
    v(a) || (a = h(a));
    if (a.ab()) throw Error("division by zero");
    if (b) {
      if (!this.td && -2147483648 === this.kc && -1 === a.Dc && -1 === a.kc)
        return this;
      a = (this.td ? b.Rea : b.Qea)(this.Dc, this.kc, a.Dc, a.kc);
      return e(a, b.jM(), this.td);
    }
    if (this.ab()) return this.td ? q : u;
    var d, f, g;
    if (this.td) {
      a.td || (a = a.K4());
      if (a.lf(this)) return q;
      if (a.lf(this.B4(1))) return p;
      g = q;
    } else {
      if (this.Hj(O)) {
        if (a.Hj(w) || a.Hj(n)) return O;
        if (a.Hj(O)) return w;
        d = this.A4(1).Al(a).z4(1);
        if (d.Hj(u)) return a.Jj() ? w : n;
        f = this.sub(a.Ki(d));
        return (g = d.add(f.Al(a)));
      }
      if (a.Hj(O)) return this.td ? q : u;
      if (this.Jj())
        return a.Jj() ? this.Nh().Al(a.Nh()) : this.Nh().Al(a).Nh();
      if (a.Jj()) return this.Al(a.Nh()).Nh();
      g = u;
    }
    for (f = this; f.U3(a); ) {
      d = Math.max(1, Math.floor(f.Tc() / a.Tc()));
      for (
        var x = Math.ceil(Math.log(d) / Math.LN2),
          x = 48 >= x ? 1 : c(2, x - 48),
          C = l(d),
          m = C.Ki(a);
        m.Jj() || m.lf(f);

      )
        (d -= x), (C = l(d, this.td)), (m = C.Ki(a));
      C.ab() && (C = w);
      g = g.add(C);
      f = f.sub(m);
    }
    return g;
  };
  I.Al = I.xr;
  I.Yb = function (a) {
    v(a) || (a = h(a));
    return b
      ? ((a = (this.td ? b.qfa : b.pfa)(this.Dc, this.kc, a.Dc, a.kc)),
        e(a, b.jM(), this.td))
      : this.sub(this.Al(a).Ki(a));
  };
  I.GM = I.Yb;
  I.jaa = I.Yb;
  I.Et = function () {
    return e(~this.Dc, ~this.kc, this.td);
  };
  I.qd = function (a) {
    v(a) || (a = h(a));
    return e(this.Dc & a.Dc, this.kc & a.kc, this.td);
  };
  I.IM = function (a) {
    v(a) || (a = h(a));
    return e(this.Dc | a.Dc, this.kc | a.kc, this.td);
  };
  I.Lba = function (a) {
    v(a) || (a = h(a));
    return e(this.Dc ^ a.Dc, this.kc ^ a.kc, this.td);
  };
  I.sp = function (a) {
    v(a) && (a = a.co());
    return 0 === (a &= 63)
      ? this
      : 32 > a
      ? e(this.Dc << a, (this.kc << a) | (this.Dc >>> (32 - a)), this.td)
      : e(0, this.Dc << (a - 32), this.td);
  };
  I.z4 = I.sp;
  I.jN = function (a) {
    v(a) && (a = a.co());
    return 0 === (a &= 63)
      ? this
      : 32 > a
      ? e((this.Dc >>> a) | (this.kc << (32 - a)), this.kc >> a, this.td)
      : e(this.kc >> (a - 32), 0 <= this.kc ? 0 : -1, this.td);
  };
  I.A4 = I.jN;
  I.Kj = function (a) {
    v(a) && (a = a.co());
    a &= 63;
    if (0 === a) return this;
    var c = this.kc;
    return 32 > a
      ? e((this.Dc >>> a) | (c << (32 - a)), c >>> a, this.td)
      : 32 === a
      ? e(c, 0, this.td)
      : e(c >>> (a - 32), 0, this.td);
  };
  I.B4 = I.Kj;
  I.xaa = I.Kj;
  I.tba = function () {
    return this.td ? e(this.Dc, this.kc, !1) : this;
  };
  I.K4 = function () {
    return this.td ? this : e(this.Dc, this.kc, !0);
  };
  I.H4 = function (a) {
    return a ? this.J4() : this.I4();
  };
  I.J4 = function () {
    var a = this.kc,
      c = this.Dc;
    return [
      c & 255,
      (c >>> 8) & 255,
      (c >>> 16) & 255,
      c >>> 24,
      a & 255,
      (a >>> 8) & 255,
      (a >>> 16) & 255,
      a >>> 24,
    ];
  };
  I.I4 = function () {
    var a = this.kc,
      c = this.Dc;
    return [
      a >>> 24,
      (a >>> 16) & 255,
      (a >>> 8) & 255,
      a & 255,
      c >>> 24,
      (c >>> 16) & 255,
      (c >>> 8) & 255,
      c & 255,
    ];
  };
  g.R3 = function (a, c, b) {
    return b ? g.qa(a, c) : g.J(a, c);
  };
  g.qa = function (a, c) {
    return new g(
      a[0] | (a[1] << 8) | (a[2] << 16) | (a[3] << 24),
      a[4] | (a[5] << 8) | (a[6] << 16) | (a[7] << 24),
      c
    );
  };
  g.J = function (a, c) {
    return new g(
      (a[4] << 24) | (a[5] << 16) | (a[6] << 8) | a[7],
      (a[0] << 24) | (a[1] << 16) | (a[2] << 8) | a[3],
      c
    );
  };
})();
(function () {
  var v = E.Qa,
    r = window.DataView;
  r &&
    ((r.prototype.Bl = function (l, e) {
      for (var k = [], h = l, b = l + e, a; h < b; h++) {
        a = this.getUint8(h, !0);
        if (0 === a) break;
        k.push(String.fromCharCode(a));
      }
      return k.join("");
    }),
    (r.prototype.J = function (l, e) {
      for (var k = [], h = l, b = l + e, a; h < b; h += 2) {
        a = this.getUint16(h, !0);
        if (0 === a) break;
        k.push(String.fromCharCode(a));
      }
      return k.join("");
    }),
    (r.prototype.te = function (l, e) {
      if (e) {
        l || (l = 0);
        for (var k = 0, h = e.length; k < h; k++)
          this.setInt8(l, e.charCodeAt(k), !0), (l += 1);
      }
    }),
    (r.prototype.Yb = function (l, e) {
      if (e) {
        l || (l = 0);
        for (var k = 0, h = e.length; k < h; k++)
          this.setInt16(l, e.charCodeAt(k), !0), (l += 2);
      }
    }),
    (r.prototype.xr = function (l, e) {
      if (window.TextEncoder) {
        var k = new TextEncoder(v.defaultCharset, {
          NONSTANDARD_allowLegacyEncoding: !0,
        });
        if (k) {
          var h = "";
          try {
            h = k.encode(e, { stream: !0 });
          } catch (b) {}
          if (h)
            for (var k = 0, a = h.length; k < a; k++)
              this.setInt8(l + k, h[k], !0);
        }
      }
    }),
    (r.prototype.sp = function (l) {
      var e = [],
        k = this.getUint8(l, !0).toString(16),
        h = this.getUint8(l + 1, !0).toString(16);
      l = this.getUint8(l + 2, !0).toString(16);
      2 > k.length && (k = "0" + k);
      2 > h.length && (h = "0" + h);
      2 > l.length && (l = "0" + l);
      e.push("#");
      e.push(k);
      e.push(h);
      e.push(l);
      return "00" == k && "00" == h && "00" == l ? null : e.join("");
    }),
    (r.prototype.qa = function (l, e) {
      var k;
      void 0 === e && (e = !0);
      void 0 === k && (k = !0);
      return Long.R3(new Uint8Array(this.buffer.slice(l, l + 8)), e, k);
    }),
    (r.prototype.Kj = function (l, e, k) {
      void 0 === k && (k = !0);
      e = e.H4(k);
      this.setUint8(l, e[0], k);
      this.setUint8(l + 1, e[1], k);
      this.setUint8(l + 2, e[2], k);
      this.setUint8(l + 3, e[3], k);
      this.setUint8(l + 4, e[4], k);
      this.setUint8(l + 5, e[5], k);
      this.setUint8(l + 6, e[6], k);
      this.setUint8(l + 7, e[7], k);
    }));
})();
(function () {
  var v = window.String,
    r = E.Qa;
  v.prototype.Bf = function () {
    for (var l = [], e = 0, k = this.length / 2, h; e < k; e++)
      (h = this.substr(2 * e, 2)) && l.push(Number("0x" + h));
    return new Uint8Array(l).buffer;
  };
  v.prototype.Df = function () {
    for (var l = [], e = 0, k = this.length, h; e < k; e++)
      (h = this.charCodeAt(e).toString(16)),
        2 > h.length && (h = "0" + h),
        l.push(h);
    return l.join("");
  };
  v.prototype.empty = function () {
    for (var l = 0, e = this.length; l < e; l++)
      if (0 < this.charCodeAt(l)) return !1;
    return !0;
  };
  v.prototype.El = function () {
    for (var l = [], e = 0; e < this.length; e++)
      28 == this.charCodeAt(e)
        ? l.push("&")
        : 23 == this.charCodeAt(e)
        ? l.push("!")
        : l.push(String.fromCharCode(this.charCodeAt(e) - 1));
    return l.join("");
  };
  v.prototype.decode = function () {
    if (window.TextDecoder) {
      for (
        var l = new DataView(new ArrayBuffer(this.length)),
          e = 0,
          k = this.length;
        e < k;
        e++
      )
        l.setInt8(e, this.charCodeAt(e), !0);
      if ((e = new TextDecoder(r.defaultCharset))) return e.decode(l.buffer);
    }
    return this;
  };
  v.prototype.Kr = function (l) {
    for (
      var e = this, k = e.length, h = 0;
      0 < k && "0" == e.charAt(k - 1) && h < l;

    )
      k--, h++;
    e = e.substr(0, k);
    0 < k && "." == e.charAt(k - 1) && (e = e.substr(0, k - 1));
    return e;
  };
  v.prototype.test = function (l) {
    return l.test(this);
  };
  v.prototype.trim ||
    (v.prototype.trim = function () {
      return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
    });
  String.prototype.repeat ||
    (String.prototype.repeat = function (l) {
      if (null == this)
        throw new TypeError("can't convert " + this + " to object");
      var e = "" + this;
      l = +l;
      l != l && (l = 0);
      if (0 > l) throw new RangeError("repeat count must be non-negative");
      if (Infinity == l)
        throw new RangeError("repeat count must be less than infinity");
      l = Math.floor(l);
      if (0 == e.length || 0 == l) return "";
      if (268435456 <= e.length * l)
        throw new RangeError(
          "repeat count must not overflow maximum string size"
        );
      for (var k = "", h = 0; h < l; h++) k += e;
      return k;
    });
  String.prototype.padStart ||
    (String.prototype.padStart = function (l, e) {
      l = l >> 0;
      e = String(e || " ");
      if (this.length > l) return String(this);
      l -= this.length;
      l > e.length && (e += e.repeat(l / e.length));
      return e.slice(0, l) + String(this);
    });
})();
window.ArrayBuffer &&
  (ArrayBuffer.prototype.Df = function () {
    for (
      var v = [], r, l = this.byteLength, e = new DataView(this), k = 0;
      k < l;
      k++
    )
      (r = e.getUint8(k).toString(16)),
        2 > r.length && (r = ["0", r].join("")),
        v.push(r);
    return v.join("");
  });
(function () {
  var v = E.Qa;
  Number.J = 2147483647;
  Number.Yb = 4294967295;
  Number.qa = 1.7976931348623157e308;
  var r = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8];
  Number.prototype.normalize = function (l) {
    0 > l && (l = 0);
    8 < l && (l = 8);
    l = r[l];
    return 0 <= this
      ? Math.floor(this * l + 0.5000001) / l
      : Math.ceil(this * l - 0.5000001) / l;
  };
  Number.prototype.Mh = function (l, e) {
    var k = this;
    return e ? k | l : k & ~l;
  };
  Number.prototype.ki = function (l) {
    return !!(this & l);
  };
  Number.prototype.Lj = function (l) {
    return this.Mh(l, !this.ki(l));
  };
  Number.prototype.gc = function (l) {
    l = (isFinite(this) ? this : 0).toFixed(l).split(".");
    l[0] = l[0].replace(/(\d)(?=(\d\d\d)+([^\d]|$))/g, "$1" + v.$M);
    return l.join(".");
  };
  Number.prototype.ca = function (l, e) {
    return (this + (l || 0)).normalize(e);
  };
  Number.prototype.kp = function (l, e) {
    return Math.abs(this - l) < Math.pow(10, -(e + 1)) ? 0 : this > l ? 1 : -1;
  };
  Number.prototype.Gr = function () {
    return 10 > this ? "0" + this : this.toString();
  };
  Number.prototype.Cf = function (l) {
    8 < l && (l = 8);
    return (this / Math.pow(10, l)).normalize(l);
  };
  Number.prototype.cM = function (l) {
    if (void 0 === l || 1 > l) return Math.floor(this).toString();
    var e = this.toFixed(8).split(".");
    if (1 == e.length) {
      e[1] = "";
      for (var k = 0; k < l; k++) e[1] += "0";
    } else if (e[1].length > l) e[1] = e[1].substr(0, l);
    else for (; e[1].length < l; ) e[1] += "0";
    return e.join(".");
  };
})();
Array.prototype.find ||
  (Array.prototype.find = function (v, r) {
    if (null == this)
      throw new TypeError("Array.prototype.find called on null or undefined");
    if ("function" !== typeof v)
      throw new TypeError("predicate must be a function");
    for (var l = Object(this), e = l.length >>> 0, k, h = 0; h < e; h++)
      if (((k = l[h]), v.call(r, k, h, l))) return k;
  });
Array.prototype.pM ||
  (Array.prototype.pM = function (v, r) {
    var l = Object(this),
      e = parseInt(l.length) || 0;
    if (0 === e) return !1;
    var k = parseInt(r) || 0;
    0 <= k || ((k = e + k), 0 > k && (k = 0));
    for (; k < e; ) {
      var h = l[k];
      if (v === h || (v !== v && h !== h)) return !0;
      k++;
    }
    return !1;
  });
Array.prototype.Hm ||
  (Array.prototype.Hm = function (v, r) {
    if (null == this)
      throw new TypeError(
        "Array.prototype.findIndex called on null or undefined"
      );
    if ("function" !== typeof v)
      throw new TypeError("predicate must be a function");
    for (var l = Object(this), e = l.length >>> 0, k, h = 0; h < e; h++)
      if (((k = l[h]), v.call(r, k, h, l))) return h;
    return -1;
  });
Array.prototype.some ||
  (Array.prototype.some = function (v) {
    if (null == this)
      throw new TypeError("Array.prototype.some called on null or undefined");
    if ("function" !== typeof v) throw new TypeError();
    for (
      var r = Object(this),
        l = r.length >>> 0,
        e = 2 <= arguments.length ? arguments[1] : void 0,
        k = 0;
      k < l;
      k++
    )
      if (k in r && v.call(e, r[k], k, r)) return !0;
    return !1;
  });
(function (v) {
  v.matches =
    v.matches ||
    v.mozMatchesSelector ||
    v.msMatchesSelector ||
    v.oMatchesSelector ||
    v.webkitMatchesSelector;
  v.Yb =
    v.closest ||
    function (r) {
      return this
        ? this.matches(r)
          ? this
          : this.parentElement
          ? this.parentElement.Yb(r)
          : null
        : null;
    };
})(Element.prototype);
Math.P3 = function (v, r) {
  return v - Math.floor(v / r) * r;
};
E.ba.ID = {
  en: {
    hda: "Symbols",
    O0: "Symbols",
    p0: "Create a new chart",
    H0: "New Order",
    n0: "Bar chart",
    o0: "Candlesticks",
    B0: "Line chart",
    J0: "Scroll the chart to the end on tick incoming",
    M0: "Shift end of the chart from right border",
    r0: "Cursor",
    q0: "Crosshair",
    S0: "Zoom In",
    T0: "Zoom Out",
    C0: "1 Minute (M1)",
    F0: "5 Minutes (M5)",
    D0: "15 Minutes (M15)",
    E0: "30 Minutes (M30)",
    z0: "1 Hour (H1)",
    A0: "4 Hours (H4)",
    s0: "Daily (D1)",
    R0: "Weekly (W)",
    G0: "Monthly (MN)",
    FK: "Horizontal Line",
    IK: "Vertical Line",
    HK: "Trendline",
    xK: "Callout",
    CK: "Fibonacci Retracement",
    AK: "Equidistant Channel",
    x0: "Enable Full Screen",
    w0: "Disable Full Screen",
    kda: "Demo Account",
    lda: "Real Account",
    BK: "Fibonacci Channel",
    t0: "Fibonacci Arcs",
    wK: "Andrews Pitchfork",
    N0: "StdDev Channel",
    I0: "Regression Channel",
    P0: "Fibonacci Time Zones",
    u0: "Fibonacci Expansion",
    y0: "Gann Line",
    DK: "Gann Fan",
    EK: "Gann Grid",
    GK: "Rectangle",
    zK: "Elliott Motive Wave",
    yK: "Elliott Corrective Wave",
    ida: "Triangle",
    jda: "MQL5.community",
    Q0: "Visit MQL5.community website",
    K0: "Place on website",
    L0: "Read how to add the WebTerminal widget to your website",
    nda: "Switch",
    V0: "Switch to the MetaTrader 4 mode",
    U0: "To switch to the MetaTrader 4 mode, the page should be refreshed. Do you want to continue?",
    rda: "Switch to the MetaTrader 5 mode",
    qda: "To switch to the MetaTrader 5 mode, the page should be refreshed. Do you want to continue?",
    oda: "Click to switch to MetaTrader 4 Web Trader",
    pda: "Switch to MetaTrader 4 Web Trader (Desktop)",
    mda: "Settings",
    GV: "New Chart",
    DV: "Open a Demo Account",
    EV: "Login to Trade Account",
    CV: "Switch to Account",
    FV: "Logout",
    H$: "Select Platform",
    BV: "Change Password",
    AV: "File",
    Q$: "Next",
    R$: "Previous",
    T$: "Save As...",
    S$: "Remove",
    P$: "Profiles",
    jW: "View",
    cv: "Market Watch",
    lW: "Toolbox",
    kW: "Full screen",
    VV: "Insert",
    WV: "Indicators",
    ZV: "Trend",
    YV: "Oscillators",
    XV: "Bill Williams",
    $V: "Volumes",
    N$: "Objects",
    fW: "Lines",
    aW: "Channels",
    cW: "Fibonacci",
    eW: "Graphical",
    dW: "Gann",
    gW: "Shapes",
    bW: "Elliott",
    dV: "Charts",
    hV: "Indicators List",
    jV: "Objects",
    lV: "Objects List",
    kV: "Delete All",
    eV: "Bar chart",
    fV: "Candlesticks",
    iV: "Line chart",
    mV: "Timeframes",
    qV: "1 Minute",
    tV: "5 Minutes",
    rV: "15 Minutes",
    sV: "30 Minutes",
    oV: "1 Hour",
    pV: "4 Hours",
    nV: "Daily",
    vV: "Weekly",
    uV: "Monthly",
    gV: "Grid",
    wV: "Auto Scroll",
    xV: "Chart Shift",
    yV: "Zoom In",
    zV: "Zoom Out",
    hW: "Options",
    iW: "One-Click Trading",
    HV: "Help",
    M$: "Help Topics",
    I$: "Technical Analysis",
    J$: "Automated Trading Championship",
    K$: "MQL5.community",
    RV: "MQL5 Website",
    LV: "MQL5 Documentation",
    JV: "MQL5 Articles",
    KV: "MQL5 Code Base",
    NV: "MQL5 Freelance",
    OV: "MQL5 Market",
    PV: "MQL5 Signals",
    MV: "MQL5 Forum",
    QV: "MQL5 Virtual Hosting",
    L$: "Mobile Trading",
    SV: "Desktop Platform",
    UV: "iPhone - App Store",
    TV: "Android - Google Play",
    IV: "About...",
    O$: "Interface",
    vJ: "Symbols",
    u_: "Symbols",
    Ica: "Symbol",
    x_: "Symbol",
    OY: "Bid",
    NY: "Ask",
    PJ: "High",
    RJ: "Low",
    WJ: "Time",
    TJ: "New Order",
    Gca: "New Chart",
    Kca: "Tick Chart",
    vv: "Depth Of Market",
    wJ: "Chart Window",
    UJ: "Specification",
    q_: "Hide",
    r_: "Hide All",
    v_: "Show All",
    Jca: "Symbols...",
    w_: "Symbols...",
    Eca: "Grid",
    PY: "Columns",
    VJ: "Spread",
    Fca: "High/Low",
    oD: "Show Milliseconds",
    QJ: "Last",
    XJ: "Volume",
    MY: "click to add ...",
    ica: "Add Symbol",
    Hca: "Simple",
    jca: "Advanced",
    Cca: "Symbols",
    j_: "Symbols",
    NZ: "Show",
    mZ: "Hide",
    yca: "Properties",
    zJ: "Close",
    WY: "contract specification",
    rca: "Name",
    Dca: "Value",
    PZ: "Spread",
    ZY: "Digits",
    VZ: "Stops level",
    VY: "Contract size",
    g_: "Tick value",
    f_: "Tick size",
    xca: "Profit calculation mode",
    vca: "in points",
    wca: "in percentage terms",
    JZ: "Profit currency",
    d_: "Swap type",
    $Z: "Swap long",
    c_: "Swap short",
    pca: "Margin calculation mode",
    nca: "Margin initial",
    oca: "Margin maintenance",
    mca: "Margin hedge",
    RZ: "floating",
    BZ: "Margin currency",
    qca: "Margin percentage",
    DZ: "Margin rate",
    uv: "Trade",
    aZ: "Execution",
    xZ: "Minimal volume",
    wZ: "Maximal volume",
    yZ: "Volume step",
    vZ: "Volume limit",
    WZ: "3-days swap",
    i_: "First trade",
    h_: "Last trade",
    iZ: "GTC mode",
    lca: "Freeze level",
    LJ: "Sunday",
    JJ: "Monday",
    NJ: "Tuesday",
    OJ: "Wednesday",
    MJ: "Thursday",
    IJ: "Friday",
    KJ: "Saturday",
    p_: "Disabled",
    sca: "Pendings are good till today including SL/TP",
    uca: "GTC mode",
    tca: "Pendings are good till today excluding SL/TP",
    dZ: "Request",
    bZ: "Instant",
    cZ: "Market",
    kca: "Exchange",
    n_: "Disabled",
    k_: "Close only",
    l_: "Full access",
    m_: "Long only",
    o_: "Short only",
    OZ: "Show expired contracts",
    Bca: "Symbol",
    e_: "Symbol",
    YY: "Description",
    AJ: "Expiration",
    sZ: "ISIN",
    xJ: "Calculation",
    CJ: "Liquidity rate",
    QY: "Accrued interest",
    eZ: "Face value",
    pZ: "Initial margin",
    rZ: "Initial Sell margin",
    qZ: "Initial Buy margin",
    AZ: "Maintenance margin",
    oZ: "Initial",
    zZ: "Maintenance",
    fZ: "Filling",
    jD: "None",
    gD: "All",
    HZ: "Orders",
    MZ: "Sessions",
    KZ: "Quotes",
    jZ: "Good till cancelled",
    kZ: "Good till today including SL/TP",
    lZ: "Good till today excluding SL/TP",
    ZZ: "In points",
    XZ: "In percentage terms, using current price",
    YZ: "In percentage terms, using open price",
    b_: "In points, reopen position by close price",
    a_: "In points, reopen position by bid price",
    hZ: "None",
    gZ: "All",
    hD: "Fill or Kill",
    iD: "Immediate or Cancel",
    BJ: "Return",
    kD: "GTC",
    nD: "Today",
    lD: "Specified",
    mD: "Specified day",
    zca: "enter symbol for search",
    Aca: "No results",
    yJ: "Chart mode",
    DJ: "Hedged margin",
    CZ: "calculate using larger leg",
    QZ: "Spreads",
    TZ: "Side A (Ratio)",
    UZ: "Side B (Ratio)",
    SZ: "Margin",
    EZ: "Maximal",
    TY: "CME Inter Spread",
    UY: "CME Intra Spread",
    tZ: "From",
    uZ: "To",
    SY: "Category",
    $Y: "Exchange",
    GZ: "Option type",
    FZ: "Option mode",
    IZ: "Strike price",
    RY: "Basis",
    FJ: "Call",
    HJ: "Put",
    GJ: "European",
    EJ: "American",
    LZ: "Sector",
    nZ: "Industry",
    XY: "Country",
    zda: "Order",
    s2: "Time",
    v2: "Type",
    gea: "Size",
    iea: "Symbol",
    r2: "Symbol",
    n2: "Price",
    q2: "S / L",
    u2: "T / P",
    KK: "Price",
    c1: "Commission",
    jea: "Taxes",
    TK: "Swap",
    $s: "Profit",
    LK: "Comment",
    t2: "Trade",
    m2: "New Order",
    tda: "Close Order",
    $0: "Close Position",
    o1: "Modify or Delete",
    o2: "as Money",
    p2: "as Points",
    BD: "Auto Arrange",
    yda: "Grid",
    b1: "Columns",
    uda: "Close #",
    vda: "Delete #",
    Y0: "Balance",
    e1: "Credit",
    f1: "Equity",
    l1: "Margin",
    g1: "Free margin",
    n1: "Margin level",
    i1: "Initial Margin",
    k1: "Maint. Margin",
    NK: "ID",
    UK: "Ticket",
    VK: "Volume",
    kea: "Volumes",
    mea: "Lots",
    lea: "Amounts",
    MK: "Expert id",
    a1: "Close",
    X0: "Assets",
    j1: "Liabilities",
    Z0: "Blocked",
    Yq: "Cancel Stop Loss",
    Zq: "Cancel Take Profit",
    hea: "status",
    cI: "One-Click Trading",
    eI: '<div style="text-align:center;font-size:11px;">Disclaimer</div><br/>You are about to activate One Click Trading mode. By clicking "I Accept these Terms and Conditions" below, you acknowledge that you have read and understood the following terms and conditions, and you agree to be bound hereby. Your current version of the terminal enables you to choose between the following modes for order submission. You agree that you will be bound by the procedures and conditions specified herein with respect to each such mode.<br/><br/>1. The Default mode for order submission is a two-step process: you first open a new order window, then you select an appropriate order type, its parameters, and confirm your order submission by clicking either Buy, Sell, Place, Modify or Close buttons depending on the particular order type selected and your trading intentions. Your order will not be submitted until you have completed both of the aforementioned steps.<br/><br/>2. The One Click Trading mode for order submission is a one-step process. Your order will be submitted when you:<br/>&nbsp; - click either bid (SELL) or ask (BUY) price buttons on the One Click Trading panel of a chart<br/>&nbsp;- click Sell, Close or Buy buttons in the Depth of Market window<br/>&nbsp;- select order placing commands from the context menu of a chart or in the Depth of Market window<br/>&nbsp;- delete orders in the Trade tab of the Toolbox window or from the chart context menu<br/><br/>THERE WILL BE NO SUBSEQUENT CONFIRMATION PROMPT FOR YOU TO CLICK. YOU WILL NOT BE ABLE TO WITHDRAW OR CHANGE YOUR ORDER ONCE YOU CLICK. UNDER NORMAL MARKET CONDITIONS AND SYSTEM PERFORMANCE, A MARKET ORDER WILL BE PROMPTLY FILLED AFTER SUBMISSION AND YOU WILL HAVE ENTERED INTO A BINDING TRANSACTION.<br/><br/>You can activate or deactivate One Click Trading mode on the Trade tab of Options window of the terminal.<br/><br/>By selecting the One Click Trading mode, you understand that your orders will be submitted by clicking the bid or ask rate button or in any other way described above, without any further order confirmation. You agree to accept all risks associated with the use of the order submission mode you have chosen, including, without limitation, the risk of errors, omissions or mistakes made in submitting any order.<br/><br/>You agree to fully indemnify and hold harmless %COMPANY% from any and all losses, costs and expenses that it may incur as a result of any such errors, omissions or mistakes by you, your trading manager or any other person trading on your behalf.',
    fI: "I Accept these Terms and Conditions",
    gI: "OK",
    dI: "Cancel",
    NS: "High Risk Investment Warning",
    LS: '<div style="text-align:center;font-size:11px;">High Risk Investment Warning</div><br/><div style="font-size:11px;">We wish to inform you that by using this trading platform further you will have access to leveraged high risk investment products, provided by the financial institution of your choice. Investing in such products might not be suitable for all investors, because it carries a risk of losing a part or all deposited amount.</div><br/><div style="font-size:11px;">Before deciding to trade high risk investment products you should carefully consider your investment objectives, level of experience and acceptable risk. The possibility exists that you could sustain a loss higher than your initial investment and therefore you should not invest money that you cannot afford to lose.</div><br/><div style="font-size:11px;">We invite you to widen your knowledge about all the risk factors that are concerned with investing in these products, and seek advice from a professional financial advisor if you have any doubts.</div>',
    OS: "I am aware of the above statement and I wish to trade high risk investment products",
    MS: "OK",
    KS: "Cancel",
    TU: "Are you sure you want to end the session?",
    UU: "Delete account information",
    RU: "Logout",
    VU: "Logout",
    SU: "Cancel",
    PU: "Authorization allows to get access to the trade account",
    QU: "Connect to an Account",
    HU: "Login",
    p$: "enter login",
    IU: "Password",
    s$: "enter password",
    MU: "Server",
    t$: "enter server",
    KU: "Save password in browser storage",
    LU: "Save password",
    GU: "OK",
    gB: "Cancel",
    EU: "Demo",
    FU: "Open a Demo Account",
    DU: "Check",
    BH: "Your browser does not support %TECH%.<br/>You need to update your browser to the latest version.",
    zH: "Cookie",
    AH: "Web Crypto API",
    CH: "Web Sockets",
    JU: "Platform",
    yH: "Switch",
    OU: "Switch to the MetaTrader 4 mode",
    NU: "To connect to a MetaTrader 4 account, the web terminal should be switched to the MetaTrader 4 mode. The page will be refreshed. Do you want to continue? ",
    w$: "Switch to the MetaTrader 5 mode",
    v$: "To connect to a MetaTrader 5 account, the web terminal should be switched to the MetaTrader 5 mode. The page will be refreshed. Do you want to continue? ",
    q$: "One-time password",
    r$: "enter password",
    u$: "Sign In",
    xU: "Time",
    wU: "Source",
    uU: "Message",
    yU: "Journal",
    k$: "Auto Scroll",
    j$: "Grid",
    tU: "Debug",
    vU: "Save as File",
    KG: "Order",
    US: "Deal",
    sq: "Time",
    Qu: "Type",
    n9: "Size",
    o9: "Symbol",
    Pu: "Symbol",
    aT: "Price",
    dT: "S / L",
    iT: "T / P",
    Lu: "Price",
    Mu: "Commission",
    q9: "Taxes",
    Ix: "Swap",
    Nu: "Fee",
    fs: "Profit",
    Gx: "Comment",
    gT: "History",
    PS: "All History",
    ZS: "Last 3 Months",
    $S: "Last Month",
    k9: "last 1000 records",
    m9: "Save As CSV",
    j9: "Grid",
    SS: "Columns",
    l9: "Profit/Loss",
    IG: "Credit",
    JG: "Deposit",
    MG: "Withdrawal",
    HG: "Balance",
    g9: "All Symbols",
    QS: "All Symbols",
    h9: "Current Symbol",
    TS: "Current Symbol",
    p9: "Symbols",
    fT: "Symbols",
    Ru: "Volume",
    jT: "Volumes",
    lT: "Lots",
    kT: "Amounts",
    VS: "Deals",
    bT: "Orders",
    WS: "Orders & Deals",
    Ou: "ID",
    XS: "Direction",
    Hx: "Expert id",
    eT: "State",
    LG: "Ticket",
    YS: "Filled",
    RS: "Canceled",
    hT: "Total",
    cT: "Positions",
    i9: "Done",
    BQ: "Name",
    r6: "min 6 chars",
    tQ: "E-mail",
    XF: "Deposit",
    q6: "I agree to subscribe to your newsletters",
    mQ: "Next",
    lQ: "Complete",
    kQ: "Cancel",
    HQ: "Open an Account",
    AQ: "To open an account, please fill out all the following fields:",
    EQ: "Registration",
    JQ: "Wait a little, please",
    $F: "Server",
    VF: "Account type",
    xQ: "Leverage",
    zQ: "Login",
    CQ: "Password",
    wQ: "Investor",
    sQ: "Personal details",
    vQ: "Please keep your username and password in a safe place.",
    DQ: "read only password",
    u6: "Platform",
    k6: "Switch",
    x6: "Switch to the MetaTrader 4 mode",
    w6: "To open a demo account in the MetaTrader 4 platform, the web terminal should be switched to the MetaTrader 4 mode. The page will be refreshed. Do you want to continue?",
    z6: "Switch to the MetaTrader 5 mode",
    y6: "To open a demo account in the MetaTrader 5 platform, the web terminal should be switched to the MetaTrader 5 mode. The page will be refreshed. Do you want to continue?",
    IQ: "Use hedge in trading",
    A6: "Use hedge",
    j6: "The demo account opening form is available on the %DOMAIN% website. Click Next to go to the form page.",
    jQ: "Demo account registration is available on the %COMPANY% company's website.",
    yQ: "Downloading settings for the selected server",
    ZF: "Failed to open a demo account.<br/>Please check Internet connection or contact %COMPANY% support service.",
    GQ: "Demo account registration is not allowed on this server.<br/>Please contact %COMPANY% support service.",
    s6: "PERSONAL INFORMATION",
    f6: "ACCOUNT INFORMATION",
    p6: "Information",
    v6: "Register",
    t6: "Phone",
    o6: "Done",
    l6: "New demo account has been opened successfully",
    iQ: "I agree with the terms and conditions for opening an account and the data protection policy",
    g6: 'By enabling "Accept" you agree with the terms and conditions for opening an account and the data protection policy',
    i6: "ACCOUNT OPENING CONDITIONS",
    h6: "Accept",
    m6: "Confirmation",
    WF: "Confirmation code",
    nQ: "Failed to send confirmation codes",
    oQ: "Invalid or expired confirmation code. Please open a demo account again.",
    pQ: "We have sent a confirmation code to your email. Please specify it.",
    qQ: "We have sent a confirmation code to your phone. Please specify it.",
    rQ: "We have sent confirmation codes to your phone and email. Please specify them.",
    n6: "enter code",
    uQ: "First name",
    FQ: "Second name",
    YF: "min 2 chars",
    vP: "Yellow On Black",
    uP: "Green On Black",
    tP: "Black On White",
    iP: "Bar chart",
    mP: "Candlesticks",
    rP: "Line chart",
    nP: "Chart on foreground",
    pP: "Chart shift",
    oP: "Chart auto scroll",
    BP: "Show OHLC",
    K5: "OHLC",
    wP: "Show ask line",
    J5: "Ask Price Line",
    xP: "Show bid line",
    AP: "Show last line",
    CP: "Show period separators",
    M5: "Period Separators",
    zP: "Show grid",
    N5: "Show volumes",
    HP: "Volumes",
    EP: "Show tick volumes",
    GP: "Tick volumes",
    DP: "Show real volumes",
    sP: "Real volumes",
    FP: "Show trade levels",
    P5: "Trade Levels",
    yP: "Show object descriptions",
    MF: "Properties of",
    qP: "Color scheme",
    kP: "OK",
    jP: "Cancel",
    lP: "Reset",
    O5: "Symbol",
    L5: "Period",
    cP: "Common",
    zF: "Parameters",
    KF: "Visualization",
    yF: "OK",
    xF: "Cancel",
    eP: "Name",
    dP: "Description",
    bP: "Draw object as background",
    gP: "Disable selection",
    AF: "Show on all the timeframes",
    EF: "1 Minute",
    HF: "5 Minutes",
    FF: "15 Minutes",
    GF: "30 Minutes",
    CF: "1 Hour",
    DF: "4 Hours",
    BF: "Daily",
    JF: "Weekly",
    IF: "Monthly",
    fP: "Object",
    gd: "Time",
    Ld: "Value",
    LF: "Ray",
    Kl: "Ray right",
    Jl: "Ray left",
    hu: "Fill",
    YO: "Angle in degrees",
    hP: "Scale",
    $O: "Ellipse",
    aP: "Gann Angle",
    wF: "Pips per bar",
    ZO: "Down trend",
    UO: "Object",
    TO: "Name",
    RO: "Description",
    XO: "Show",
    SO: "Edit",
    QO: "Delete",
    PO: "Close",
    H5: "Symbols",
    I5: "Symbols",
    VO: "Objects",
    WO: "Objects on",
    F5: "Modify Order",
    fu: "Modify",
    D5: "Close Order",
    hx: "Close",
    E5: "Delete Order",
    iF: "Delete",
    AO: "Trading",
    lO: "New Order",
    nF: "One Click Trading",
    mF: "%NAME% properties...",
    lF: "Objects List",
    gO: "Delete Object",
    fO: "Delete All Objects",
    dO: "Bar chart",
    eO: "Candlesticks",
    kO: "Line chart",
    mO: "Timeframes",
    qO: "1 Minute",
    tO: "5 Minutes",
    rO: "15 Minutes",
    sO: "30 Minutes",
    oO: "1 Hour",
    pO: "4 Hours",
    nO: "Daily",
    vO: "Weekly",
    uO: "Monthly",
    xO: "Refresh",
    hO: "Grid",
    pF: "Volumes",
    oF: "Tick Volumes",
    yO: "Auto Scroll",
    zO: "Chart Shift",
    qF: "Zoom In",
    rF: "Zoom Out",
    G5: "Properties of",
    wO: "Properties...",
    jF: "Indicators List",
    kF: "%NAME% properties...",
    iO: "Delete Indicator",
    jO: "Delete Indicator Window",
    OO: "Vertical Line",
    KO: "Horizontal Line",
    NO: "Trend Line",
    uF: "Trendline by angle",
    BO: "Callout",
    CO: "Your text",
    EO: "Fibonacci Retracement",
    IO: "Fibonacci Time Zones",
    GO: "Fibonacci Fan",
    FO: "Fibonacci Arcs",
    v0: "Fibonacci Fan",
    DO: "Equidistant Channel",
    HO: "Fibonacci Expansion",
    tF: "Cycle lines",
    sF: "Arrowed line",
    MO: "StdDev Channel",
    LO: "Regression Channel",
    JO: "Gann Line",
    ZW: "Instant Execution",
    uX: "Request Execution",
    $W: "Market Execution",
    XW: "Exchange Execution",
    eX: "Pending order",
    bX: "Modify order",
    cX: "Modify Position",
    UW: "Close By",
    Zaa: "Multiple Close By",
    $aa: "Multiple Close By for",
    Vaa: "Market order",
    eba: "Order Execution",
    rba: "Please wait...<br/>Order is being processed by the server",
    mba: "Symbol",
    yX: "Symbol",
    As: "Volume",
    Do: "Stop Loss",
    Fo: "Take Profit",
    vs: "Comment",
    uI: "Type",
    Paa: "Enable maximum deviation from quoted price",
    Waa: "Maximum deviation",
    Xaa: "pips",
    Aaa: "Attention! The trade will be executed at market conditions, difference with requested price may be significant!",
    Baa: "at price:",
    Qaa: "Expiry",
    gX: "Open price you set must differ from market price by at least %POINTS% points",
    hX: "The same conditions apply for Stop Loss and Take Profit levels.",
    hba: 'You can print out this information by pressing "Print" button',
    mI: "points",
    Naa: "Copy as",
    Taa: "Level",
    wX: "Stop Loss or Take Profit you set must differ from market price by at least %POINTS% points",
    xX: "Stops processing is performed on the broker side.",
    nI: "Price",
    Jaa: "Multiple Close By",
    aba: "Multiple Close By for",
    jba: "Requote",
    vX: "Do you accept these new quotes?",
    nba: "Order #",
    qba: "Order",
    pba: "Modify #",
    oba: "Close #",
    lba: "successful",
    Kaa: "commission",
    Uaa: "market",
    aX: "Market",
    dba: "order",
    dX: "Order",
    fX: "Position",
    cba: "opening at",
    TW: "by",
    Haa: "closed",
    Iaa: "closed by",
    Yaa: "modified",
    Oaa: "deleted",
    OW: "at",
    Raa: "failed",
    Gaa: "by Market",
    bba: "New Quotes",
    Maa: "Do you want to close order",
    Laa: "Do you want to",
    gba: "Please request",
    kba: "Sell by Market",
    pn: "OK",
    Eaa: "Cancel",
    qn: "Print",
    PW: "Accept",
    SW: "Reject",
    hI: "Modify",
    QW: "Delete",
    RW: "Place",
    jv: "Close",
    zaa: "Sell",
    Caa: "Buy",
    Faa: "Sell by Market",
    Daa: "Buy by Market",
    iba: 'You can print out this information by pressing "Print" button.',
    fba: "Place",
    tX: "Request",
    xg: "Please wait...",
    yo: "Order has been placed in queue",
    Bo: "Order has been placed in queue",
    Co: "Order is being processed by the server",
    yB: "Fill policy",
    tI: "Stop Limit price",
    iI: "Expiration",
    jI: "Expiration date",
    WW: "Deviation",
    VW: "Close position",
    Cda: "Common error",
    Dda: "Invalid parameters",
    Ida: "Server is busy",
    Gda: "Old version",
    Fda: "No connection",
    Eda: "Not enough rights",
    Jda: "Too frequent requests",
    Ada: "Account disabled",
    Bda: "Invalid account",
    Hda: "Public key not found",
    cea: "Trade timeout",
    Lda: "Invalid prices",
    Mda: "Invalid S/L or T/P",
    Nda: "Invalid volume",
    Uda: "Market is closed",
    Qda: "Trade is disabled",
    Wda: "Not enough money",
    Zda: "Price changed",
    Xda: "Off quotes",
    Oda: "Broker is busy",
    bea: "Requote",
    Yda: "Order is locked",
    Tda: "Only long positions are allowed",
    eea: "Too many requests",
    Kda: "Order is accepted",
    $da: "Order is in process",
    fea: "Request canceled by client",
    Vda: "Modification denied. Order too close to market",
    Pda: "Trade context is busy",
    Rda: "Expiration for pending orders is disabled",
    dea: "Too many orders",
    Sda: "Hedge is prohibited",
    aea: "Prohibited by FIFO rule",
    SK: "OK",
    PK: "Common error",
    RK: "Invalid parameters",
    QK: "Server technical problem",
    r1: "Network problem",
    s1: "Not enough permissions",
    t1: "Timeout",
    p1: "No connection",
    q1: "Too frequent requests",
    Q1: "On the way",
    u1: "Accepted",
    d2: "Processed",
    h2: "Requoted",
    a2: "Prices",
    f2: "Rejected",
    y1: "Canceled",
    Y1: "Placed",
    C1: "Done",
    E1: "Done partially",
    D1: "Done partially",
    F1: "Common Error",
    j2: "Timeout",
    I1: "Invalid parameters",
    P1: "Invalid volume",
    N1: "Invalid prices",
    O1: "Invalid S/L or T/P",
    l2: "Trade is disabled",
    V1: "Market closed",
    W1: "Not enough money",
    b2: "Price changed",
    c2: "Off quotes",
    K1: "Invalid expiration",
    X1: "Order has been changed already",
    k2: "Too many trade requests",
    x1: "Automated Trading disabled on the server side",
    v1: "Automated Trading disabled at the client terminal",
    G1: "Modification failed due to order or position being close to market",
    L1: "Unsupported filling mode",
    B1: "No connection",
    R1: "Orders limit reached",
    T1: "Volume limit reached",
    M1: "Invalid order type",
    Z1: "Position already closed",
    S1: "Position limit reached",
    J1: "Volume to be closed exceeds the position volume",
    A1: "Order to close this position already exists",
    g2: "Request rejected, order canceled",
    U1: "Only long positions are allowed",
    i2: "Only short positions are allowed",
    z1: "Only position closing is allowed",
    e2: "Position close prohibited by FIFO rule",
    BU: 'New language has been selected. It will be applied at the next start of terminal.</br></br>Press "Restart" to restart the terminal and apply selected language.',
    AU: "Restart",
    zU: "Later",
    CU: "Restart",
    n$: "Restart the application to apply the changes",
    o$: "Languages",
    ZG: "Indicators on",
    KT: "Main chart",
    NT: "Indicator window",
    LT: "Properties",
    MT: "Delete",
    JT: "Close",
    a$: "Indicators",
    Y9: "No indicators",
    Z9: "Tap to add new indicator",
    X9: "Add indicator",
    PT: "Indicator",
    ST: "Period",
    dH: "Shift",
    $G: "Apply to",
    c$: "Reset",
    ks: "MA method",
    OT: "Deviation",
    bH: "Deviations",
    hg: "Fixed minimum",
    VT: "%K period",
    TT: "%D period",
    $T: "Slowing",
    YT: "Price field",
    gg: "Fixed maximum",
    cH: "Fast EMA",
    b$: "Fast MA",
    eH: "Slow EMA",
    d$: "Slow MA",
    UT: "Jaws period",
    XT: "Teeth period",
    WT: "Lips period",
    bU: "Tenkan-sen",
    QT: "Kijun-sen",
    ZT: "Senkou Span B",
    aU: "Step",
    RT: "Maximum",
    aH: "Degree",
    vF: "Lines",
    LN: "Volume",
    IN: "Price",
    KN: "Trade",
    DN: "Close",
    FN: "Extended",
    HN: "Amount instead of Lots",
    GN: "Open in new window",
    EN: "Show extended book",
    JN: "Show or hide spread",
    wR: "Details",
    vR: "Symbol",
    xR: "Tick Size",
    yR: "Tick Value",
    VQ: "Face Value",
    KQ: "Accrued Interest",
    $Q: "Initial margin",
    aR: "Initial Buy margin",
    bR: "Initial Sell margin",
    cR: "Maintenance margin",
    jR: "Lower Limit",
    iR: "Upper Limit",
    oR: "Settlement Price",
    OQ: "Bid",
    PQ: "Bid High",
    QQ: "Bid Low",
    LQ: "Ask",
    MQ: "Ask High",
    NQ: "Ask Low",
    XQ: "Last",
    YQ: "Last High",
    ZQ: "Last Low",
    eR: "Price Change",
    AR: "Volume",
    BR: "Volume High",
    CR: "Volume Low",
    TQ: "Deals",
    UQ: "Deals Volume",
    zR: "Turnover",
    WQ: "Open Interest",
    RQ: "Buy Orders",
    SQ: "Buy Volume",
    tR: "Sell Orders",
    uR: "Sell Volume",
    lR: "Open Price",
    fR: "Close Price",
    dR: "Average Weighted Price",
    sR: "Volatility",
    pR: "Theoretical Price",
    gR: "Delta",
    qR: "Theta",
    hR: "Gamma",
    rR: "Vega",
    mR: "Rho",
    kR: "Omega",
    nR: "Sensitivity",
    MX: "Change master password",
    Mba: "For security reasons your password must be changed.<br>Please specify a new password. It must be complex enough, at least 8 different case letters and digits.",
    LX: "For security reasons your password must be changed.<br>Please specify a new password. It must be complex enough, at least %MIN% different case letters and digits.",
    IX: "Login",
    JX: "New password",
    GX: "Confirm",
    HX: "Example: GetBun72",
    KX: "OK",
    FX: "Cancel",
    cO: "Change Password",
    C5: "Password must be complex enough, at least 8 symbols long and at least two of the three character types present - lowercase, uppercase, digit.",
    hF: "Password must be complex enough, at least %MIN% symbols long and at least two of the three character types present - lowercase, uppercase, digit.",
    ZN: "Login",
    WN: "Current password",
    XN: "must be the master password",
    $N: "Change master password",
    YN: "Change investor (read only) password",
    aO: "New password",
    VN: "Confirm",
    bO: "OK",
    UN: "Cancel",
    lN: "About",
    kN: "Close",
    a5: "Accounts",
    V4: "No trade accounts",
    R4: "Tap to add new account",
    S4: "Current Account",
    X4: "Trade Accounts",
    W4: "Information",
    Z4: "Logout",
    Y4: "Login",
    T4: "Delete",
    U4: "Are you sure you want to delete the selected account?",
    G$: "Cancel",
    naa: "Quotes",
    kaa: "Chart",
    oaa: "Trade",
    laa: "History",
    maa: "Settings",
    waa: "New Account",
    vaa: "To open a real account, please contact your broker",
    paa: "Start without registration",
    qaa: "An anonymous account will be automatically created for you",
    taa: "Open a personal demo account",
    uaa: "Choose demo server and register an account",
    raa: "Login to an existing account",
    saa: "Use your login/password to connect to the broker of your choice",
    y5: "Custom Agreement",
    gF: "Client Agreement",
    A5: "Risk Disclosure",
    SN: "Client Agreement and Risk Disclosure",
    w5: "Complaints Handling Procedure",
    z5: "Order Execution Policy",
    v5: "Client Categorisation Notice",
    x5: "Conflicts of Interest Policy",
    TN: "Data Protection Policy",
    dD: "Undefined",
    RC: "Basic Materials",
    SC: "Communication Services",
    TC: "Consumer Cyclical",
    UC: "Consumer Defensive",
    XC: "Energy",
    YC: "Financial",
    ZC: "Healthcare",
    aD: "Industrials",
    bD: "Real Estate",
    cD: "Technology",
    eD: "Utilities",
    VC: "Currency",
    WC: "Crypto Currency",
    $C: "Index",
    nJ: "Commodities",
    hy: "Agricultural Inputs",
    ky: "Aluminium",
    yy: "Building Materials",
    Cy: "Chemicals",
    Gy: "Coking Coal",
    Ry: "Copper",
    oz: "Gold",
    Jz: "Lumber & Wood Production",
    wz: "Other Industrial Metals & Mining",
    dA: "Other Precious Metals & Mining",
    $z: "Paper & Paper Products",
    CA: "Silver",
    IA: "Specialty Chemicals",
    KA: "Steel",
    fy: "Advertising Agencies",
    xy: "Broadcasting",
    nz: "Electronic Gaming & Multimedia",
    cz: "Entertainment",
    Ez: "Internet Content & Information",
    eA: "Publishing",
    MA: "Telecom Services",
    ly: "Apparel Manufacturing",
    my: "Apparel Retail",
    py: "Auto Manufacturers",
    qy: "Auto Parts",
    oy: "Auto & Truck Dealerships",
    Ty: "Department Stores",
    jz: "Footwear & Accessories",
    lz: "Furnishing, Fixtures & Appliances",
    mz: "Gambling",
    sz: "Home Improvement Retail",
    Fz: "Internet Retail",
    Hz: "Leisure",
    Iz: "Lodging",
    Kz: "Luxury Goods",
    Zz: "Packaging & Containers",
    aA: "Personal Services",
    jA: "Recreational Vehicles",
    uA: "Residental Construction",
    vA: "Resorts & Casinos",
    wA: "Restaurants",
    JA: "Specialty Retail",
    NA: "Textile Manufacturing",
    RA: "Travel Services",
    ty: "Beverages - Brewers",
    uy: "Beverages - Non-Alcoholic",
    vy: "Beverages - Wineries & Distilleries",
    Ny: "Confectioners",
    Vy: "Discount Stores",
    Yy: "Education & Training Services",
    fz: "Farm Products",
    iz: "Food Distribution",
    pz: "Grocery Stores",
    uz: "Household & Personal Products",
    Yz: "Packaged Foods",
    PA: "Tobacco",
    Sz: "Oil & Gas Drilling",
    Tz: "Oil & Gas E&P",
    Uz: "Oil & Gas Equipment & Services",
    Vz: "Oil & Gas Integrated",
    Wz: "Oil & Gas Midstream",
    Xz: "Oil & Gas Refining & Marketing",
    OA: "Thermal Coal",
    TA: "Uranium",
    dz: "Exchange Traded Fund",
    ny: "Assets Management",
    ry: "Banks - Diversified",
    sy: "Banks - Regional",
    By: "Capital Markets",
    Dy: "Closed-End Fund - Debt",
    Ey: "Closed-End Fund - Equity",
    Fy: "Closed-End Fund - Foreign",
    Sy: "Credit Services",
    gz: "Financial Conglomerates",
    hz: "Financial Data & Stock Exchange",
    yz: "Insurance Brokers",
    zz: "Insurance - Diversified",
    Az: "Insurance - Life",
    Bz: "Insurance - Property & Casualty",
    Cz: "Insurance - Reinsurance",
    Dz: "Insurance - Specialty",
    Rz: "Mortgage Finance",
    BA: "Shell Companies",
    wy: "Biotechnology",
    Uy: "Diagnostics & Research",
    Wy: "Drugs Manufacturers - General",
    Xy: "Drugs Manufacturers - Specialty & Generic",
    qz: "Healthcare Plans",
    rz: "Health Information Services",
    Oz: "Medical Care Facilities",
    Mz: "Medical Devices",
    Nz: "Medical Distribution",
    Pz: "Medical Instruments & Supplies",
    bA: "Pharmaceutical Retailers",
    gy: "Aerospace & Defense",
    iy: "Airlines",
    jy: "Airports & Air Services",
    zy: "Building Products & Equipment",
    Ay: "Business Equipment & Supplies",
    Oy: "Conglomerates",
    Py: "Consulting Services",
    Zy: "Electrical Equipment & Parts",
    bz: "Engineering & Construction",
    ez: "Farm & Heavy Construction Machinery",
    vz: "Industrial Distribution",
    xz: "Infrastructure Operations",
    kz: "Integrated Freight & Logistics",
    Lz: "Marine Shipping",
    Qz: "Metal Fabrication",
    cA: "Pollution & Treatment Controls",
    fA: "Railroads",
    tA: "Rental & Leasing Services",
    yA: "Security & Protection Services",
    GA: "Specialty Business Services",
    HA: "Specialty Industrial Machinery",
    LA: "Staffing & Employment Services",
    QA: "Tools & Accessories",
    SA: "Trucking",
    $A: "Waste Management",
    gA: "Real Estate - Development",
    hA: "Real Estate - Diversified",
    iA: "Real Estate Services",
    kA: "REIT - Diversified",
    lA: "REIT - Healthcare Facilities",
    mA: "REIT - Hotel & Motel",
    nA: "REIT - Industrial",
    oA: "REIT - Mortgage",
    pA: "REIT - Office",
    qA: "REIT - Residential",
    rA: "REIT - Retail",
    sA: "REIT - Specialty",
    Ly: "Communication Equipment",
    My: "Computer Hardware",
    Qy: "Consumer Electronics",
    $y: "Electronic Components",
    az: "Electronics & Computer Distribution",
    Gz: "Information Technology Services",
    xA: "Scientific & Technical Instruments",
    AA: "Semiconductor Equipment & Materials",
    zA: "Semiconductors",
    DA: "Software - Application",
    EA: "Software - Infrastructure",
    FA: "Solar",
    UA: "Utilities - Diversified",
    VA: "Utilities - Independent Power Producers",
    ZA: "Utilities - Renewable",
    WA: "Utilities - Regulated Electric",
    XA: "Utilities - Regulated Gas",
    YA: "Utilities - Regulated Water",
    Hy: "Agriculture",
    Iy: "Energy",
    Jy: "Metals",
    Ky: "Precious Metals",
    H1: "Hedged positions are prohibited",
  },
};
(function () {
  function v(b) {
    b || (b = window);
    l();
    if (k.mk || k.Ok)
      b.document.addEventListener(
        "DOMContentLoaded",
        function () {
          e(b);
        },
        !1
      );
    else if (k.Sn)
      var f = setInterval(function () {
        if (
          "loaded" == b.document.readyState ||
          "complete" == b.document.readyState
        )
          clearInterval(f), e(b);
      }, 10);
    else
      b.addEventListener &&
        b.addEventListener(
          "load",
          function () {
            e(b);
          },
          !0
        );
    b.onload = function () {
      e(b);
    };
    r(a, "");
  }
  function r(b, f) {
    var c;
    if (b)
      for (var e in b)
        (c = typeof b[e]),
          "object" == c
            ? r(b[e], f + e + ".")
            : "function" == c && (a[(f || "") + e] = b[e]);
  }
  function l() {
    var a = h.sS();
    a && h.mm(a);
  }
  function e(a) {
    g ||
      ((g = !0),
      (a.onload = null),
      h.ha(a),
      k.ha(),
      a.NM && a.NM(),
      a.load && a.load());
  }
  E || (E = {});
  E.ha = v;
  E.Ma = function () {
    if (!g) return null;
    var d = Array.prototype.shift.apply(arguments);
    if (d) return b.AN(d, arguments);
    var f = [],
      c;
    for (c in a) f.push(c);
    throw Error(
      [
        'Control with name "',
        d,
        '" not found. Available controls : ',
        f.join(", "),
      ].join("")
    );
  };
  window.webtrader.init = v;
  var k = E.Qa,
    h = E.va,
    b = E.ma,
    a = E.controls,
    g = !1,
    a = {};
})();
(function () {
  function v(a, b) {
    function d(a) {
      (a = String.fromCharCode.apply(null, new Uint8Array(a))) &&
        -1 < a.indexOf(";;") &&
        3e4 > new Date().getTime() - Number(a.split(";;")[1]) &&
        (g = a.split(";;")[0]);
      b && b();
    }
    var f = h.vg;
    a
      ? f.rj(h.nm.BI.El(), function (b) {
          k.Rj
            ? f.kh(
                k.Rj.Bf(),
                1,
                function (b) {
                  f.rj(b.Df(), function (b) {
                    f.Pl(a.Bf(), 1, d, b);
                  });
                },
                b
              )
            : f.Pl(a.Bf(), 1, d, b);
        })
      : b && b();
  }
  function r() {
    var a = window.localStorage.environment || null;
    if (a)
      try {
        a = window.JSON.parse(a);
      } catch (b) {
        a = null;
      }
    return a;
  }
  function l(a) {
    for (var b = 0, d = a.length; b < d; b++)
      if (isNaN(parseInt(a.charAt(b), 10))) return !1;
    return !0;
  }
  var e = window.J,
    k = e.Qa,
    h = e.ba,
    b = e.va,
    a = [
      "www.mql5.com",
      "www.mql5.dev",
      "www.dolar-colombia.com",
      "trade.mql5.com",
      "trade.mql5.dev",
    ],
    g,
    d,
    f;
  h.bd = {
    ip: null,
    ha: function (a) {
      var b = [],
        d = window.navigator,
        e = d.language || d.browserLanguage || "",
        g = window.screen;
      b.push(k.Rj);
      b.push(d.platform);
      b.push(
        k.Ok
          ? "Presto"
          : k.gh
          ? "Edge"
          : k.wf
          ? "MSIE"
          : k.wM
          ? "Safari"
          : k.Sn
          ? "WebKit"
          : k.mk
          ? "Gecko"
          : "Unknown"
      );
      b.push(k.Km ? "1" : "0");
      b.push(e);
      b.push(
        g ? Math.max(g.width, g.height) + "x" + Math.min(g.width, g.height) : ""
      );
      f = h.vg.IH(b.join(";"));
      v(this.so("ref"), a);
      return this;
    },
    JD: function () {
      if (!0 === this.ip || !1 === this.ip) return this.ip;
      if (window.top === window.self) return (this.ip = !0);
      var c = this.Uh();
      if (-1 < a.indexOf(c)) return (this.ip = !0);
      if (k.Pd) {
        var b = r();
        if (b && (b = b.domains) && -1 < b.indexOf(c)) return (this.ip = !0);
      }
      return (this.ip = !1);
    },
    J2: function () {
      if (!this.x3 && ((this.x3 = !0), window.top !== window.self)) {
        var a = this.Uh();
        if (k.Pd) {
          var b = r();
          b || (b = {});
          var d = b.domains;
          (d && -1 < d.indexOf(a)) ||
            (d || (d = b.domains = []),
            d.push(a),
            (window.localStorage.environment = window.JSON.stringify(b)));
        }
      }
    },
    Uh: function () {
      if (g) return g;
      var a = document.referrer;
      return a ? this.xI(a).hostname : "";
    },
    wx: function () {
      var a = 0,
        b = this.Uh();
      if (b)
        for (var d = 0, f = b.length; d < f; d++)
          a ^= b.charCodeAt(d) << d % 32;
      return a;
    },
    Yr: function (a) {
      var b = h.vg,
        d = this.Uh();
      b.rj(h.nm.BI.El(), function (f) {
        k.Rj
          ? b.kh(
              k.Rj.Bf(),
              1,
              function (f) {
                b.rj(f.Df(), function (f) {
                  b.kh(
                    [d, new Date().getTime()].join(";;").Df().Bf(),
                    1,
                    function (b) {
                      a(b.Df());
                    },
                    f
                  );
                });
              },
              f
            )
          : b.kh(
              [d, new Date().getTime()].join(";;").Df().Bf(),
              1,
              function (b) {
                a(b.Df());
              },
              f
            );
      });
      return this;
    },
    xI: function (a) {
      var d = b.sb("a");
      d.href = a;
      return {
        protocol: d.protocol,
        hostname: d.hostname,
        port: d.port,
        pathname: d.pathname,
        search: d.search,
        hash: d.hash,
        host: d.host,
      };
    },
    mH: function () {
      try {
        return window.self !== window.top;
      } catch (a) {
        return !0;
      }
    },
    pH: function () {
      return !0 === d || !1 === d
        ? d
        : (d = "trade.mql5.com" === window.location.host);
    },
    so: function (a) {
      var b = window.location.search,
        d;
      if (b && 1 < b.length && (b = b.substr(1)))
        for (var b = b.split("&"), f = 0, e = b.length; f < e; f++)
          if ((d = b[f]))
            if (((d = d.split("=")), d.length && d[0] === a)) return d[1];
      return "";
    },
    xT: function (a) {
      var b = window.location.search,
        d;
      if (b && 1 < b.length && (b = b.substr(1)))
        for (var b = b.split("&"), f = 0, e = b.length; f < e; f++)
          if ((d = b[f])) {
            if (d === a) return !0;
            d = d.split("=");
            if (d.length && d[0] === a) return !0;
          }
      return !1;
    },
    yv: function (a, b, d) {
      d &&
        0 === d.indexOf("https://") &&
        window.parent &&
        window.parent.postMessage &&
        window.parent.postMessage(JSON.stringify({ command: a, data: b }), d);
    },
    uG: function (a) {
      var b = null;
      try {
        b = document.cookie.match(
          new RegExp(
            "(?:^|; )" +
              a.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, "\\$1") +
              "=([^;]*)"
          )
        );
      } catch (d) {}
      return b ? decodeURIComponent(b[1]) : "";
    },
    JS: function () {
      var a = this.uG("_fz_uniq");
      if (l(a)) return a;
      a = this.uG("uniq");
      return l(a) ? a : "";
    },
    kx: function () {
      return f;
    },
  };
})();
(function () {
  function v(a) {
    (a && r(a)) || (a = "en");
    b = a;
    e.$M = "ar" === a ? "\u066c" : "&nbsp;";
    a = (k.ID && k.ID[a]) || {};
    for (var g in a) a.hasOwnProperty(g) && (this[g] = a[g] || "undefined");
  }
  function r(a) {
    return !!h.find(function (b) {
      return b[1] === a;
    });
  }
  var l = window.J,
    e = l.Qa,
    k = l.ba,
    h = [
      ["English", "en"],
      ["Russian", "ru"],
      ["German", "de"],
      ["Spanish", "es"],
      ["Portuguese", "pt"],
      ["Chinese", "zh"],
      ["Japanese", "ja"],
      ["Arabic", "ar"],
      ["Bulgarian", "bg"],
      ["French", "fr"],
      ["Indonesian", "id"],
      ["Korean", "ko"],
      ["Malay", "ms"],
      ["Polish", "pl"],
      ["Thai", "th"],
      ["Turkish", "tr"],
      ["Vietnamese", "vi"],
      ["Hindi", "hi"],
      ["Uzbek", "uz"],
      ["Ukrainian", "uk"],
      ["Danish", "da"],
      ["Hungarian", "hu"],
      ["Persian", "fa"],
      ["Slovak", "sk"],
      ["Croatian", "hr"],
      ["Czech", "cs"],
      ["Estonian", "et"],
      ["Serbian", "sr"],
      ["Slovenian", "sl"],
      ["Dutch", "nl"],
      ["Finnish", "fi"],
      ["Greek", "el"],
      ["Hebrew", "he"],
      ["Italian", "it"],
      ["Latvian", "lv"],
      ["Lithuanian", "lt"],
      ["Romanian", "ro"],
      ["Swedish", "sv"],
      ["Mongolian", "mn"],
      ["Traditional Chinese", "zt"],
      ["Tajik", "tg"],
    ],
    b;
  h.sort(function (a, b) {
    return a[0] > b[0] ? 1 : -1;
  });
  l.ba.xa = {
    fb: !1,
    EY: h,
    ha: function () {
      if (this.fb) return this;
      b = null;
      this.fb = !0;
      var a;
      a: {
        a = l.ba.ID;
        for (var g in a)
          if (a.hasOwnProperty(g)) {
            a = g;
            break a;
          }
        a = "en";
      }
      e.wE = a;
      a = e.wE;
      a = a.split("-");
      e.defaultCharset =
        "en" == a[0]
          ? "windows-1252"
          : "ru" == a[0] || "bg" == a[0]
          ? "windows-1251"
          : "de" == a[0] || "fr" == a[0]
          ? "windows-1252"
          : "ja" == a[0]
          ? "shift_jis"
          : "ar" == a[0]
          ? "windows-1256"
          : "nl" == a[0] ||
            "it" == a[0] ||
            "es" == a[0] ||
            "pt" == a[0] ||
            "da" == a[0] ||
            "fi" == a[0] ||
            "nb" == a[0] ||
            "sv" == a[0]
          ? "windows-1252"
          : "ko" == a[0]
          ? "euc-kr"
          : "pl" == a[0]
          ? "windows-1250"
          : "tr" == a[0]
          ? "windows-1254"
          : "uk" == a[0]
          ? "windows-1251"
          : "hr" == a[0] || "cs" == a[0]
          ? "windows-1250"
          : "el" == a[0]
          ? "windows-1253"
          : "he" == a[0]
          ? "windows-1255"
          : "ro" == a[0] || "sk" == a[0]
          ? "windows-1250"
          : "th" == a[0]
          ? "windows-874"
          : "id" == a[0] || "ms" == a[0] || "ca" == a[0]
          ? "windows-1252"
          : "hu" == a[0]
          ? "windows-1250"
          : "vi" == a[0]
          ? "windows-1258"
          : "zh" == a[0]
          ? "hans" == a[1]
            ? "gb18030"
            : "hant" == a[1] || "hk" == a[1] || "tw" == a[1]
            ? "big5"
            : "gb18030"
          : "windows-1252";
      a: {
        a = e.defaultCharset;
        g = [
          ["037", "IBM037"],
          ["437", "IBM437"],
          ["500", "IBM500"],
          ["708", "ASMO-708"],
          ["720", "DOS-720"],
          ["737", "ibm737"],
          ["775", "ibm775"],
          ["850", "ibm850"],
          ["852", "ibm852"],
          ["855", "IBM855"],
          ["857", "ibm857"],
          ["858", "IBM00858"],
          ["860", "IBM860"],
          ["861", "ibm861"],
          ["862", "DOS-862"],
          ["863", "IBM863"],
          ["864", "IBM864"],
          ["865", "IBM865"],
          ["866", "cp866"],
          ["869", "ibm869"],
          ["870", "IBM870"],
          ["874", "windows-874"],
          ["875", "cp875"],
          ["932", "shift_jis"],
          ["936", "gb2312"],
          ["949", "ks_c_5601-1987"],
          ["950", "big5"],
          ["1026", "IBM1026"],
          ["1047", "IBM01047"],
          ["1140", "IBM01140"],
          ["1141", "IBM01141"],
          ["1142", "IBM01142"],
          ["1143", "IBM01143"],
          ["1144", "IBM01144"],
          ["1145", "IBM01145"],
          ["1146", "IBM01146"],
          ["1147", "IBM01147"],
          ["1148", "IBM01148"],
          ["1149", "IBM01149"],
          ["1200", "utf-16"],
          ["1201", "unicodeFFFE"],
          ["1250", "windows-1250"],
          ["1251", "windows-1251"],
          ["1252", "windows-1252"],
          ["1253", "windows-1253"],
          ["1254", "windows-1254"],
          ["1255", "windows-1255"],
          ["1256", "windows-1256"],
          ["1257", "windows-1257"],
          ["1258", "windows-1258"],
          ["1361", "Johab"],
          ["10000", "macintosh"],
          ["10001", "x-mac-japanese"],
          ["10002", "x-mac-chinesetrad"],
          ["10003", "x-mac-korean"],
          ["10004", "x-mac-arabic"],
          ["10005", "x-mac-hebrew"],
          ["10006", "x-mac-greek"],
          ["10007", "x-mac-cyrillic"],
          ["10008", "x-mac-chinesesimp"],
          ["10010", "x-mac-romanian"],
          ["10017", "x-mac-ukrainian"],
          ["10021", "x-mac-thai"],
          ["10029", "x-mac-ce"],
          ["10079", "x-mac-icelandic"],
          ["10081", "x-mac-turkish"],
          ["10082", "x-mac-croatian"],
          ["12000", "utf-32"],
          ["12001", "utf-32BE"],
          ["20000", "x-Chinese_CNS"],
          ["20001", "x-cp20001"],
          ["20002", "x_Chinese-Eten"],
          ["20003", "x-cp20003"],
          ["20004", "x-cp20004"],
          ["20005", "x-cp20005"],
          ["20105", "x-IA5"],
          ["20106", "x-IA5-German"],
          ["20107", "x-IA5-Swedish"],
          ["20108", "x-IA5-Norwegian"],
          ["20127", "us-ascii"],
          ["20261", "x-cp20261"],
          ["20269", "x-cp20269"],
          ["20273", "IBM273"],
          ["20277", "IBM277"],
          ["20278", "IBM278"],
          ["20280", "IBM280"],
          ["20284", "IBM284"],
          ["20285", "IBM285"],
          ["20290", "IBM290"],
          ["20297", "IBM297"],
          ["20420", "IBM420"],
          ["20423", "IBM423"],
          ["20424", "IBM424"],
          ["20833", "x-EBCDIC-KoreanExtended"],
          ["20838", "IBM-Thai"],
          ["20866", "koi8-r"],
          ["20871", "IBM871"],
          ["20880", "IBM880"],
          ["20905", "IBM905"],
          ["20924", "IBM00924"],
          ["20932", "EUC-JP"],
          ["20936", "x-cp20936"],
          ["20949", "x-cp20949"],
          ["21025", "cp1025"],
          ["21866", "koi8-u"],
          ["28591", "iso-8859-1"],
          ["28592", "iso-8859-2"],
          ["28593", "iso-8859-3"],
          ["28594", "iso-8859-4"],
          ["28595", "iso-8859-5"],
          ["28596", "iso-8859-6"],
          ["28597", "iso-8859-7"],
          ["28598", "iso-8859-8"],
          ["28599", "iso-8859-9"],
          ["28603", "iso-8859-13"],
          ["28605", "iso-8859-15"],
          ["29001", "x-Europa"],
          ["38598", "iso-8859-8-i"],
          ["50220", "iso-2022-jp"],
          ["50221", "csISO2022JP"],
          ["50222", "iso-2022-jp"],
          ["50225", "iso-2022-kr"],
          ["50227", "x-cp50227"],
          ["51932", "euc-jp"],
          ["51936", "EUC-CN"],
          ["51949", "euc-kr"],
          ["52936", "hz-gb-2312"],
          ["54936", "GB18030"],
          ["57002", "x-iscii-de"],
          ["57003", "x-iscii-be"],
          ["57004", "x-iscii-ta"],
          ["57005", "x-iscii-te"],
          ["57006", "x-iscii-as"],
          ["57007", "x-iscii-or"],
          ["57008", "x-iscii-ka"],
          ["57009", "x-iscii-ma"],
          ["57010", "x-iscii-gu"],
          ["57011", "x-iscii-pa"],
          ["65000", "utf-7"],
          ["65001", "utf-8"],
        ];
        if (a) {
          a = a.toLowerCase();
          for (var d = 0, f = g.length; d < f; d++)
            if (g[d][1].toLowerCase() == a) {
              a = g[d][0];
              break a;
            }
        }
        a = "";
      }
      e.K3 = a;
      if ((a = e.wE)) return v.call(this, a), this;
      v.call(this, "en");
      return this;
    },
    Gb: function (a) {
      e.Pd && (window.localStorage.language = a);
      return this;
    },
    Db: function () {
      return b;
    },
    B_: function () {
      var a = h.find(function (a) {
        return a[1] === b;
      });
      return a ? a[0] : "English";
    },
  };
  l.ba.xa.ha();
})();
(function () {
  function v(a, b, c) {
    a &&
      (c = c ? a.lfa || a.mfa : a.ifa || a.onprogress) &&
      c.call(a, b.total, b.loaded);
  }
  function r(b, d) {
    if (d) {
      var f, e, g, p, n;
      try {
        (e = b.responseText),
          (p = b.statusText),
          (n = b.getAllResponseHeaders()),
          (g = b.responseXML),
          (f = b.status);
      } catch (x) {}
      switch (f) {
        case c.Za:
          if (n) {
            a: {
              var C = !1;
              f = d.jfa || d.Ew;
              if (!f) {
                f = d.kfa || d.ffa;
                if (!f) break a;
                C = !0;
              }
              try {
                f.call(d, e, g, p, a(n));
              } catch (h) {
                C || alert(h.message);
              }
            }
            break;
          }
          break;
        default:
          a: {
            var z = !1,
              C = d.gfa || d.onerror;
            if (!C) {
              C = d.hfa || d.efa;
              if (!C) break a;
              z = !0;
            }
            try {
              C.call(d, f, e, g, p, a(n));
            } catch (k) {
              z || alert(["Ajax callback error: ", k.message].join(""));
            }
          }
      }
    }
  }
  function l(a) {
    clearTimeout(a.timeout);
    a.timeout = setTimeout(function () {
      var b = a.kr;
      b && b.abort();
    }, 24e4);
  }
  function e() {
    var a = z.shift();
    if (a || (f.oM && !f.mM && (a = window.Kj("httprequest")))) return a;
    try {
      if (window.XMLHttpRequest) a = new XMLHttpRequest();
      else if (window.ActiveXObject)
        try {
          a = new window.ActiveXObject("Msxml2.XMLHTTP");
        } catch (b) {
          a = new window.ActiveXObject("Microsoft.XMLHTTP");
        }
    } catch (c) {
      a = null;
    }
    return a;
  }
  function k(a) {
    a = { kr: a };
    l(a);
    return a;
  }
  function h(a) {
    var b = [];
    if (a instanceof Array)
      for (var c = 0, d = a.length; c < d; ++c)
        b.push([a[c][0], encodeURIComponent(a[c][1])].join("="));
    else
      for (c in a)
        if (a[c] instanceof Array)
          for (var d = 0, f = a[c].length; d < f; ++d)
            b.push([c, encodeURIComponent(a[c][d])].join("="));
        else b.push([c, encodeURIComponent(a[c])].join("="));
    return b.join("&");
  }
  function b(a, b, c) {
    function d(a, f) {
      p("--");
      p(b);
      p('\r\nContent-Disposition: form-data; name="');
      p(a);
      p('"');
      f.filename &&
        (p(';filename="'), p(c ? g(f.filename) : f.filename), p('"'));
      p("\r\n");
      f.type && (p("Content-Type: "), p(f.type), p("\r\n"));
      p("\r\n");
      f.value ? p(f.value) : p(c ? g("" + f) : f);
      p("\r\n");
    }
    var e, p, n, x;
    if (f.tE) {
      e = new FormData();
      if (a instanceof Array)
        for (n = 0, x = a.length; n < x; ++n) e.append(a[n][0], a[n][1]);
      else for (n in a) e.append(n, a[n]);
      return e;
    }
    var C = f.oM && !f.mM;
    C
      ? ((e = window.Kj("blobbuilder")),
        (p = function (a) {
          e.append(a);
        }))
      : ((e = []),
        (p = function (a) {
          e.push(a);
        }));
    if (a instanceof Array)
      for (n = 0, x = a.length; n < x; ++n) d(a[n][0], a[n][1]);
    else for (n in a) d(n, a[n]);
    p("--");
    p(b);
    p("--\r\n");
    return C ? e.Vea() : e.join("");
  }
  function a(a) {
    var b = {};
    if (!a) return b;
    for (var b = a.split("\n"), c = b.length - 1; 0 <= c; --c)
      (a = b[c].split(":")),
        2 === a.length &&
          (b[a[0].toLowerCase().replace(/^\s+|\s+$/g, "")] = a[1].replace(
            /^\s+|\s+$/g,
            ""
          ));
    return b;
  }
  function g(a) {
    for (
      var b = [], c = String.fromCharCode, d, f = 0, e = a.length;
      f < e;
      ++f
    )
      if (((d = a.charCodeAt(f)), 128 > d)) b.push(c(d));
      else if (2047 > d)
        b.push(c(192 | ((d >> 6) & 31))), b.push(c(128 | (d & 63)));
      else if (65535 > d)
        b.push(c(224 | ((d >> 12) & 15))),
          b.push(c(128 | ((d >> 6) & 63))),
          b.push(c(128 | (d & 63)));
      else if (2097151 > d)
        b.push(c(240 | ((d >> 18) & 7))),
          b.push(c(128 | ((d >> 12) & 63))),
          b.push(c(128 | ((d >> 6) & 63))),
          b.push(c(128 | (d & 63)));
      else throw Error("Invalid character");
    return b.join("");
  }
  var d = window.J,
    f = d.Qa,
    c = { Za: 200 },
    z = [];
  d.ba.du = {
    get: function (a, b, c) {
      var d = e(),
        g = k(d);
      if (!d) return window.console.log("cannot send http request!"), null;
      b = h(b);
      d.open("GET", b ? [a, b].join(-1 === a.indexOf("?") ? "?" : "&") : a, !0);
      if (!f.e4 && !f.vM) {
        d.upload &&
          (d.upload.onprogress = function (a) {
            v(c, a, !0);
          });
        try {
          d.onprogress = function (a) {
            v(c, a);
          };
        } catch (p) {}
      }
      d.onreadystatechange = function () {
        4 === d.readyState &&
          (g && (clearTimeout(g.timeout), (g = g.kr = null)),
          r(d, c),
          d.abort(),
          z.push(d));
      };
      try {
        d.send();
      } catch (n) {
        return !1;
      }
      return g;
    },
    MM: function (a, c, d, g) {
      var w = e(),
        p = k(w);
      w.open("post", a, !0);
      if (d) {
        if (!f.tE) {
          var n = [
            "AJAX----",
            Math.round(1e6 * Math.random()),
            Math.round(1e6 * Math.random()),
          ].join("");
          w.setRequestHeader(
            "Content-Type",
            "multipart/form-data; boundary=" + n
          );
        }
        c = b(c, n, w.J && d);
      } else
        w.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
          (c = h(c));
      if (!f.e4 && !f.vM) {
        w.upload &&
          (w.upload.onprogress = function (a) {
            l(p);
            v(g, a, !0);
          });
        try {
          w.onprogress = function (a) {
            l(p);
            v(g, a);
          };
        } catch (x) {}
      }
      w.onreadystatechange = function () {
        switch (w.readyState) {
          case 3:
            l(p);
            break;
          case 4:
            p && (clearTimeout(p.timeout), (p = p.kr = null)),
              r(w, g),
              w.abort(),
              z.push(w);
        }
      };
      try {
        w.J && d && !f.tE
          ? (w.setRequestHeader("Content-Length", c.length), w.J(c))
          : w.send(c);
      } catch (C) {
        return alert(C.message), !1;
      }
      return p;
    },
    stop: function (a) {
      a &&
        a.kr &&
        (clearTimeout(a.timeout),
        (a.kr.onreadystatechange = null),
        (a = a.kr) && a.abort());
    },
    json: function (a) {
      return "string" === typeof a
        ? window.JSON.parse(a)
        : window.JSON.stringify(a);
    },
  };
})();
(function () {
  var v = E.va,
    r = v.hb,
    l = v.$a,
    e = v.tb,
    k = v.mm,
    h = E.ma.Kc,
    v = (E.controls.bf = function () {
      this.cE = this.iw = !0;
      this.id = "ctrl-" + Math.floor(1e6 * Math.random());
      this.dg("show", "hide");
    });
  v.prototype.Ha = function () {};
  v.prototype.Gf = function () {
    return this.$;
  };
  v.prototype.Uc = function (b) {
    if (b && this.Ha) {
      if (this.Ba) {
        var a = this.Gf();
        if (a) return e(b, a), this;
      }
      this.Ha(b);
      this.Ba = !0;
      if ((b = this.ht)) {
        for (var a = 0, g = b.length; a < g; a++) this.K(b[a]);
        this.ht = null;
        delete this.ht;
      }
      this.ZD && this.b(this.ZD);
      this.hp && this.Fe(this.hp);
      this.cE || this.h(!1);
    }
    return this;
  };
  v.prototype.aG = function () {
    if (this.Ba) {
      var b = this.Gf();
      b && k(b);
    }
  };
  v.prototype.dg = function (b) {
    var a = this.ke;
    a || (a = this.ke = {});
    if (arguments.length)
      for (var e = 0, d = arguments.length; e < d; e++) a[arguments[e]] = [];
    return this;
  };
  v.prototype.M = function () {
    var b = this.ke,
      a = !0,
      e;
    e = Array.prototype.shift.apply(arguments);
    if (!b || !b[e]) throw Error(["Control hasn't event \"", e, '"'].join(""));
    if ((b = b[e]))
      for (e = b.length - 1; 0 <= e; e--)
        try {
          (a = b[e].apply(this, arguments)), void 0 === a && (a = !0);
        } catch (d) {
          console.log(d);
        }
    return a;
  };
  v.prototype.i = function (b, a) {
    var e = this.ke;
    if (!e || !e[b]) {
      var d = [],
        f;
      for (f in e) d.push(f);
      throw Error(
        [
          "Control hasn't event \"",
          b,
          '" avaliavle events: ',
          d.join(", "),
        ].join("")
      );
    }
    e[b].push(a);
    return this;
  };
  v.prototype.hc = function (b, a) {
    var e = this.ke;
    if (!e || !e[b]) throw Error(["Control hasn't event \"", b, '"'].join(""));
    if ((e = e[b]))
      for (var d = e.length - 1; 0 <= d; d--)
        if (e[d] == a) {
          e.splice(d, 1);
          break;
        }
    return this;
  };
  v.prototype.K = function (b, a) {
    if (void 0 !== b)
      if (this.Ba) r(this.Gf(), b, a);
      else {
        var e = this.ht;
        if (e) {
          for (var d = 0, f = e.length; d < f; d++)
            if (e[d] == b) return a && e.splice(d, 1), this;
          a || (e || (e = this.ht = []), e.push(b));
        } else a || (this.ht = [b]);
      }
    return this;
  };
  v.prototype.b = function (b, a) {
    var e = "string" == typeof b,
      d = this.Ba,
      f = this.Gf(),
      c = this.ZD;
    if (e && void 0 === a)
      return (
        (b = b.replace(/-([a-z])/gi, function (a, b) {
          return b.toUpperCase();
        })),
        "float" == b && (b = "cssFloat"),
        d ? f.style[b] : c[b] ? c[b] : ""
      );
    if (d) l(f, b, a);
    else if ((c || (c = this.ZD = {}), e)) c[b] = a;
    else for (var h in b) c[h] = b[h];
    return this;
  };
  v.prototype.Fe = function (b) {
    var a = this.Gf();
    if (void 0 === b) return this.Ba ? a.title : this.hp;
    this.hp = b;
    this.Ba && (a.title = h(b));
    return this;
  };
  v.prototype.h = function (b) {
    var a = this.Gf(),
      e = this.Ba;
    if (void 0 === b) return e && a ? "none" != a.style.display : !!this.cE;
    this.cE = b;
    this.Ba && l(a, "display", b ? "" : "none");
    this.M(b ? "show" : "hide");
    return this;
  };
  v.prototype.$j = function (b, a) {
    if (void 0 === a) return this["__" + b];
    this["__" + b] = a;
    return this;
  };
  v.prototype.$l = function () {
    if (this.Ba) {
      var b = this.$;
      if (b) return b.offsetHeight;
    }
    return 0;
  };
})();
window.J.ba.nm = {
  m0: "13ef13b2b76dd8:5795gdcfb2fdc1ge85bf768f54773d22fff996e3ge75g5:75",
  qJ: ":e4dd535gf:ddg7361613d6885fc6841ffd:4g:g498g8266dg:eff33886f738c",
  fD: "bfddfd:b:c5b5bdd976fbc::86dec9b:bfbc:685cgc7115389",
  rY: "987264ef98b:159fe89dd9bf986fc97ggcd7:27dg95dd28173b45f48b:d8e397",
  BI: "4234g3e3deb5474fg5c62fbd81f8g64e68c7:b:4379g448d797d8g4fdd54de33",
  Zca: "f113:g215496df3g477f2g1b3bbg2:82",
};
(function () {
  function v() {
    var a = this.wb,
      c,
      d = this.$,
      f;
    m(d);
    if (a)
      for (var e = 0, g = a.length; e < g; e++)
        if ((c = a[e]))
          (f = b("a")),
            (f.Md = c.id),
            h(f, "<div></div>" + n(c.label)),
            A(d, f),
            c.title && (f.title = n(c.title)),
            c.href && (f.href = c.href),
            (f = b("span")),
            h(f, "&nbsp;"),
            p(f, "sep"),
            A(d, f);
  }
  function r() {
    var b = this.$,
      n,
      e,
      x = this.Vd,
      q;
    for (n = a(b); n; )
      "a" == f(n) && ((q = n.Md == x), p(n, "selected", !q), q && (e = n)),
        "span" == f(n) &&
          c(n, "sep") &&
          (p(n, "hidden", !0), p(n, "shift", !0)),
        (n = g(n));
    if (void 0 === x || null === x) (e = a(b)), p(e, "selected");
    e &&
      ((b = d(e)) && "span" == f(b) && c(b, "sep") && p(b, "hidden"),
      (b = g(e)) && "span" == f(b) && c(b, "sep") && p(b, "shift"));
  }
  function l(a) {
    a = a.target;
    var b, c;
    a &&
      "A" == a.nodeName &&
      ((b = z(a).ag),
      (c = a.Md),
      b.Vd != a.Md &&
        b.Yc != a.Md &&
        ((b.Vd = a.Md), r.call(b), b.M("select", c)));
  }
  var e = E.va,
    k = E.ma,
    h = e.Cd,
    b = e.sb,
    a = e.Xb,
    g = e.Ig,
    d = e.Vl,
    f = e.md,
    c = e.wg,
    z = e.Ad,
    A = e.tb,
    m = e.Uj,
    u = E.oc.i,
    q = k.he,
    w = k.lo,
    p = e.hb,
    n = k.Kc,
    x = (E.controls.page.bt = function () {
      this.dg("select");
      x.G.constructor.apply(this, arguments);
    });
  q(x, E.controls.bf);
  x.prototype.Ha = function (a) {
    var c = (this.$ = b("div"));
    c.ag = this;
    p(c, "page-tabs");
    A(a, c);
    u(c, "click", l);
    this.wb && v.call(this);
    r.call(this);
    return this;
  };
  x.prototype.Gf = function () {
    return this.$;
  };
  x.prototype.vc = function (a) {
    this.wb = w(a);
    this.Ba && (v.call(this), r.call(this));
    return this;
  };
  x.prototype.Db = function (a) {
    if (void 0 === a) return this.Vd;
    this.Vd = a;
    this.Ba && r.call(this);
    return this;
  };
})();
(function () {
  function v() {
    var a = this.sf,
      b = this.wb;
    P(a);
    e.call(this, a, b, -1);
  }
  function r(c) {
    var d = this.$,
      f = this.sf,
      n = this.T2;
    ea(d, "expanded", !0);
    this.it = this.hr = !1;
    clearTimeout(this.ML);
    a.call(this, B(f));
    b.call(this, B(f));
    c && n ? n.focus() : n && Y(n, "Event", "blur");
    !0 === this.fr && H(d);
  }
  function l(a) {
    var b = this,
      c = b.$,
      d = b.Jk,
      f = S();
    b.hr = !0;
    ea(c, "expanded");
    f.sf || (b.T2 = f);
    setTimeout(function () {
      d.focus();
      !0 === b.fr && (a = { target: B(T(c)) });
      q(a);
    });
  }
  function e(a, b, c) {
    var d;
    if (b)
      for (var f = 0, n = b.length; f < n; f++)
        if ((d = b[f])) {
          var e = a,
            p = c + 1,
            g = L("div");
          g.Md = "-" !== d ? d.id : "";
          g.UD = p;
          R(e, g);
          "-" !== d &&
            ((d.element = g), Z(g, "mouseover", O), Z(g, "mouseout", I));
          k.call(this, g, d);
        }
  }
  function k(a, b) {
    var c = "-" === b || !0 === b.ji,
      d = a.UD;
    P(a);
    ea(a, "first", 0 !== d);
    ha(a, "display", !1 === b.visible ? "none" : "");
    if (!0 === c) ea(a, "separator");
    else {
      var f, n;
      a.title = b.title || "";
      a.qa = b.Tw || null;
      ea(a, "item");
      ea(a, "checked", !b.checked);
      ea(a, "disabled", !0 !== b.disabled);
      if ((c = b.icon))
        (n = L("span")),
          ea(n, "i"),
          R(a, n),
          (f = L("span")),
          ha(f, {
            backgroundImage: ["url(", c[0], ")"].join(""),
            backgroundPosition: [c[1], c[2]].join(" "),
          }),
          R(n, f),
          ea(a, "iconed");
      c = L("span");
      ea(c, "bullet");
      D(c, "&nbsp");
      R(a, c);
      c = L("span");
      ea(c, "key");
      D(c, b.key || "");
      R(a, c);
      b.items &&
        b.items.length &&
        ((c = L("span")),
        ea(c, "box"),
        R(a, c),
        (f = L("span")),
        ea(f, "right"),
        D(f, "&nbsp"),
        R(a, f),
        (f = L("span")),
        ha(f, "zIndex", da++),
        ea(f, "children"),
        R(c, f),
        ea(a, "parent"),
        e.call(this, f, b.items, d));
      d = L("span");
      ea(d, "label");
      ea(d, "long", !b.key);
      D(d, ga(b.label));
      R(a, d);
    }
  }
  function h(a) {
    var b = z(a);
    if (b) {
      ha(b, "display", "block");
      ha(b, "zIndex", da + 1);
      var c = Math.max(b.offsetHeight, b.scrollHeight),
        d = b.offsetWidth,
        f;
      g(a);
      f = U(b);
      a = f[1] + c;
      f[1] + c > window.innerHeight - 20
        ? ((f = -(a - window.innerHeight + 20)),
          ha(b, "top", f + "px"),
          (f = U(b)),
          0 > f[1] &&
            ((f = -(a - window.innerHeight + 20) - f[1]),
            ha(b, "top", f + "px")),
          c > window.innerHeight &&
            (ea(b, "scrolling"),
            ha(b, "max-height", window.innerHeight - 20 + "px")))
        : aa(b, "scrolling") && ha(b, "max-height", "initial");
      f = U(b);
      a = f[0] + d;
      f[0] + d > window.innerWidth - 20 &&
        ha(b, "left", -(a - window.innerWidth + 20) + "px");
    }
  }
  function b(a) {
    if (a)
      for (a = K(a), a = B(a); a; ) {
        var c = z(a);
        c &&
          (ha(c, "display", "none"),
          ha(c, "top", ""),
          ha(c, "left", ""),
          b.call(self, B(c)));
        a = Q(a);
      }
  }
  function a(a) {
    if (a)
      for (var b = K(a), b = B(b); b; )
        ea(b, "selected", !0), b.Md !== a.Md && g(b), (b = Q(b));
  }
  function g(a) {
    if (a) for (a = z(a), a = B(a); a; ) ea(a, "selected", !0), (a = Q(a));
  }
  function d(b) {
    if (b) {
      a(b);
      ea(b, "selected");
      var c = b.parentNode;
      aa(c, "scrolling") &&
        (b.offsetTop + b.clientHeight > c.clientHeight + c.scrollTop &&
          b.scrollIntoView(!1),
        b.offsetTop < c.scrollTop && b.scrollIntoView(!1));
      (b = A(b)) && d(b);
    }
  }
  function f(a) {
    var c = this,
      f = a.UD;
    d.call(c, a);
    clearTimeout(c.ML);
    0 == f
      ? (b.call(c, a), h.call(c, a))
      : (c.ML = setTimeout(
          function (a) {
            d.call(c, a);
            b.call(c, a);
            h.call(c, a);
          },
          200,
          a
        ));
    c.Vd = a;
  }
  function c(a) {
    for (; a; ) {
      if ("div" == fa(a) && aa(a, "item")) return a;
      a = K(a);
    }
    return null;
  }
  function z(a) {
    if (a)
      for (a = B(a); a; ) {
        if ("span" == fa(a) && aa(a, "box")) return B(a);
        a = Q(a);
      }
    return null;
  }
  function A(a) {
    return a && (a = K(a)) && (a = K(a)) && (a = K(a)) && aa(a, "item")
      ? a
      : null;
  }
  function m(a) {
    return u(this.wb, a);
  }
  function u(a, b) {
    var c;
    if (a && a.length)
      for (var d = 0, f = a.length; d < f; d++)
        if ((c = a[d])) {
          if (c.id == b) return c;
          if (c.items && (c = u(c.items, b))) return c;
        }
    return null;
  }
  function q(a) {
    var b = a.target;
    a = ba(b);
    b = c(b);
    (a.hr || a.fr) && b && f.call(a, b);
  }
  function w(a) {
    var b = a.target,
      d = ba(b),
      f = d.Jk;
    if (aa(d.$, "disabled") || 0 !== a.button) return !1;
    if (d)
      if (((d.it = !1), d.hr)) {
        if ((a = d.Vd ? c(d.Vd) : c(b))) {
          if (z(a) || aa(a, "disabled")) {
            f.focus();
            return;
          }
          var n = a.Md;
          a.qa
            ? d.M("select", n, m.call(d, n))
            : setTimeout(function () {
                d.M("select", n, m.call(d, n));
              }, 0);
        }
        r.call(d, !0);
      } else l.call(d, a);
  }
  function p(a) {
    var b = a.target,
      d = ba(b);
    if (aa(d.$, "disabled") || 0 !== a.button) return !1;
    d.hr && (d.it = !0);
    ca = {};
    ca.x = M.yp;
    ca.y = M.zp;
    ca.F3 = d;
    ca.a4 = c(b);
    Z(G.document, "mouseup", n);
  }
  function n(a) {
    W(G.document, "mouseup", n);
    var b = ca.F3;
    b.it = null;
    delete b.it;
    ca.a4 != c(a.target) &&
      setTimeout(function () {
        r.call(b);
      }, 100);
    ca = null;
  }
  function x() {
    var a = ba(this);
    a.it || r.call(a);
  }
  function C(a) {
    var c = ba(this),
      d = c.Vd,
      n = c.hr,
      e = d.Md;
    a = a.keyCode;
    var p, g;
    if (d && n) {
      if (27 == a) return r.call(c), !1;
      if (93 == a) return r.call(c, !0), !1;
      if (13 == a) {
        if (z(d) || aa(d, "disabled")) return !1;
        setTimeout(function () {
          c.M("select", e, m.call(c, e));
        }, 0);
        r.call(c, !0);
        return !1;
      }
      g = d.UD;
      if ((40 == a && 0 < g) || (39 == a && 0 == g))
        for (; (d = Q(d)); ) if (aa(d, "item")) return f.call(c, d), !1;
      if ((38 == a && 0 < g) || (37 == a && 0 == g))
        for (; (d = N(d)); ) if (aa(d, "item")) return f.call(c, d), !1;
      if ((40 == a && 0 == g) || (39 == a && 0 < g))
        if ((p = z(d))) if ((h.call(c, d), (d = B(p)))) return f.call(c, d), !1;
      if (37 == a && 0 < g && (d = A(d)))
        return f.call(c, d), 1 < g && b.call(c, d), !1;
    }
    return !n;
  }
  function O() {
    for (var a = K(this); a && !aa(a, "page-menu"); )
      a.title && ((a.hp = a.title), (a.title = "")), (a = K(a));
  }
  function I() {
    for (var a = K(this); a && !aa(a, "page-menu"); )
      a.hp && ((a.title = a.hp), (a.hp = null)), (a = K(a));
  }
  var G = E.va,
    F = E.ma,
    y = E.oc,
    M = E.Qa,
    D = G.Cd,
    L = G.sb,
    B = G.Xb,
    Q = G.Ig,
    N = G.Vl,
    K = G.Ad,
    P = G.Uj,
    T = G.lh,
    R = G.tb,
    H = G.mm,
    S = G.Wf,
    Z = y.i,
    W = y.hc,
    Y = y.vx,
    y = F.he,
    V = F.lo,
    ea = G.hb,
    ha = G.$a,
    fa = G.md,
    aa = G.wg,
    X = G.gq,
    ga = F.Kc,
    U = F.Vh,
    ba = F.ve,
    da = 1e4,
    ca,
    ka = (E.controls.page.Eq = function (a) {
      this.bh = V(a) || {};
      this.dg("select");
      ka.G.constructor.apply(this, arguments);
    });
  y(ka, E.controls.bf);
  ka.prototype.Ha = function (a) {
    var b = (this.$ = L("div")),
      c = (this.Jk = L("input")),
      d = (this.sf = L("div"));
    b.ag = this;
    ea(b, "page-menu");
    ea(b, "context", !0 !== this.fr);
    R(a, b);
    c.type = "checkbox";
    c.sf = this;
    Z(c, "keydown", C);
    Z(c, "blur", x);
    R(b, c);
    ea(d, "menu");
    R(b, d);
    Z(b, "mouseover", q);
    Z(b, "mousedown", p);
    Z(b, "click", w);
    ea(this.$, "disabled", !this.Yc);
    this.wb && v.call(this);
    return this;
  };
  ka.prototype.Gf = function () {
    return this.$;
  };
  ka.prototype.vc = function (a) {
    a = V(a);
    var b;
    !0 === this.fr
      ? ((b = {}),
        (b.items = a),
        (b.id = "context"),
        (b.label = "&nbsp"),
        (this.wb = [b]))
      : (this.wb = a);
    this.Ba && v.call(this);
    return this;
  };
  ka.prototype.ja = function (a) {
    var b = a.id;
    if (!b) return this;
    if ((b = u(this.wb, b)))
      void 0 !== a.label && (b.label = a.label),
        void 0 !== a.checked && (b.checked = a.checked),
        void 0 !== a.disabled && (b.disabled = a.disabled),
        void 0 !== a.icon && (b.icon = a.icon),
        void 0 !== a.key && (b.key = a.key),
        void 0 !== a.items && (b.items = a.items),
        void 0 !== a.Tw && (b.Tw = a.Tw),
        void 0 !== a.visible && (b.visible = a.visible),
        b.element && k.call(this, b.element, b);
    return this;
  };
  ka.prototype.Xa = function (a, b) {
    var c = u(this.wb, a);
    if (c) {
      if (void 0 === b) return c.visible;
      c.visible = b;
      if ((c = c.element)) c.style.display = b ? "" : "none";
    }
    return this;
  };
  ka.prototype.jh = function (a, b) {
    var c = u(this.wb, a);
    c &&
      void 0 !== b &&
      ((c.checked = b), (c = c.element) && ea(c, "checked", !b));
  };
  ka.prototype.Yh = function (a, b) {
    var c = u(this.wb, a);
    if (c) {
      if (void 0 === b) return c.label;
      c.label = b;
      var d = c.element;
      d && D(T(d), ga(c.label));
    }
    return this;
  };
  ka.prototype.Vi = function (a, b) {
    var c = u(this.wb, a);
    if (c) {
      if (void 0 === b) return c.key;
      c.key = b;
      var d = c.element;
      d && D(X(d, "span", "key")[0], ga(c.key));
    }
    return this;
  };
  ka.prototype.g = function (a) {
    if (void 0 === a) return !!this.Yc;
    this.Yc = a;
    this.Ba && ea(this.$, "disabled", !this.Yc);
    return this;
  };
  ka.prototype.na = function (a) {
    this.hr || (!0 === this.fr && l.call(this, a));
    return this;
  };
  var oa = (E.controls.page.Wj = function () {
    oa.G.constructor.apply(this, arguments);
    this.fr = !0;
  });
  y(oa, ka);
})();
(function () {
  function v() {
    var a = this.$;
    this.RD ? c(a, "mouseup", r) : z(a, "mouseup", r);
  }
  function r(a) {
    if (2 == a.button) {
      a.preventDefault();
      a.stopPropagation();
      var b = A(this),
        c = b.RD;
      b.M("contextmenu", a);
      c.b({ left: a.clientX - 10 + "px", top: a.clientY - 10 + "px" });
      c.Uc(l.body);
      c.na(a);
    }
  }
  var l = E.va,
    e = E.ma,
    k = E.oc,
    h = l.sb,
    b = l.tb,
    a = l.mm,
    g = l.Xb,
    d = l.hb,
    f = l.Cd,
    c = k.i,
    z = k.hc,
    k = e.he,
    A = e.ve,
    m = (E.controls.page.ge = function () {
      this.dg("contextmenu");
      m.G.constructor.apply(this, arguments);
    });
  k(m, E.controls.bf);
  m.prototype.Ha = function (a) {
    var c = (this.$ = h("div"));
    c.ag = this;
    d(c, "page-block");
    b(a, c);
    if ((a = this.Hn))
      for (var c = 0, e = a.length; c < e; c++) a[c] && a[c].Uc(this.$);
    v.call(this);
    this.e3 && ((a = this.$), (c = this.e3) && f(a, c));
    return this;
  };
  m.prototype.Gf = function () {
    return this.$;
  };
  m.prototype.c = function (a) {
    if (!this.Ba) return this.Hn || (this.Hn = []), this.Hn.push(a), this;
    a.Uc(this.$);
    return this;
  };
  m.prototype.Oa = function () {
    var b = this.Hn,
      c;
    if (b)
      for (var d = 0, f = b.length; d < f; d++)
        if ((c = b[d])) c.aG(), (b[d] = null);
    this.Hn = null;
    if (this.Ba) for (b = this.$; g(b); ) a(g(b));
    return this;
  };
  m.prototype.Wj = function (a) {
    if (void 0 === a) return this.RD;
    this.RD = a;
    this.Ba && v.call(this);
    return this;
  };
})();
(function () {
  function v(a) {
    var b = this,
      e = b.Ed,
      g,
      m = (b.$ = L("div"));
    g = b.Jk = L("input");
    var B = (b.th = L("table")),
      K;
    m.ag = b;
    fa(m, "page-table");
    Y(m, "scroll", n);
    H(a, m);
    g.type = "checkbox";
    Y(g, "keydown", O);
    Y(g, "blur", C);
    Y(g, "focus", x);
    Y(g, "contextmenu", I);
    H(m, g);
    B.cellPadding = "0";
    B.cellSpacing = "0";
    H(m, B);
    Y(B, "mousedown", d);
    Y(B, "click", f);
    Y(B, "dblclick", c);
    Y(B, "dragstart", A);
    Y(B, "mouseup", z);
    if (e) {
      g = L("thead");
      H(B, g);
      a = L("tr");
      H(g, a);
      for (var y = 0, R = e.length; y < R; y++)
        if ((g = e[y]))
          (K = L("th")),
            D(
              K,
              [
                '<div class="container"><span class="content">',
                ga(g.content || ""),
                '</span><span class="order">&nbsp;</span></div> ',
              ].join("")
            ),
            H(a, K),
            g.title && (K.title = ""),
            g.align && aa(K, "textAlign", g.align),
            g.width && aa(K, "width", g.width),
            !1 === g.visible && aa(K, "display", "none");
      a = L("tbody");
      H(B, a);
    }
    a = b.Tv = L("div");
    fa(a, "header");
    H(m, a);
    B = L("table");
    B.cellPadding = "0";
    B.cellSpacing = "0";
    H(a, B);
    g = L("thead");
    H(B, g);
    a = L("tbody");
    H(B, a);
    a = L("tr");
    H(g, a);
    b.kt &&
      (Y(a, "dragover", u),
      Y(a, "dragenter", q),
      Y(a, "dragleave", w),
      Y(a, "drop", p));
    m = 0;
    for (B = e.length; m < B; m++)
      if ((g = e[m]))
        (K = L("th")),
          D(
            K,
            [
              '<div class="container"><span class="content">',
              ga(g.content || ""),
              '</span><span class="order">&nbsp;</span></div> ',
            ].join("")
          ),
          H(a, K),
          g.title && (K.title = ""),
          g.align && aa(K, "textAlign", g.align),
          g.width && aa(K, "width", g.width),
          !1 === g.visible && aa(K, "display", "none");
    Y(G.window, "resize", function () {
      h.call(b);
    });
  }
  function r() {
    var a = this.wb,
      b;
    b = K(this.th);
    S(b);
    if (a)
      for (var c = 0, d = a.length; c < d; c++) (b = a[c]) && k.call(this, b);
  }
  function l(a) {
    var b = this.$,
      c = this.th,
      d = K(c),
      f = B(c),
      c = this.Vd,
      n;
    f && fa(B(f), "pre-sel", !0);
    if (d)
      for (d = 0 < a ? K(d) : B(d); d; ) {
        if (d.Md == c)
          if (1 == a) {
            for (f = Q(d); f && ("none" == f.style.display || !1 === f.nk); )
              f = Q(f);
            f &&
              (fa(d, "sel", !0), fa(f, "sel"), (n = f), (c = this.Vd = f.Md));
          } else if (-1 == a) {
            for (f = N(d); f && ("none" == f.style.display || !1 === f.nk); )
              f = N(f);
            f &&
              (fa(d, "sel", !0), fa(f, "sel"), (n = f), (c = this.Vd = f.Md));
          } else (n = d), fa(d, "sel");
        else fa(d, "sel", !0);
        fa(d, "pre-sel", !0);
        d = 0 < a ? N(d) : Q(d);
      }
    n &&
      (n.offsetTop + n.offsetHeight > b.scrollTop + b.offsetHeight &&
        n.scrollIntoView(!1),
      n.offsetTop < b.scrollTop + 23 &&
        (b.scrollTop = Math.max(n.offsetTop - 23, 0)));
  }
  function e(a, b) {
    var c = this.Ed[a],
      d = this.th,
      f = this.Tv,
      e,
      g,
      p,
      x;
    c && (c.visible = b);
    if (d) {
      g = 0;
      if ((c = B(d)))
        if ((c = B(c)))
          if ((c = c.cells))
            for (p = 0, x = c.length; p < x; p++)
              if ((e = c[p])) p == a && aa(e, "display", b ? "" : "none"), g++;
      if ((c = B(B(f))))
        if ((c = B(c)))
          if ((c = c.cells))
            for (p = 0, x = c.length; p < x; p++)
              (e = c[p]) && p == a && aa(e, "display", b ? "" : "none");
      if ((c = K(d)))
        if ((d = c.rows))
          for (f = 0, g = d.length; f < g; f++)
            if ((c = d[f]))
              if ((c = c.cells)) {
                p = 0;
                x = c.length;
                for (var q = 0; p < x; p++)
                  if ((e = c[p]))
                    q == a && aa(e, "display", b ? "" : "none"),
                      (e = parseInt(e.colSpan, 10)),
                      1 < e && (q += e - 1),
                      q++;
              }
    }
    h.call(this);
    n.call(this.$);
  }
  function k(a, b) {
    var c = this.Ed,
      d,
      f = K(this.th),
      n = L("tr"),
      e,
      g,
      x,
      h;
    n.Md = a.id;
    n.draggable = !1 === a.draggable ? !1 : !0;
    Y(n, "dragstart", m);
    this.kt &&
      (Y(n, "dragover", u),
      Y(n, "dragenter", q),
      Y(n, "dragleave", w),
      Y(n, "drop", p));
    void 0 !== a.visible && aa(n, "display", a.visible ? "" : "none");
    void 0 !== a.nk && (n.nk = a.nk);
    a.title && (n.title = a.title);
    a.className && fa(n, a.className);
    a.backgroundColor && aa(n, "background", a.backgroundColor);
    if ((g = a.cells))
      for (var C = 0, y = g.length; C < y; C++)
        if ((x = g[C])) {
          e = L("td");
          h = [];
          h.push('<div class="container">');
          h.push('<span class="content">', x.content, "</span>");
          if ((d = c[C]))
            d.id && (e.Md = d.id),
              d.align && aa(e, "textAlign", d.align),
              !1 === d.visible && aa(e, "display", "none"),
              d.close &&
                x.zl &&
                h.push(
                  '<span title="',
                  x.zl,
                  '" class="close"><span class="x"></span>'
                );
          h.push("</div>");
          D(e, h.join(""));
          e.uh = x.uh;
          x.className && fa(e, x.className);
          x.align && (e.style.textAlign = x.align);
          x.title && (e.title = x.title);
          x.colSpan && (e.colSpan = x.colSpan);
          x.rowSpan && (e.rowSpan = x.rowSpan);
          !1 === x.visible && aa(e, "display", "none");
          H(n, e);
        }
    H(f, n, -1 === b ? K(f) || null : (b && B(f)) || null);
  }
  function h() {
    if (this.Ba) {
      var a = this.th,
        b = this.Tv,
        c = this.Ed,
        d = B(B(a)),
        f = B(B(B(b))),
        n,
        e = this.Gi;
      if (d && f) {
        d = d.cells || [];
        f = f.cells || [];
        aa(b, "width", a.offsetWidth + "px");
        for (var g = 0, p = d.length; g < p; g++)
          (b = d[g]),
            (n = f[g]),
            (a = c[g]),
            n &&
              (e
                ? aa(n, "width", a.width || "")
                : b && aa(n, "width", b.offsetWidth - Number(0 < g) + "px"));
      }
    }
  }
  function b(a) {
    var b = K(this.th),
      c;
    if (b) for (c = B(b); c && c.Md != a; ) c = Q(c);
    return c;
  }
  function a(a) {
    for (; a; ) {
      if ("tr" == P(a)) return a;
      a = R(a);
    }
    return null;
  }
  function g(a) {
    for (; a; ) {
      if ("span" == P(a) && T(a, "close")) return a;
      a = R(a);
    }
    return null;
  }
  function d(b) {
    var c = b.button,
      d = X(this),
      f = d.Jk,
      n = !1;
    f.blur();
    f.focus();
    var e = a(b.target).Md;
    (0 < c || g(b.target)) && b && b.preventDefault && b.preventDefault();
    void 0 !== e && ((d.Vd = e), l.call(d), (n = !1 === d.M("select", e)));
    if (!n && 0 == c) {
      d.bp = !0;
      var p;
      Y(
        window,
        "mouseup",
        (p = function () {
          V(window, "mouseup", p);
          f.focus();
          d.bp = !1;
        })
      );
    }
  }
  function f(b) {
    var c = b.target;
    if (g(c))
      return (b = X(this)), (c = a(c).Md), void 0 !== c && b.M("close", c), !1;
  }
  function c(b) {
    var c = b.target;
    if (c && !g(c)) {
      b = a(c);
      a: {
        for (; c; ) {
          if ("td" == P(c)) break a;
          c = R(c);
        }
        c = null;
      }
      var d = b.Md;
      void 0 !== d && (b = X(b)) && b.M("doubleclick", d, c && c.Md);
    }
  }
  function z() {
    X(this).cp = !0;
  }
  function A(a) {
    var b = X(this),
      c = a.target,
      d = b.Jk,
      f;
    Y(
      c,
      "dragend",
      (f = function () {
        d.focus();
        b.bp = !1;
        V(c, "dragend", f);
      })
    );
  }
  function m(a) {
    var b,
      c = X(this);
    a = a.dataTransfer;
    b = c.Se;
    if (M.wf || M.gh) {
      c = {};
      c["mt/tr-" + b] = this.rowIndex - 1;
      for (b = B(this); b; )
        b.Md && (c["mt/" + b.Md] = b.uh || b.textContent.trim()), (b = Q(b));
      a.setData("Text", JSON.stringify(c));
    } else
      for (a.setData("mt/tr-" + b, this.rowIndex - 1), b = B(this); b; )
        b.Md && a.setData("mt/" + b.Md, b.uh || b.textContent.trim()),
          (b = Q(b));
  }
  function u(a) {
    a && a.preventDefault && a.preventDefault();
    a = a.dataTransfer;
    if (!1 === this.draggable) return (a.dropEffect = "none"), !1;
    var b = X(this),
      b = M.wf || M.gh ? "Text" : "mt/tr-" + b.Se,
      c = a.types,
      d;
    if (c)
      for (var f = 0, n = c.length; f < n; f++)
        if (((d = c[f]), d == b))
          return (a.dropEffect = "move"), fa(this, "dragenter"), !1;
    a.dropEffect = "none";
    return !1;
  }
  function q(a) {
    var b = X(this),
      b = M.wf || M.gh ? "Text" : "mt/tr-" + b.Se;
    a = a.dataTransfer.types;
    var c;
    if (a)
      for (var d = 0, f = a.length; d < f; d++)
        if (((c = a[d]), c == b)) {
          fa(this, "dragenter");
          break;
        }
  }
  function w() {
    fa(this, "dragenter", !0);
  }
  function p(a) {
    a.stopPropagation && a.stopPropagation();
    var b = X(this),
      c = "th" == P(B(this)),
      d = a.dataTransfer;
    if (!c && !1 === this.draggable) return !1;
    var f = b.Tv;
    a = K(b.th);
    for (var n = Q(this), e = B(a); e; ) fa(e, "dragenter", !0), (e = Q(e));
    e = B(B(B(f)));
    fa(e, "dragenter", !0);
    f = this.rowIndex;
    if (M.wf || M.gh) {
      d = d.getData("Text");
      if (!d) return !1;
      d = JSON.parse(d);
      if (!d) return !1;
      d = parseInt(d["mt/tr-" + b.Se], 10);
      if (isNaN(d)) return !1;
    } else d = parseInt(d.getData("mt/tr-" + b.Se), 10);
    H(a, a.childNodes[d], c ? B(a) : n);
    b.M("move", d, f);
    return !1;
  }
  function n() {
    var a = X(this);
    if (a) {
      var b = this.scrollTop,
        c = a.Tv,
        d = a.Jk;
      a.M("scroll", b);
      aa(c, "top", b + "px");
      M.Ok && aa(d, "top", b + "px");
    }
  }
  function x() {
    var a = X(this);
    a.K("focused");
    clearTimeout(a.Kb);
  }
  function C() {
    var a = X(this),
      b = a.qt,
      c = a.cp,
      d = !1;
    if (a.bp) return !0;
    a.K("focused", !0);
    clearTimeout(a.Kb);
    c &&
      ((d = !0),
      (a.Kb = setTimeout(function () {
        var c = W();
        ("input" == P(c) && "checkbox" == c.type && c.sf) ||
          !0 === b ||
          ((a.Vd = null), l.call(a), a.M("select", null));
      }, 0)));
    a.cp = null;
    delete a.cp;
    d || !0 === b || ((a.Vd = null), l.call(a), a.M("select", null));
  }
  function O(a) {
    var b = X(this),
      c = a.keyCode;
    if (40 == c) return l.call(b, 1), b.M("select", b.Vd), !1;
    if (38 == c) return l.call(b, -1), b.M("select", b.Vd), !1;
    b.M("keydown", a);
  }
  function I(a) {
    setTimeout(function () {
      ea(a.target, "MouseEvent", "mouseup", a);
    }, 0);
  }
  var G = E.va,
    F = E.ma,
    y = E.oc,
    M = E.Qa,
    D = G.Cd,
    L = G.sb,
    B = G.Xb,
    Q = G.Ig,
    N = G.Vl,
    K = G.lh,
    P = G.md,
    T = G.wg,
    R = G.Ad,
    H = G.tb,
    S = G.Uj,
    Z = G.mm,
    W = G.Wf,
    Y = y.i,
    V = y.hc,
    ea = y.vx,
    y = F.he,
    ha = F.lo,
    fa = G.hb,
    aa = G.$a,
    X = F.ve,
    ga = F.Kc,
    U = (E.controls.page.Yo = function (a) {
      this.Ed = ha((a && a.ej) || []) || [];
      this.kt = (a && a.Dw) || !1;
      this.cw = this.Kn = !0;
      this.wb = [];
      this.Se = Math.floor(1e3 * Math.random());
      this.dg("select", "keydown", "move", "close", "scroll", "doubleclick");
      U.G.constructor.apply(this, arguments);
      return this;
    });
  y(U, E.controls.bf);
  U.prototype.Ha = function (a) {
    v.call(this, a);
    r.call(this);
    l.call(this);
    fa(this.$, "grid", !this.Kn);
    fa(this.$, "fixed", !this.Gi);
    fa(this.$, "odd", !this.cw);
    h.call(this);
    return this;
  };
  U.prototype.Gf = function () {
    return this.$;
  };
  U.prototype.vc = function (a) {
    this.wb = ha(a);
    this.Ba && (r.call(this), l.call(this), h.call(this));
    return this;
  };
  U.prototype.iq = function () {
    return this.wb;
  };
  U.prototype.Db = function (a) {
    if (void 0 === a) return this.Vd;
    this.Vd = a;
    this.Ba && l.call(this);
    return this;
  };
  U.prototype.Ek = function () {
    return this;
  };
  U.prototype.ig = function () {
    return this;
  };
  U.prototype.Og = function (a) {
    e.call(this, a, !0);
    return this;
  };
  U.prototype.Jg = function (a) {
    e.call(this, a, !1);
    return this;
  };
  U.prototype.Zg = function (a) {
    var c = a.id,
      d = b.call(this, c);
    a: {
      for (var f = this.wb, n, e = 0, g = f.length; e < g; e++)
        if ((n = f[e]) && n.id == c) {
          c = n;
          break a;
        }
      c = null;
    }
    if (d && c) {
      for (var p in a) a.hasOwnProperty(p) && (c[p] = a[p]);
      void 0 !== a.nk && (d.nk = a.nk);
      a.className && fa(d, a.className);
      a.$L && fa(d, a.$L, !0);
      void 0 !== a.visible && aa(d, "display", a.visible ? "" : "none");
      a.title && (d.title = a.title);
      a.backgroundColor && aa(d, "background", a.backgroundColor);
      d = d.cells;
      p = a.cells;
      f = 0;
      for (n = p.length; f < n; f++)
        (c = p[f]),
          (a = d[f]),
          c &&
            a &&
            ((a.uh = c.uh),
            D(B(B(a)), c.content),
            (a.className = c.className),
            c.title && (a.title = c.title));
    }
    return this;
  };
  U.prototype.ex = function (a, b) {
    var c = this.wb,
      d = this.Ba;
    c || ((this.wb = [a]), d && r.call(this));
    b
      ? -1 === b
        ? c.splice(c.length - 1, 0, a)
        : c.splice(0, 0, a)
      : c.push(a);
    d && k.call(this, a, -1 === b ? -1 : !!b);
    h.call(this);
    return this;
  };
  U.prototype.kJ = function (a) {
    for (var c = this.wb, d, f = 0, n = c.length; f < n; f++)
      if ((d = c[f]) && d.id == a) {
        c.splice(f, 1);
        break;
      }
    if ((a = b.call(this, a))) T(a, "sel") && l.call(this, 1), Z(a);
    h.call(this);
    return this;
  };
  U.prototype.rq = function (a) {
    if (void 0 === a) return !!this.Kn;
    this.Kn = !!a;
    this.Ba && fa(this.$, "grid", !this.Kn);
    return this;
  };
  U.prototype.T = function (a) {
    if (void 0 === a) return !!this.Gi;
    this.Gi = !!a;
    this.Ba && fa(this.$, "fixed", !this.Gi);
    return this;
  };
  U.prototype.Iq = function (a) {
    if (void 0 === a) return !!this.cw;
    this.cw = !!a;
    this.Ba && fa(this.$, "odd", !this.cw);
    return this;
  };
  U.prototype.h = function (a) {
    var b = U.G.h.apply(this, arguments);
    a && h.call(this);
    return b;
  };
  U.prototype.Av = function (a) {
    if (void 0 === a) return this.qt;
    this.qt = a;
    return this;
  };
  U.prototype.V_ = function () {
    this.Ba && h.call(this);
  };
  U.prototype.jb = function () {
    var a = this.Jk;
    a && a.focus();
    return this;
  };
})();
(function () {
  function v() {
    var a = this.th,
      b = R.Xb(R.Xb(a)),
      c;
    R.$a(a, "display", "none");
    R.Uj(b);
    var d = this.Ed,
      f;
    if (d) {
      for (var n = !0, e = 0, g = d.length; e < g; e++)
        (f = d[e]) &&
          !1 !== f.visible &&
          ((c = R.sb("th")),
          (c.id = f.id),
          (c.Qm = !1 !== f.Qm),
          (c.resize = !1 !== f.resize),
          (c.index = e),
          f.title && (c.title = ""),
          f.align && R.$a(c, "textAlign", f.align),
          f.width && R.$a(c, "width", f.width),
          f.width || (n = !1),
          R.hb(c, "sortable", !c.Qm),
          R.hb(c, "not-resize", c.resize),
          R.Cd(
            c,
            [
              '<div class="container"><span class="content">',
              H.Kc(f.content || ""),
              '</span><span class="order">&nbsp;</span></div><div class="sizer"><span></span></div>',
            ].join("")
          ),
          R.tb(b, c));
      c && R.hb(c, "last");
      c = R.sb("th");
      R.$a(c, "width", n ? "100%" : "0");
      R.tb(b, c);
    }
    R.$a(a, "display", "");
  }
  function r() {
    var a = this.Ed || [],
      b = R.lh(this.th),
      c = b.rows || [],
      d,
      f = this.gf || 0,
      n = this.wb || [],
      e;
    R.$a(b, "display", "none");
    for (var g = 0, p = c.length; g < p; g++)
      if ((d = c[g])) (e = n[f + g]), l.call(this, d, e, a);
    R.$a(b, "display", "");
  }
  function l(a, b, c) {
    if (a && c) {
      var d = this.Vd;
      if (b) {
        if (!1 !== b.visible) {
          a.id = b.id;
          a.nk = !1 !== b.nk;
          a.className = b.className || "";
          R.hb(a, "sel", a.id != d);
          R.hb(a, "filled");
          a.title = b.title || "";
          R.$a(a, "background", b.backgroundColor || "");
          a.draggable = !1 !== b.draggable;
          S.i(a, "dragstart", y);
          this.kt &&
            (S.i(a, "dragover", M),
            S.i(a, "dragenter", D),
            S.i(a, "dragleave", L),
            S.i(a, "drop", B));
          var d = a.cells,
            f,
            n,
            e,
            g,
            p;
          if (d) {
            for (var x = 0, q = d.length; x < q; x++)
              if ((f = d[x]) && 1 < f.colSpan) {
                e = R.Ig(f);
                var h = 0;
                for (g = f.colSpan - 1; h < g; h++)
                  (n = R.sb("td")),
                    R.Cd(
                      n,
                      '<div class="container"><span class="content"></span></div>'
                    ),
                    R.tb(a, n, e);
                f.colSpan = 1;
              }
            n = {};
            x = 0;
            q = c.length;
            for (h = 0; x < q; x++)
              if (
                !n[x] &&
                ((g = c[x] || {}), !1 !== g.visible) &&
                (f = d[h++]) &&
                (a = b.cells[x]) &&
                ((f.id = g.id),
                (f.className = a.className || ""),
                (f.style.textAlign = a.align || g.align || ""),
                (f.uh = a.uh || ""),
                a.title ? (f.title = a.title) : f.removeAttribute("title"),
                (e = a.content || ""),
                1 === g.Gj && (e = a.kf || ""),
                (p = R.Xb(R.Xb(f))),
                g.close && a.zl
                  ? (g = R.gq(f, "span", "close")[0])
                    ? ((g.title = a.zl),
                      (p = R.Vl(g))
                        ? (p.textContent = e.split("&nbsp;").join(" "))
                        : e &&
                          R.tb(
                            R.Ad(g),
                            R.document.createTextNode(
                              e.split("&nbsp;").join(" ")
                            ),
                            g
                          ))
                    : ((e +=
                        '<span title="' +
                        a.zl +
                        '" class="close"><span class="x"></span>'),
                      R.Cd(p, e))
                  : R.Cd(p, e),
                1 < a.colSpan)
              ) {
                e = 0;
                for (g = a.colSpan; e < g; e++) n[x + e] = !0;
                f.colSpan = a.colSpan;
                p = 1;
                for (e = R.Ig(f); p < a.colSpan && e; )
                  (g = c[x + p]) && !1 !== g.visible ? R.mm(e) : f.colSpan--,
                    p++,
                    (e = R.Ig(f));
              }
          }
        }
      } else
        (a.className = ""),
          R.hb(a, "empty"),
          R.hb(a, "filled", !0),
          S.hc(a, "dragstart", y),
          S.hc(a, "dragover", M),
          S.hc(a, "dragenter", D),
          S.hc(a, "dragleave", L),
          S.hc(a, "drop", B),
          (a.id = ""),
          (a.title = ""),
          (a.draggable = null),
          (a.nk = !0);
    }
  }
  function e() {
    var a = this.q3,
      b = R.lh(this.th),
      c = this.aE,
      d = 1;
    5 < Math.abs(c.scrollWidth - c.offsetWidth) && (d = 2);
    c = a.offsetHeight;
    b = Math.max(0, b.childNodes.length - d);
    d = R.Xb(a);
    R.$a(d, "height", Math.floor((c / b) * this.Y2) + "px");
    a.scrollTop = Math.floor((c / b) * this.gf);
  }
  function k(a, b) {
    var c = this.Ed;
    c && (c = c[a]) && ((c.visible = b), this.Ba && this.W());
  }
  function h() {
    var a = this.th;
    if (a && (a = R.Xb(R.Xb(a)))) {
      R.$a(a, "display", "none");
      for (var b = this.fw, c = R.Xb(a); c; )
        R.hb(c, "sort-up", "-" + c.id != b),
          R.hb(c, "sort-down", c.id != b),
          (c = R.Ig(c));
      R.$a(a, "display", "");
    }
  }
  function b() {
    var a = this.Ed || [],
      b;
    b = R.Xb(R.Xb(this.th));
    for (var c = R.Xb(b); c; )
      (b = a[c.index]) && !b.width && (b.width = c.offsetWidth + "px"),
        (c = R.Ig(c));
  }
  function a(a) {
    var b = this.Vd,
      c = !1,
      d = this.wb,
      f = R.lh(this.th);
    R.$a(f, "display", "none");
    for (var n = R.Xb(f); n; ) {
      if (b && n.id == b)
        if (1 == a) {
          var g = R.Ig(n);
          g &&
            !R.wg(g, "empty") &&
            (g == R.lh(R.Ad(n)) && ((c = !0), this.gf++),
            !1 !== g.nk &&
              (R.hb(g, "sel"),
              R.hb(n, "sel", !0),
              (b = this.Vd = g.id),
              (n = g)));
        } else
          -1 == a
            ? (g = R.Vl(n))
              ? (R.hb(g, "sel"), R.hb(n, "sel", !0), (b = this.Vd = g.id))
              : 0 < this.gf &&
                ((c = !0),
                this.gf--,
                (b = this.Vd = (d[this.gf] && d[this.gf].id) || null))
            : (R.hb(n, "sel"), n == R.lh(f) && ((c = !0), this.gf++));
      else R.hb(n, "sel", !0);
      n = R.Ig(n);
    }
    R.$a(f, "display", "");
    c && (r.call(this), e.call(this));
  }
  function g() {
    var a = this.wb;
    this.b3 && (a = a.filter(this.b3));
    this.Y2 = a.length;
    this.KL = Math.max(0, a.length - this.Mn + 1);
  }
  function d(a) {
    for (; a && !a.ag; ) {
      if ("th" == R.md(a)) return a;
      a = R.Ad(a);
    }
    return null;
  }
  function f(a) {
    for (; a && !a.ag; ) {
      if ("div" == R.md(a) && R.wg(a, "sizer")) return a;
      a = R.Ad(a);
    }
    return null;
  }
  function c(a) {
    for (; a; ) {
      if ("span" == R.md(a) && R.wg(a, "close")) return a;
      a = R.Ad(a);
    }
    return null;
  }
  function z(a) {
    for (; a; ) {
      if ("tr" == R.md(a)) return a;
      a = R.Ad(a);
    }
    return null;
  }
  function A() {
    var a = H.ve(this);
    if (a) {
      var b = a.aE,
        c = R.lh(a.th),
        d = 1;
      5 < Math.abs(b.scrollWidth - b.offsetWidth) && (d = 2);
      b = this.offsetHeight;
      c = Math.max(0, c.childNodes.length - d);
      a.gf = Math.ceil(this.scrollTop / (b / c));
      r.call(a);
      a.M("scroll");
    }
  }
  function m(a) {
    var b = d(a.target);
    if (b) {
      S.i(R.window, "mouseup", u);
      if (b.resize) {
        var c = f(a.target);
        c &&
          ((W.J = c),
          (W.Yb = a.clientX - parseInt(R.Xb(c).style.marginLeft || 0)),
          R.hb(c, "down"),
          R.hb(R.body, "w-resize"),
          R.hb(b, "over", !0),
          S.i(R.window, "mousemove", p));
      }
      b.Qm && (R.hb(b, "down"), (W.qa = b));
    }
  }
  function u() {
    S.hc(R.window, "mouseup", u);
    S.hc(R.window, "mousemove", p);
    R.hb(R.body, "w-resize", !0);
    W.qa && R.hb(W.qa, "down", !0);
    if (W.J) {
      R.hb(W.J, "down", !0);
      var a = d(W.J);
      if (a) {
        var c = H.ve(a);
        if (c) {
          var f = c.Ed;
          f &&
            (f = f[a.index]) &&
            (b.call(c),
            (f.width =
              a.offsetWidth +
              parseInt(R.Xb(W.J).style.marginLeft || 0, 10) +
              "px"),
            v.call(c),
            e.call(c),
            h.call(c),
            c.M("resize"));
        }
      }
    }
    W.qa = null;
    W.J = null;
  }
  function q(a) {
    W.J || ((a = d(a.target)) && a.Qm && R.hb(a, "over"));
  }
  function w(a) {
    W.J || ((a = d(a.target)) && a.Qm && R.hb(a, "over", !0));
  }
  function p(a) {
    var b = W.J;
    if (b) {
      var c = 0,
        f = d(b);
      f && (c = -1 * f.offsetWidth);
      R.$a(R.Xb(b), "margin-left", Math.max(a.clientX - W.Yb, c) + "px");
    }
  }
  function n(a) {
    if (!f(a.target) && (a = d(a.target)) && a.Qm) {
      var b = H.ve(a);
      if (b) {
        var c = b.fw,
          c = c == a.id ? "-" + a.id : a.id;
        b.fw = c;
        h.call(b);
        b.M("sort");
        r.call(b);
      }
    }
  }
  function x(b) {
    var d = H.ve(this);
    if (d) {
      var f = b.button,
        n = d.Jk,
        e = !1;
      n.blur();
      n.focus();
      var g = z(b.target);
      (0 < f || c(b.target)) && b && b.preventDefault && b.preventDefault();
      void 0 !== g.id &&
        ((d.Vd = g.id), a.call(d), (e = !1 === d.M("select", g.id)));
      if (!e && 0 == f) {
        d.bp = !0;
        var p;
        S.i(
          R.window,
          "mouseup",
          (p = function () {
            S.hc(R.window, "mouseup", p);
            n.focus();
            d.bp = !1;
          })
        );
      }
    }
  }
  function C(a) {
    var b = a.target;
    if (b && !c(b)) {
      a = z(b);
      a: {
        for (; b; ) {
          if ("td" == R.md(b)) break a;
          b = R.Ad(b);
        }
        b = null;
      }
      if (void 0 !== a.id) {
        var d = H.ve(a);
        d && d.M("doubleclick", a.id, b.id);
      }
    }
  }
  function O(a) {
    var b = a.target;
    if ((a = c(b))) {
      var d = H.ve(this);
      if (d)
        return (b = z(b)), void 0 !== b.id && d.M("close", b.id, a.title), !1;
    }
  }
  function I() {
    var a = H.ve(this);
    a && (a.cp = !0);
  }
  function G() {
    return !1;
  }
  function F(a) {
    var b = H.ve(this);
    if (b) {
      var c = a.target,
        d = b.Jk,
        f;
      S.i(
        c,
        "dragend",
        (f = function () {
          d.focus();
          b.bp = !1;
          S.hc(c, "dragend", f);
        })
      );
    }
  }
  function y(a) {
    var b,
      c = H.ve(this);
    if (c)
      if (((a = a.dataTransfer), (b = c.Se), Z.wf || Z.gh)) {
        c = {};
        c["mt/tr-" + b] = this.rowIndex - 1;
        for (b = R.Xb(this); b; )
          b.id && (c["mt/" + b.id] = b.uh || b.textContent.trim()),
            (b = R.Ig(b));
        a.setData("Text", JSON.stringify(c));
      } else
        for (a.setData("mt/tr-" + b, this.rowIndex - 1), b = R.Xb(this); b; )
          b.id && a.setData("mt/" + b.id, b.uh || b.textContent.trim()),
            (b = R.Ig(b));
  }
  function M(a) {
    a && a.preventDefault && a.preventDefault();
    a = a.dataTransfer;
    if (!1 === this.draggable) return (a.dropEffect = "none"), !1;
    var b = H.ve(this);
    if (b) {
      var b = Z.wf || Z.gh ? "Text" : "mt/tr-" + b.Se,
        c = a.types,
        d;
      if (c)
        for (var f = 0, n = c.length; f < n; f++)
          if (((d = c[f]), d == b))
            return (a.dropEffect = "move"), R.hb(this, "dragenter"), !1;
      a.dropEffect = "none";
      return !1;
    }
  }
  function D(a) {
    if (!1 === this.draggable) return !1;
    var b = H.ve(this);
    if (!b) return !1;
    b = Z.wf || Z.gh ? "Text" : "mt/tr-" + b.Se;
    a = a.dataTransfer.types;
    var c;
    if (a)
      for (var d = 0, f = a.length; d < f; d++)
        if (((c = a[d]), c == b)) {
          R.hb(this, "dragenter");
          break;
        }
  }
  function L() {
    R.hb(this, "dragenter", !0);
  }
  function B(a) {
    a.stopPropagation && a.stopPropagation();
    var b = H.ve(this);
    if (b) {
      var c = "th" == R.md(R.Xb(this)),
        d = a.dataTransfer;
      if (!c && !1 === this.draggable) return !1;
      var f = b.th;
      a = R.lh(f);
      for (var n = R.Xb(f), f = R.Ig(this), e = R.Xb(a); e; )
        R.hb(e, "dragenter", !0), (e = R.Ig(e));
      e = R.Xb(n);
      R.hb(e, "dragenter", !0);
      n = this.rowIndex;
      if (Z.wf || Z.gh) {
        d = d.getData("Text");
        if (!d) return !1;
        d = JSON.parse(d);
        if (!d) return !1;
        d = parseInt(d["mt/tr-" + b.Se], 10);
        if (isNaN(d)) return !1;
      } else d = parseInt(d.getData("mt/tr-" + b.Se), 10);
      e = a.childNodes[d];
      R.tb(a, e, c ? R.Xb(a) : f);
      d += b.gf;
      n += b.gf;
      if ((c = b.wb))
        if ((e = c[d]))
          n < d
            ? (c.splice(d, 1), c.splice(n, 0, e))
            : (c.splice(d, 1), c.splice(n - 1, 0, e));
      b.M("move", d, n);
      return !1;
    }
  }
  function Q() {
    var a = H.ve(this);
    a && (a.K("focused"), clearTimeout(a.Kb));
  }
  function N() {
    var b = H.ve(this);
    if (b) {
      var c = b.qt,
        d = b.cp,
        f = !1;
      if (b.bp) return !0;
      b.K("focused", !0);
      clearTimeout(b.Kb);
      d &&
        ((f = !0),
        (b.Kb = setTimeout(function () {
          var d = R.Wf();
          ("input" == R.md(d) && "checkbox" == d.type && d.sf) ||
            !0 === c ||
            ((b.Vd = null), a.call(b), b.M("select", null));
        }, 0)));
      b.cp = null;
      delete b.cp;
      f || !0 === c || ((b.Vd = null), a.call(b), b.M("select", null));
    }
  }
  function K(b) {
    var c = H.ve(this);
    if (c) {
      var d = b.keyCode;
      40 == d && (a.call(c, 1), c.M("select", c.Vd));
      38 == d && (a.call(c, -1), c.M("select", c.Vd));
      34 == d && ((c.gf = Math.min(c.KL, c.gf + c.Mn)), r.call(c), e.call(c));
      33 == d && ((c.gf = Math.max(0, c.gf - c.Mn)), r.call(c), e.call(c));
      36 == d && ((c.gf = 0), r.call(c), e.call(c));
      35 == d && ((c.gf = c.KL), r.call(c), e.call(c));
      c.M("keydown", b);
    }
  }
  function P(a) {
    setTimeout(function () {
      S.vx(a.target, "MouseEvent", "mouseup", a);
    }, 0);
  }
  function T() {
    this.Ba && this.W();
  }
  var R = E.va,
    H = E.ma,
    S = E.oc,
    Z = E.Qa,
    W = (E.controls.page.no = function (a) {
      this.Ed = (a && a.ej) || [];
      this.kt = (a && a.Dw) || !1;
      this.wb = [];
      this.Se = Math.floor(1e3 * Math.random());
      this.gf = 0;
      this.dg(
        "select",
        "keydown",
        "move",
        "close",
        "scroll",
        "doubleclick",
        "sort",
        "resize"
      );
      W.G.constructor.apply(this, arguments);
      this.i("show", T);
      return this;
    });
  E.ma.he(W, E.controls.bf);
  W.prototype.Ha = function (a) {
    var b = (this.$ = R.sb("div"));
    b.ag = this;
    R.hb(b, "ext-table");
    R.tb(a, b);
    a = this.Jk = R.sb("input");
    a.type = "checkbox";
    R.hb(a, "fake");
    R.tb(b, a);
    S.i(a, "focus", Q);
    S.i(a, "blur", N);
    S.i(a, "keydown", K);
    S.i(a, "contextmenu", P);
    var c = (this.aE = R.sb("div"));
    R.hb(c, "tables-box");
    R.tb(b, c);
    a = this.th = R.sb("table");
    a.cellPadding = 0;
    a.cellSpacing = 0;
    a.width = "100%";
    R.Cd(a, "<thead><tr></tr></thead><tbody></tbody>");
    R.tb(c, a);
    c = R.Xb(a);
    S.i(c, "mousedown", m);
    S.i(c, "mouseover", q);
    S.i(c, "mouseout", w);
    S.i(c, "click", n);
    c = R.Xb(c);
    c.draggable = !0;
    S.i(c, "dragstart", G);
    this.kt &&
      (S.i(c, "dragover", M),
      S.i(c, "dragenter", D),
      S.i(c, "dragleave", L),
      S.i(c, "drop", B));
    a = R.lh(a);
    S.i(a, "mousedown", x);
    S.i(a, "click", O);
    S.i(a, "dblclick", C);
    S.i(a, "mouseup", I);
    S.i(a, "dragstart", F);
    c = this.q3 = R.sb("div");
    R.hb(c, "scroll");
    R.Cd(c, "<span></span>");
    R.tb(b, c);
    S.i(c, "scroll", A);
    window.RetargetMouseScroll(a, c);
    this.W();
    return this;
  };
  W.prototype.W = function () {
    if (!this.h()) return this;
    v.call(this);
    var a = this.aE;
    if (a) {
      a = Math.ceil((a.offsetHeight - 23) / 23);
      this.Mn = a - 1;
      var b = R.lh(this.th),
        c = this.Ed || [],
        d;
      if (b) {
        R.$a(b, "display", "none");
        R.Uj(b);
        for (var f = "", n = 0, p = c.length; n < p; n++)
          (d = c[n]) &&
            !1 !== d.visible &&
            (f +=
              '<td><div class="container"><span class="content"></span></div></td>');
        f += "<td></td>";
        c = "";
        for (d = 0; d < a; d++) c += "<tr>" + f + "</tr>";
        R.Cd(b, c);
        R.$a(b, "display", "");
      }
    }
    g.call(this);
    r.call(this);
    e.call(this);
    h.call(this);
    return this;
  };
  W.prototype.Gh = function () {
    this.h() && this.Ba && r.call(this);
  };
  W.prototype.vc = function (a) {
    this.wb = a;
    this.Ba && this.W();
    return this;
  };
  W.prototype.iq = function () {
    return this.wb;
  };
  W.prototype.Og = function (a) {
    k.call(this, a, !0);
    return this;
  };
  W.prototype.Jg = function (a) {
    k.call(this, a, !1);
    return this;
  };
  W.prototype.Ek = function (a) {
    if (void 0 === a) return this.fw;
    this.fw = a;
    this.Ba && h.call(this);
    return this;
  };
  W.prototype.jb = function () {
    var a = this.Jk;
    a && a.focus();
    return this;
  };
  W.prototype.Av = function (a) {
    if (void 0 === a) return this.qt;
    this.qt = a;
    return this;
  };
  W.prototype.Db = function (b) {
    if (void 0 === b) return this.Vd;
    this.Vd = b;
    var c = this.wb;
    if (
      c &&
      ((b = c
        .map(function (a) {
          return a.id;
        })
        .indexOf(b)),
      -1 <= b &&
        (b < this.gf || b > this.gf + this.Mn) &&
        ((this.gf = b), this.Ba))
    )
      return r.call(this), e.call(this), this;
    this.Ba && a.call(this);
    return this;
  };
  W.prototype.Zg = function (a, b) {
    if (!a) return this;
    var c = a.id,
      d = this.wb,
      f;
    if (d)
      for (var n = 0, e = d.length; n < e; n++)
        if ((f = d[n]) && f.id == c) {
          for (var g in a) a.hasOwnProperty(g) && (f[g] = a[g]);
          if (!0 === b) break;
          if (!this.h()) break;
          n >= this.gf &&
            n <= this.gf + this.Mn &&
            (c = R.lh(this.th).rows) &&
            (n = c[n - this.gf]) &&
            (c = this.Ed) &&
            l.call(this, n, f, c);
          break;
        }
    return this;
  };
  W.prototype.kJ = function (a, b) {
    var c = this.wb,
      d;
    if (c)
      for (var f = 0, n = c.length; f < n; f++)
        if ((d = c[f]) && d.id == a) {
          c.splice(f, 1);
          if (b || !this.h()) break;
          g.call(this);
          e.call(this);
          f >= this.gf && f <= this.gf + this.Mn && r.call(this);
          break;
        }
    return this;
  };
  W.prototype.ex = function (a, b, c) {
    var d = this.wb;
    d || (d = this.wb = []);
    -1 === b
      ? d.length
        ? d.splice(d.length - 1, 0, a)
        : d.push(a)
      : b
      ? d.splice(0, 0, a)
      : d.push(a);
    if (c || !this.h()) return this;
    g.call(this);
    e.call(this);
    if (-1 === b || !b)
      if (d.length <= this.Mn || this.gf >= d.length - this.Mn - 1)
        return r.call(this), this;
    b && (this.gf || r.call(this));
    return this;
  };
  W.prototype.u = function (a) {
    if (void 0 === a) return this.wb;
    this.wb = a;
    return this;
  };
})();
(function () {
  function v() {
    var a = this.wb,
      b = C(this.$);
    y(b);
    a && ((a = this.$v = r.call(this, b, a, 0)), e(a));
  }
  function r(a, b, c) {
    var d = w("div"),
      f = w("div"),
      n = b.items,
      e = b.icon,
      g = n && n.length;
    d.Md = b.id;
    Q(d, "item");
    F(a, d);
    b.collapsed && Q(d, "collapsed");
    Q(f, "name");
    F(d, f);
    0 === c && Q(d, "first");
    g &&
      (Q(d, "parent"),
      (a = w("span")),
      Q(a, "v-border"),
      q(a, "&nbsp;"),
      F(f, a));
    0 < c && ((a = w("span")), Q(a, "h-border"), q(a, "&nbsp;"), F(f, a));
    g && 0 < c && ((g = w("span")), Q(g, "plus"), F(f, g));
    e &&
      ((g = w("span")),
      Q(g, "i"),
      Q(f, "iconed"),
      q(g, "&nbsp;"),
      N(g, {
        backgroundImage: ["url(", e[0], ")"].join(""),
        backgroundPosition: [e[1], e[2]].join(" "),
      }),
      F(f, g));
    e = w("span");
    Q(e, "label");
    q(e, K(b.label));
    F(f, e);
    if (n)
      for (
        c += 1, b = w("div"), Q(b, "children"), F(d, b), e = 0, g = n.length;
        e < g;
        e++
      )
        (f = n[e]) && r.call(this, b, f, c);
    return d;
  }
  function l() {
    var a = this.Vd,
      b,
      c = M(this.$, "div", "name"),
      d;
    if (c)
      for (var f = 0, n = c.length; f < n; f++)
        (d = c[f]) && (b = G(d)) && Q(d, "selected", b.Md != a);
  }
  function e(a, b) {
    b || (b = 0);
    if (!a || !I(a, "parent")) return 0;
    var c = 0,
      d;
    d = C(a);
    for (var f = 0, g = C(d), x = p(d); x; )
      c++,
        (x.qL = 0),
        I(x, "parent") &&
          !I(x, "collapsed") &&
          ((d = e(x, b + 1)), (f += d), (x.qL = d), (c += d)),
        (x = n(x));
    d = p(a);
    (d = p(d)) &&
      I(d, "v-border") &&
      ((x = 20 * c + 1),
      (x = b ? x - 20 * f : x - 20 * (g.qL || 0)),
      N(d, "height", x + "px"));
    return c;
  }
  function k() {
    var a = M(this.$, "div", "name"),
      b;
    if (a)
      for (var c = 0, d = a.length; c < d; c++)
        if ((b = a[c]) && I(b, "selected")) return b;
    return null;
  }
  function h(a) {
    for (; a && !I(a, "page-tree"); ) {
      if ("span" == O(a) && I(a, "plus")) return a;
      a = G(a);
    }
    return null;
  }
  function b(a) {
    for (; a && !I(a, "page-tree"); ) {
      if ("div" == O(a) && I(a, "name")) return a;
      a = G(a);
    }
    return null;
  }
  function a(a) {
    for (; a && !I(a, "page-tree"); ) {
      if ("div" == O(a) && I(a, "item")) return a;
      a = G(a);
    }
    return null;
  }
  function g(c) {
    var d = c.target;
    c = a(d);
    var f = h(d),
      n = b(d),
      d = P(d);
    p(d.$).focus();
    f && (Q(c, "collapsed", I(c, "collapsed")), e(d.$v));
    n && ((d.Vd = c.Md), l.call(d), d.M("select", c.Md));
  }
  function d(c) {
    var d = c.target;
    if (!h(d) && (c = a(d))) {
      var f;
      a: {
        for (f = d; f && !I(f, "page-tree"); ) {
          if ("span" == O(f) && I(f, "i")) break a;
          f = G(f);
        }
        f = null;
      }
      var n = b(d),
        g = I(c, "parent"),
        d = P(d);
      p(d.$).focus();
      f || (n && g)
        ? (Q(c, "collapsed", I(c, "collapsed")), e(d.$v))
        : n && d.M("dblclick", c.Md);
    }
  }
  function f() {
    var a = P(this).$;
    Q(a, "active");
  }
  function c() {
    var a = P(this).$;
    Q(a, "active", !0);
  }
  function z() {
    var a = p(this);
    N(a, "top", this.scrollTop + "px");
  }
  function A(a) {
    var b = P(this),
      c = k.call(b),
      d,
      f = a.keyCode;
    if (c) {
      37 <= f && 40 >= f && a && a.preventDefault && a.preventDefault();
      a = G(c);
      if (38 == f)
        if ((c = x(a)))
          for (d = c; I(d, "parent") && !I(d, "collapsed"); ) d = C(C(d));
        else (c = G(G(a))) && I(c, "item") && (d = c);
      if (40 == f)
        if (I(a, "parent") && !I(a, "collapsed")) d = p(C(a));
        else if ((c = n(a))) d = c;
        else
          for (; !d && a; )
            (c = G(G(a))) && (c = n(c)) && I(c, "item") && (d = c), (a = G(a));
      if (37 == f) {
        if (I(a, "parent") && !I(a, "collapsed")) {
          Q(a, "collapsed");
          e(b.$v);
          return;
        }
        (c = G(G(a))) && I(c, "item") && (d = c);
      }
      if (39 == f) {
        if (I(a, "parent") && I(a, "collapsed")) {
          Q(a, "collapsed", !0);
          e(b.$v);
          return;
        }
        (c = p(C(a))) && I(c, "item") && (d = c);
      }
      d &&
        ((b.Vd = d.Md),
        b.M("select", d.Md),
        l.call(b),
        (d = k.call(b)) && d.scrollIntoView && d.scrollIntoView(!0));
    }
  }
  var m = E.va,
    u = E.ma,
    q = m.Cd,
    w = m.sb,
    p = m.Xb,
    n = m.Ig,
    x = m.Vl,
    C = m.lh,
    O = m.md,
    I = m.wg,
    G = m.Ad,
    F = m.tb,
    y = m.Uj,
    M = m.gq,
    D = E.oc.i,
    L = u.he,
    B = u.lo,
    Q = m.hb,
    N = m.$a,
    K = u.Kc,
    P = u.ve,
    T = (E.controls.page.dL = function () {
      this.dg("select", "dblclick");
      T.G.constructor.apply(this, arguments);
    });
  L(T, E.controls.bf);
  T.prototype.Ha = function (a) {
    var b = (this.$ = w("div"));
    b.ag = this;
    Q(b, "page-tree");
    F(a, b);
    D(b, "click", g);
    D(b, "dblclick", d);
    D(b, "scroll", z);
    a = w("input");
    a.type = "button";
    F(b, a);
    D(a, "focus", f);
    D(a, "blur", c);
    D(a, "keydown", A);
    a = w("div");
    Q(a, "items");
    F(b, a);
    v.call(this);
    return this;
  };
  T.prototype.Gf = function () {
    return this.$;
  };
  T.prototype.vc = function (a) {
    this.wb = B(a) || [];
    this.Ba && v.call(this);
    return this;
  };
  T.prototype.Db = function (a) {
    if (void 0 === a) return this.Vd;
    this.Vd = a;
    this.Ba && l.call(this);
    return this;
  };
  T.prototype.ja = function (a) {
    if (a) {
      var b;
      a: {
        b = a.id;
        var c = M(this.$, "div", "item"),
          d;
        if (c)
          for (var f = 0, n = c.length; f < n; f++)
            if ((d = c[f]) && d.Md == b) {
              b = d;
              break a;
            }
        b = null;
      }
      b &&
        (b = p(b)) &&
        (b = M(b, "span", "i")[0]) &&
        (a = a.icon) &&
        N(b, {
          backgroundImage: ["url(", a[0], ")"].join(""),
          backgroundPosition: [a[1], a[2]].join(" "),
        });
    }
    return this;
  };
})();
(function () {
  function v() {
    var a = this.bh || {},
      b = p(this.$);
    a.left = Math.round(0.5 * c.se - 0.5 * b.offsetWidth);
    a.top = Math.round(0.5 * c.Cj - 0.5 * b.offsetHeight);
    this.bh = a;
    r.call(this);
  }
  function r() {
    var a = this.bh,
      b = p(this.$);
    u(b, "left", (a.left || 0) + "px");
    u(b, "top", (a.top || 0) + "px");
    u(b, "bottom", a.bottom ? a.bottom + "px" : "none");
  }
  function l(a) {
    a: {
      for (a = a.target; a && !C(a, "page-window"); ) {
        if (C(a, "wx") && C(p(a), "i")) break a;
        a = w(a);
      }
      a = null;
    }
    a && (a = F(a)) && (a.M("close"), a.oa());
  }
  function e(a) {
    a = a.target;
    C(a, "h") && C(w(a), "w") && (a = F(a)) && a.M("doubleclick");
  }
  function k(a) {
    var d = a.target;
    a = F(d);
    var f;
    if (!(f = a.Le && a.Le()))
      a: {
        for (f = d; f && !C(f, "page-window"); ) {
          if (x(f, "div") && C(f, "b")) break a;
          f = w(f);
        }
        f = null;
      }
    if (!f) {
      a: {
        for (; d && !C(d, "page-window"); ) {
          if (x(d, "div") && C(d, "w")) break a;
          d = w(d);
        }
        d = null;
      }
      d &&
        ((y = {}),
        (y.control = a),
        (y.target = d),
        (y.x = c.yp - parseInt(d.style.left, 10)),
        (y.y = c.zp - parseInt(d.style.top, 10)),
        I(g.window, "mousemove", h),
        I(g.window, "mouseup", b));
    }
  }
  function h() {
    var a = y.target;
    if (a) {
      var b = c.yp - y.x,
        d = c.zp - y.y;
      y.Dw = !0;
      b = Math.max(5, b);
      d = Math.max(5, d);
      b = Math.min(c.se - a.offsetWidth - 5, b);
      d = Math.min(c.Cj - a.offsetHeight - 5, d);
      u(a, "left", b + "px");
      u(a, "top", d + "px");
      if ((a = y.control)) {
        var f = a.bh || {};
        f.left = b;
        f.top = d;
        a.bh = f;
      }
      return !1;
    }
  }
  function b() {
    if (y.Dw) {
      var a = y.control;
      a && a.M("move");
    }
    y = null;
    G(g.window, "mousemove", h);
    G(g.window, "mouseup", b);
  }
  function a(a) {
    27 == a.keyCode &&
      (a = M[M.length - 1]) &&
      !a.Le() &&
      (a.M("close"), a.oa());
  }
  var g = E.va,
    d = E.ma,
    f = E.oc,
    c = E.Qa,
    z = g.sb,
    A = g.tb,
    m = g.hb,
    u = g.$a,
    q = g.Cd,
    w = g.Ad,
    p = g.Xb,
    n = g.lh,
    x = g.md,
    C = g.wg,
    O = g.gq,
    I = f.i,
    G = f.hc,
    f = d.he,
    F = d.ve,
    y,
    M,
    D = (E.controls.page.Window = function (b) {
      this.bh = b;
      this.Hn = [];
      this.dg("close", "doubleclick", "move");
      D.G.constructor.apply(this, arguments);
      M || (I(g.window, "keydown", a), (M = []));
    });
  f(D, E.controls.bf);
  D.prototype.Ha = function (a) {
    var b = this.bh || {},
      c = b.title || "Untitled",
      d = !1 !== b.Qk,
      f = b.width || 800,
      b = b.height || 400,
      g = (this.$ = z("div"));
    g.ag = this;
    m(g, "page-window");
    m(g, "modal", !d);
    q(
      g,
      [
        '<div class="w" style="width:',
        f + 12,
        "px;height:",
        b,
        'px;"><div class="h">',
        c,
        '</div><div class="wx"><span class="i"></span></div><div class="b"></div></div>',
      ].join("")
    );
    A(a, g);
    I(g, "click", l);
    I(g, "mousedown", k);
    I(g, "dblclick", e);
    a = this.Hn;
    c = 0;
    for (d = a.length; c < d; c++) if ((f = a[c])) (b = n(p(this.$))), f.Uc(b);
    v.call(this);
    return this;
  };
  D.prototype.na = function () {
    this.Uv = !1;
    this.Ba && m(this.$, "hidden", !this.Uv);
    M[M.length - 1] !== this && M.push(this);
    return this;
  };
  D.prototype.oa = function () {
    this.Uv = !0;
    this.Ba && m(this.$, "hidden", !this.Uv);
    for (var a = 0, b = M.length; a < b; a++) M[a] == this && M.splice(a, 1);
    return this;
  };
  D.prototype.c = function (a) {
    this.Hn.push(a);
    if (this.Ba) {
      var b = n(p(this.$));
      a.Uc(b);
    }
    return this;
  };
  D.prototype.Fe = function (a) {
    var b = this.bh || {};
    if (void 0 === a) return b.title || "";
    b.title = a;
    this.bh = b;
    this.Ba && (b = O(this.$, "div", "h")[0]) && q(b, d.Kc(a));
    return this;
  };
  D.prototype.$l = function (a) {
    var b = this.bh || {};
    if (void 0 === a) return b.height || "";
    b.height = a;
    this.bh = b;
    this.Ba &&
      (b = O(this.$, "div", "w")[0]) &&
      u(b, "height", a ? a + "px" : "auto");
    return this;
  };
  D.prototype.Nv = function (a) {
    var b = this.bh || {};
    if (void 0 === a) return b.width || "";
    b.width = a;
    this.bh = b;
    this.Ba && (b = O(this.$, "div", "w")[0]) && u(b, "width", a + "px");
    return this;
  };
  D.prototype.$o = function (a) {
    var b = this.bh || {};
    if (void 0 === a) return b.top || "";
    b.top = a;
    this.bh = b;
    this.Ba && r.call(this);
    return this;
  };
  D.prototype.Aq = function (a) {
    var b = this.bh || {};
    if (void 0 === a) return b.left || "";
    b.left = a;
    this.bh = b;
    this.Ba && r.call(this);
    return this;
  };
  D.prototype.jo = function (a) {
    var b = this.bh || {};
    if (void 0 === a) return b.bottom || "";
    b.bottom = a;
    this.bh = b;
    this.Ba && r.call(this);
    return this;
  };
  D.prototype.bI = function () {
    v.call(this);
  };
  D.prototype.De = function () {
    return this.Uv;
  };
  D.prototype.Le = function (a) {
    return void 0 !== a
      ? ((this.sp = a), this.K("compact", !a), this)
      : this.sp;
  };
})();
(function () {
  var v = E.va,
    r = v.sb,
    l = v.tb,
    e = v.hb,
    k = v.Cd,
    v = E.ma.he,
    h =
      (E.controls.page.Text =
      E.controls.page.I =
        function (b) {
          this.Nn = "";
          b && (this.c3 = b);
          h.G.constructor.apply(this, arguments);
        });
  v(h, E.controls.bf);
  h.prototype.Ha = function (b) {
    var a = this.c3,
      g = (this.$ = r(a ? "label" : "div"));
    g.ag = this;
    e(g, "page-text");
    l(b, g);
    a && g.setAttribute("for", a);
    k(this.$, this.Nn || "");
    return this;
  };
  h.prototype.Text = function (b) {
    if (void 0 === b) return this.Nn;
    this.Nn = b;
    this.Ba && k(this.$, this.Nn || "");
    return this;
  };
})();
(function () {
  function v() {
    var a = y(this.$);
    a.placeholder = this.fp || "";
    a.disabled = !!this.Yc;
    a.readOnly = !!this.Ln;
    a.value = this.tf;
    a.maxLength = this.EL || null;
    a.tabIndex = this.t3;
    a.id = this.bj || "";
  }
  function r() {
    var a = this.wb,
      b,
      c = I(y(this.$)),
      d;
    F(c);
    if (a)
      for (var f = 0, e = a.length; f < e; f++)
        if ((b = a[f]))
          (d = w("div")),
            (d.WM = f),
            n(d, "option"),
            C(d, b),
            (d.value = String(b)),
            p(c, d);
  }
  function l(a) {
    if (!this.xm) {
      var b = this.M("autocomplete", a.value);
      (b && !0 !== b) || (b = a.value);
      if ((a = this.$)) if ((a = y(a))) a.value = b;
    }
  }
  function e() {
    if (!this.xm) {
      var a = y(this.$),
        c = I(a),
        d,
        f,
        e = a.value.toLowerCase();
      this.xm && (e = "");
      x(c, "display", "none");
      if (e.length >= this.wL) {
        a = [];
        for (d = y(c); d; )
          n(d, "sel", !0),
            (f = d.value.toLowerCase().indexOf(e)),
            !e || -1 < f
              ? ((d.xt = f), x(d, "display", ""), a.push(d))
              : x(d, "display", "none"),
            (d = I(d));
        if (1 < a.length || (1 == a.length && a[0].value !== e)) {
          a.sort(k);
          e && (a.sort(h), a.sort(b));
          d = 0;
          for (f = a.length; d < f; d++) c.appendChild(a[d]);
          x(c, "display", "block");
          c.scrollTop = 0;
        }
      }
    }
  }
  function k(a, b) {
    a = a.WM;
    b = b.WM;
    return a < b ? -1 : a > b ? 1 : 0;
  }
  function h(a, b) {
    a = a.xt;
    b = b.xt;
    return a < b ? -1 : a > b ? 1 : 0;
  }
  function b(a, b) {
    return a.xt == b.xt
      ? ((a = a.value.toLowerCase()),
        (b = b.value.toLowerCase()),
        a < b ? -1 : a > b ? 1 : 0)
      : h(a, b);
  }
  function a(a) {
    var b = B(this);
    b.tf = this.value;
    var c = a.type;
    "mousedown" == c && (c = "change");
    "change" != c && b.M(c, a);
    b.M("change", a);
  }
  function g(a) {
    var b = B(this);
    b.xL = !0;
    b.xm || ((this.Xv = 0), (this.Wv = {}), e.call(B(this)));
    b.M("focus", a);
  }
  function d(a) {
    var b = I(this),
      c = B(this);
    c.xL = !1;
    x(b, "display", "none");
    c.xm || ((this.Xv = 0), (this.Wv = {}));
    c.M("blur", a);
  }
  function f(b) {
    var c = B(this);
    if (!c.Ln && !c.Yc) {
      var d = c.xm,
        f = I(this),
        g = "none" == f.style.display,
        p = b.keyCode;
      if (27 == p)
        return (
          g || (b.stopPropagation(), x(f, "display", "none")), c.M("escape"), !0
        );
      d && g && (40 == p || 38 == p) && x(f, "display", "block");
      if ("none" != f.style.display) {
        var q, h;
        switch (p) {
          case 40:
            for (g = y(f); g; ) {
              if ("none" != g.style.display) {
                h || (h = g);
                if (D(g, "sel")) {
                  for (f = I(g); f && "none" == f.style.display; ) f = I(f);
                  q = f ? f : g;
                }
                n(g, "sel", !0);
              }
              g = I(g);
            }
            !q && h && (q = h);
            break;
          case 38:
            for (g = M(f); g; ) {
              if ("none" != g.style.display) {
                h || (h = g);
                if (D(g, "sel")) {
                  for (f = G(g); f && "none" == f.style.display; ) f = G(f);
                  q = f ? f : g;
                }
                n(g, "sel", !0);
              }
              g = G(g);
            }
            !q && h && (q = h);
            break;
          case 13:
            for (g = M(f); g; ) {
              if ("none" != g.style.display && D(g, "sel")) {
                if (d) {
                  if ((d = y(c.$))) d.value = g.value;
                } else l.call(c, g);
                x(f, "display", "none");
                c.M("select", b);
                a.call(this, b);
                return !1;
              }
              g = G(g);
            }
            if (!g) return c.M("select", b), a.call(this, b), !1;
          case 33:
            for (g = y(f); g; ) D(g, "sel") && n(g, "sel", !0), (g = I(g));
            for (g = y(f); g && "none" == g.style.display; ) g = I(g);
            g && (q = g);
            break;
          case 34:
            for (g = y(f); g; ) D(g, "sel") && n(g, "sel", !0), (g = I(g));
            for (g = M(f); g && "none" == g.style.display; ) g = G(g);
            g && (q = g);
        }
        if (q)
          return (
            n(q, "sel"),
            q.scrollIntoView &&
              (q.scrollIntoView(!1), (c.r3 = new Date().getTime())),
            l.call(c, q),
            a.call(this, b),
            !1
          );
        if (13 < p && 45 > p) return a.call(this, b), !0;
      }
      d ||
        ((13 <= p && 45 > p) ||
          this.Wv[b.keyCode] ||
          ((this.Wv[b.keyCode] = !0), this.Xv++),
        e.call(c));
      a.call(this, b);
    }
  }
  function c(b) {
    var c = B(this);
    if (!c.Ln && !c.Yc) {
      var d = b.keyCode;
      if (13 <= d && 45 > d) return a.call(this, b), !0;
      if (
        !c.xm &&
        ((this.Wv[b.keyCode] = !1),
        this.Xv--,
        !this.Xv &&
          (e.call(c),
          (46 < d && 91 > d) ||
            (96 <= d && 111 >= d) ||
            186 == d ||
            187 == d ||
            188 == d ||
            189 == d ||
            190 == d ||
            191 == d ||
            192 == d ||
            219 == d ||
            220 == d ||
            221 == d ||
            222 == d))
      ) {
        var f = I(this);
        if (
          "none" !== f.style.display &&
          c.S2 &&
          ((d = this.selectionEnd), this.selectionEnd == this.value.length)
        ) {
          for (f = y(f); f && "none" == f.style.display; ) f = I(f);
          f &&
            0 == f.xt &&
            (l.call(c, f), this.setSelectionRange(d, this.value.length));
        }
      }
      a.call(this, b);
    }
  }
  function z(b) {
    var c = G(this),
      d = I(c),
      f = b.target;
    if (f && D(f, "option")) {
      var n = B(this);
      if (!n) return;
      n.xm ? (c.value = f.value) : l.call(n, f);
      n.M("select", b);
      a.call(c, b);
      x(d, "display", "none");
    }
    return !1;
  }
  function A(a) {
    if ((a = a.target) && D(a, "option")) {
      var b = B(a);
      if (!(b && 500 > new Date() - (b.r3 || 0))) {
        for (b = y(O(a)); b; ) n(b, "sel", !0), (b = I(b));
        n(a, "sel");
      }
    }
  }
  function m() {
    var a = G(this),
      b = G(a);
    if ("none" == a.style.display)
      return x(a, "display", "block"), b.focus(), !1;
    x(a, "display", "none");
    b.focus();
    return !1;
  }
  var u = E.va,
    q = E.ma,
    w = u.sb,
    p = u.tb,
    n = u.hb,
    x = u.$a,
    C = u.Cd,
    O = u.Ad,
    I = u.Ig,
    G = u.Vl,
    F = u.Uj,
    y = u.Xb,
    M = u.lh,
    D = u.wg,
    L = E.oc.i,
    u = q.he,
    B = q.ve,
    Q = (E.controls.input.Text = function (a) {
      this.xm = "combobox" == a;
      this.ym = "combobox" == a ? "text" : a;
      this.fp = "";
      this.Yc = !1;
      this.tf = "";
      this.wb = null;
      this.EL = 524288;
      this.wL = 0;
      this.dg(
        "change",
        "keydown",
        "keyup",
        "paste",
        "select",
        "focus",
        "blur",
        "autocomplete",
        "escape"
      );
      Q.G.constructor.apply(this, arguments);
    });
  u(Q, E.controls.bf);
  Q.prototype.Ha = function (b) {
    var e = this.xm,
      x = (this.$ = w("div"));
    x.ag = this;
    n(x, "input-text");
    n(x, "num combo", !e);
    C(
      x,
      [
        '<input autocomplete="off" type="',
        this.ym || "text",
        '"><div style="display:none;" class="datalist"></div>',
        e ? '<button class="animate down"><span></span></button>' : "",
      ].join("")
    );
    p(b, x);
    b = y(x);
    L(b, "change", a);
    L(b, "paste", a);
    L(b, "focus", g);
    L(b, "blur", d);
    L(b, "keydown", f);
    L(b, "keyup", c);
    b = I(b);
    L(b, "mousemove", A);
    L(b, "mousedown", z);
    e && ((e = I(b)), (e.tabIndex = -1), L(e, "mousedown", m));
    v.call(this);
    r.call(this);
    return this;
  };
  Q.prototype.f = function (a, b) {
    if (void 0 === a) return this.Ba ? y(this.$).value : this.tf;
    this.tf = a;
    if (!0 === b) {
      var c = this.wb;
      c || (c = this.wb = []);
      c.splice(0, 0, a);
      for (var d = 1, f = c.length; d < f; d++)
        c[d] == a && (c.splice(d, 1), d--, f--);
    }
    this.Ba && v.call(this);
    return this;
  };
  Q.prototype.Nq = function (a) {
    if (void 0 === a) return this.fp;
    this.fp = a;
    this.Ba && v.call(this);
    return this;
  };
  Q.prototype.g = function (a) {
    if (void 0 === a) return this.Yc;
    this.Yc = a;
    this.Ba && v.call(this);
    return this;
  };
  Q.prototype.o = function (a) {
    if (void 0 === a) return this.bj;
    this.bj = a;
    this.Ba && v.call(this);
    return this;
  };
  Q.prototype.u = function (a) {
    if (void 0 === a) return this.wb;
    this.wb = a;
    this.Ba && (r.call(this), this.xL && e.call(this));
    return this;
  };
  Q.prototype.jb = function () {
    if (this.Ba) {
      var a = this.$;
      a && (a = y(a)) && a.focus();
    }
    return this;
  };
  Q.prototype.Up = function () {
    if (this.Ba) {
      var a = this.$;
      a && (a = y(a)) && a.blur();
    }
  };
  Q.prototype.Gb = function () {
    if (this.Ba) {
      var a = this.$;
      a && (a = y(a)) && a.select();
    }
    return this;
  };
  Q.prototype.dJ = function (a) {
    if (void 0 === a) return this.Ln;
    this.Ln = a;
    this.Ba && v.call(this);
    return this;
  };
  Q.prototype.FW = function () {
    this.EL = 64;
    this.Ba && v.call(this);
    return this;
  };
  Q.prototype.zx = function () {
    this.wL = 2;
    return this;
  };
  Q.prototype.gx = function () {
    this.S2 = !0;
    return this;
  };
  Q.prototype.y2 = function () {
    this.t3 = -1;
    this.Ba && v.call(this);
    return this;
  };
})();
(function () {
  function v() {
    var b = this.$;
    b.disabled = !!this.Yc;
    a(b, this.Nn || "Button");
  }
  function r(a) {
    var b = d(this);
    b && b.M("click", a);
  }
  var l = E.va,
    e = E.ma,
    k = l.sb,
    h = l.tb,
    b = l.hb,
    a = l.Cd,
    g = E.oc.i,
    l = e.he,
    d = e.ve,
    f = (E.controls.input.Ua = function () {
      this.Nn = "Button";
      this.Yc = !1;
      this.dg("click");
      f.G.constructor.apply(this, arguments);
    });
  l(f, E.controls.bf);
  f.prototype.Ha = function (a) {
    var d = (this.$ = k("button"));
    d.ag = this;
    b(d, "input-button");
    h(a, d);
    g(d, "click", r);
    v.call(this);
    return this;
  };
  f.prototype.Text = function (a) {
    if (void 0 === a) return this.Nn;
    this.Nn = a;
    this.Ba && v.call(this);
    return this;
  };
  f.prototype.g = function (a) {
    if (void 0 === a) return this.Yc;
    this.Yc = a;
    this.Ba && v.call(this);
    return this;
  };
  f.prototype.jb = function () {
    this.Ba && this.$.focus();
    return this;
  };
})();
(function () {
  function v() {
    var a = this.$;
    a.checked = !!this.Aj;
    a.disabled = !!this.Yc;
    a.id = this.bj || "";
  }
  function r(a) {
    var b = g(this);
    b && ((b.Aj = this.checked), b.M("change", a));
  }
  var l = E.va,
    e = E.ma,
    k = l.sb,
    h = l.tb,
    b = l.hb,
    a = E.oc.i,
    l = e.he,
    g = e.ve,
    d = (E.controls.input.pa = function () {
      this.Aj = this.Yc = !1;
      this.dg("change");
      d.G.constructor.apply(this, arguments);
    });
  l(d, E.controls.bf);
  d.prototype.Ha = function (d) {
    var c = (this.$ = k("input"));
    c.type = "checkbox";
    c.ag = this;
    b(c, "input-checkbox");
    h(d, c);
    a(c, "click", r);
    v.call(this);
    return this;
  };
  d.prototype.s = function (a) {
    if (void 0 === a) return this.Aj;
    this.Aj = a;
    this.Ba && v.call(this);
    return this;
  };
  d.prototype.g = function (a) {
    if (void 0 === a) return this.Yc;
    this.Yc = a;
    this.Ba && v.call(this);
    return this;
  };
  d.prototype.o = function (a) {
    if (void 0 === a) return this.bj;
    this.bj = a;
    this.Ba && v.call(this);
    return this;
  };
})();
(function () {
  function v() {
    var a = this.$;
    a.disabled = !!this.Yc;
    var b = this.IL || [],
      d,
      e = [];
    if (b)
      for (var g = 0, h = b.length; g < h; g++)
        (d = b[g]) &&
          e.push('<option value="', d.value, '">', d.label, "</option>");
    a.innerHTML = e.join("");
    a.value = this.tf;
    a.id = this.bj;
  }
  function r(a) {
    var b = g(this);
    b && ((b.tf = this.value), b.M("change", a));
  }
  var l = E.va,
    e = E.ma,
    k = l.sb,
    h = l.tb,
    b = l.hb,
    a = E.oc.i,
    l = e.he,
    g = e.ve,
    d = (E.controls.input.of = function () {
      this.Yc = !1;
      this.dg("change");
      d.G.constructor.apply(this, arguments);
    });
  l(d, E.controls.bf);
  d.prototype.Ha = function (d) {
    var c = (this.$ = k("select"));
    c.ag = this;
    b(c, "input-combobox");
    h(d, c);
    a(c, "change", r);
    v.call(this);
    return this;
  };
  d.prototype.o = function (a) {
    if (void 0 === a) return this.bj;
    this.bj = a;
    this.Ba && v.call(this);
    return this;
  };
  d.prototype.de = function (a) {
    if (void 0 === a) return this.IL;
    this.IL = a;
    this.Ba && v.call(this);
    return this;
  };
  d.prototype.g = function (a) {
    if (void 0 === a) return this.Yc;
    this.Yc = a;
    this.Ba && v.call(this);
    return this;
  };
  d.prototype.f = function (a) {
    if (void 0 === a)
      return void 0 === this.tf && this.Ba ? this.$.value : this.tf;
    this.tf = a;
    this.Ba && v.call(this);
    return this;
  };
})();
(function () {
  function v() {
    var a = this.$,
      b = this.tf,
      c = O(a);
    c.placeholder = this.fp || "";
    c.disabled = !!this.Yc;
    c.value = "" !== b ? (b || 0).cM(this.Gi) : "";
    c.id = this.bj || "";
    c.min = isNaN(parseInt(this.mg, 10)) ? "" : this.mg;
    c.max = isNaN(parseInt(this.ah, 10)) ? "" : this.ah;
    c.step = this.gw || "";
    c = I(a);
    c.disabled = !!this.Yc;
    c = C(c);
    c.disabled = !!this.Yc;
  }
  function r(a, b) {
    var c = O(this.$),
      d = e.call(this),
      f = this.gw;
    a ? (d += f) : (d -= f);
    null !== this.mg && d < this.mg && (d = this.mg);
    null !== this.ah && d > this.ah && (d = this.ah);
    c.value = d.toFixed(this.Gi || 0);
    this.tf = d;
    this.M("change", b);
  }
  function l(a) {
    for (; a && ("div" != G(a) || !F(a, "input-text")); ) {
      if ("button" == G(a)) return a;
      a = x(a);
    }
    return null;
  }
  function e() {
    var a = O(this.$),
      a = parseFloat((a.value || "").split(",").join(".")) || 0;
    null !== this.mg && a < this.mg && (a = this.mg);
    null !== this.ah && a > this.ah && (a = this.ah);
    return parseFloat(a.cM(this.Gi));
  }
  function k(a) {
    var b = D(this);
    b.tf = e.call(b);
    a && b.M(a.type, a);
  }
  function h() {
    var a = D(this);
    a && !a.Yc && ((a.tf = e.call(a)), a.M("change"));
  }
  function b(a) {
    var b = l(a.target);
    if (b && !b.disabled) {
      var c = D(b);
      if (c) {
        r.call(c, F(b, "up"), a);
        clearTimeout(c.bE);
        c.bE = setTimeout(function () {
          clearTimeout(c.TD);
          c.TD = setInterval(function () {
            r.call(c, F(b, "up"), a);
          }, 50);
        }, 500);
        var d;
        y(
          window,
          "mouseup",
          (d = function () {
            M(window, "mouseup", d);
            clearInterval(c.TD);
            c.TD = null;
            clearTimeout(c.bE);
            c.bE = null;
          })
        );
      }
    }
  }
  function a(a) {
    a = D(a.target);
    if ((a = O(a.$))) a.focus(), a.select();
  }
  function g() {
    D(this);
    y(this, "mousewheel", f);
    y(this, "keydown", c);
    y(this, "keyup", z);
  }
  function d() {
    M(this, "mousewheel", f);
    M(this, "keydown", c);
    M(this, "keyup", z);
    var a = D(this);
    a && ((a.tf = e.call(a)), v.call(a), a.M("change"));
  }
  function f(a) {
    var b = D(a.target);
    b && r.call(b, 0 < a.J, a);
  }
  function c(a) {
    var b = D(a.target),
      c = a.keyCode;
    if (b)
      if (38 == c) a.preventDefault(), r.call(b, !0, a);
      else if (40 == c) a.preventDefault(), r.call(b, !1, a);
      else {
        if (65 <= c && 90 >= c && !a.ctrlKey) return !1;
        b.M("keydown", a);
        (a = O(b.$)) &&
          b.M(
            "prechange",
            parseFloat((a.value || "").split(",").join(".")) || 0
          );
      }
  }
  function z(a) {
    var b = D(a.target),
      c = a.keyCode;
    if (b) {
      if (38 == c || 40 == c || (65 <= c && 90 >= c && !a.ctrlKey)) return !1;
      (a = O(b.$)) &&
        b.M("prechange", parseFloat((a.value || "").split(",").join(".")) || 0);
    }
  }
  var A = E.va,
    m = E.ma,
    u = E.oc,
    q = A.sb,
    w = A.tb,
    p = A.hb,
    n = A.Cd,
    x = A.Ad,
    C = A.Vl,
    O = A.Xb,
    I = A.lh,
    G = A.md,
    F = A.wg,
    y = u.i,
    M = u.hc,
    A = m.he,
    D = m.ve,
    L = (E.controls.input.Number = function (a) {
      this.ym = a;
      this.fp = "";
      this.Yc = !1;
      this.tf = "";
      this.ah = this.mg = null;
      this.gw = 1;
      this.tf = this.Gi = 0;
      this.dg("change", "keydown", "keyup", "prechange");
      L.G.constructor.apply(this, arguments);
    });
  A(L, E.controls.bf);
  L.prototype.Ha = function (c) {
    var f = (this.$ = q("div"));
    f.ag = this;
    p(f, "input-text num");
    n(
      f,
      '<input type="text"><button tabindex="-1" class="up"><span class="v"></span></button><button tabindex="-1" class="down"><span class="v"></span></button>'
    );
    w(c, f);
    y(f, "mousedown", b);
    y(f, "click", a);
    c = O(f);
    y(c, "paste", h);
    y(c, "change", k);
    y(c, "focus", g);
    y(c, "blur", d);
    v.call(this);
    return this;
  };
  L.prototype.f = function (a) {
    if (void 0 === a) return Number(this.tf || 0).normalize(this.Gi || 0);
    this.tf = a;
    this.Ba && v.call(this);
    return this;
  };
  L.prototype.Nq = function (a) {
    if (void 0 === a) return this.fp;
    this.fp = a;
    this.Ba && v.call(this);
    return this;
  };
  L.prototype.g = function (a) {
    if (void 0 === a) return this.Yc;
    this.Yc = a;
    this.Ba && v.call(this);
    return this;
  };
  L.prototype.o = function (a) {
    if (void 0 === a) return this.bj;
    this.bj = a;
    this.Ba && v.call(this);
    return this;
  };
  L.prototype.Y = function (a) {
    if (void 0 === a) return this.gw;
    this.gw = a;
    this.Ba && v.call(this);
    return this;
  };
  L.prototype.Fa = function (a) {
    if (void 0 === a) return this.mg;
    this.mg = a;
    this.Ba && v.call(this);
    return this;
  };
  L.prototype.mc = function (a) {
    if (void 0 === a) return this.ah;
    this.ah = a;
    this.Ba && v.call(this);
    return this;
  };
  L.prototype.T = function (a) {
    if (void 0 === a) return this.Gi;
    this.Gi = a;
    this.Ba && v.call(this);
    return this;
  };
  L.prototype.jb = function () {
    var a = this.$;
    this.Ba && (a = O(a)) && a.focus();
    return this;
  };
  L.prototype.Gb = function () {
    if (this.Ba) {
      var a = this.$;
      a && (a = O(a)) && a.select();
    }
    return this;
  };
  L.prototype.gH = function () {
    if (this.Ba) {
      var a = this.$;
      if (a && (a = O(a))) return a;
    }
    return null;
  };
})();
(function () {
  function v() {
    var a = this.tf,
      a = a ? new Date(a) : null,
      c = new Date(),
      d = B(D(B(this.$)));
    d.value = g(a ? a.getDate() : "__");
    d = D(D(d));
    d.value = g(a ? a.getMonth() + 1 : "__");
    d = D(D(d));
    d.value = g(a ? a.getFullYear() : "____", !0);
    d = D(d);
    d.value = g(a ? a.getHours() : "__");
    d = D(D(d));
    d.value = g(a ? a.getMinutes() : "__");
    b.call(this);
    e.call(
      this,
      (a && a.getFullYear()) || c.getFullYear(),
      (a && a.getMonth()) || c.getMonth()
    );
  }
  function r() {
    var a = this.Yc,
      b = this.$,
      c = P(b, "input"),
      d;
    if (c)
      for (var f = 0, n = c.length; f < n; f++) if ((d = c[f])) d.disabled = a;
    G(b, "disabled", !a);
  }
  function l() {
    var a = D(B(this.$)),
      b = new Date(),
      c = K(a, "input", "day")[0],
      d = K(a, "input", "year")[0],
      f = K(a, "input", "month")[0],
      n = K(a, "input", "hour")[0],
      a = K(a, "input", "minute")[0];
    b.setSeconds(0);
    b.setMilliseconds(0);
    b.setFullYear(parseInt(d.value, 10));
    b.setMonth(parseInt(f.value, 10) - 1);
    b.setDate(parseInt(c.value, 10));
    b.setHours(parseInt(n.value, 10));
    b.setMinutes(parseInt(a.value, 10));
    this.tf = b.getTime();
  }
  function e(a, b) {
    if (void 0 !== a && void 0 !== b) {
      a = parseInt(a, 10);
      b = parseInt(b, 10);
      var c = this.$,
        d = new Date(),
        f = this.tf ? new Date(this.tf) : null,
        n,
        e,
        g;
      e = K(Q(c), "select", "year")[0];
      g = K(Q(c), "select", "month")[0];
      var c = P(Q(c), "tbody")[0],
        p;
      L(e);
      for (var x = a - 100, q = x + 200; x < q; x++)
        (n = O("option")), (n.value = x), y(n, x), I(e, n);
      e.value = a;
      g.value = b;
      e = new Date();
      e.setDate(1);
      e.setFullYear(a);
      e.setMonth(b);
      for (L(c); 1 != e.getDay(); ) e.setDate(e.getDate() - 1);
      g = b + 1;
      for (12 == g && (g = 0); e; ) {
        if (1 == e.getDay()) {
          if (e.getMonth() == g) {
            e = null;
            continue;
          }
          p = O("tr");
          I(c, p);
        }
        n = O("td");
        n.Z2 = e.getDate();
        n.k3 = e.getMonth();
        n.z3 = e.getFullYear();
        f && ((n.AL = f.getHours()), (n.mg = f.getMinutes()));
        y(n, e.getDate());
        G(n, "out", e.getMonth() == b);
        G(
          n,
          "today",
          e.getDate() != d.getDate() ||
            e.getMonth() != d.getMonth() ||
            e.getFullYear() != d.getFullYear()
        );
        f &&
          G(
            n,
            "sel",
            e.getDate() != f.getDate() ||
              e.getMonth() != f.getMonth() ||
              e.getFullYear() != f.getFullYear()
          );
        I(p, n);
        e.setDate(e.getDate() + 1);
      }
    }
  }
  function k() {
    var a = Q(this.$);
    F(a, "display", "block");
    W = this;
    setTimeout(function () {
      R(window, "click", p);
    });
  }
  function h() {
    var a = Q(this.$);
    F(a, "display", "none");
    H(window, "click", p);
    W = null;
  }
  function b() {
    var a = B(D(B(this.$)));
    a.mg = 1;
    a.ah = 30;
    var b = D(D(a));
    b.mg = 1;
    b.ah = 12;
    var c = D(D(b));
    c.mg = 1;
    c.ah = 3e3;
    var d = D(c);
    d.mg = 0;
    d.ah = 59;
    d = D(D(d));
    d.mg = 0;
    d.ah = 59;
    b = parseInt(b.value, 10);
    c = parseInt(c.value, 10);
    if (!isNaN(b) && !isNaN(c)) {
      if (isNaN(c) || isNaN(b)) b = 31;
      else {
        b--;
        d = new Date();
        d.setDate(1);
        d.setFullYear(c);
        d.setMonth(b);
        for (c = 0; d.getMonth() == b; ) c++, d.setDate(d.getDate() + 1);
        b = c;
      }
      a.ah = b;
    }
  }
  function a(a, b, c) {
    var d = parseInt(a.value, 10);
    isNaN(d) && (d = a.mg = 0);
    d += b ? 1 : -1;
    d > a.ah && (d = a.mg);
    d < a.mg && (d = a.ah);
    a.value = g(d, -1 !== a.className.indexOf("year"));
    l.call(this);
    this.M("change", c);
  }
  function g(a, b) {
    if (b) {
      if (10 > a) return ["000", a].join("");
      if (100 > a) return ["00", a].join("");
      if (1e3 > a) return ["0", a].join("");
    } else if (10 > a) return ["0", a].join("");
    return a.toString();
  }
  function d() {
    var a = B(M(M(this)));
    a.ym = this.className.split(" ")[0];
    a.focus();
  }
  function f() {
    if (W) h.call(W);
    else {
      var a = S(this);
      k.call(a);
    }
  }
  function c() {
    this.ym || (this.ym = "day");
    this.Bj = 0;
    var a = K(D(this), "input", this.ym)[0];
    G(a, "blue");
    R(this, "keydown", A);
    R(this, "paste", m);
  }
  function z() {
    var a = K(D(this), "input", this.ym)[0];
    G(a, "blue", !0);
    this.ym = null;
    this.Bj = 0;
    this.value = "";
    H(this, "paste", m);
    H(this, "keydown", A);
  }
  function A(c) {
    var d = S(this),
      f = D(this),
      n = c.keyCode,
      e = this.ym,
      p = K(f, "input", "day")[0],
      x = K(f, "input", "month")[0],
      q = K(f, "input", "year")[0],
      h = K(f, "input", "hour")[0],
      f = K(f, "input", "minute")[0],
      C;
    "day" == e && (C = p);
    "month" == e && (C = x);
    "year" == e && (C = q);
    "hour" == e && (C = h);
    "minute" == e && (C = f);
    (86 == n && c.ctrlKey) ||
      (45 == n && c.shiftKey) ||
      !c.preventDefault ||
      c.preventDefault();
    if (39 == n || (9 == n && !c.shiftKey))
      (this.Bj = 0),
        "day" == e
          ? x.focus()
          : "month" == e
          ? q.focus()
          : "year" == e
          ? h.focus()
          : "hour" == e && f.focus();
    else if (37 == n || (9 == n && c.shiftKey))
      (this.Bj = 0),
        "month" == e
          ? p.focus()
          : "year" == e
          ? x.focus()
          : "hour" == e
          ? q.focus()
          : "minute" == e && h.focus();
    else if (38 == n) (this.Bj = 0), a.call(d, C, !0, c), b.call(d);
    else if (40 == n) (this.Bj = 0), a.call(d, C, !1, c), b.call(d);
    else if ((48 <= n && 57 >= n) || (96 <= n && 105 >= n)) {
      n = 96 <= n ? n - 96 : n - 48;
      this.Bj
        ? ((C.value = g(
            parseInt(parseInt(C.value) + "" + n, 10),
            "year" === e
          )),
          parseInt(C.value, 10) || (C.value = g(C.mg, "year" === e)))
        : (C.value = g(n, "year" === e));
      l.call(d);
      b.call(d);
      d.M("change", c);
      if (!this.Bj) {
        if (parseInt(parseInt(C.value, 10) + "0", 10) > C.ah) {
          this.Bj = 0;
          A.call(this, { keyCode: 39 });
          return;
        }
      } else if ("year" != e || 3 == this.Bj) {
        this.Bj = 0;
        A.call(this, { keyCode: 39 });
        return;
      }
      this.Bj++;
    } else {
      if (8 == n || 46 == n)
        (C.value = "year" == e ? "____" : "__"),
          l.call(d),
          b.call(d),
          (this.Bj = 0),
          d.M("change", c);
      this.Bj = 0;
    }
  }
  function m(a) {
    var b = this,
      c = S(b);
    setTimeout(function () {
      c.tf = Date.parse(b.value);
      v.call(c);
      b.value = "";
      c.M("change", a);
    });
  }
  function u() {
    var a = S(this),
      b = B(Q(a.$)),
      c = D(b);
    e.call(a, c.value, b.value);
  }
  function q() {
    var a = S(this),
      b = B(Q(a.$)),
      c = D(b),
      b = parseInt(b.value, 10),
      c = parseInt(c.value, 10);
    T(this, "prev")
      ? (b--, 0 > b && ((b = 11), c--))
      : T(this, "next")
      ? (b++, 11 < b && ((b = 0), c++))
      : T(this, "now") &&
        ((c = new Date()), (b = c.getMonth()), (c = c.getFullYear()));
    e.call(a, c, b);
  }
  function w(a) {
    var b = a.target,
      c = S(b);
    if ("td" == N(b)) {
      var d = new Date();
      d.setDate(b.Z2);
      d.setMonth(b.k3);
      d.setFullYear(b.z3);
      d.setHours(0);
      d.setMinutes(0);
      d.setSeconds(0);
      d.setMilliseconds(0);
      b.AL && d.setHours(b.AL);
      b.mg && d.setMinutes(b.mg);
      c.jb();
      c.tf = d.getTime();
      c.M("change", a);
      v.call(c);
      h.call(c);
    }
  }
  function p(a) {
    if ((a = a.target))
      for (; a; ) {
        if ("div" == N(a) && T(a, "cal")) return;
        a = M(a);
      }
    W && h.call(W);
  }
  var n = E.va,
    x = E.ma,
    C = E.oc,
    O = n.sb,
    I = n.tb,
    G = n.hb,
    F = n.$a,
    y = n.Cd,
    M = n.Ad,
    D = n.Ig,
    L = n.Uj,
    B = n.Xb,
    Q = n.lh,
    N = n.md,
    K = n.gq,
    P = n.tG,
    T = n.wg,
    R = C.i,
    H = C.hc,
    n = x.he,
    S = x.ve,
    Z =
      "January February March April May June July August September October November December".split(
        " "
      ),
    W,
    Y = (E.controls.input.Date = function () {
      this.dg("change");
      Y.G.constructor.apply(this, arguments);
    });
  n(Y, E.controls.bf);
  Y.prototype.Ha = function (a) {
    var b;
    b = this.$ = O("div");
    b.ag = this;
    G(b, "input-date");
    y(
      b,
      '<input class="back" type="tel"><div class="line"><input type="text" class="day">.<input type="text" class="month">.<input type="text" class="year long"><input type="text" class="hour"><span class="sep-time">:</span><input type="text" class="minute"></div><button class="v"><span></span></button><div class="cal"><select class="month"></select><select class="year"></select><button title="Previous month" class="prev"><span></span></button><button title="Today" class="now"><span></span></button><button title="Next month" class="next"><span></span></button><table cellpadding="0" cellspacing="0"><thead><tr><th>Mo</th><th>Tu</th><th>We</th><th>Th</th><th>Fr</th><th>Sa</th><th>Su</th></tr></thead><tbody></tbody></table></div>'
    );
    I(a, b);
    a = B(b);
    R(a, "focus", c);
    R(a, "blur", z);
    a = B(D(a));
    R(a, "focus", d);
    a = D(D(a));
    R(a, "focus", d);
    a = D(D(a));
    R(a, "focus", d);
    a = D(a);
    R(a, "focus", d);
    a = D(D(a));
    R(a, "focus", d);
    a = D(D(B(b)));
    R(a, "click", f);
    b = B(Q(b));
    R(b, "change", u);
    for (var n = 0, e = Z.length; n < e; n++)
      (a = O("option")), (a.value = n), y(a, Z[n]), I(b, a);
    b = D(b);
    R(b, "change", u);
    a = D(b);
    R(a, "click", q);
    a = D(a);
    R(a, "click", q);
    a = D(a);
    R(a, "click", q);
    b = D(a);
    R(b, "click", w);
    v.call(this);
    r.call(this);
    return this;
  };
  Y.prototype.g = function (a) {
    if (void 0 === a) return this.Yc;
    this.Yc = a;
    this.Ba && r.call(this);
    return this;
  };
  Y.prototype.f = function (a) {
    if (void 0 === a) return this.tf;
    this.tf = a;
    this.Ba && v.call(this);
    return this;
  };
  Y.prototype.jb = function () {
    if (this.Ba) {
      var a = B(D(B(this.$)));
      a && a.focus();
    }
    return this;
  };
})();
(function () {
  function v() {
    var a = this.$,
      b = this.BL,
      c = this.jt,
      e = [];
    b &&
      e.push(
        '<span class="i" style="background: url(',
        b[0],
        ") transparent no-repeat ",
        b[1],
        " ",
        b[2],
        ';"></span>'
      );
    e.push("<span>&nbsp;</span>");
    c && e.push('<span class="label">', u(c), "</span>");
    d(a, "iconed", !b);
    f(a, e.join(""));
  }
  function r() {
    function a() {
      d(b, "pressed", !0);
      A(f, "mouseup", a);
    }
    var b = q(this).$,
      f = e.window;
    c(b, "disabled") || (d(b, "pressed"), z(f, "mouseup", a));
  }
  function l(a) {
    var b = q(this),
      f = b.$;
    d(f, "pressed", !0);
    c(f, "disabled") || b.M("click", a);
  }
  var e = E.va,
    k = E.ma,
    h = E.oc,
    b = E.Qa,
    a = e.sb,
    g = e.tb,
    d = e.hb,
    f = e.Cd,
    c = e.wg,
    z = h.i,
    A = h.hc,
    h = k.he,
    m = k.lo,
    u = k.Kc,
    q = k.ve,
    w = (E.controls.input.io = function () {
      this.dg("click");
      w.G.constructor.apply(this, arguments);
    });
  h(w, E.controls.bf);
  w.prototype.Ha = function (c) {
    var f = (this.$ = a(b.uE ? "span" : "a"));
    f.ag = this;
    d(f, "page-bar-button");
    g(c, f);
    b.uE || z(f, "mousedown", r);
    z(f, "click", l);
    v.call(this);
    d(this.$, "checked", !this.Aj);
    d(this.$, "disabled", !this.Yc);
    return this;
  };
  w.prototype.Gf = function () {
    return this.$;
  };
  w.prototype.ie = function (a) {
    if (void 0 === a) return this.BL;
    this.BL = m(a);
    this.Ba && v.call(this);
    return this;
  };
  w.prototype.I = function (a) {
    if (void 0 === a) return this.jt;
    this.jt = a;
    this.Ba && v.call(this);
    return this;
  };
  w.prototype.g = function (a) {
    if (void 0 === a) return this.Yc;
    this.Yc = a;
    this.Ba && d(this.$, "disabled", !this.Yc);
    return this;
  };
  w.prototype.s = function (a) {
    if (void 0 === a) return this.Aj;
    this.Aj = a;
    this.Ba && d(this.$, "checked", !this.Aj);
    return this;
  };
  w.prototype.o = function (a) {
    if (void 0 === a) return this.J;
    this.J = a;
    return this;
  };
})();
(function () {
  function v() {
    var a = this.jt,
      b;
    b = A(z(this.$));
    f(b, a);
    b = A(b);
    f(b, r.call(this));
  }
  function r() {
    function a(b) {
      return (
        '<span style="display:inline-block;margin-top:3px;font-size:11px;vertical-align:top;">&nbsp;' +
        b +
        "</span>"
      );
    }
    function b(a) {
      return (
        '<span style="display:inline-block;font-size:23px;vertical-align:top;letter-spacing:1px;">' +
        a +
        "</span>"
      );
    }
    function c(a) {
      return (
        '<span style="display:inline-block;margin-bottom:3px;font-size:11px;vertical-align:bottom;">' +
        a +
        "&nbsp;</span>"
      );
    }
    var d = [],
      f = this.In,
      e = this.XD.toFixed(f),
      g = Math.floor(this.XD).toString().length,
      p = e.split("."),
      q = p[0],
      p = p[1];
    0 === f
      ? 2 < g
        ? (d.push(c(e.substr(0, e.length - 2))),
          d.push(b(e.substr(e.length - 2))))
        : d.push(b(e))
      : 8 == f
      ? (d.push(c(q + "." + p.substr(0, 5))),
        d.push(b(p.substr(5, 2))),
        d.push(a(p.substr(7))))
      : 7 == f
      ? (d.push(c(q + "." + p.substr(0, 4))),
        d.push(b(p.substr(4, 2))),
        d.push(a(p.substr(6))))
      : 6 == f
      ? (d.push(c(q + "." + p.substr(0, 3))),
        d.push(b(p.substr(3, 2))),
        d.push(a(p.substr(5))))
      : 5 == f
      ? (d.push(c(q + "." + p.substr(0, 2))),
        d.push(b(p.substr(2, 2))),
        d.push(a(p.substr(4))))
      : 4 == f
      ? (d.push(c(q + "." + p.substr(0, 2))), d.push(b(p.substr(2, 2))))
      : 3 == f
      ? (d.push(c(q + ".")), d.push(b(p.substr(0, 2))), d.push(a(p.substr(2))))
      : 2 == f
      ? (d.push(c(q + ".")), d.push(b(p)))
      : 1 == f
      ? (d.push(c(q + ".")), d.push(b(p)))
      : d.push(b(e));
    return d.join("");
  }
  function l() {
    function a() {
      d(b, "pressed", !0);
      q(f, "mouseup", a);
    }
    var b = w(this).$,
      f = k.window;
    c(b, "disabled") || (d(b, "pressed"), u(f, "mouseup", a));
  }
  function e(a) {
    var b = w(this),
      f = b.$;
    d(f, "pressed", !0);
    c(f, "disabled") || b.M("click", a);
  }
  var k = E.va,
    h = E.ma,
    b = E.oc,
    a = k.sb,
    g = k.tb,
    d = k.hb,
    f = k.Cd,
    c = k.wg,
    z = k.Xb,
    A = k.Ig,
    m = k.lh,
    u = b.i,
    q = b.hc,
    b = h.he,
    w = h.ve,
    p = (E.controls.input.ZK = function () {
      this.dg("click");
      p.G.constructor.apply(this, arguments);
    });
  b(p, E.controls.bf);
  p.prototype.Ha = function (b) {
    var c = (this.$ = a("div"));
    c.ag = this;
    d(c, "input-trade-button");
    f(
      c,
      '<div class="space"></div><div class="name"></div><div class="price"></div><div class="but"></div>'
    );
    g(b, c);
    u(m(c), "mousedown", l);
    u(m(c), "click", e);
    v.call(this);
    d(this.$, "disabled", !this.Yc);
    return this;
  };
  p.prototype.Gf = function () {
    return this.$;
  };
  p.prototype.I = function (a) {
    if (void 0 === a) return this.jt;
    this.jt = a;
    this.Ba && v.call(this);
    return this;
  };
  p.prototype.Pq = function (a) {
    if (void 0 === a) return this.XD;
    this.XD = a;
    this.Ba && v.call(this);
    return this;
  };
  p.prototype.cq = function (a) {
    if (void 0 === a) return this.In;
    this.In = a;
    this.Ba && v.call(this);
    return this;
  };
  p.prototype.g = function (a) {
    if (void 0 === a) return this.Yc;
    this.Yc = a;
    this.Ba && d(this.$, "disabled", !this.Yc);
    return this;
  };
})();
(function () {
  function v() {
    var a = this.$;
    a.checked = !!this.Aj;
    a.disabled = !!this.Yc;
    a.id = this.bj || "";
  }
  function r(a) {
    var b = g(this);
    b && ((b.Aj = this.checked), b.M("change", a));
  }
  var l = E.va,
    e = E.ma,
    k = l.sb,
    h = l.tb,
    b = l.hb,
    a = E.oc.i,
    l = e.he,
    g = e.ve,
    d = (E.controls.input.No = function (a) {
      this.Sv = a;
      this.Aj = this.Yc = !1;
      this.dg("change");
      d.G.constructor.apply(this, arguments);
    });
  l(d, E.controls.bf);
  d.prototype.Ha = function (d) {
    var c = (this.$ = k("input"));
    c.type = "radio";
    c.name = this.Sv;
    c.ag = this;
    b(c, "input-radio");
    h(d, c);
    a(c, "click", r);
    v.call(this);
    return this;
  };
  d.prototype.s = function (a) {
    if (void 0 === a) return this.Ba && (a = this.$) ? a.checked : this.Aj;
    this.Aj = a;
    this.Ba && v.call(this);
    return this;
  };
  d.prototype.g = function (a) {
    if (void 0 === a) return this.Yc;
    this.Yc = a;
    this.Ba && v.call(this);
    return this;
  };
  d.prototype.o = function (a) {
    if (void 0 === a) return this.bj;
    this.bj = a;
    this.Ba && v.call(this);
    return this;
  };
})();
(function () {
  function v() {
    var a = this.$;
    this.gt = [a.offsetWidth, a.offsetHeight];
    a: {
      for (a = g(this.$); a; ) {
        if ("div" == c(a) && z(a, "net")) {
          a = [a.offsetWidth - 2, a.offsetHeight - 2];
          break a;
        }
        a = d(a);
      }
      a = [0, 0];
    }
    var f = (this.aj = a),
      a = f[0],
      f = f[1],
      e = this.QD,
      n;
    if (e.gi != a || e.fi != f) {
      e.setAttribute("width", a * k.devicePixelRatio);
      e.setAttribute("height", f * k.devicePixelRatio);
      b(e, "width", a + "px");
      b(e, "height", f + "px");
      e.gi = a;
      e.fi = f;
      e = e.getContext("2d");
      e.clearRect(0, 0, a, f);
      e.setTransform(1, 0, 0, 1, 0, 0);
      e.scale(k.devicePixelRatio, k.devicePixelRatio);
      e.setLineDash && e.setLineDash([3]);
      e.beginPath();
      e.strokeStyle = "#C0C0C0";
      e.lineWidth = 1;
      if (!this.j3)
        for (n = 0; n < a; n += 32)
          n < a && (e.moveTo(n - 1 + 0.5, 0), e.lineTo(n - 1 + 0.5, f));
      for (; 0 < f; f -= 32)
        0 < f && (e.moveTo(0, f + 1 - 0.5), e.lineTo(a, f + 1 - 0.5));
      e.stroke();
    }
  }
  function r(a, b) {
    var c = this.wb;
    if (c && c.length) {
      b || (b = "#000000");
      var d = this.aj[0],
        f = Math.max(0, c.length - Math.floor((d - 50) / 3)),
        e = this.In,
        g = Math.pow(10, e),
        h,
        m = this.ir,
        u = this.ap,
        y = this.pL.getContext("2d");
      y.lineCap = "butt";
      y.lineJoin = "miter";
      y.lineWidth = 1;
      y.strokeStyle = b;
      y.beginPath();
      for (var k = c.length, z = 0, l = 0, B, Q; f < k; f++, l++)
        if ((Q = c[f]))
          "bid" == a && (h = Q.vb),
            "ask" == a && (h = Q.dc),
            isNaN(parseFloat(h)) ||
              ((B = Math.floor(m - h * g * u)),
              0 == l ? y.moveTo(z + 0.5, B + 0.5) : y.lineTo(z + 0.5, B + 0.5),
              (z += 3));
      y.lineTo(d + 5 + 0.5, B + 0.5);
      y.stroke();
      y.font = "9px Tahoma, sans-serif";
      --B;
      c = "";
      isNaN(parseFloat(h)) || (c = h.toFixed(e));
      y.fillStyle = b;
      y.beginPath();
      y.rect(d + 3, Math.max(B - 6, 0), y.measureText(c).width + 6, 13);
      y.fill();
      y.fillStyle = "#ffffff";
      y.textAlign = "left";
      y.textBaseline = "middle";
      y.fillText(c, d + 6, Math.max(B + 1, 7));
    }
  }
  function l(a, b, c, d, f, e) {
    var g = this.aj,
      h = g[0],
      m = g[1],
      g = Math.floor(this.ir - c * Math.pow(10, this.In) * this.ap);
    0 <= g &&
      g < m &&
      ((c = c.toFixed(this.In)),
      (a.font = "9px Tahoma, sans-serif"),
      (a.fillStyle = "#000"),
      (a.textAlign = "left"),
      (a.textBaseline = "bottom"),
      a.fillText(b, 2, g),
      (a.fillStyle = d),
      a.beginPath(),
      a.rect(0, g, h, 1),
      a.fill(),
      (a.fillStyle = f),
      a.beginPath(),
      a.rect(h + 3, Math.max(g - 6, 0), a.measureText(c).width + 6, 13),
      a.fill(),
      (a.fillStyle = e),
      (a.textAlign = "left"),
      (a.textBaseline = "middle"),
      a.fillText(c, h + 6, Math.max(g + 1, 7)));
  }
  var e = E.va,
    k = E.Qa,
    h = e.Cd,
    b = e.$a,
    a = e.sb,
    g = e.Xb,
    d = e.Ig,
    f = e.tb,
    c = e.md,
    z = e.wg,
    A = E.ma.he,
    m = e.hb,
    u = (E.controls.L.A2 = function () {
      this.wb = [];
      this.Kn = !0;
      u.G.constructor.apply(this, arguments);
    });
  A(u, E.controls.bf);
  u.prototype.Ha = function (b) {
    var e = (this.$ = a("div"));
    e.ag = this;
    h(
      e,
      '<div class="net"><canvas></canvas></div><div class="axis y"><canvas></canvas></div><div class="graph"><canvas></canvas></div><div class="lines"><canvas></canvas></div>'
    );
    m(e, "page-chart tick");
    f(b, e);
    a: {
      for (b = g(this.$); b; ) {
        if ("div" == c(b) && z(b, "net")) {
          b = g(b);
          break a;
        }
        b = d(b);
      }
      b = null;
    }
    this.QD = b;
    a: {
      for (b = g(this.$); b; ) {
        if ("div" == c(b) && z(b, "axis") && z(b, "y")) {
          b = g(b);
          break a;
        }
        b = d(b);
      }
      b = null;
    }
    this.PD = b;
    a: {
      for (b = g(this.$); b; ) {
        if ("div" == c(b) && z(b, "graph")) {
          b = g(b);
          break a;
        }
        b = d(b);
      }
      b = null;
    }
    this.pL = b;
    a: {
      for (b = g(this.$); b; ) {
        if ("div" == c(b) && z(b, "lines")) {
          b = g(b);
          break a;
        }
        b = d(b);
      }
      b = null;
    }
    this.W2 = b;
    v.call(this);
    return this;
  };
  u.prototype.rq = function (a) {
    if (void 0 === a) return this.Kn;
    this.Kn = a;
    return this;
  };
  u.prototype.cq = function (a) {
    if (void 0 === a) return this.In;
    this.In = a;
    return this;
  };
  u.prototype.u = function (a) {
    if (void 0 === a) return this.wb;
    this.wb = a || [];
    return this;
  };
  u.prototype.ph = function (a) {
    if (void 0 === a) return this.ew;
    this.ew = a;
    return this;
  };
  u.prototype.rh = function (a) {
    if (void 0 === a) return this.hw;
    this.hw = a;
    return this;
  };
  u.prototype.Entry = function (a) {
    if (void 0 === a) return this.Rv;
    this.Rv = a;
    return this;
  };
  u.prototype.W = function () {
    if (!this.Ba) return this;
    var a = this.aj,
      c = a[0],
      a = a[1],
      d = a + 2,
      f = Number.MAX_VALUE,
      e = 0,
      g = this.PD;
    49 != g.gi &&
      (g.setAttribute("width", 49 * k.devicePixelRatio), b(g, "width", "49px"));
    g.fi != d &&
      (g.setAttribute("height", d * k.devicePixelRatio),
      b(g, "height", d + "px"));
    var h = g.getContext("2d");
    h.clearRect(0, 0, 49, d);
    h.setTransform(1, 0, 0, 1, 0, 0);
    h.scale(k.devicePixelRatio, k.devicePixelRatio);
    h.font = "9px Tahoma, sans-serif";
    h.fillStyle = "#000";
    h.textAlign = "left";
    h.textBaseline = "middle";
    var u = this.wb;
    if (u && u.length) {
      var z = this.In,
        F = Math.pow(10, z);
      if (u) {
        for (
          var c = Math.max(0, u.length - Math.floor((c - 50) / 3)),
            y = u.length,
            A;
          c < y;
          c++
        )
          (A = u[c]) &&
            A.vb &&
            A.dc &&
            (A.vb > e && (e = A.vb),
            A.dc > e && (e = A.dc),
            A.vb < f && (f = A.vb),
            A.dc < f && (f = A.dc));
        if (f != Number.MAX_VALUE && 0 != e) {
          if ((u = this.ew)) u < f && (f = u), u > e && (e = u);
          if ((u = this.hw)) u < f && (f = u), u > e && (e = u);
          if ((u = this.Rv)) u < f && (f = u), u > e && (e = u);
          u = 0.1 * (e - f);
          f -= u;
          e += u;
          this.zL = f;
          this.yL = e;
          this.ap = a / (e * F - f * F);
          this.ir = a + this.ap * f * F;
          u = (32 * (e - f)) / a;
          for (e = a; 0 < e; )
            e != a &&
              (this.j3 || h.fillRect(0, e + 2, 4, 1),
              h.fillText(f.toFixed(z), 5, e + 2)),
              (f += u),
              (e -= 32);
        }
      }
      g.gi = 49;
      g.fi = d;
    }
    d = this.gt;
    a = d[0];
    d = d[1];
    f = this.pL;
    f.gi != a &&
      (f.setAttribute("width", a * k.devicePixelRatio),
      b(f, "width", a + "px"));
    f.fi != d &&
      (f.setAttribute("height", d * k.devicePixelRatio),
      b(f, "height", d + "px"));
    g = f.getContext("2d");
    g.clearRect(0, 0, a, d);
    g.setTransform(1, 0, 0, 1, 0, 0);
    g.scale(k.devicePixelRatio, k.devicePixelRatio);
    (g = this.wb) &&
      g.length &&
      (r.call(this, "bid", "#0060FF"), r.call(this, "ask", "#FF6060"));
    f.gi = a;
    f.fi = d;
    d = this.gt;
    a = d[0];
    d = d[1];
    f = this.W2;
    f.gi != a &&
      (f.setAttribute("width", a * k.devicePixelRatio),
      b(f, "width", a + "px"));
    f.fi != d &&
      (f.setAttribute("height", d * k.devicePixelRatio),
      b(f, "height", d + "px"));
    g = f.getContext("2d");
    g.clearRect(0, 0, a, d);
    g.setTransform(1, 0, 0, 1, 0, 0);
    g.scale(k.devicePixelRatio, k.devicePixelRatio);
    this.ew && l.call(this, g, "SL", this.ew, "#C03030", "#C03030", "#ffffff");
    this.hw && l.call(this, g, "TP", this.hw, "#3030C0", "#3030C0", "#ffffff");
    this.Rv &&
      l.call(this, g, "Entry", this.Rv, "#808080", "#808080", "#ffffff");
    m(this.$, "grid", !this.Kn);
    return this;
  };
  u.prototype.cY = function () {
    if (!this.Ba) return this;
    v.call(this);
    return this;
  };
})();
(function () {
  function v() {
    ya(this.$, "thin", this.Pv);
    var a = this.$;
    this.gt = [Math.max(a.offsetWidth, 0), Math.max(a.offsetHeight, 0)];
    a: {
      for (a = na(this.$); a; ) {
        if ("div" == Fa(a) && ia(a, "net")) {
          a = [Math.max(a.offsetWidth - 2, 0), Math.max(a.offsetHeight - 2, 0)];
          break a;
        }
        a = va(a);
      }
      a = [0, 0];
    }
    this.aj = a;
    a: {
      for (a = na(this.$); a; ) {
        if ("div" == Fa(a) && ia(a, "objects")) {
          a = [Math.max(a.offsetWidth, 0), Math.max(a.offsetHeight, 0)];
          break a;
        }
        a = va(a);
      }
      a = [0, 0];
    }
    this.HL = a;
    var a = this.qc.scale,
      b = 1;
    1 == a && (b = 1);
    2 == a && (b = 2);
    3 == a && (b = 4);
    4 == a && (b = 8);
    5 == a && (b = 16);
    6 == a && (b = 32);
    this.er = b;
    a = this.qc.scale;
    b = 1;
    1 == a && (b = 0);
    2 == a && (b = 0);
    3 == a && (b = 1);
    4 == a && (b = 3);
    5 == a && (b = 9);
    6 == a && (b = 21);
    this.oL = b;
    this.nL = 4 < this.qc.scale ? 2 : 1;
    a = this.qc.scale;
    b = 0;
    2 < a && (b = 1);
    3 < a && (b = 2);
    4 < a && (b = 5);
    5 < a && (b = 11);
    this.mL = b;
    a = this.qc.scale;
    b = 1;
    6 == a && (b = 1);
    5 == a && (b = 2);
    4 == a && (b = 4);
    3 == a && (b = 8);
    2 == a && (b = 16);
    1 == a && (b = 32);
    this.dr = b;
    a = 32 / this.dr;
    this.Gn = a = Math.floor(this.aj[0] / a);
    (a = Number(!!this.qc.shift))
      ? ((b = this.aj[0]),
        (a =
          Math.floor((b - 32 * Math.floor(b / 32)) / this.er) -
          1 +
          this.dr * a))
      : (a = 0);
    this.ft = a;
    this.aw = Ia(this.VD);
    var a = this.aj,
      b = this.HL,
      c = this.aw,
      d = this.qc.color,
      f = this.Vv;
    f.cb = this.qc;
    f.Lb = this.Lh;
    f.wd = this.Gn;
    f.Jea = this.dr;
    f.Kea = this.ft;
    f.le = this.er;
    f.Dm = this.nL;
    f.iE = this.mL;
    f.WL = this.oL;
    f.Aa = a[0];
    f.ta = a[1];
    f.se = b[0];
    f.Cj = b[1];
    f.A3 = c[0];
    f.hE = c[1];
    f.HM = 32;
    d == xa.Vm &&
      ((f.dj = "#ffffff"),
      (f.Ia = "#000000"),
      (f.xd = "#C0C0C0"),
      (f.nw = "#000000"),
      (f.mw = "#000000"),
      (f.mE = "#ffffff"),
      (f.lE = "#000000"),
      (f.nE = "#000000"),
      (f.qw = "#008000"),
      (f.lw = "#FF4500"),
      (f.aM = "#FF4500"),
      (f.ow = "#C0C0C0"));
    d == xa.el &&
      ((f.dj = "#000000"),
      (f.Ia = "#ffffff"),
      (f.xd = "#778899"),
      (f.nw = "#00FF00"),
      (f.mw = "#00FF00"),
      (f.mE = "#000000"),
      (f.lE = "#ffffff"),
      (f.nE = "#00FF00"),
      (f.qw = "#32CD32"),
      (f.lw = "#FF0000"),
      (f.aM = "#FF0000"),
      (f.ow = "#00C000"));
    d == xa.tl &&
      ((f.dj = "#000000"),
      (f.Ia = "#ffffff"),
      (f.xd = "#778899"),
      (f.nw = "#FFFF00"),
      (f.mw = "#FFFF00"),
      (f.mE = "#000000"),
      (f.lE = "#ffffff"),
      (f.nE = "#FFFF00"),
      (f.qw = "#32CD32"),
      (f.lw = "#FF0000"),
      (f.aM = "#FF0000"),
      (f.ow = "#00C000"));
    var c = this.qc,
      d = this.aj,
      f = this.HL,
      e = this.aw,
      a = c.color,
      b = this.bw;
    b.lp = c.from;
    b.scale = c.scale;
    b.zr = c.period;
    b.type = c.type;
    b.j = c.digits;
    b.Lb = this.Lh;
    b.Bg = c.descriptions;
    b.total = this.Gn;
    b.nb = this.ir;
    b.ib = this.yL;
    b.ob = this.zL;
    b.Sa = this.ap;
    b.Aa = d[0];
    b.ta = d[1];
    b.se = f[0];
    b.Cj = f[1];
    b.A3 = e[0];
    b.hE = e[1];
    b.le = this.er;
    b.Iea = this.dr;
    b.Dm = this.nL;
    b.iE = this.mL;
    b.WL = this.oL;
    c = "#FF4500";
    d = "#008000";
    f = "#000000";
    e = "#ffffff";
    a == xa.el &&
      ((c = "#FF0000"), (d = "#32CD32"), (f = "#ffffff"), (e = "#000000"));
    a == xa.tl &&
      ((c = "#FF0000"), (d = "#32CD32"), (f = "#ffffff"), (e = "#000000"));
    b.jk = c;
    b.pw = d;
    b.Ia = f;
    b.dj = e;
    b.ut = a;
    if ((d = this.qc))
      (a = this.$),
        (b = this.u3),
        (c = this.l3),
        (d = d.color),
        (f = "#ffffff"),
        d == xa.el && (f = "#000000"),
        d == xa.tl && (f = "#000000"),
        ka(a, "background-color", f),
        ka(b, "background-color", f),
        (f = "#000000"),
        d == xa.el && (f = "#ffffff"),
        d == xa.tl && (f = "#ffffff"),
        ka(b, "color", f),
        ka(c, "border-color", f);
  }
  function r() {
    l.call(this);
    if (this.Pv) {
      var a = this.qc,
        b = this.Lh;
      if (a) {
        var c = this.gt[0],
          d = a.color,
          f,
          e = this.U2;
        e.gi != c &&
          (e.setAttribute("width", c * ba.devicePixelRatio),
          ka(e, "width", c + "px"),
          (e.gi = c));
        20 != e.fi &&
          (e.setAttribute("height", 20 * ba.devicePixelRatio),
          ka(e, "height", "20px"),
          (e.fi = 20));
        e = e.getContext("2d");
        e.clearRect(0, 0, c, 20);
        if (b && b.length) {
          e.font = "9px Tahoma, sans-serif";
          e.textAlign = "left";
          e.setTransform(1, 0, 0, 1, 0, 0);
          e.scale(ba.devicePixelRatio, ba.devicePixelRatio);
          f = "#000000";
          d == xa.el && (f = "#ffffff");
          d == xa.tl && (f = "#ffffff");
          e.fillStyle = f;
          d = 0;
          a = a.from;
          f = 2 * this.dr;
          for (var n, c = c - 64; d < c; ) {
            if ((n = b[a])) {
              var g = new Date(n[0]);
              n = this.qc.period;
              var p = za[g.getUTCMonth()],
                x = g.getUTCFullYear(),
                h = g.getUTCHours(),
                q = g.getUTCMinutes(),
                g = g.getUTCDate();
              10 > h && (h = "0" + h);
              10 > q && (q = "0" + q);
              e.fillText(
                n <= Ca.pe
                  ? [g, " ", p, " ", h, ":", q].join("")
                  : [g, p, x].join(" "),
                d + 1,
                12
              );
              e.fillRect(d, 0, 1, 4);
            }
            a += f;
            d += 64;
          }
        }
      }
    }
    b = this.qc;
    c = this.$;
    ya(c, "grid", !b.grid);
    ya(c, "cross", "crosshair" != b.mode);
    ya(c, "create", !b.mode || "cursor" == b.mode || "crosshair" == b.mode);
  }
  function l(a) {
    var b = this.qc;
    if (b) {
      var c = D.call(this);
      if (c) {
        var d = this.Vv,
          f = this.g3,
          e = this.f3,
          n = this.$D,
          g = this.CL,
          b = [b.id, b.period].join("_");
        if (this.h3 != b || this.i3 != c) {
          for (var p; (p = na(e)); ) ra(p);
          for (; (p = na(f)); ) ra(p);
          for (; (p = na(n)); ) ra(p);
          if (g) for (var x in g) g[x] && g[x].hc("draw", fa);
        }
        this.h3 = b;
        if ((this.i3 = c) && (c = c.indicators) && c.length) {
          p = da.L.Nc;
          var h, q;
          x = a ? 1 : 0;
          for (var C = a ? c.length : 1, m = 0; x < C; x++)
            if ((b = c[x]))
              (h = b.instance),
                !h &&
                  ((q = b.type), (q = "Main" == q ? p.xW : p.yG(q))) &&
                  ((h = new q(b)), (b.instance = h), m++),
                h &&
                  (h.v ||
                    (h.i("focus", V),
                    h.i("blur", ea),
                    h.i("doubleclick", ha),
                    h.i("destroy", aa)),
                  (g[b.id] = h),
                  a || (h.hc("draw", fa), h.i("draw", fa)),
                  h.ha(f, e, n).Ha(d));
        }
      }
    }
  }
  function e(a) {
    var b = this.qc;
    if (b && void 0 !== b.color) {
      var c = this.aj,
        d = c[0],
        c = c[1],
        f = this.QD,
        e = this.$D,
        b = b.color;
      if (f.gi != d || f.fi != c || b != f.X2) {
        e.setAttribute("width", d);
        e.setAttribute("height", c);
        f.setAttribute("width", d * ba.devicePixelRatio);
        f.setAttribute("height", c * ba.devicePixelRatio);
        ka(f, "width", d + "px");
        ka(f, "height", c + "px");
        f.gi = d;
        f.fi = c;
        f.X2 = b;
        f = f.getContext("2d");
        f.clearRect(0, 0, d, c);
        f.setTransform(1, 0, 0, 1, 0, 0);
        f.scale(ba.devicePixelRatio, ba.devicePixelRatio);
        e = "#C0C0C0";
        b == xa.el && (e = "#778899");
        b == xa.tl && (e = "#778899");
        f.setLineDash && f.setLineDash([3]);
        f.strokeStyle = e;
        f.lineWidth = 1;
        f.beginPath();
        for (b = 0; b < d; b += 32)
          b < d && (f.moveTo(b - 1 + 0.5, 0), f.lineTo(b - 1 + 0.5, c));
        if (1 == a)
          for (a = c; 0 < a; a -= 32)
            0 < a && (f.moveTo(0, a + 1 - 0.5), f.lineTo(d, a + 1 - 0.5));
        f.stroke();
        f.closePath();
      }
    }
  }
  function k(a, b, c, d, f, e, n) {
    this.zL = b;
    this.yL = c;
    this.ap = d;
    this.ir = f;
    var g = this.qc;
    if (g) {
      var p = this.aj[1],
        x = p + 2,
        g = g.color,
        h = this.PD;
      49 != h.gi &&
        (ba.sa
          ? (h.setAttribute("width", 49 * ba.devicePixelRatio),
            ka(h, "width", "49px"))
          : h.setAttribute("width", 49),
        (h.gi = 49));
      h.fi != x &&
        (ba.sa
          ? (h.setAttribute("height", x * ba.devicePixelRatio),
            ka(h, "height", x + "px"))
          : h.setAttribute("height", x),
        (h.fi = x));
      var q = h.getContext("2d");
      q.clearRect(0, 0, 49, x);
      q.font = "9px Tahoma, sans-serif";
      q.textAlign = "left";
      q.textBaseline = "middle";
      q.setTransform(1, 0, 0, 1, 0, 0);
      q.scale(ba.devicePixelRatio, ba.devicePixelRatio);
      x = "#000000";
      g == xa.el && (x = "#ffffff");
      g == xa.tl && (x = "#ffffff");
      q.fillStyle = x;
      if (1 == a)
        for (
          x = (32 * (c - b)) / (32 * (Math.floor(p / 32) - 3)),
            g = p - 96,
            q.fillText(b.toFixed(e), 5, p - 64 + 1),
            q.fillRect(0, p - 64 + 1, 4, 1),
            q.fillText((b - x).toFixed(e), 5, p - 32 + 1),
            q.fillRect(0, p - 32 + 1, 4, 1),
            h = b + x;
          0 < g;

        )
          6 < g && (q.fillText(h.toFixed(e), 5, g), q.fillRect(0, g + 1, 4, 1)),
            (h += x),
            (g -= 32);
      if (2 == a || 3 == a)
        q.fillRect(0, 1, 4, 1),
          q.fillRect(0, p, 4, 1),
          void 0 !== c &&
            null !== c &&
            ((q.textBaseline = "top"), q.fillText(c.toFixed(e), 5, 0)),
          void 0 !== b &&
            null !== b &&
            ((q.textBaseline = "bottom"), q.fillText(b.toFixed(e), 5, p));
      3 == a &&
        (q.fillRect(0, f + 1, 4, 1),
        (q.textBaseline = "middle"),
        q.fillText(Number(0).toFixed(e), 5, f));
      n &&
        n.length &&
        (n || []).forEach(function (a) {
          var b = Math.floor(f - a * d * Math.pow(10, e));
          q.fillRect(0, b + 1, 4, 1);
          q.textBaseline = "middle";
          q.fillText(Number(a).toFixed(e), 5, b);
        });
    }
  }
  function h() {
    var a = this.qc,
      b = this.Lh;
    if (a && b && b.length) {
      var c = D.call(this);
      if (c) {
        var d = this.GL,
          f = this.VD,
          e = this.$D,
          g = this.bw,
          n,
          p = (c && c.objects) || [],
          x = this.o3 || [],
          h = [a.id, a.period].join("_");
        if (this.m3 != h || this.JL || this.n3 != c) {
          for (var q; (q = na(d)); ) ra(q);
          for (; (q = na(f)); ) ra(q);
        }
        this.m3 = h;
        this.JL = !1;
        this.n3 = c;
        if (b && b.length) {
          h = da.L.Sc;
          g.lp = a.from;
          if (p && p.length) {
            q = 0;
            for (var C = p.length; q < C; q++)
              (c = p[q]) &&
                c.type &&
                ((b = c.instance),
                !b &&
                  ((n = c.type.toLowerCase().replace(/\s/g, "")),
                  (n = h.Kf.zG(n))) &&
                  ((b = new n(c)),
                  b.i("focus", S),
                  b.i("blur", Z),
                  b.i("change", W),
                  b.i("doubleclick", Y),
                  (c.instance = b)),
                b && b.ha(f, d, e).Ha(g));
          }
          if (a.orders && x && x.length)
            for (p = 0, c = x.length; p < c; p++)
              if ((a = x[p]))
                (b = a.op),
                  !b &&
                    a.vE &&
                    ((b = new a.vE(a)),
                    b.i("focus", S),
                    b.i("blur", Z),
                    b.i("change", W),
                    b.i("doubleclick", Y),
                    (a.op = b)),
                  b && b.ha(f, d, e).Ha(g);
        }
      }
    }
  }
  function b() {
    if (Ma)
      for (var b, c = 0, d = Ma.length; c < d; c++)
        (b = Ma[c]) && b.h() && a.call(b);
  }
  function a() {
    var a = this.qc;
    if (a) {
      var b = pa,
        c = Pa,
        f,
        e = a.color,
        n,
        p,
        x = this.gt,
        a = x[0],
        x = x[1];
      n = this.aj;
      var h = n[0],
        q = n[1],
        C = this.V2,
        m = C.getContext("2d");
      C.gi != a &&
        (C.setAttribute("width", a * ba.devicePixelRatio),
        ka(C, "width", a + "px"));
      C.fi != x &&
        (C.setAttribute("height", x * ba.devicePixelRatio),
        ka(C, "height", x + "px"));
      m.clearRect(0, 0, a, x);
      m.setTransform(1, 0, 0, 1, 0, 0);
      m.scale(ba.devicePixelRatio, ba.devicePixelRatio);
      m.font = "9px Tahoma, sans-serif";
      n = "#ffffff";
      p = "#000000";
      e == xa.el && ((n = "#000000"), (p = "#ffffff"));
      e == xa.tl && ((n = "#000000"), (p = "#ffffff"));
      b &&
        c &&
        (m.beginPath(),
        (f = F.call(this, b[0], b[1])),
        m.moveTo(f[0], f[1]),
        (f = F.call(this, c[0], c[1])),
        m.lineTo(f[0], f[1]),
        (m.strokeStyle = p),
        m.stroke(),
        m.closePath(),
        m.clearRect(0, q, a, x - q),
        m.clearRect(h, 0, a - h, x));
      b &&
        ((e = p),
        (h = n),
        d.call(this, m, b[0], e, e, h),
        g.call(this, m, b[1], e, e, h));
      c &&
        ((e = p),
        (h = n),
        d.call(this, m, c[0], e, e, h),
        g.call(this, m, c[1], e, e, h));
      if (b && c) {
        m.font = "9px Tahoma, sans-serif";
        m.textAlign = "left";
        m.textBaseline = "top";
        c = pa;
        e = Pa;
        if (c && e)
          var b = c[0],
            c = c[1],
            h = e[0],
            q = e[1],
            e = this.qc.digits,
            w = Math.pow(10, e),
            b = Math.floor(Math.max(b, h) - Math.min(b, h)) / M.call(this),
            c = Math.floor(Math.max(c, q) * w - Math.min(c, q) * w),
            e = y.call(this, ba.yp, ba.zp)[1].toFixed(e),
            b = [b, c, e].join(" / ");
        else b = [0, 0];
        m.fillStyle = n;
        m.fillRect(f[0] + 1, f[1] + 1, m.measureText(b).width + 10, 14);
        m.fillStyle = p;
        m.fillText(b, f[0] + 10, f[1] + 2);
      }
      C.gi = a;
      C.fi = x;
    }
  }
  function g(a, b, c, d, f) {
    var e = this.qc,
      n = this.aj,
      g = n[0],
      p = n[1],
      n = F.call(this, 0, b)[1];
    0 <= n &&
      n < p &&
      ((b = b.toFixed(e.digits)),
      (a.font = "9px Tahoma, sans-serif"),
      (a.fillStyle = c),
      a.fillRect(0, n, g, 1),
      (a.fillStyle = d),
      a.fillRect(g + 3, Math.max(n - 6, 0), a.measureText(b).width + 6, 13),
      (a.fillStyle = f),
      (a.textAlign = "left"),
      (a.textBaseline = "middle"),
      a.fillText(b, g + 6, Math.max(n + 1, 7)));
  }
  function d(a, b, c, d, f) {
    var e = this.aj,
      n = e[0],
      e = e[1],
      g = F.call(this, b, 0)[0];
    -1 <= g &&
      g < n &&
      ((b = new Date(b)),
      (n = []),
      n.push(b.getUTCFullYear()),
      n.push("."),
      n.push(G(b.getUTCMonth() + 1)),
      n.push("."),
      n.push(G(b.getUTCDate())),
      n.push(" "),
      n.push(G(b.getUTCHours())),
      n.push(":"),
      n.push(G(b.getUTCMinutes())),
      (b = n.join("")),
      (a.font = "9px Tahoma, sans-serif"),
      (a.fillStyle = c),
      a.fillRect(g, 0, 1, e),
      (a.fillStyle = d),
      a.fillRect(Math.max(0, g - Math.ceil(40)), e + 3, 80, 13),
      (a.fillStyle = f),
      (a.textAlign = "center"),
      (a.textBaseline = "top"),
      a.fillText(b, Math.max(g, Math.ceil(40)), e + 5));
  }
  function f() {
    var a = this.qc,
      b = this.Lh;
    if (a && b && b.length) {
      var c = a.from,
        b = b.length,
        d = this.Gn,
        f = this.ft;
      c > b - d + f && (c = b - d + f);
      0 > c && (c = 0);
      a.from = c;
    }
  }
  function c(a, b) {
    var c = new Date(a);
    c.setUTCMilliseconds(0);
    c.setUTCSeconds(0);
    b == Ca.Pe && c.setUTCMinutes(5 * Math.floor(c.getUTCMinutes() / 5));
    b == Ca.Ne && c.setUTCMinutes(15 * Math.floor(c.getUTCMinutes() / 15));
    b == Ca.Oe && c.setUTCMinutes(30 * Math.floor(c.getUTCMinutes() / 30));
    b >= Ca.Sd && c.setUTCMinutes(0);
    b == Ca.pe && c.setUTCHours(4 * Math.floor(c.getUTCHours() / 4));
    b >= Ca.Ce && c.setUTCHours(0);
    b >= Ca.ze && c.setUTCHours(0);
    if (b == Ca.ze)
      for (; 0 != c.getUTCDay(); ) c.setUTCDate(c.getUTCDate() - 1);
    b >= Ca.nh && c.setUTCDate(1);
    return c.getTime();
  }
  function z() {
    for (var a = na(this.$); a; ) {
      if ("div" == Fa(a) && ia(a, "objects")) return na(a);
      a = va(a);
    }
    return null;
  }
  function A() {
    for (var a = na(this.$); a; ) {
      if ("div" == Fa(a) && ia(a, "objects")) return va(na(a));
      a = va(a);
    }
    return null;
  }
  function m() {
    for (var a = na(this.$); a; ) {
      if ("div" == Fa(a) && ia(a, "indicators")) return na(a);
      a = va(a);
    }
    return null;
  }
  function u() {
    for (var a = na(this.$); a; ) {
      if ("div" == Fa(a) && ia(a, "indicators")) return va(na(a));
      a = va(a);
    }
    return null;
  }
  function q() {
    for (var a = na(this.$); a; ) {
      if ("svg" == Fa(a)) return a;
      a = va(a);
    }
    return null;
  }
  function w() {
    for (var a = na(this.$); a; ) {
      if ("div" == Fa(a) && ia(a, "title")) return a;
      a = va(a);
    }
    return null;
  }
  function p() {
    for (var a = na(this.$); a; ) {
      if ("div" == Fa(a) && ia(a, "net")) return a;
      a = va(a);
    }
    return null;
  }
  function n(a) {
    for (var b = na(this.$); b; ) {
      if ("div" == Fa(b) && ia(b, "axis") && ia(b, a)) return na(b);
      b = va(b);
    }
    return null;
  }
  function x() {
    for (var a = na(this.$); a; ) {
      if ("div" == Fa(a) && ia(a, "net")) return na(a);
      a = va(a);
    }
    return null;
  }
  function C() {
    for (var a = na(this.$); a; ) {
      if ("div" == Fa(a) && ia(a, "crosshair")) return na(a);
      a = va(a);
    }
    return null;
  }
  function O(a, b) {
    var d = this.Lh,
      f = this.qc.period,
      e = d[d.length - 1][0],
      n = d[0][0];
    b && (a = c(a, f));
    if (a < n) return -Math.floor(a / M.call(this));
    if (a > e) return Math.floor((a - e) / M.call(this)) + d.length - 1;
    if (d) {
      for (var f = 0, e = d.length, g; f <= e; ) {
        n = Math.floor(f + (e - f) / 2);
        g = d[n] && d[n][0];
        if (g == a) return n;
        g > a ? (e = n - 1) : (f = n + 1);
      }
      f = 0;
      for (e = d.length; f < e; f++) if (d[f] && d[f][0] > a) return f - 1;
    }
    return -1;
  }
  function I(a) {
    var b = this.Lh;
    return 0 > a ? null : (b[a] && b[a][0]) || null;
  }
  function G(a) {
    return 10 > a ? "0" + a : "" + a;
  }
  function F(a, b) {
    var c = this.qc;
    return [
      Math.floor((O.call(this, a, !0) - c.from) * this.er) - 1,
      Math.floor(this.ir - b * Math.pow(10, c.digits) * this.ap),
    ];
  }
  function y(a, b) {
    var c = this.qc,
      d = this.Lh;
    if (!d || !d.length || !c) return [0, 0];
    var f = this.aw,
      e = c.period,
      n = c.from + Math.round((a - f[0]) / this.er);
    0 > n
      ? ((d = d[0][0] - Math.abs(n) * M.call(this)),
        e == Ca.nh && ((e = new Date(d)), e.setDate(1), (d = e.getTime())))
      : n >= d.length
      ? ((d = d[d.length - 1][0] + (n - (d.length - 1)) * M.call(this)),
        e == Ca.nh && ((e = new Date(d)), e.setDate(1), (d = e.getTime())))
      : (d = (d[n] && d[n][0]) || 0);
    f = b - f[1];
    f = (this.ir - f) / this.ap / Math.pow(10, c.digits);
    return [d, f];
  }
  function M() {
    var a = this.qc.period,
      b = 1;
    a == Ca.Ve && (b = 6e4);
    a == Ca.Pe && (b = 3e5);
    a == Ca.Ne && (b = 9e5);
    a == Ca.Oe && (b = 18e5);
    a == Ca.Sd && (b = 36e5);
    a == Ca.pe && (b = 144e5);
    a == Ca.Ce && (b = 864e5);
    a == Ca.ze && (b = 6048e5);
    a == Ca.nh && (b = 26784e5);
    return b;
  }
  function D() {
    var a = this.PL,
      b = this.qc,
      c = b && b.windows,
      d,
      f,
      e;
    if (c)
      for (var n = b.period, g = 0, p = c.length, x = -1; g < p; g++)
        if ((b = c[g]))
          if ((d = b.indicators))
            for (var h = 0, q = d.length; h < q; h++)
              if (
                (f = d[h]) &&
                !f.temp &&
                ((e = f.period_flags),
                "Main" == f.type ||
                  (n == Ca.Ve && e & ja.Ve) ||
                  (n == Ca.Pe && e & ja.Pe) ||
                  (n == Ca.Ne && e & ja.Ne) ||
                  (n == Ca.Oe && e & ja.Oe) ||
                  (n == Ca.Sd && e & ja.Sd) ||
                  (n == Ca.pe && e & ja.pe) ||
                  (n == Ca.Ce && e & ja.Ce) ||
                  (n == Ca.ze && e & ja.ze) ||
                  (n == Ca.nh && e & ja.Zj))
              ) {
                x++;
                if (x == a) return b;
                q = h;
              }
    return null;
  }
  function L(a) {
    var b = a.button;
    if (b) {
      var c = Ka(a.target),
        d = c.qc;
      1 == b &&
        "cursor" == d.mode &&
        setTimeout(function () {
          d.mode = "crosshair";
          c.M("mode");
          setTimeout(function () {
            K.call(c, a);
          }, 100);
        }, 100);
      2 == b &&
        "crosshair" == d.mode &&
        setTimeout(function () {
          d.mode = "cursor";
          c.M("mode");
          c.W();
          H();
        }, 100);
    } else if ((La = Ka(a.target)))
      if (((b = La.qc.mode), "crosshair" != b)) {
        if ("crosshair" != b && "cursor" != b) {
          var f = y.call(La, a.clientX, a.clientY),
            e = {};
          La.M("create", b, e, f[0], f[1]);
          if ((b = e.w) && b.Mf) {
            Da(X.window, "mouseup", Q);
            b.i("focus", S);
            b.i("blur", Z);
            b.i("change", W);
            b.i("doubleclick", Y);
            b.ha(La.VD, La.GL);
            b.Ha(La.bw);
            b.Mf(a, La);
            return;
          }
          La.qc.mode = "cursor";
          La.M("mode");
        }
        la = a.clientX;
        Wa = La.qc.from;
        Da(X.window, "mousemove", B);
        Da(X.window, "mouseup", Q);
      }
  }
  function B(a) {
    if (La) {
      if (
        (a.preventDefault(),
        a.stopPropagation(),
        (a = -(a.clientX - la)),
        !(1 > Math.abs(a)))
      ) {
        var b = La.dr,
          b = Math.floor(a / (32 / b));
        La.qc.from = Wa + b;
        f.call(La);
        ya(sa(La.Gf()), "moved");
        La.M("scrollprogress");
        ta.sc = !0;
      }
    } else Ba(X.window, "mousemove", B), Ba(X.window, "mouseup", Q);
  }
  function Q() {
    if (La) {
      var a = La.qc.mode;
      "crosshair" !== a && "cursor" !== a
        ? (Ba(X.window, "mouseup", Q), (La.qc.mode = "cursor"), La.M("mode"))
        : (Ba(X.window, "mousemove", B),
          Ba(X.window, "mouseup", Q),
          (ta.sc = !1),
          ya(sa(La.Gf()), "moved", !0),
          La.M("scrollfinish"),
          La.W(),
          (Wa = la = La = null));
    } else Ba(X.window, "mousemove", B), Ba(X.window, "mouseup", Q);
  }
  function N(a) {
    var b = Ka(a.target);
    b && K.call(b, a);
  }
  function K(a) {
    if (this && !Ua && this.qc) {
      var c;
      var d = this.qc;
      (c = this.Lh) && c.length && d
        ? ((d = d.from + Math.round((a.clientX - this.aw[0]) / this.er)),
          (c = (c && c[d]) || null))
        : (c = null);
      this.M("barinfo", c);
      !Ua &&
        "crosshair" == this.qc.mode &&
        this.Lh &&
        ((pa = y.call(this, a.clientX, a.clientY)), b());
    }
  }
  function P(a) {
    if (!a.button) {
      var b = Ka(a.target);
      (!b && Ua) ||
        "crosshair" != b.qc.mode ||
        ((wa = b),
        (Ua = !0),
        T(a),
        ya(X.body, "cross"),
        Da(X.window, "mouseup", H),
        Da(X.window, "mousemove", T));
    }
  }
  function T(a) {
    wa &&
      "crosshair" == wa.qc.mode &&
      wa.Lh &&
      ((Pa = y.call(wa, a.clientX, a.clientY)), b());
  }
  function R(a) {
    (a = Ka(a.target)) &&
      a.qc &&
      (a.M("barinfo", null),
      Ua || "crosshair" != a.qc.mode || Ua || ((Pa = pa = null), b()));
  }
  function H() {
    wa &&
      ((Pa = pa = Ua = null),
      b(),
      (wa.qc.mode = "cursor"),
      wa.M("mode"),
      (wa = null));
    ya(X.body, "cross", !0);
    Ba(X.window, "mouseup", H);
    Ba(X.window, "mousemove", T);
  }
  function S(a, b) {
    if (a) {
      var c = a.target;
      if (c && (c = Ka(c))) {
        c.M("focus", a);
        var d = this.id;
        d &&
          (-1 !== d.toLowerCase().indexOf("order")
            ? c.M("focusorder", a, d.substr(6), b)
            : c.M("focusobject", a, d));
      }
    }
  }
  function Z(a) {
    if (a) {
      var b = a.target;
      if (b && (b = Ka(b))) {
        b.M("blur", a);
        var c = this.id;
        c &&
          (-1 !== c.toLowerCase().indexOf("order")
            ? b.M("blurorder", a, c.substr(6))
            : b.M("blurobject", a, c));
      }
    }
  }
  function W(a) {
    if (a) {
      var b = this.element;
      if (b && (b = Ka(b))) {
        var c = this.id;
        c &&
          (-1 !== c.toLowerCase().indexOf("order")
            ? b.M("changeorder", a, c.substr(6))
            : b.M("changeobject", a, c));
      }
    }
  }
  function Y(a) {
    if (a) {
      var b = a.target;
      if (b && (b = Ka(b))) {
        var c = this.id;
        c &&
          (-1 !== c.toLowerCase().indexOf("order")
            ? b.M("doubleclickorder", a, c.substr(6))
            : b.M("doubleclickobject", a, c));
      }
    }
  }
  function V(a) {
    if (a) {
      var b = a.target;
      if (b && (b = Ka(b))) {
        b.M("focus", a);
        var c = this.id;
        c && b.M("focusindicator", a, c);
      }
    }
  }
  function ea(a) {
    if (a) {
      var b = a.target;
      if (b && (b = Ka(b))) {
        b.M("blur", a);
        var c = this.id;
        c && b.M("blurindicator", a, c);
      }
    }
  }
  function ha(a) {
    if (a) {
      var b = a.target;
      if (b && (b = Ka(b))) {
        var c = this.id;
        c && b.M("doubleclickindicator", a, c);
      }
    }
  }
  function fa(a) {
    if (this) {
      var b = a.target;
      if (b && (b = Ka(b))) {
        var c = b.Vv;
        c.ob = a.ob;
        c.ib = a.ib;
        c.Sa = a.Sa;
        c.nb = a.nb;
        c.j = a.j;
        c.Ub = a.Ub;
        c = b.bw;
        c.ob = a.ob;
        c.ib = a.ib;
        c.Sa = a.Sa;
        c.nb = a.nb;
        c.j = a.j;
        c.Ub = a.Ub;
        e.call(b, a.type);
        k.call(b, a.type, a.ob, a.ib, a.Sa, a.nb, a.j, a.vr);
        l.call(b, !0);
        h.call(b);
      }
    }
  }
  function aa(a) {
    this &&
      (a = a.target) &&
      (a = Ka(a)) &&
      (a = a.CL) &&
      ((a[this.id] = null), delete a[this.id]);
  }
  var X = E.va,
    ga = E.ma,
    U = E.oc,
    ba = E.Qa,
    da = E.controls,
    ca = X.Cd,
    ka = X.$a,
    oa = X.sb,
    ra = X.mm,
    na = X.Xb,
    sa = X.Ad,
    va = X.Ig,
    ma = X.tb,
    Fa = X.md,
    ia = X.wg,
    ya = X.hb,
    Da = U.i,
    Ba = U.hc,
    U = ga.he,
    Ia = ga.Vh,
    Ka = ga.ve,
    xa = (E.controls.L.jp = {});
  xa.Vm = 0;
  xa.el = 1;
  xa.tl = 2;
  var Ca = (E.controls.L.rg = {});
  Ca.Ve = 1;
  Ca.Pe = 5;
  Ca.Ne = 15;
  Ca.Oe = 30;
  Ca.Sd = 60;
  Ca.pe = 240;
  Ca.Ce = 1440;
  Ca.ze = 10080;
  Ca.nh = 43200;
  var ja = (E.controls.L.Fl = {});
  ja.Ve = 1;
  ja.Pe = 2;
  ja.Ne = 4;
  ja.Oe = 8;
  ja.Sd = 16;
  ja.pe = 32;
  ja.Ce = 64;
  ja.ze = 128;
  ja.Zj = 256;
  ja.Kd = ja.Ve | ja.Pe | ja.Ne | ja.Oe | ja.Sd | ja.pe | ja.Ce | ja.ze | ja.Zj;
  E.controls.L.Ax = c;
  var za = "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),
    Ma = [],
    La,
    la,
    Wa,
    wa,
    pa,
    Pa,
    Ua,
    ta = (E.controls.L.Zb = function () {
      var a = this;
      a.J = 0;
      a.qc = {};
      a.Lh = [];
      a.Pv = !0;
      a.CL = {};
      var b = (a.Vv = {});
      b.pb = function () {
        return O.apply(a, arguments);
      };
      b.E4 = function () {
        return I.apply(a, arguments);
      };
      b.Da = function () {
        return F.apply(a, arguments);
      };
      b.Tb = function () {
        return y.apply(a, arguments);
      };
      b.display = function () {
        return a.h();
      };
      b = a.bw = {};
      b.pb = function () {
        return O.apply(a, arguments);
      };
      b.E4 = function () {
        return I.apply(a, arguments);
      };
      b.Da = function () {
        return F.apply(a, arguments);
      };
      b.Tb = function () {
        return y.apply(a, arguments);
      };
      b.display = function () {
        return a.h();
      };
      a.dg(
        "mode",
        "create",
        "focus",
        "blur",
        "focusobject",
        "blurobject",
        "doubleclickobject",
        "changeobject",
        "focusorder",
        "blurorder",
        "doubleclickorder",
        "changeorder",
        "focusindicator",
        "blurindicator",
        "doubleclickindicator",
        "scrollfinish",
        "scrollprogress",
        "barinfo"
      );
      Ma.push(a);
      ta.G.constructor.apply(this, arguments);
    });
  U(ta, E.controls.bf);
  ta.prototype.dJ = function (a) {
    if (void 0 === a) return this.Ln;
    this.Ln = !!a;
    this.Vv.readOnly = this.Ln;
    return this;
  };
  ta.prototype.si = function (a) {
    if (void 0 === a) return this.Pv;
    this.Pv = a;
    return this;
  };
  ta.prototype.Ha = function (a) {
    var b = this,
      c = b.Ln,
      d = (b.$ = oa("div"));
    d.ag = b;
    ca(
      d,
      '<div class="net"><canvas></canvas></div><div class="axis x"><canvas></canvas></div><div class="axis y"><canvas></canvas></div><div class="indicators"><div class="graphics"></div><div class="admins"></div></div><div class="objects"><div class="graphics"></div><div class="admins"></div></div><div class="crosshair"><canvas></canvas></div><svg class="svg"></svg><div class="title"></div>'
    );
    ya(d, "page-chart");
    ma(a, d);
    c ||
      (Da(d, "mousedown", L),
      Da(d, "mousedown", P),
      (a = sa(d)),
      Ba(a, "mousemove", N),
      Da(a, "mousemove", N),
      Ba(a, "mouseout", R),
      Da(a, "mouseout", R));
    b.u3 = w.call(b);
    b.l3 = p.call(b);
    b.U2 = n.call(b, "x");
    b.PD = n.call(b, "y");
    b.V2 = C.call(b);
    b.QD = x.call(b);
    b.$D = q.call(b);
    b.GL = A.call(b);
    b.VD = z.call(b);
    b.f3 = u.call(b);
    b.g3 = m.call(b);
    v.call(b);
    c ||
      Da(X.window, "resize", function () {
        v.call(b);
        f.call(b);
        r.call(b);
      });
    return b;
  };
  ta.prototype.B = function (a) {
    if (void 0 === a) return this.qc;
    this.qc = a;
    return this;
  };
  ta.prototype.ef = function (a) {
    if (void 0 === a) return this.Lh;
    this.Lh = a;
    this.J = a.length;
    return this;
  };
  ta.prototype.W = function () {
    if (!this.Ba) return this;
    r.call(this);
    return this;
  };
  ta.prototype.vd = function () {
    if (!this.Ba) return this;
    v.call(this);
    return this;
  };
  ta.prototype.Qo = function () {
    var a = this.qc,
      b = this.Lh;
    if (!b || !b.length || !a) return this;
    a.from = Math.max(0, b.length - this.Gn + this.ft);
    return this;
  };
  ta.prototype.lU = function () {
    var a = this.qc,
      b = this.Lh;
    return b && b.length && a ? a.from == b.length - this.Gn + this.ft : !1;
  };
  ta.prototype.JP = function () {
    var a = this.Lh;
    if (!a || !a.length) return this;
    this.qc.from += a.length - this.J;
    this.J = a.length || 0;
    return this;
  };
  ta.prototype.wv = function (a) {
    var b = this.qc,
      c = b.from;
    a = O.call(this, a, !0);
    -1 < a && (c = a);
    b.from = c;
    f.call(this);
    return this;
  };
  ta.prototype.pD = function (a) {
    var b = this.Lh,
      c;
    if (b)
      for (var d = b.length - 1; -1 < d; d--)
        if ((c = b[d]) && a < c[2] && a > c[3]) {
          this.wv(c[0]);
          break;
        }
    return this;
  };
  ta.prototype.tm = function (a) {
    if (void 0 === a) return this.qa;
    this.qa = a;
    this.K("hidden", a);
    return this;
  };
  ta.prototype.wI = function (a) {
    void 0 !== a && ((this.o3 = a), (this.JL = !0));
  };
  ta.prototype.$P = function () {
    return y.call(this, ba.yp, ba.zp);
  };
  ta.prototype.QP = function () {
    f.call(this);
  };
  ta.prototype.sl = function (a) {
    if (void 0 === a) return this.PL;
    this.PL = a;
    return this;
  };
})();
(function () {
  var v = E.va,
    r = E.controls,
    l = E.controls.L.Sc,
    e = E.V,
    k = v.sb,
    h = v.Uj,
    b = v.mm,
    a = v.tb,
    g = v.hb,
    d = v.tG,
    f = v.$a,
    c = v.Ad,
    z = (l.Kf = function (a, b) {
      if (!0 !== b)
        a.id || (a.id = new Date().getTime().toString()), (this.id = a.id);
      else {
        var c = a.X;
        e && e.data && e.data.ig && a instanceof e.data.ig && (c = a.X);
        e && e.data && e.data.Tg && a instanceof e.data.Tg && (c = a.ka);
        this.id = ["Order", c].join("_");
      }
      this.data = a;
      this.dg("focus", "blur", "change", "doubleclick", "destroy");
      this.iw = !0;
    });
  z.prototype.ha = function (b, d, f) {
    var e = this.canvas,
      p = this.Nb,
      n = this.element;
    e ||
      ((e = this.canvas = k("canvas")),
      (e.id = [this.id, "graph"].join("_")),
      g(e, "graphic"));
    n ||
      ((n = this.element = k("div")),
      (n.id = [this.id, "admin"].join("_")),
      g(n, "admin"));
    p ||
      ((p = this.Nb = k("g", "http://www.w3.org/2000/svg")),
      (p.id = [this.id, "svg"].join("_")));
    if (e) {
      var x = c(e);
      (x && x == b) || a(b, e);
    }
    ((x = c(n)) && x == d) || a(d, n);
    ((x = c(p)) && x == f) || a(f, p);
    return this;
  };
  z.prototype.Qd = function () {
    var a = r.L.Fl,
      b = r.L.rg,
      c = this.canvas,
      d = this.element,
      e = this.Nb,
      n = this.data,
      g = this.v.zr,
      h = n.period_flags;
    if (n.temp)
      return (
        f(c, "display", "none"),
        f(d, "display", "none"),
        e.setAttribute("visibility", "hidden"),
        !1
      );
    if (h == a.Kd)
      return (
        f(c, "display", ""),
        f(d, "display", ""),
        e.setAttribute("visibility", "visible"),
        !0
      );
    if (
      !(
        (g != b.Ve || h & a.Ve) &&
        (g != b.Pe || h & a.Pe) &&
        (g != b.Ne || h & a.Ne) &&
        (g != b.Oe || h & a.Oe) &&
        (g != b.Sd || h & a.Sd) &&
        (g != b.pe || h & a.pe) &&
        (g != b.Ce || h & a.Ce) &&
        (g != b.ze || h & a.ze) &&
        (g != b.nh || h & a.Zj)
      )
    )
      return (
        f(c, "display", "none"),
        f(d, "display", "none"),
        e.setAttribute("visibility", "hidden"),
        !1
      );
    f(c, "display", "");
    f(d, "display", "");
    e.setAttribute("visibility", "visible");
    return !0;
  };
  z.prototype.gb = function () {
    this.M("blur", { target: this.element });
    this.M("destroy", { target: this.element });
    h(this.canvas);
    h(this.element);
    h(this.Nb);
    b(this.canvas);
    b(this.element);
    b(this.Nb);
    this.data = this.v = this.Nb = this.element = this.canvas = null;
    this.mu();
    return this;
  };
  z.prototype.jb = function () {
    var a = this.element;
    a && c(a) && (a = d(a, "input")) && a[0] && a[0].focus();
    return this;
  };
  z.prototype.dg = function (a) {
    var b = this.ke;
    b || (b = this.ke = {});
    if (arguments.length)
      for (var c = 0, d = arguments.length; c < d; c++) b[arguments[c]] = [];
    return this;
  };
  z.prototype.M = function () {
    var a = this.ke,
      b = !0,
      c;
    c = Array.prototype.shift.apply(arguments);
    if (!a || !a[c]) throw Error(["Control hasn't event \"", c, '"'].join(""));
    if ((a = a[c]))
      for (c = a.length - 1; 0 <= c; c--)
        try {
          !1 === a[c].apply(this, arguments) && (b = !1);
        } catch (d) {
          console.log(d);
        }
    return b;
  };
  z.prototype.i = function (a, b) {
    var c = this.ke;
    if (!c || !c[a]) {
      var d = [],
        f;
      for (f in c) d.push(f);
      throw Error(
        [
          "Control hasn't event \"",
          a,
          '" avaliavle events: ',
          d.join(", "),
        ].join("")
      );
    }
    c[a].push(b);
    return this;
  };
  z.prototype.hc = function (a, b) {
    var c = this.ke;
    if (!c || !c[a]) throw Error(["Control hasn't event \"", a, '"'].join(""));
    if ((c = c[a]))
      for (var d = c.length - 1; 0 <= d; d--)
        if (c[d] == b) {
          c.splice(d, 1);
          break;
        }
    return this;
  };
  z.prototype.mu = function () {
    var a,
      b = this.ke;
    if (b) {
      for (var c in b)
        if ((a = b[c])) {
          for (var d = 0, f = a.length; d < f; d++) a[d] = null;
          b[c] = null;
        }
      this.ke = null;
    }
    return this;
  };
  l.cc = function (a, b) {
    function c() {}
    void 0 === b && (b = z);
    c.prototype = b.prototype;
    a.prototype = new c();
    a.prototype.constructor = a;
    a.G = b.prototype;
  };
  z.Ec = function () {
    var a = {};
    a.id = new Date().getTime().toString();
    a.period_flags = r.L.Fl.Kd;
    a.disabled = !1;
    a.background = !1;
    a.description = "";
    return a;
  };
  z.zG = function (a) {
    return z.J()[a] || null;
  };
  var A = {};
  z.J = function () {
    if (!Object.getOwnPropertyNames(A).length) {
      for (
        var a = [l.vh, l.nr, l.Gm, l.yt, l.C3, l.oE, l.TM], b = 0, c = a.length;
        b < c;
        b++
      ) {
        var d = a[b],
          f;
        for (f in d) {
          var e = d[f],
            g = e.type;
          g && ((g = g.replace(/\s/g, "").toLowerCase()), (A[g] = e));
        }
      }
      A.callout = l.LP;
    }
    return A;
  };
})();
(function () {
  var v = (E.controls.L.Sc.Pa.ma = {});
  v.qj = function (r, l, e, k, h) {
    h = Math.pow(10, h);
    r = Math.floor(Math.max(r, e) - Math.min(r, e));
    l = Math.floor(Math.max(l, k) * h - Math.min(l, k) * h);
    return [r, l].join(" / ");
  };
  v.Ti = function (r, l, e, k) {
    var h = 0.5 * v.jq(r, l, e, k);
    e = v.Hg(r, l, e, k);
    return [Math.round(r + h * Math.cos(e)), Math.round(l + h * Math.sin(e))];
  };
  v.jq = function (r, l, e, k) {
    return Math.sqrt((e - r) * (e - r) + (k - l) * (k - l));
  };
  v.Hg = function (r, l, e, k) {
    return Math.atan2(k - l, e - r);
  };
  v.Rd = function (r, l) {
    return [l * Math.cos(r), l * Math.sin(r)];
  };
  v.KP = function (r, l, e, k) {
    function h(a) {
      return ((a - e[1]) / (k[1] - e[1])) * (k[0] - e[0]) + e[0];
    }
    function b(a) {
      return ((a - e[0]) / (k[0] - e[0])) * (k[1] - e[1]) + e[1];
    }
    var a = 0,
      g = b(a);
    g > l ? ((g = l), (a = h(g))) : 0 > g && ((g = 0), (a = h(g)));
    var d = b(r);
    d > l ? ((d = l), (r = h(d))) : 0 > d && ((d = 0), (r = h(d)));
    return [
      [a, g],
      [r, d],
    ];
  };
  v.PF = function (r, l, e) {
    return [((r - l[1]) / (e[1] - l[1])) * (e[0] - l[0]) + l[0], r];
  };
})();
(function () {
  function v() {
    var c = this.v,
      d = this.data,
      f = this.canvas,
      p = this.element,
      x = this.Nb,
      h = this.qb,
      q = this.input,
      C = this.Pb,
      y = c.se,
      u = c.Cj,
      k = f.getContext("2d"),
      B = this.R,
      l = d.date[0],
      L = c.pb(l, !0),
      D = m.sc || d.disabled;
    G(f, "z-index", d.background ? "0" : "");
    x.setAttribute("visibility", D ? "hidden" : "visible");
    C || ((C = this.Pb = w("title", "http://www.w3.org/2000/svg")), n(x, C));
    h ||
      ((h = this.qb = w("line", "http://www.w3.org/2000/svg")),
      h.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (h.w = this),
      O(h, "mousedown", e),
      O(h, "dblclick", b),
      n(x, h));
    q ||
      ((q = this.input = w("input")),
      (q.type = "checkbox"),
      (q.w = this),
      G(q, { position: "absolute", top: "-3000px", left: "-3000px" }),
      O(q, "focus", a),
      O(q, "blur", g),
      n(p, q));
    parseInt(f.style.width, 10) != y &&
      (z.sa
        ? f.setAttribute("width", y * z.devicePixelRatio)
        : f.setAttribute("width", y),
      G(f, "width", y + "px"));
    parseInt(f.style.height, 10) != u &&
      (z.sa
        ? f.setAttribute("height", u * z.devicePixelRatio)
        : f.setAttribute("height", u),
      G(f, "height", u + "px"));
    B && k.clearRect.apply(k, B);
    z.sa &&
      (k.setTransform(1, 0, 0, 1, 0, 0),
      k.scale(z.devicePixelRatio, z.devicePixelRatio));
    -1 == L ||
      L < c.lp ||
      L > c.lp + c.total ||
      ((f = this.focused),
      (L = (L - c.lp) * c.le - 1),
      (k.fillStyle = "#ff0000"),
      k.fillRect(L, 0, 1, c.ta),
      (this.R = [L, 0, 1, c.ta]),
      D ||
        ((C.textContent = [d.name, r(l)].join("\n")),
        h.setAttribute("x1", L),
        h.setAttribute("y1", 0),
        h.setAttribute("x2", L),
        h.setAttribute("y2", c.ta)),
      f &&
        ((k.fillStyle = "#f00"),
        k.fillRect(L - 2, 0, 5, 5),
        k.fillRect(L - 2, c.ta - 5, 5, 5),
        (k.fillStyle = c.Ia),
        k.fillRect(L - 1, 1, 3, 3),
        k.fillRect(L - 1, c.ta - 4, 3, 3),
        (this.R[0] = Math.min(this.R[0], L - 3)),
        (this.R[2] = Math.max(this.R[2], 6))),
      d.ray &&
        ((h = r(l)),
        (k.fillStyle = "#ff0000"),
        k.fillRect(Math.max(0, L - Math.ceil(40)), c.ta + 3, 80, 13),
        (k.font = "9px Tahoma, sans-serif"),
        (k.fillStyle = "#ffffff"),
        (k.textAlign = "center"),
        (k.textBaseline = "top"),
        k.fillText(h, Math.max(L, Math.ceil(40)), c.ta + 5),
        (this.R[0] = Math.min(this.R[0], Math.max(L - Math.ceil(40), 0) - 1)),
        (this.R[2] = Math.max(this.R[2], 96)),
        (this.R[3] = c.Cj)),
      !c.Bg || !(h = (d.description || "").substr(0, 64))) ||
      (k.save(),
      k.translate(L, c.ta - 3),
      k.rotate(0.5 * -Math.PI),
      (k.font = "10px Tahoma, sans-serif"),
      (k.textAlign = "left"),
      (k.textBaseline = "bottom"),
      (k.fillStyle = c.Ia),
      k.fillText(h, 1, -1),
      k.restore(),
      (this.R[0] = Math.min(this.R[0], L - 11)),
      (this.R[2] = Math.max(this.R[2], 14)));
  }
  function r(a) {
    a = new Date(a);
    var b = [];
    b.push(a.getUTCFullYear());
    b.push(".");
    b.push(l(a.getUTCMonth() + 1));
    b.push(".");
    b.push(l(a.getUTCDate()));
    b.push(" ");
    b.push(l(a.getUTCHours()));
    b.push(":");
    b.push(l(a.getUTCMinutes()));
    return b.join("");
  }
  function l(a) {
    return 10 > a ? "0" + a : "" + a;
  }
  function e(a) {
    if (this) {
      var b = this.w;
      if (b) {
        var c = b.element;
        if (c) {
          var d = p(c);
          d &&
            setTimeout(function () {
              d.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        L = b;
        O(window, "mousemove", k);
        O(window, "mouseup", h);
      }
    }
  }
  function k(a) {
    var b = L.v;
    L.data.date[0] = b.Tb(a.clientX, 0)[0];
    L.Ha(b);
  }
  function h(a) {
    if (L.lc) {
      var b = L.input;
      b && b.focus();
    }
    L.lc = null;
    L.Ha(L.v);
    L.M("change", a);
    L = null;
    I(window, "mousemove", k);
    I(window, "mouseup", h);
  }
  function b(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function a(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), v.call(b));
        clearTimeout(c);
      }, 50);
    clearTimeout(b.Kb);
  }
  function g(a) {
    var b = this.w;
    clearTimeout(b.Kb);
    b.Kb = setTimeout(function () {
      var c = x();
      ("input" == C(c) && "checkbox" == c.type && c.sf) ||
        ((b.focused = !1), v.call(b), b.M("blur", a));
    }, 0);
  }
  var d = E.va,
    f = E.oc,
    c = E.controls,
    z = E.Qa,
    A = c.L.Sc,
    m = c.L.Zb,
    u = E.ba.xa,
    q = E.Ma,
    w = d.sb,
    p = d.Xb,
    n = d.tb,
    x = d.Wf,
    C = d.md,
    O = f.i,
    I = f.hc,
    G = d.$a,
    F,
    y,
    M,
    D,
    L,
    B = (A.vh.Dea = function (a) {
      B.G.constructor.apply(this, arguments);
    });
  A.cc(B);
  B.type = "Vertical Line";
  B.Ec = function (a, b, c) {
    b = A.Kf.Ec();
    b.type = B.type;
    b.name = u.OO + " " + c;
    b.date = [a];
    b.ray = !0;
    return b;
  };
  B.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    B.G.Qd.call(this) && v.call(this);
    return this;
  };
  B.prototype.Mf = function (a) {
    var b = this.qb,
      c = this.input,
      d = {};
    d.clientX = a.clientX;
    d.clientY = a.clientY;
    d.currentTarget = b;
    this.lc = !0;
    e.call(b, d);
    c &&
      c.focus &&
      setTimeout(function () {
        c.focus();
      });
    return this;
  };
  B.prototype.gb = function () {
    this.R = null;
    var c = this.input;
    c && ((c.w = null), I(c, "focus", a), I(c, "blur", g), (this.input = null));
    var d = this.qb;
    c &&
      ((d.w = null),
      I(d, "mousedown", e),
      I(d, "dblclick", b),
      (this.qb = null));
    this.Pb = null;
    B.G.gb.apply(this, arguments);
    return this;
  };
  B.prototype.kb = function (a) {
    if (!F) {
      var b = { position: "absolute" };
      F = q(c.input.Date)
        .b(b)
        .b({ top: "16px", left: "104px", width: "140px" });
      y = q(c.page.I, "vertical-line-time")
        .Text(u.gd + ":")
        .b(b)
        .b({ top: "20px", width: "98px", "text-align": "right" });
      M = q(c.input.pa)
        .o("vertical-line-ray")
        .b(b)
        .b({ top: "49px", left: "104px" });
      D = q(c.page.I, "vertical-line-ray")
        .Text(u.LF)
        .b(b)
        .b({ top: "48px", left: "121px", "white-space": "nowrap" });
    }
    var b = this.data,
      d = b.date[0],
      d = d + 6e4 * new Date().getTimezoneOffset();
    F.f(d);
    M.s(!!b.ray);
    a.c(F).c(y).c(M).c(D);
    return this;
  };
  B.prototype.lb = function () {
    var a = this.data;
    a.ray = M.s();
    a.date[0] = F.f() - 6e4 * new Date().getTimezoneOffset();
    return this;
  };
})();
(function () {
  function v() {
    var a = this.canvas,
      c = this.element,
      f = this.Nb,
      e = this.qb,
      n = this.input,
      g = this.Pb,
      p = this.v,
      q = this.data,
      C = this.focused,
      m = a.getContext("2d"),
      y = q.value[0],
      l = this.R,
      G = z.sc || q.disabled,
      D = p.se,
      I = p.Cj,
      F = p.Da(0, y)[1];
    O(a, "z-index", q.background ? "0" : "");
    f.setAttribute("visibility", G ? "hidden" : "visible");
    g || ((g = this.Pb = u("title", "http://www.w3.org/2000/svg")), w(f, g));
    e ||
      ((e = this.qb = u("line", "http://www.w3.org/2000/svg")),
      e.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (e.w = this),
      x(e, "mousedown", r),
      x(e, "dblclick", k),
      w(f, e));
    n ||
      ((n = this.input = u("input")),
      (n.type = "checkbox"),
      (n.w = this),
      O(n, { position: "absolute", top: "-3000px", left: "-3000px" }),
      x(n, "focus", h),
      x(n, "blur", b),
      w(c, n));
    parseInt(a.style.width, 10) != D &&
      (d.sa
        ? a.setAttribute("width", D * d.devicePixelRatio)
        : a.setAttribute("width", D),
      O(a, "width", D + "px"));
    parseInt(a.style.height, 10) != I &&
      (d.sa
        ? a.setAttribute("height", I * d.devicePixelRatio)
        : a.setAttribute("height", I),
      O(a, "height", I + "px"));
    void 0 !== l && m.clearRect.apply(m, l);
    d.sa &&
      (m.setTransform(1, 0, 0, 1, 0, 0),
      m.scale(d.devicePixelRatio, d.devicePixelRatio));
    0 > F ||
      F > p.ta - 1 ||
      ((m.fillStyle = "#ff0000"),
      m.fillRect(0, F, p.Aa, 1),
      (this.R = [0, F, p.Aa, 1]),
      G ||
        ((g.textContent = [q.name, y.toFixed(p.j)].join("\n")),
        e.setAttribute("x1", 0),
        e.setAttribute("y1", F),
        e.setAttribute("x2", p.Aa),
        e.setAttribute("y2", F)),
      C &&
        ((m.fillStyle = "#f00"),
        m.fillRect(0, F - 2, 5, 5),
        m.fillRect(p.Aa - 5, F - 2, 5, 5),
        (m.fillStyle = p.Ia),
        m.fillRect(1, F - 1, 3, 3),
        m.fillRect(p.Aa - 4, F - 1, 3, 3),
        (this.R[1] = F - 3),
        (this.R[3] = 6)),
      (m.font = "9px Tahoma, sans-serif"),
      (m.textAlign = "left"),
      (m.textBaseline = "middle"),
      q.ray &&
        ((a = y.toFixed(p.j)),
        (c = m.measureText(a).width),
        (m.fillStyle = "#ff0000"),
        m.fillRect(p.Aa + 3, Math.max(F - 6, 0), c + 6, 13),
        (m.fillStyle = "#ffffff"),
        m.fillText(a, p.Aa + 6, Math.max(F + 1, 7)),
        (this.R[2] = p.se),
        (this.R[1] = Math.min(this.R[1], F - 15)),
        (this.R[3] = Math.max(this.R[3], 30))),
      !p.Bg || !(a = (q.description || "").substr(0, 64))) ||
      ((m.font = "10px Tahoma, sans-serif"),
      (m.textBaseline = "bottom"),
      (m.fillStyle = p.Ia),
      m.fillText(a, 4, F - 1),
      (this.R[1] = Math.min(this.R[1], F - 15)),
      (this.R[3] = Math.max(this.R[3], 30)));
  }
  function r(a) {
    if (this) {
      var b = this.w;
      if (b) {
        var c = b.element;
        if (c) {
          var d = q(c);
          d &&
            setTimeout(function () {
              d.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        M = b;
        x(window, "mousemove", l);
        x(window, "mouseup", e);
      }
    }
  }
  function l(a) {
    var b = M.v;
    M.data.value[0] = b.Tb(0, a.clientY)[1];
    M.Ha(b);
  }
  function e(a) {
    if (M.lc) {
      var b = M.input;
      b && b.focus();
    }
    M.lc = null;
    M.Ha(M.v);
    M.M("change", a);
    M = null;
    C(window, "mousemove", l);
    C(window, "mouseup", e);
  }
  function k(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function h(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), v.call(b));
        clearTimeout(c);
      }, 50);
    clearTimeout(b.Kb);
  }
  function b(a) {
    var b = this.w;
    clearTimeout(b.Kb);
    b.Kb = setTimeout(function () {
      var c = p();
      ("input" == n(c) && "checkbox" == c.type && c.sf) ||
        ((b.focused = !1), v.call(b), b.M("blur", a));
    }, 0);
  }
  var a = E.va,
    g = E.oc,
    d = E.Qa,
    f = E.controls,
    c = f.L.Sc,
    z = f.L.Zb,
    A = E.ba.xa,
    m = E.Ma,
    u = a.sb,
    q = a.Xb,
    w = a.tb,
    p = a.Wf,
    n = a.md,
    x = g.i,
    C = g.hc,
    O = a.$a,
    I,
    G,
    F,
    y,
    M,
    D = (c.vh.V9 = function (a) {
      D.G.constructor.apply(this, arguments);
    });
  c.cc(D);
  D.type = "Horizontal Line";
  D.Ec = function (a, b, d) {
    a = c.Kf.Ec();
    a.type = D.type;
    a.name = A.KO + " " + d;
    a.value = [b];
    a.ray = !0;
    return a;
  };
  D.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    D.G.Qd.call(this) && v.call(this);
    return this;
  };
  D.prototype.Mf = function (a) {
    var b = this.qb,
      c = this.input,
      d = {};
    d.clientX = a.clientX;
    d.clientY = a.clientY;
    d.currentTarget = b;
    this.lc = !0;
    r.call(b, d);
    c &&
      c.focus &&
      setTimeout(function () {
        c.focus();
      });
    return this;
  };
  D.prototype.gb = function () {
    this.R = null;
    var a = this.input;
    a && ((a.w = null), C(a, "focus", h), C(a, "blur", b), (this.input = null));
    var c = this.qb;
    a &&
      ((c.w = null),
      C(c, "mousedown", r),
      C(c, "dblclick", k),
      (this.qb = null));
    this.Pb = null;
    D.G.gb.apply(this, arguments);
    return this;
  };
  D.prototype.kb = function (a) {
    if (!I) {
      var b = { position: "absolute" };
      I = m(f.input.Number)
        .o("horizontal-line-time")
        .b(b)
        .b({ top: "16px", left: "104px", width: "100px" });
      G = m(f.page.I, "horizontal-line-time")
        .Text(A.Ld + ":")
        .b(b)
        .b({ top: "20px", width: "98px", "text-align": "right" });
      F = m(f.input.pa)
        .o("horizontal-line-ray")
        .b(b)
        .b({ top: "49px", left: "104px" });
      y = m(f.page.I, "horizontal-line-ray")
        .Text(A.LF)
        .b(b)
        .b({ top: "48px", left: "121px", "white-space": "nowrap" });
    }
    var b = this.data,
      c = this.v.j;
    I.f(b.value[0]).T(c).Y(Math.pow(10, -c));
    F.s(!!b.ray);
    a.c(I).c(G).c(F).c(y);
    return this;
  };
  D.prototype.lb = function () {
    var a = this.data;
    a.ray = F.s();
    a.value[0] = I.f();
    return this;
  };
})();
(function () {
  function v(a) {
    return [1e5 * Math.cos(a), 1e5 * Math.sin(a)];
  }
  function r(a) {
    if (this) {
      var b = this.w;
      if (b) {
        var c = b.element;
        if (c) {
          var d = w(c);
          d &&
            setTimeout(function () {
              d.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        S = b;
        Z = "line";
        this == b.xb && (Z = "point1");
        this == b.Ra && (Z = "point2");
        if ("line" == Z) {
          b = c.Ge || u(c);
          c.Ge = b;
          var c = S.data.date,
            f = S.data.value,
            g = S.v,
            p = g.Da(c[0], f[0]);
          W = b[0] + p[0];
          ea = b[1] + p[1];
          p = g.Da(c[1], f[1]);
          Y = b[0] + p[0];
          ha = b[1] + p[1];
          V = a.clientX;
          fa = a.clientY;
        }
        n(window, "mousemove", l);
        n(window, "mouseup", e);
      }
    }
  }
  function l(a) {
    var b = S.v,
      c = a.clientX;
    a = a.clientY;
    var d = S.data.date,
      f = S.data.value,
      e;
    -1 !== Z.indexOf("point") &&
      ((e = b.Tb(c, a)),
      "point1" == Z && ((d[0] = e[0]), (f[0] = e[1])),
      "point2" == Z && ((d[1] = e[0]), (f[1] = e[1])));
    "line" == Z &&
      ((e = b.Tb(W + c - V, ea + a - fa)),
      (d[0] = e[0]),
      (f[0] = e[1]),
      (e = b.Tb(Y + (c - V), ha + (a - fa))),
      (d[1] = e[0]),
      (f[1] = e[1]));
    S.nc = Z;
    S.Ha(b);
  }
  function e(a) {
    if (S.lc) {
      var b = S.input;
      b && b.focus();
    }
    S.lc = null;
    S.nc = !1;
    S.Ha(S.v);
    S.M("change", a);
    fa = ha = ea = V = Y = W = Z = S = null;
    x(window, "mousemove", l);
    x(window, "mouseup", e);
  }
  function k(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function h(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), b.ic());
        clearTimeout(c);
      }, 50);
    clearTimeout(b && b.Kb);
  }
  function b(a) {
    var b = this.w;
    b &&
      (clearTimeout(b.Kb),
      (b.Kb = setTimeout(function () {
        var c = G();
        ("input" == F(c) && "checkbox" == c.type && c.sf) ||
          ((b.focused = !1), b.ic(), b.M("blur", a));
      }, 0)));
  }
  var a = E.va,
    g = E.oc,
    d = E.Qa,
    f = E.controls,
    c = f.L.Sc,
    z = f.L.Zb,
    A = E.ba.xa,
    m = E.Ma,
    u = E.ma.Vh,
    q = a.sb,
    w = a.Xb,
    p = a.tb,
    n = g.i,
    x = g.hc,
    C = a.hb,
    O = a.$a,
    I = a.Cd,
    G = a.Wf,
    F = a.md,
    y,
    M,
    D,
    L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha,
    fa,
    aa = (c.vh.dt = function (a) {
      aa.G.constructor.apply(this, arguments);
    });
  c.cc(aa);
  aa.type = "Trend Line";
  aa.Ec = function (a, b, d) {
    var f = c.Kf.Ec();
    f.type = aa.type;
    f.name = A.NO + " " + d;
    f.date = [a, a];
    f.value = [b, b];
    f.ray_right = !1;
    f.ray_left = !1;
    return f;
  };
  aa.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    aa.G.Qd.call(this) && this.ic();
    return this;
  };
  aa.prototype.Mf = function (a) {
    var b = this.Ra,
      c = this.input,
      d = {};
    d.clientX = a.clientX;
    d.clientY = a.clientY;
    d.currentTarget = b;
    this.lc = !0;
    r.call(b, d);
    c &&
      c.focus &&
      setTimeout(function () {
        c.focus();
      }, 0);
    return this;
  };
  aa.prototype.gb = function () {
    this.R = null;
    var a = this.input;
    a && ((a.w = null), x(a, "focus", h), x(a, "blur", b), (this.input = null));
    var c = this.qb;
    a &&
      ((c.w = null),
      x(c, "mousedown", r),
      x(c, "dblclick", k),
      (this.qb = null));
    if ((a = this.xb))
      (a.w = null), x(a, "mousedown", r), x(a, "dblclick", k), (this.xb = null);
    if ((a = this.Ra))
      (a.w = null), x(a, "mousedown", r), x(a, "dblclick", k), (this.Ra = null);
    this.text = this.Pb = null;
    aa.G.gb.apply(this, arguments);
    return this;
  };
  aa.prototype.kb = function (a) {
    if (!y) {
      var b = { position: "absolute" };
      y = m(f.input.Date).b(b).b({ top: "16px", left: "84px", width: "130px" });
      M = m(f.page.I, "vertical-line-time1")
        .Text(A.gd + ":")
        .b(b)
        .b({ top: "20px", width: "78px", "text-align": "right" });
      D = m(f.input.Date).b(b).b({ top: "48px", left: "84px", width: "130px" });
      L = m(f.page.I, "vertical-line-time2")
        .Text(A.gd + ":")
        .b(b)
        .b({ top: "52px", width: "78px", "text-align": "right" });
      B = m(f.input.Number)
        .o("vertical-line-value1")
        .b(b)
        .b({ top: "16px", left: "280px", width: "100px" });
      Q = m(f.page.I, "vertical-line-value1")
        .Text(A.Ld + ":")
        .b(b)
        .b({
          top: "20px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      N = m(f.input.Number)
        .o("vertical-line-value2")
        .b(b)
        .b({ top: "48px", left: "280px", width: "100px" });
      K = m(f.page.I, "vertical-line-value2")
        .Text(A.Ld + ":")
        .b(b)
        .b({
          top: "52px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      P = m(f.input.pa)
        .o("vertical-line-ray-right")
        .b(b)
        .b({ top: "84px", left: "84px" });
      T = m(f.page.I, "vertical-line-ray-right")
        .Text(A.Kl)
        .b(b)
        .b({ top: "83px", left: "101px", "white-space": "nowrap" });
      R = m(f.input.pa).o("vertical-line-ray-left").b(b).b({
        top: "106px",
        left: "84px",
      });
      H = m(f.page.I, "vertical-line-ray-left")
        .Text(A.Jl)
        .b(b)
        .b({ top: "105px", left: "101px", "white-space": "nowrap" });
    }
    var b = this.data,
      c = this.v.j,
      d = 6e4 * new Date().getTimezoneOffset(),
      e = b.value[0],
      n = b.value[1],
      g = b.date[0],
      p = b.date[1],
      p = p + d;
    y.f(g + d);
    D.f(p);
    B.f(e).T(c).Y(Math.pow(10, -c));
    N.f(n).T(c).Y(Math.pow(10, -c));
    P.s(!!b.ray_right);
    R.s(!!b.ray_left);
    a.c(y).c(M).c(D).c(L).c(B).c(Q).c(N).c(K).c(P).c(T).c(R).c(H);
    return this;
  };
  aa.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      b = this.data;
    b.ray_right = P.s();
    b.ray_left = R.s();
    b.date[0] = y.f() - a;
    b.date[1] = D.f() - a;
    b.value[0] = B.f();
    b.value[1] = N.f();
    return this;
  };
  aa.prototype.ic = function () {
    this.Vf();
    var a = this.canvas,
      b = this.Nb,
      c = this.v,
      f = this.data,
      e = this.text,
      n = this.Pb,
      g = this.qb,
      p = this.xb,
      x = this.Ra,
      h = f.date,
      q = f.value,
      C = f.ray_right,
      m = f.ray_left,
      w = c.Aa,
      y = c.ta,
      u = z.sc || f.disabled,
      k = a.getContext("2d"),
      K = c.pb(h[0], !0),
      B = c.pb(h[1], !0),
      l = q[0],
      G = q[1],
      H,
      F;
    F = Math.pow(10, c.j);
    B = Math.floor(Math.max(K, B) - Math.min(K, B));
    G = Math.floor(Math.max(l, G) * F - Math.min(l, G) * F);
    F = [B, G].join(" / ");
    var D = this.nc,
      L = this.focused,
      G = this.R;
    O(a, "z-index", f.background ? "0" : "");
    O(e, "display", "none");
    b.setAttribute("visibility", u ? "hidden" : "visible");
    parseInt(a.style.width, 10) != w &&
      (d.sa
        ? a.setAttribute("width", w * d.devicePixelRatio)
        : a.setAttribute("width", w),
      O(a, "width", w + "px"));
    parseInt(a.style.height, 10) != y &&
      (d.sa
        ? a.setAttribute("height", y * d.devicePixelRatio)
        : a.setAttribute("height", y),
      O(a, "height", y + "px"));
    G && k.clearRect.apply(k, G);
    d.sa &&
      (k.setTransform(1, 0, 0, 1, 0, 0),
      k.scale(d.devicePixelRatio, d.devicePixelRatio));
    H = c.Da(h[0], q[0]);
    K = H[0];
    l = H[1];
    H = c.Da(h[1], q[1]);
    B = H[0];
    G = H[1];
    h = K;
    q = B;
    w = K;
    a = l;
    b = G;
    y = l;
    u ||
      (p.setAttribute("cx", h),
      p.setAttribute("cy", a),
      x.setAttribute("cx", q),
      x.setAttribute("cy", b));
    p = Math.atan2(G - l, B - K);
    C && ((H = v(p)), (q += H[0]), (b += H[1]));
    m && ((H = v(p - Math.PI)), (h += H[0]), (a += H[1]));
    k.beginPath();
    k.strokeStyle = "#ff0000";
    k.moveTo(h + 0.5, a + 0.5);
    k.lineTo(q + 0.5, b + 0.5);
    k.stroke();
    u ||
      ((n.textContent = [f.name, F].join("\n")),
      g.setAttribute("x1", h),
      g.setAttribute("y1", a),
      g.setAttribute("x2", q),
      g.setAttribute("y2", b));
    L &&
      ((k.fillStyle = "#f00"),
      k.fillRect(K - 3, l - 3, 5, 5),
      k.fillRect(B - 3, G - 3, 5, 5),
      (k.fillStyle = c.Ia),
      k.fillRect(K - 2, l - 2, 3, 3),
      k.fillRect(B - 2, G - 2, 3, 3),
      (n = 0.5 * Math.sqrt((B - K) * (B - K) + (G - l) * (G - l))),
      (g = Math.atan2(G - l, B - K)),
      (H = [Math.round(K + n * Math.cos(g)), Math.round(l + n * Math.sin(g))]),
      (k.fillStyle = "#f00"),
      k.fillRect(H[0] - 3, H[1] - 3, 5, 5),
      (k.fillStyle = c.Ia),
      k.fillRect(H[0] - 2, H[1] - 2, 3, 3));
    D &&
      "line" != D &&
      (I(e, F),
      (w = ("point1" == D ? K : B) - 3 - parseInt(e.style.width, 10)),
      (y = ("point1" == D ? l : G) + 3),
      O(e, {
        display: "block",
        left: w + "px",
        top: y + "px",
        color: c.Ia,
      }));
    this.R =
      m || C
        ? [0, 0, c.se, c.Cj]
        : [
            Math.min(h, q, w) - 5,
            Math.min(a, b, y) - 5,
            Math.max(h, q, w) - Math.min(h, q, w) + 10,
            Math.max(a, b, y) - Math.min(a, b, y) + 20,
          ];
    c.Bg &&
      (f = (f.description || "").substr(0, 64)) &&
      (k.save(),
      k.translate(K, l),
      k.rotate(p),
      (k.textAlign = "left"),
      (k.textBaseline = "bottom"),
      (k.fillStyle = c.Ia),
      k.fillText(f, 1, -2),
      k.restore(),
      (this.R[0] = 0),
      (this.R[1] = 0),
      (this.R[2] = c.Aa),
      (this.R[3] = c.ta));
  };
  aa.prototype.Vf = function () {
    var a = this.Nb,
      c = this.text,
      d = this.Pb,
      f = this.qb,
      e = this.input,
      g = this.xb,
      x = this.element,
      m = this.Ra;
    d || ((d = this.Pb = q("title", "http://www.w3.org/2000/svg")), p(a, d));
    f ||
      ((f = this.qb = q("line", "http://www.w3.org/2000/svg")),
      f.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (f.w = this),
      n(f, "mousedown", r),
      n(f, "dblclick", k),
      p(a, f));
    e ||
      ((e = this.input = q("input")),
      (e.type = "checkbox"),
      (e.w = this),
      O(e, { position: "absolute", top: "-3000px", left: "-3000px" }),
      n(e, "focus", h),
      n(e, "blur", b),
      p(x, e));
    g ||
      ((g = this.xb = q("circle", "http://www.w3.org/2000/svg")),
      g.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      g.setAttribute("r", "10"),
      (g.w = this),
      n(g, "mousedown", r),
      n(g, "dblclick", k),
      p(a, g));
    m ||
      ((m = this.Ra = q("circle", "http://www.w3.org/2000/svg")),
      m.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      m.setAttribute("r", "10"),
      (m.w = this),
      n(m, "mousedown", r),
      n(m, "dblclick", k),
      p(a, m));
    c ||
      ((c = this.text = q("span")),
      C(c, "val"),
      O(c, {
        position: "absolute",
        "white-space": "nowrap",
        width: "80px",
        "text-align": "right",
      }),
      p(x, c));
  };
})();
(function () {
  function v() {
    var a,
      b,
      c = this.v;
    a = this.data;
    var d = a.value,
      f = a.date,
      e = c.Da(f[0], d[0]);
    a = e[0];
    b = e[1];
    e = c.Da(f[1], d[1]);
    return r(Math.atan2(e[1] - b, e[0] - a));
  }
  function r(a) {
    var b = Math.PI;
    return +(360 - (360 * (0 < a ? a : 2 * b + a)) / (2 * b)).toFixed(1);
  }
  function l(a) {
    a = (-(a - 360) / 360) * 2 * Math.PI;
    return a > Math.PI ? a - 2 * Math.PI : a;
  }
  function e(a, b) {
    return [b * Math.cos(a), b * Math.sin(a)];
  }
  function k(a) {
    if (this) {
      var c = this.w;
      if (c) {
        var d = c.element;
        if (d) {
          var f = x(d);
          f &&
            setTimeout(function () {
              f.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        Q = c;
        N = "line";
        this == c.xb && (N = "point1");
        this == c.Ra && (N = "point2");
        if ("line" == N) {
          c = d.Ge || p(d);
          d.Ge = c;
          var d = Q.data.date,
            e = Q.data.value,
            n = Q.v,
            g = n.Da(d[0], e[0]);
          K = c[0] + g[0];
          R = c[1] + g[1];
          g = n.Da(d[1], e[1]);
          P = c[0] + g[0];
          H = c[1] + g[1];
          T = a.clientX;
          S = a.clientY;
        }
        O(window, "mousemove", h);
        O(window, "mouseup", b);
      }
    }
  }
  function h(a) {
    var b = Q.v,
      c = a.clientX;
    a = a.clientY;
    var d = Q.data.date,
      f = Q.data.value,
      e;
    if (-1 !== N.indexOf("point")) {
      e = b.Tb(c, a);
      "point1" == N && ((d[0] = e[0]), (f[0] = e[1]));
      "point2" == N && ((d[1] = e[0]), (f[1] = e[1]));
      e = b.Da(d[0], f[0]);
      var n = e[0],
        g = e[1];
      e = b.Da(d[1], f[1]);
      e = Math.atan2(e[1] - g, e[0] - n);
      Q.et = e;
      Q.data.angle = r(e);
    }
    "line" == N &&
      0 !== T - c &&
      0 !== S - a &&
      ((e = b.Tb(K + c - T, R + a - S)),
      (d[0] = e[0]),
      (f[0] = e[1]),
      (e = b.Tb(P + (c - T), H + (a - S))),
      (d[1] = e[0]),
      (f[1] = e[1]));
    Q.nc = N;
    Q.Ha(b);
  }
  function b(a) {
    if (Q.lc) {
      var c = Q.input;
      c && c.focus();
    }
    Q.lc = null;
    Q.nc = !1;
    Q.Ha(Q.v);
    Q.M("change", a);
    S = H = R = T = P = K = N = Q = null;
    I(window, "mousemove", h);
    I(window, "mouseup", b);
  }
  function a(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function g(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), b.ic());
        clearTimeout(c);
      }, 50);
    clearTimeout(b && b.Kb);
  }
  function d(a) {
    var b = this.w;
    b &&
      (clearTimeout(b.Kb),
      (b.Kb = setTimeout(function () {
        var c = M();
        ("input" == D(c) && "checkbox" == c.type && c.sf) ||
          ((b.focused = !1), b.ic(), b.M("blur", a));
      }, 0)));
  }
  var f = E.va,
    c = E.oc,
    z = E.Qa,
    A = E.controls,
    m = A.L.Sc,
    u = A.L.Zb,
    q = E.ba.xa,
    w = E.Ma,
    p = E.ma.Vh,
    n = f.sb,
    x = f.Xb,
    C = f.tb,
    O = c.i,
    I = c.hc,
    G = f.hb,
    F = f.$a,
    y = f.Cd,
    M = f.Wf,
    D = f.md,
    L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z = (m.vh.zea = function (a) {
      Z.G.constructor.apply(this, arguments);
      this.et = l(a.angle);
    });
  m.cc(Z, m.vh.dt);
  Z.type = "Trend Line by Angle";
  Z.Ec = function (a, b, c) {
    var d = m.Kf.Ec();
    d.type = Z.type;
    d.name = q.uF + " " + c;
    d.date = [a, a];
    d.value = [b, b];
    d.ray_right = !0;
    d.ray_left = !1;
    d.angle = 90;
    return d;
  };
  Z.prototype.kb = function (a) {
    Z.G.kb.apply(this, arguments);
    if (!L) {
      var b = { position: "absolute" };
      L = w(A.input.Number)
        .o("angle-value")
        .b(b)
        .T(1)
        .Fa(0)
        .Y(0.1)
        .b({ top: "80px", left: "280px", width: "100px" });
      B = w(A.page.I, L.o())
        .Text(q.YO + ":")
        .b(b)
        .b({
          top: "84px",
          left: "177px",
          width: "97px",
          "text-align": "right",
        });
    }
    L.f(this.data.angle || v.call(this));
    a.c(L).c(B);
  };
  Z.prototype.lb = function (a) {
    var b = this.data,
      c = this.v,
      d = b.date,
      f = b.value,
      e = d
        .concat(
          f.map(function (a) {
            return a.toFixed(c.j);
          })
        )
        .toString();
    Z.G.lb.apply(this, arguments);
    var n = d.concat(f).toString(),
      g = parseFloat(L.f());
    g != b.angle
      ? ((d = this.et = l(g)), (b.angle = g))
      : e != n &&
        ((b = c.Da(d[0], f[0])),
        (g = b[0]),
        (e = b[1]),
        (b = c.Da(d[1], f[1])),
        (this.et = d = Math.atan2(b[1] - e, b[0] - g)));
  };
  Z.prototype.ic = function () {
    var b = this.canvas,
      c = this.element,
      f = this.Nb,
      x = this.v,
      h = this.data,
      q = this.text,
      m = this.Pb,
      w = this.qb,
      K = this.input,
      B = this.xb,
      l = this.Ra,
      H = h.date,
      D = h.value,
      L = h.ray_right,
      I = h.ray_left,
      Q = x.Aa,
      R = x.ta,
      A = u.sc || h.disabled,
      P = b.getContext("2d"),
      N = x.pb(H[0], !0),
      T = x.pb(H[1], !0),
      M = D[0],
      S = D[1],
      v,
      Z;
    Z = N;
    var Ia = M,
      Ka = T,
      M = S,
      S = Math.pow(10, x.j);
    Z = Math.floor(Math.max(Z, Ka) - Math.min(Z, Ka));
    Ia = Math.floor(Math.max(Ia, M) * S - Math.min(Ia, M) * S);
    Z = [Z, Ia].join(" / ");
    Ia = this.nc;
    Ka = this.focused;
    m || ((m = this.Pb = n("title", "http://www.w3.org/2000/svg")), C(f, m));
    w ||
      ((w = this.qb = n("line", "http://www.w3.org/2000/svg")),
      w.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (w.w = this),
      O(w, "mousedown", k),
      O(w, "dblclick", a),
      C(f, w));
    K ||
      ((K = this.input = n("input")),
      (K.type = "checkbox"),
      (K.w = this),
      F(K, { position: "absolute", top: "-3000px", left: "-3000px" }),
      O(K, "focus", g),
      O(K, "blur", d),
      C(c, K));
    B ||
      ((B = this.xb = n("circle", "http://www.w3.org/2000/svg")),
      B.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      B.setAttribute("r", "10"),
      (B.w = this),
      O(B, "mousedown", k),
      O(B, "dblclick", a),
      C(f, B));
    l ||
      ((l = this.Ra = n("circle", "http://www.w3.org/2000/svg")),
      l.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      l.setAttribute("r", "10"),
      (l.w = this),
      O(l, "mousedown", k),
      O(l, "dblclick", a),
      C(f, l));
    q ||
      ((q = this.text = n("span")),
      G(q, "val"),
      F(q, {
        position: "absolute",
        "white-space": "nowrap",
        width: "80px",
        "text-align": "right",
      }),
      C(c, q));
    F(b, "z-index", h.background ? "0" : "");
    F(q, "display", "none");
    f.setAttribute("visibility", A ? "hidden" : "visible");
    parseInt(b.style.width, 10) != Q &&
      (z.sa
        ? b.setAttribute("width", Q * z.devicePixelRatio)
        : b.setAttribute("width", Q),
      F(b, "width", Q + "px"));
    parseInt(b.style.height, 10) != R &&
      (z.sa
        ? b.setAttribute("height", R * z.devicePixelRatio)
        : b.setAttribute("height", R),
      F(b, "height", R + "px"));
    P.clearRect.apply(P, [0, 0, Q, R]);
    z.sa &&
      (P.setTransform(1, 0, 0, 1, 0, 0),
      P.scale(z.devicePixelRatio, z.devicePixelRatio));
    S = this.et;
    N = this.data;
    M = this.v;
    f = N.date;
    Q = N.value;
    N = this.a3 = this.a3 || p(this.element);
    K = M.Da(f[0], Q[0]);
    T = K[0];
    c = K[1];
    K = M.Da(f[1], Q[1]);
    f = K[0];
    K = K[1];
    S = e(S, Math.sqrt((f - T) * (f - T) + (K - c) * (K - c)));
    M = M.Tb(T + N[0] + Math.round(S[0]), c + N[1] + Math.round(S[1]));
    S = [M[0], M[1]];
    c = this.et;
    v = x.Da(H[0], D[0]);
    N = v[0];
    M = v[1];
    v = x.Da(S[0], S[1]);
    T = v[0];
    S = v[1];
    H = N;
    D = T;
    Q = N;
    f = M;
    K = S;
    R = M;
    A ||
      (B.setAttribute("cx", H),
      B.setAttribute("cy", f),
      l.setAttribute("cx", D),
      l.setAttribute("cy", K));
    L && ((v = e(c, 1e5)), (D += v[0]), (K += v[1]));
    I && ((v = e(c - Math.PI, 1e5)), (H += v[0]), (f += v[1]));
    1 < Math.abs(N - T) &&
      (P.beginPath(),
      (P.strokeStyle = "#ff0000"),
      P.moveTo(H + 0.5, f + 0.5),
      P.lineTo(D + 0.5, K + 0.5),
      P.stroke());
    A ||
      ((m.textContent = [h.name, Z + " / " + r(c) + "\u00b0"].join("\n")),
      w.setAttribute("x1", H),
      w.setAttribute("y1", f),
      w.setAttribute("x2", D),
      w.setAttribute("y2", K));
    Ka &&
      ((P.fillStyle = "#f00"),
      P.fillRect(N - 3, M - 3, 5, 5),
      P.fillRect(T - 3 + 1, S - 3, 5, 5),
      (P.fillStyle = x.Ia),
      P.fillRect(N - 2, M - 2, 3, 3),
      P.fillRect(T - 2 + 1, S - 2, 3, 3),
      (m = 0.5 * Math.sqrt((T - N) * (T - N) + (S - M) * (S - M))),
      (w = Math.atan2(S - M, T - N)),
      (v = [Math.round(N + m * Math.cos(w)), Math.round(M + m * Math.sin(w))]),
      (P.fillStyle = "#f00"),
      P.fillRect(v[0] - 3, v[1] - 3, 5, 5),
      (P.fillStyle = x.Ia),
      P.fillRect(v[0] - 2, v[1] - 2, 3, 3));
    Ia &&
      "line" != Ia &&
      (y(q, Z + " / " + r(c) + "\u00b0"),
      (Q = ("point1" == Ia ? N : T) + 3),
      (R = ("point1" == Ia ? M : S) + 3 - 20),
      F(q, { display: "block", left: Q + "px", top: R + "px", color: x.Ia }),
      P.beginPath(),
      (P.lineWidth = 1),
      (P.strokeStyle = "#ff0000"),
      P.moveTo(N, M),
      P.lineTo(b.width, M),
      P.stroke());
    this.R =
      I || L
        ? [0, 0, x.se, x.Cj]
        : [Math.min(H, D, Q) - 5, Math.min(f, K, R) - 5, x.se, x.Cj];
    x.Bg &&
      (b = (h.description || "").substr(0, 64)) &&
      (P.save(),
      P.translate(N, M),
      P.rotate(c),
      (P.textAlign = "left"),
      (P.textBaseline = "bottom"),
      (P.fillStyle = x.Ia),
      P.fillText(b, 1, -2),
      P.restore(),
      (this.R[0] = 0),
      (this.R[1] = 0),
      (this.R[2] = x.Aa),
      (this.R[3] = x.ta));
  };
  Z.prototype.Mf = function (a) {
    var b = this.Ra,
      c = this.input,
      d = {};
    d.clientX = a.clientX;
    d.clientY = a.clientY;
    d.currentTarget = b;
    this.lc = !0;
    k.call(b, d);
    c &&
      c.focus &&
      setTimeout(function () {
        c.focus();
      }, 0);
    return this;
  };
})();
(function () {
  function v(a) {
    if (this) {
      var b = this.w;
      if (b) {
        var c = b.element;
        if (c) {
          var d = w(c);
          d &&
            setTimeout(function () {
              d.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        P = b;
        T = "line";
        this == b.xb && (T = "point1");
        this == b.Ra && (T = "point2");
        if ("line" == T) {
          b = c.Ge || u(c);
          c.Ge = b;
          var c = P.data.date,
            f = P.data.value,
            e = P.v,
            g = e.Da(c[0], f[0]);
          R = b[0] + g[0];
          Z = b[1] + g[1];
          g = e.Da(c[1], f[1]);
          H = b[0] + g[0];
          W = b[1] + g[1];
          S = a.clientX;
          Y = a.clientY;
        }
        n(window, "mousemove", r);
        n(window, "mouseup", l);
      }
    }
  }
  function r(a) {
    var b = P.v,
      c = a.clientX;
    a = a.clientY;
    var d = P.data.date,
      f = P.data.value,
      e;
    -1 !== T.indexOf("point") &&
      ((e = b.Tb(c, a)),
      "point1" == T && ((d[0] = e[0]), (f[0] = e[1])),
      "point2" == T && ((d[1] = e[0]), (f[1] = e[1])));
    "line" == T &&
      ((e = b.Tb(R + c - S, Z + a - Y)),
      (d[0] = e[0]),
      (f[0] = e[1]),
      (e = b.Tb(H + (c - S), W + (a - Y))),
      (d[1] = e[0]),
      (f[1] = e[1]));
    P.nc = T;
    P.Ha(b);
  }
  function l(a) {
    if (P.lc) {
      var b = P.input;
      b && b.focus();
    }
    P.lc = null;
    P.nc = !1;
    P.Ha(P.v);
    P.M("change", a);
    Y = W = Z = S = H = R = T = P = null;
    x(window, "mousemove", r);
    x(window, "mouseup", l);
  }
  function e(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function k(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), b.ic());
        clearTimeout(c);
      }, 50);
    clearTimeout(b.Kb);
  }
  function h(a) {
    var b = this.w;
    clearTimeout(b.Kb);
    b.Kb = setTimeout(function () {
      var c = G();
      ("input" == F(c) && "checkbox" == c.type && c.sf) ||
        ((b.focused = !1), b.ic(), b.M("blur", a));
    }, 0);
  }
  var b = E.va,
    a = E.oc,
    g = E.Qa,
    d = E.controls,
    f = d.L.Sc,
    c = d.L.Zb,
    z = E.ba.xa,
    A = E.Ma,
    m = f.Pa.ma,
    u = E.ma.Vh,
    q = b.sb,
    w = b.Xb,
    p = b.tb,
    n = a.i,
    x = a.hc,
    C = b.hb,
    O = b.$a,
    I = b.Cd,
    G = b.Wf,
    F = b.md,
    y,
    M,
    D,
    L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V = (f.vh.aQ = function (a) {
      V.G.constructor.apply(this, arguments);
    });
  f.cc(V);
  V.type = "Cycle lines";
  V.Ec = function (a, b, c) {
    var d = f.Kf.Ec();
    d.type = V.type;
    d.name = z.tF + " " + c;
    d.date = [a, a];
    d.value = [b, b];
    return d;
  };
  V.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    V.G.Qd.call(this) && this.ic();
    return this;
  };
  V.prototype.Mf = function (a) {
    var b = this.Ra,
      c = this.input,
      d = {};
    d.clientX = a.clientX;
    d.clientY = a.clientY;
    d.currentTarget = b;
    this.lc = !0;
    v.call(b, d);
    c &&
      c.focus &&
      setTimeout(function () {
        c.focus();
      }, 0);
    return this;
  };
  V.prototype.gb = function () {
    this.R = null;
    var a = this.input;
    a && ((a.w = null), x(a, "focus", k), x(a, "blur", h), (this.input = null));
    var b = this.qb;
    a &&
      ((b.w = null),
      x(b, "mousedown", v),
      x(b, "dblclick", e),
      (this.qb = null));
    if ((a = this.xb))
      (a.w = null), x(a, "mousedown", v), x(a, "dblclick", e), (this.xb = null);
    if ((a = this.Ra))
      (a.w = null), x(a, "mousedown", v), x(a, "dblclick", e), (this.Ra = null);
    this.text = this.Pb = null;
    V.G.gb.apply(this, arguments);
    return this;
  };
  V.prototype.kb = function (a) {
    if (!y) {
      var b = { position: "absolute" };
      y = A(d.input.Date).b(b).b({ top: "16px", left: "84px", width: "130px" });
      M = A(d.page.I, "vertical-line-time1")
        .Text(z.gd + ":")
        .b(b)
        .b({ top: "20px", width: "78px", "text-align": "right" });
      D = A(d.input.Date).b(b).b({ top: "48px", left: "84px", width: "130px" });
      L = A(d.page.I, "vertical-line-time2")
        .Text(z.gd + ":")
        .b(b)
        .b({ top: "52px", width: "78px", "text-align": "right" });
      B = A(d.input.Number)
        .o("vertical-line-value1")
        .b(b)
        .b({ top: "16px", left: "280px", width: "100px" });
      Q = A(d.page.I, "vertical-line-value1")
        .Text(z.Ld + ":")
        .b(b)
        .b({
          top: "20px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      N = A(d.input.Number).o("vertical-line-value2").b(b).b({
        top: "48px",
        left: "280px",
        width: "100px",
      });
      K = A(d.page.I, "vertical-line-value2")
        .Text(z.Ld + ":")
        .b(b)
        .b({
          top: "52px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
    }
    var c = this.data,
      b = this.v.j,
      f = 6e4 * new Date().getTimezoneOffset(),
      e = c.value[0],
      g = c.value[1],
      n = c.date[0],
      c = c.date[1],
      c = c + f;
    y.f(n + f);
    D.f(c);
    B.f(e).T(b).Y(Math.pow(10, -b));
    N.f(g).T(b).Y(Math.pow(10, -b));
    a.c(y).c(M).c(D).c(L).c(B).c(Q).c(N).c(K);
    return this;
  };
  V.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      b = this.data;
    b.date[0] = y.f() - a;
    b.date[1] = D.f() - a;
    b.value[0] = B.f();
    b.value[1] = N.f();
    return this;
  };
  V.prototype.ic = function () {
    this.Vf();
    var a = this.canvas,
      b = this.Nb,
      d = this.v,
      f = this.data,
      e = this.text,
      n = this.Pb,
      p = this.qb,
      x = this.xb,
      h = this.Ra,
      q = f.date,
      C = f.value,
      w = d.Aa,
      y = d.ta,
      u = c.sc || f.disabled,
      k = a.getContext("2d");
    O(a, "z-index", f.background ? "0" : "");
    O(e, "display", "none");
    b.setAttribute("visibility", u ? "hidden" : "visible");
    parseInt(a.style.width, 10) != w &&
      (g.sa
        ? a.setAttribute("width", w * g.devicePixelRatio)
        : a.setAttribute("width", w),
      O(a, "width", w + "px"));
    parseInt(a.style.height, 10) != y &&
      (g.sa
        ? a.setAttribute("height", y * g.devicePixelRatio)
        : a.setAttribute("height", y),
      O(a, "height", y + "px"));
    a = this.v.ta;
    (b = this.R) && b.length && (k.clearRect.apply(k, b), (this.R = []));
    (y = this.Jn) &&
      y.length &&
      ((b = y[y.length - 1]),
      (y = y[0]),
      b > y
        ? k.clearRect(y - 2, 0, Math.abs(b - y) + 3, a)
        : k.clearRect(b - 2, 0, y - b + 3, a),
      (this.Jn = []));
    (a = this.tL) &&
      a.length &&
      (k.clearRect(
        Math.min(a[0], a[2]) - 5,
        Math.min(a[1], a[3]) - 5,
        Math.max(a[0], a[2]) - Math.min(a[0], a[2]) + 10,
        Math.max(a[1], a[3]) - Math.min(a[1], a[3]) + 10
      ),
      (this.tL = []));
    g.sa &&
      (k.setTransform(1, 0, 0, 1, 0, 0),
      k.scale(g.devicePixelRatio, g.devicePixelRatio));
    var K = d.Da(q[0], C[0]),
      a = K[0],
      b = K[1],
      K = d.Da(q[1], C[1]),
      q = K[0],
      C = K[1],
      y = 0;
    u ||
      (x.setAttribute("cx", a),
      x.setAttribute("cy", b),
      h.setAttribute("cx", q),
      h.setAttribute("cy", C));
    k.beginPath();
    k.strokeStyle = "#ff0000";
    this.Jn = [];
    x = d.ta;
    k.moveTo(a + 0.5, 0);
    k.lineTo(a + 0.5, x);
    this.Jn[this.Jn.length] = a;
    if (
      a != q &&
      ((y = m.jq(a, 0, q, 0)), (x = Math.abs(y)), (K = d.Aa), 1 < y)
    )
      if (a > q)
        for (h = a - x; 0 < h; ) {
          if (0 < h && h < w) {
            var K = k,
              z = h,
              B = d.ta;
            K.moveTo(z + 0.5, 0);
            K.lineTo(z + 0.5, B);
            this.Jn[this.Jn.length] = h;
          }
          h -= x;
        }
      else
        for (h = a + x; h < K; ) {
          if (0 < h && h < w) {
            var z = k,
              B = h,
              l = d.ta;
            z.moveTo(B + 0.5, 0);
            z.lineTo(B + 0.5, l);
            this.Jn[this.Jn.length] = h;
          }
          h += x;
        }
    k.moveTo(a + 0.5, b + 0.5);
    k.lineTo(q + 0.5, C + 0.5);
    k.stroke();
    this.tL = [a, b, q, C];
    u ||
      ((n.textContent = f.name),
      p.setAttribute("x1", a),
      p.setAttribute("y1", b),
      p.setAttribute("x2", q),
      p.setAttribute("y2", C));
    this.focused &&
      ((k.fillStyle = "#f00"),
      k.fillRect(a - 3, b - 3, 5, 5),
      k.fillRect(q - 3, C - 3, 5, 5),
      (k.fillStyle = d.Ia),
      k.fillRect(a - 2, b - 2, 3, 3),
      k.fillRect(q - 2, C - 2, 3, 3),
      (K = m.Ti(a, b, q, C))) &&
      ((k.fillStyle = "#f00"),
      k.fillRect(K[0] - 3, K[1] - 3, 5, 5),
      (k.fillStyle = d.Ia),
      k.fillRect(K[0] - 2, K[1] - 2, 3, 3));
    (n = this.nc) &&
      "line" != n &&
      (I(e, y / d.le),
      O(e, {
        display: "block",
        left: ("point1" == n ? a : q) - 3 - parseInt(e.style.width, 10) + "px",
        top: ("point1" == n ? b : C) + 3 + "px",
        color: d.Ia,
      }));
    d.Bg &&
      (f = (f.description || "").substr(0, 64)) &&
      (k.save(),
      k.translate(a, b),
      k.rotate(m.Hg(a, b, q, C)),
      (k.textAlign = "left"),
      (k.textBaseline = "bottom"),
      (k.fillStyle = d.Ia),
      k.fillText(f, 1, -2),
      k.restore(),
      (this.R = []),
      (this.R[0] = 0),
      (this.R[1] = 0),
      (this.R[2] = d.Aa),
      (this.R[3] = d.ta));
  };
  V.prototype.Vf = function () {
    var a = this.Pb,
      b = this.Nb,
      c = this.qb,
      d = this.input,
      f = this.xb,
      g = this.Ra,
      x = this.element,
      m = this.Ra;
    a || ((a = this.Pb = q("title", "http://www.w3.org/2000/svg")), p(b, a));
    c ||
      ((c = this.qb = q("line", "http://www.w3.org/2000/svg")),
      c.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (c.w = this),
      n(c, "mousedown", v),
      n(c, "dblclick", e),
      p(b, c));
    d ||
      ((d = this.input = q("input")),
      (d.type = "checkbox"),
      (d.w = this),
      O(d, { position: "absolute", top: "-3000px", left: "-3000px" }),
      n(d, "focus", k),
      n(d, "blur", h),
      p(x, d));
    f ||
      ((f = this.xb = q("circle", "http://www.w3.org/2000/svg")),
      f.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      f.setAttribute("r", "10"),
      (f.w = this),
      n(f, "mousedown", v),
      n(f, "dblclick", e),
      p(b, f));
    g ||
      ((g = this.Ra = q("circle", "http://www.w3.org/2000/svg")),
      g.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      g.setAttribute("r", "10"),
      (g.w = this),
      n(g, "mousedown", v),
      n(g, "dblclick", e),
      p(b, g));
    m ||
      ((m = this.text = q("span")),
      C(m, "val"),
      O(m, {
        position: "absolute",
        "white-space": "nowrap",
        width: "80px",
        "text-align": "right",
      }),
      p(x, m));
  };
})();
(function () {
  var v = E.va,
    r = E.Qa,
    l = E.controls,
    e = l.L.Sc,
    k = l.L.Zb,
    h = E.ba.xa,
    b = E.Ma,
    a = e.Pa.ma,
    g = v.$a,
    d = v.Cd,
    f,
    c,
    z,
    A,
    m,
    u,
    q,
    w,
    p = (e.vh.o5 = function (a) {
      p.G.constructor.apply(this, arguments);
    });
  e.cc(p, e.vh.dt);
  p.type = "Arrowed Line";
  p.Ec = function (a, b, c) {
    var d = e.Kf.Ec();
    d.type = p.type;
    d.name = h.sF + " " + c;
    d.date = [a, a];
    d.value = [b, b];
    return d;
  };
  p.prototype.kb = function (a) {
    if (!f) {
      var d = { position: "absolute" };
      f = b(l.input.Date).b(d).b({ top: "16px", left: "84px", width: "130px" });
      c = b(l.page.I, "vertical-line-time1")
        .Text(h.gd + ":")
        .b(d)
        .b({
          top: "20px",
          width: "78px",
          "text-align": "right",
        });
      z = b(l.input.Date).b(d).b({ top: "48px", left: "84px", width: "130px" });
      A = b(l.page.I, "vertical-line-time2")
        .Text(h.gd + ":")
        .b(d)
        .b({ top: "52px", width: "78px", "text-align": "right" });
      m = b(l.input.Number)
        .o("vertical-line-value1")
        .b(d)
        .b({ top: "16px", left: "280px", width: "100px" });
      u = b(l.page.I, "vertical-line-value1")
        .Text(h.Ld + ":")
        .b(d)
        .b({
          top: "20px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      q = b(l.input.Number)
        .o("vertical-line-value2")
        .b(d)
        .b({ top: "48px", left: "280px", width: "100px" });
      w = b(l.page.I, "vertical-line-value2")
        .Text(h.Ld + ":")
        .b(d)
        .b({
          top: "52px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
    }
    var e = this.data,
      d = this.v.j,
      g = 6e4 * new Date().getTimezoneOffset(),
      p = e.value[0],
      k = e.value[1],
      F = e.date[0],
      e = e.date[1],
      e = e + g;
    f.f(F + g);
    z.f(e);
    m.f(p).T(d).Y(Math.pow(10, -d));
    q.f(k).T(d).Y(Math.pow(10, -d));
    a.c(f).c(c).c(z).c(A).c(m).c(u).c(q).c(w);
    return this;
  };
  p.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      b = this.data;
    b.date[0] = f.f() - a;
    b.date[1] = z.f() - a;
    b.value[0] = m.f();
    b.value[1] = q.f();
    return this;
  };
  p.prototype.ic = function () {
    this.Vf();
    var b = this.canvas,
      c = this.Nb,
      f = this.v,
      e = this.data,
      p = this.text,
      h = this.Pb,
      q = this.qb,
      m = this.xb,
      w = this.Ra,
      u = e.date,
      z = e.value,
      B = f.Aa,
      l = f.ta,
      A = k.sc || e.disabled,
      K = b.getContext("2d"),
      P = f.pb(u[0], !0),
      T = f.pb(u[1], !0),
      R = z[0],
      H = z[1],
      S,
      v = a.qj(P, R, T, H, f.j),
      W = this.nc,
      Y = this.focused,
      P = this.R;
    g(b, "z-index", e.background ? "0" : "");
    g(p, "display", "none");
    c.setAttribute("visibility", A ? "hidden" : "visible");
    parseInt(b.style.width, 10) != B &&
      (r.sa
        ? b.setAttribute("width", B * r.devicePixelRatio)
        : b.setAttribute("width", B),
      g(b, "width", B + "px"));
    parseInt(b.style.height, 10) != l &&
      (r.sa
        ? b.setAttribute("height", l * r.devicePixelRatio)
        : b.setAttribute("height", l),
      g(b, "height", l + "px"));
    P && K.clearRect.apply(K, P);
    r.sa &&
      (K.setTransform(1, 0, 0, 1, 0, 0),
      K.scale(r.devicePixelRatio, r.devicePixelRatio));
    b = f.Da(u[0], z[0]);
    P = b[0];
    R = b[1];
    b = f.Da(u[1], z[1]);
    T = b[0];
    H = b[1];
    u = P;
    z = T;
    l = P;
    c = R;
    B = H;
    S = R;
    A ||
      (m.setAttribute("cx", u),
      m.setAttribute("cy", c),
      w.setAttribute("cx", z),
      w.setAttribute("cy", B));
    m = a.Hg(P, R, T, H);
    K.beginPath();
    K.strokeStyle = "#ff0000";
    K.moveTo(u + 0.5, c + 0.5);
    K.lineTo(z + 0.5, B + 0.5);
    K.stroke();
    K.fillStyle = "red";
    K.beginPath();
    K.moveTo(z + 0.5, B + 0.5);
    w = 0.875 * Math.PI;
    b = a.Rd(m - w, 10);
    K.lineTo(z + 0.5 + b[0], B + 0.5 + b[1]);
    b = a.Rd(m + w, 10);
    K.lineTo(z + 0.5 + b[0], B + 0.5 + b[1]);
    K.fill();
    A ||
      ((h.textContent = [e.name, v].join("\n")),
      q.setAttribute("x1", u),
      q.setAttribute("y1", c),
      q.setAttribute("x2", z),
      q.setAttribute("y2", B));
    Y &&
      ((K.fillStyle = "#f00"),
      K.fillRect(P - 3, R - 3, 5, 5),
      K.fillRect(T - 3, H - 3, 5, 5),
      (K.fillStyle = f.Ia),
      K.fillRect(P - 2, R - 2, 3, 3),
      K.fillRect(T - 2, H - 2, 3, 3),
      (b = a.Ti(P, R, T, H))) &&
      ((K.fillStyle = "#f00"),
      K.fillRect(b[0] - 3, b[1] - 3, 5, 5),
      (K.fillStyle = f.Ia),
      K.fillRect(b[0] - 2, b[1] - 2, 3, 3));
    W &&
      "line" != W &&
      (d(p, v),
      (l = ("point1" == W ? P : T) - 3 - parseInt(p.style.width, 10)),
      (S = ("point1" == W ? R : H) + 3),
      g(p, { display: "block", left: l + "px", top: S + "px", color: f.Ia }));
    this.R = [
      Math.min(u, z, l) - 15,
      Math.max(Math.min(c, B, S) - 10, 0),
      Math.max(u, z, l) - Math.min(u, z, l) + 30,
      Math.max(c, B, S) - Math.min(c, B, S) + 30,
    ];
    f.Bg &&
      (e = (e.description || "").substr(0, 64)) &&
      (K.save(),
      K.translate(P, R),
      K.rotate(m),
      (K.textAlign = "left"),
      (K.textBaseline = "bottom"),
      (K.fillStyle = f.Ia),
      K.fillText(e, 1, -2),
      K.restore(),
      (this.R[0] = 0),
      (this.R[1] = 0),
      (this.R[2] = f.Aa),
      (this.R[3] = f.ta));
  };
})();
(function () {
  function v() {
    var a = this.data,
      c = this.v,
      f = this.canvas,
      e = this.element,
      g = this.Nb,
      n = this.input,
      q = this.xb,
      C = this.Ra,
      m = c.Aa,
      y = c.ta,
      K = z.sc || a.disabled,
      B = f.getContext("2d"),
      l = a.date,
      G = a.value,
      O = c.pb(l[0], !0),
      D = c.pb(l[1], !0),
      F = G[0],
      I = G[1],
      O = this.R,
      L = this.focused;
    n ||
      ((n = this.input = u("input")),
      (n.type = "checkbox"),
      (n.w = this),
      x(n, { position: "absolute", top: "-3000px", left: "-3000px" }),
      p(n, "focus", h),
      p(n, "blur", b),
      w(e, n));
    q ||
      ((q = this.xb = u("circle", "http://www.w3.org/2000/svg")),
      q.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      q.setAttribute("r", "10"),
      (q.w = this),
      p(q, "mousedown", r),
      p(q, "dblclick", k),
      w(g, q));
    C ||
      ((C = this.Ra = u("rect", "http://www.w3.org/2000/svg")),
      C.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      (C.w = this),
      p(C, "mousedown", r),
      p(C, "dblclick", k),
      w(g, C));
    x(f, "z-index", a.background ? "0" : "");
    g.setAttribute("visibility", K ? "hidden" : "visible");
    parseInt(f.style.width, 10) != m &&
      (d.sa
        ? f.setAttribute("width", m * d.devicePixelRatio)
        : f.setAttribute("width", m),
      x(f, "width", m + "px"));
    parseInt(f.style.height, 10) != y &&
      (d.sa
        ? f.setAttribute("height", y * d.devicePixelRatio)
        : f.setAttribute("height", y),
      x(f, "height", y + "px"));
    O && B.clearRect.apply(B, O);
    d.sa &&
      (B.setTransform(1, 0, 0, 1, 0, 0),
      B.scale(d.devicePixelRatio, d.devicePixelRatio));
    I = c.Da(l[0], G[0]);
    O = I[0];
    F = I[1];
    I = c.Da(l[1], G[1]);
    D = I[0];
    I = I[1];
    B.font = "11px Tahoma, sans-serif";
    B.fillStyle = "#000000";
    B.textBaseline = "top";
    a = (a.description || "").substr(0, 64);
    l = Math.min(B.measureText(a).width, 200);
    G = 12;
    f = a.split(" ");
    n = "";
    e = 0;
    for (g = f.length; e < g; e++)
      (m = B.measureText(f[e]).width),
        200 < m && (l = m),
        (n = n + f[e] + " "),
        (m = B.measureText(n)),
        (m = m.width),
        200 < m && 0 < e && ((n = f[e] + " "), (G += 12));
    var g = [l, G],
      n = g[0] + 10,
      m = g[1] + 10,
      l = D - Math.floor(0.5 * n),
      G = I - Math.floor(0.5 * m),
      f = l + n,
      e = G + m,
      Q,
      A = D - Math.floor(0.5 * n) - 0.5,
      N = I - Math.floor(0.5 * m) - 0.5,
      y = O - 0.5;
    Q = F - 0.5;
    B.beginPath();
    B.fillStyle = "#FFFBEE";
    B.strokeStyle = "#A5882A";
    y > A && y < A + n && Q > N && Q < N + m
      ? (B.rect(A, N, n, m), B.fill(), B.stroke())
      : y < A
      ? (Q < N ? B.moveTo(A + 5, N) : B.moveTo(A, N),
        B.lineTo(A + n, N),
        B.lineTo(A + n, N + m),
        Q > N + m
          ? (B.lineTo(A + 5, N + m),
            B.lineTo(y, Q),
            B.lineTo(A, N + m - 5),
            B.lineTo(A, N))
          : Q > N && Q < N + m
          ? (B.lineTo(A, N + m),
            B.lineTo(A, N + m - 0.5 * m + 5),
            B.lineTo(y, Q),
            B.lineTo(A, N + m - 0.5 * m - 5),
            B.lineTo(A, N))
          : Q < N
          ? (B.lineTo(A, N + m),
            B.lineTo(A, N + 5),
            B.lineTo(y, Q),
            B.lineTo(A + 5, N))
          : B.lineTo(A, N + m),
        B.fill(),
        B.stroke(),
        B.closePath())
      : y > A + n
      ? (B.moveTo(A, N),
        Q < N
          ? (B.lineTo(A + n - 5, N),
            B.lineTo(y, Q),
            B.lineTo(A + n, N + 5),
            B.lineTo(A + n, N + m))
          : Q > N && Q < N + m
          ? (B.lineTo(A + n, N),
            B.lineTo(A + n, N + 0.5 * m - 5),
            B.lineTo(y, Q),
            B.lineTo(A + n, N + 0.5 * m + 5),
            B.lineTo(A + n, N + m))
          : Q > N + m &&
            (B.lineTo(A + n, N),
            B.lineTo(A + n, N + m - 5),
            B.lineTo(y, Q),
            B.lineTo(A + n - 5, N + m)),
        B.lineTo(A, N + m),
        B.lineTo(A, N),
        B.fill(),
        B.stroke(),
        B.closePath())
      : Q < N
      ? (B.moveTo(A, N),
        B.lineTo(A + 0.5 * n - 5, N),
        B.lineTo(y, Q),
        B.lineTo(A + 0.5 * n + 5, N),
        B.lineTo(A + n, N),
        B.lineTo(A + n, N + m),
        B.lineTo(A, N + m),
        B.lineTo(A, N),
        B.fill(),
        B.stroke(),
        B.closePath())
      : (B.moveTo(A, N),
        B.lineTo(A + n, N),
        B.lineTo(A + n, N + m),
        B.lineTo(A + 0.5 * n + 5, N + m),
        B.lineTo(y, Q),
        B.lineTo(A + 0.5 * n - 5, N + m),
        B.lineTo(A, N + m),
        B.lineTo(A, N),
        B.fill(),
        B.stroke());
    n = l + 5;
    m = G + 4;
    a = a.split(" ");
    y = "";
    B.fillStyle = "#000000";
    for (var N = 0, M = a.length; N < M; N++)
      (Q = y + a[N] + " "),
        (A = B.measureText(Q).width),
        200 < A && 0 < N
          ? (B.fillText(y, n, m), (y = a[N] + " "), (m += 12))
          : (y = Q);
    B.fillText(y, n, m);
    K ||
      (q.setAttribute("cx", O),
      q.setAttribute("cy", F),
      C.setAttribute("x", D - 0.5 * g[0] - 5),
      C.setAttribute("y", I - 0.5 * g[1] - 5),
      C.setAttribute("width", g[0] + 10),
      C.setAttribute("height", g[1] + 10));
    L &&
      ((B.fillStyle = "#f00"),
      B.fillRect(O - 3, F - 3, 5, 5),
      (B.fillStyle = c.Ia),
      B.fillRect(O - 2, F - 2, 3, 3));
    this.R = [
      Math.min(O, D, l, f) - 3,
      Math.min(F, I, G, e) - 3,
      Math.max(O, D, l, f) - Math.min(O, D, l, f) + 6,
      Math.max(F, I, G, e) - Math.min(F, I, G, e) + 6,
    ];
  }
  function r(a) {
    if (this) {
      var b = this.w;
      if (b) {
        var c = b.element;
        if (c) {
          var d = q(c);
          d &&
            setTimeout(function () {
              d.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        Q = b;
        this == b.xb && (N = "point1");
        this == b.Ra && (N = "point2");
        p(window, "mousemove", l);
        p(window, "mouseup", e);
      }
    }
  }
  function l(a) {
    var b = Q.v,
      c = a.clientX,
      d = a.clientY;
    a = Q.data.date;
    var f = Q.data.value;
    -1 !== N.indexOf("point") &&
      ((c = b.Tb(c, d)),
      "point1" == N && ((a[0] = c[0]), (f[0] = c[1])),
      "point2" == N && ((a[1] = c[0]), (f[1] = c[1])));
    Q.nc = N;
    Q.Ha(b);
  }
  function e(a) {
    if (Q.lc) {
      var b = Q.input;
      b && b.focus();
    }
    Q.lc = null;
    Q.nc = !1;
    Q.Ha(Q.v);
    Q.M("change", a);
    N = Q = null;
    n(window, "mousemove", l);
    n(window, "mouseup", e);
  }
  function k(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function h(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), v.call(b));
        clearTimeout(c);
      }, 50);
    clearTimeout(b.Kb);
  }
  function b(a) {
    var b = this.w;
    clearTimeout(b.Kb);
    b.Kb = setTimeout(function () {
      var c = C();
      ("input" == O(c) && "checkbox" == c.type && c.sf) ||
        ((b.focused = !1), v.call(b), b.M("blur", a));
    }, 0);
  }
  var a = E.va,
    g = E.oc,
    d = E.Qa,
    f = E.controls,
    c = f.L.Sc,
    z = f.L.Zb,
    A = E.ba.xa,
    m = E.Ma,
    u = a.sb,
    q = a.Xb,
    w = a.tb,
    p = g.i,
    n = g.hc,
    x = a.$a,
    C = a.Wf,
    O = a.md,
    I,
    G,
    F,
    y,
    M,
    D,
    L,
    B,
    Q,
    N,
    K = (c.LP = function (a) {
      K.G.constructor.apply(this, arguments);
    });
  c.cc(K);
  K.type = "Call Out";
  K.Ec = function (a, b, d) {
    var f = c.Kf.Ec();
    f.type = K.type;
    f.name = A.BO + " " + d;
    f.date = [a, a];
    f.value = [b, b];
    f.description = A.CO;
    return f;
  };
  K.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    K.G.Qd.call(this) && v.call(this);
    return this;
  };
  K.prototype.gb = function () {
    this.R = null;
    var a = this.input;
    a && ((a.w = null), n(a, "focus", h), n(a, "blur", b), (this.input = null));
    if ((a = this.xb))
      (a.w = null), n(a, "mousedown", r), n(a, "dblclick", k), (this.xb = null);
    if ((a = this.Ra))
      (a.w = null), n(a, "mousedown", r), n(a, "dblclick", k), (this.Ra = null);
    K.G.gb.apply(this, arguments);
    return this;
  };
  K.prototype.Mf = function (a) {
    var b = this.Ra,
      c = this.input,
      d = {};
    d.clientX = a.clientX;
    d.clientY = a.clientY;
    d.currentTarget = b;
    this.lc = !0;
    r.call(b, d);
    c &&
      c.focus &&
      setTimeout(function () {
        c.focus();
      });
    return this;
  };
  K.prototype.kb = function (a) {
    if (!I) {
      var b = { position: "absolute" };
      I = m(f.input.Date).b(b).b({
        top: "16px",
        left: "84px",
        width: "130px",
      });
      G = m(f.page.I, "vertical-line-time1")
        .Text(A.gd + ":")
        .b(b)
        .b({ top: "20px", width: "78px", "text-align": "right" });
      F = m(f.input.Date).b(b).b({ top: "48px", left: "84px", width: "130px" });
      y = m(f.page.I, "vertical-line-time2")
        .Text(A.gd + ":")
        .b(b)
        .b({ top: "52px", width: "78px", "text-align": "right" });
      M = m(f.input.Number)
        .o("vertical-line-value1")
        .b(b)
        .b({ top: "16px", left: "280px", width: "100px" });
      D = m(f.page.I, "vertical-line-value1")
        .Text(A.Ld + ":")
        .b(b)
        .b({
          top: "20px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      L = m(f.input.Number)
        .o("vertical-line-value2")
        .b(b)
        .b({ top: "48px", left: "280px", width: "100px" });
      B = m(f.page.I, "vertical-line-value2")
        .Text(A.Ld + ":")
        .b(b)
        .b({
          top: "52px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
    }
    var c = this.data,
      b = this.v.j,
      d = 6e4 * new Date().getTimezoneOffset(),
      e = c.value[0],
      g = c.value[1],
      n = c.date[0],
      c = c.date[1],
      c = c + d;
    I.f(n + d);
    F.f(c);
    M.f(e).T(b).Y(Math.pow(10, -b));
    L.f(g).T(b).Y(Math.pow(10, -b));
    a.c(I).c(G).c(F).c(y).c(M).c(D).c(L).c(B);
    return this;
  };
  K.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      b = this.data;
    b.date[0] = I.f() - a;
    b.date[1] = F.f() - a;
    b.value[0] = M.f();
    b.value[1] = L.f();
    return this;
  };
})();
(function () {
  function v(a) {
    if (this) {
      var b = this.w;
      if (b) {
        var c = b.element;
        if (c) {
          var d = q(c);
          d &&
            setTimeout(function () {
              d.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        H = b;
        S = "line";
        this == b.xb && (S = "point1");
        this == b.Ra && (S = "point2");
        if ("line" == S) {
          b = c.Ge || m(c);
          c.Ge = b;
          var c = H.data.date,
            f = H.data.value,
            e = H.v,
            g = e.Da(c[0], f[0]);
          Z = b[0] + g[0];
          V = b[1] + g[1];
          g = e.Da(c[1], f[1]);
          W = b[0] + g[0];
          ea = b[1] + g[1];
          Y = a.clientX;
          ha = a.clientY;
        }
        p(window, "mousemove", r);
        p(window, "mouseup", l);
      }
    }
  }
  function r(a) {
    var b = H.v,
      c = a.clientX;
    a = a.clientY;
    var d = H.data.date,
      f = H.data.value,
      e;
    -1 !== S.indexOf("point") &&
      ((e = b.Tb(c, a)),
      "point1" == S && ((d[0] = e[0]), (f[0] = e[1])),
      "point2" == S && ((d[1] = e[0]), (f[1] = e[1])));
    "line" == S &&
      ((e = b.Tb(Z + c - Y, V + a - ha)),
      (d[0] = e[0]),
      (f[0] = e[1]),
      (e = b.Tb(W + (c - Y), ea + (a - ha))),
      (d[1] = e[0]),
      (f[1] = e[1]));
    H.nc = S;
    H.Ha(b);
  }
  function l(a) {
    if (H.lc) {
      var b = H.input;
      b && b.focus();
    }
    H.lc = null;
    H.nc = !1;
    H.Ha(H.v);
    H.M("change", a);
    ha = ea = V = Y = W = Z = S = H = null;
    n(window, "mousemove", r);
    n(window, "mouseup", l);
  }
  function e(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function k(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), b.ic());
        clearTimeout(c);
      }, 50);
    clearTimeout(b.Kb);
  }
  function h(a) {
    var b = this.w;
    clearTimeout(b.Kb);
    b.Kb = setTimeout(function () {
      var c = I();
      ("input" == G(c) && "checkbox" == c.type && c.sf) ||
        ((b.focused = !1), b.ic(), b.M("blur", a));
    }, 0);
  }
  var b = E.va,
    a = E.oc,
    g = E.Qa,
    d = E.controls,
    f = d.L.Sc,
    c = d.L.Zb,
    z = E.ba.xa,
    A = E.Ma,
    m = E.ma.Vh,
    u = b.sb,
    q = b.Xb,
    w = b.tb,
    p = a.i,
    n = a.hc,
    x = b.hb,
    C = b.$a,
    O = b.Cd,
    I = b.Wf,
    G = b.md,
    F,
    y,
    M,
    D,
    L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha,
    fa = (f.Gm.lG = function (a) {
      fa.G.constructor.apply(this, arguments);
    });
  f.cc(fa);
  fa.type = "Fibonacci Retracement";
  fa.Ec = function (a, b, c) {
    var d = f.Kf.Ec();
    d.type = fa.type;
    d.name = z.EO + " " + c;
    d.date = [a, a];
    d.value = [b, b];
    d.levels = [0, 23.6, 38.2, 50, 61.8, 100, 161.8, 261.8, 423.6];
    d.ray_left = !1;
    d.ray_right = !1;
    return d;
  };
  fa.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    fa.G.Qd.call(this) && this.ic(this);
    return this;
  };
  fa.prototype.gb = function () {
    this.R = null;
    var a = this.input;
    a && ((a.w = null), n(a, "focus", k), n(a, "blur", h), (this.input = null));
    var b = this.qb;
    a &&
      ((b.w = null),
      n(b, "mousedown", v),
      n(b, "dblclick", e),
      (this.qb = null));
    if ((a = this.xb))
      (a.w = null), n(a, "mousedown", v), n(a, "dblclick", e), (this.xb = null);
    if ((a = this.Ra))
      (a.w = null), n(a, "mousedown", v), n(a, "dblclick", e), (this.Ra = null);
    this.text = this.Pb = null;
    fa.G.gb.apply(this, arguments);
    return this;
  };
  fa.prototype.Mf = function (a) {
    var b = this.Ra,
      c = this.input,
      d = {};
    d.clientX = a.clientX;
    d.clientY = a.clientY;
    d.currentTarget = b;
    this.lc = !0;
    v.call(b, d);
    c &&
      c.focus &&
      setTimeout(function () {
        c.focus();
      }, 0);
    return this;
  };
  fa.prototype.kb = function (a) {
    if (!F) {
      var b = { position: "absolute" };
      F = A(d.input.Date).b(b).b({ top: "16px", left: "84px", width: "130px" });
      y = A(d.page.I, "vertical-line-time1")
        .Text(z.gd + ":")
        .b(b)
        .b({ top: "20px", width: "78px", "text-align": "right" });
      M = A(d.input.Date).b(b).b({ top: "48px", left: "84px", width: "130px" });
      D = A(d.page.I, "vertical-line-time2")
        .Text(z.gd + ":")
        .b(b)
        .b({ top: "52px", width: "78px", "text-align": "right" });
      L = A(d.input.Number)
        .o("vertical-line-value1")
        .b(b)
        .b({ top: "16px", left: "280px", width: "100px" });
      B = A(d.page.I, "vertical-line-value1")
        .Text(z.Ld + ":")
        .b(b)
        .b({
          top: "20px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      Q = A(d.input.Number)
        .o("vertical-line-value2")
        .b(b)
        .b({ top: "48px", left: "280px", width: "100px" });
      N = A(d.page.I, "vertical-line-value2")
        .Text(z.Ld + ":")
        .b(b)
        .b({
          top: "52px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      K = A(d.input.pa)
        .o("vertical-line-ray-right")
        .b(b)
        .b({ top: "84px", left: "84px" });
      P = A(d.page.I, "vertical-line-ray-right")
        .Text(z.Kl)
        .b(b)
        .b({ top: "83px", left: "101px", "white-space": "nowrap" });
      T = A(d.input.pa).o("vertical-line-ray-left").b(b).b({
        top: "106px",
        left: "84px",
      });
      R = A(d.page.I, "vertical-line-ray-left")
        .Text(z.Jl)
        .b(b)
        .b({ top: "105px", left: "101px", "white-space": "nowrap" });
    }
    var b = this.data,
      c = this.v.j,
      f = 6e4 * new Date().getTimezoneOffset(),
      e = b.value[0],
      g = b.value[1],
      n = b.date[0],
      p = b.date[1],
      p = p + f;
    F.f(n + f);
    M.f(p);
    L.f(e).T(c).Y(Math.pow(10, -c));
    Q.f(g).T(c).Y(Math.pow(10, -c));
    K.s(!!b.ray_right);
    T.s(!!b.ray_left);
    a.c(F).c(y).c(M).c(D).c(L).c(B).c(Q).c(N).c(K).c(P).c(T).c(R);
    return this;
  };
  fa.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      b = this.data;
    b.ray_right = K.s();
    b.ray_left = T.s();
    b.date[0] = F.f() - a;
    b.date[1] = M.f() - a;
    b.value[0] = L.f();
    b.value[1] = Q.f();
    return this;
  };
  fa.prototype.Vf = function () {
    var a = this.Pb,
      b = this.Nb,
      c = this.qb,
      d = this.input,
      f = this.element,
      g = this.xb,
      n = this.Ra,
      q = this.text;
    a || ((a = this.Pb = u("title", "http://www.w3.org/2000/svg")), w(b, a));
    c ||
      ((c = this.qb = u("line", "http://www.w3.org/2000/svg")),
      c.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (c.w = this),
      p(c, "mousedown", v),
      p(c, "dblclick", e),
      w(b, c));
    d ||
      ((d = this.input = u("input")),
      (d.type = "checkbox"),
      (d.w = this),
      C(d, { position: "absolute", top: "-3000px", left: "-3000px" }),
      p(d, "focus", k),
      p(d, "blur", h),
      w(f, d));
    g ||
      ((g = this.xb = u("circle", "http://www.w3.org/2000/svg")),
      g.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      g.setAttribute("r", "10"),
      (g.w = this),
      p(g, "mousedown", v),
      p(g, "dblclick", e),
      w(b, g));
    n ||
      ((n = this.Ra = u("circle", "http://www.w3.org/2000/svg")),
      n.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      n.setAttribute("r", "10"),
      (n.w = this),
      p(n, "mousedown", v),
      p(n, "dblclick", e),
      w(b, n));
    q ||
      ((q = this.text = u("span")),
      x(q, "val"),
      C(q, {
        position: "absolute",
        "white-space": "nowrap",
        width: "80px",
        "text-align": "right",
      }),
      w(f, q));
  };
  fa.prototype.ic = function () {
    this.Vf();
    var a = this.v,
      b = this.data,
      d = this.canvas,
      f = this.Nb,
      e = this.text,
      n = this.Pb,
      p = this.qb,
      h = this.xb,
      x = this.Ra,
      q = a.Aa,
      m = a.ta,
      w = c.sc || b.disabled,
      y = b.date,
      k = b.value,
      u = b.levels,
      B,
      K = d.getContext("2d"),
      z = a.pb(y[0], !0),
      l = a.pb(y[1], !0),
      G = k[0],
      A = k[1];
    B = z + 1;
    var D = G + 1,
      F = 0,
      H,
      I;
    I = Math.pow(10, a.j);
    z = Math.floor(Math.max(z, l) - Math.min(z, l));
    A = Math.floor(Math.max(G, A) * I - Math.min(G, A) * I);
    I = [z, A].join(" / ");
    var Q = this.nc,
      L = this.focused,
      A = this.R;
    C(d, "z-index", b.background ? "0" : "");
    C(e, "display", "none");
    f.setAttribute("visibility", w ? "hidden" : "visible");
    parseInt(d.style.width, 10) != q &&
      (g.sa
        ? d.setAttribute("width", q * g.devicePixelRatio)
        : d.setAttribute("width", q),
      C(d, "width", q + "px"));
    parseInt(d.style.height, 10) != m &&
      (g.sa
        ? d.setAttribute("height", m * g.devicePixelRatio)
        : d.setAttribute("height", m),
      C(d, "height", m + "px"));
    A ? K.clearRect.apply(K, A) : K.clearRect(0, 0, q, m);
    g.sa &&
      (K.setTransform(1, 0, 0, 1, 0, 0),
      K.scale(g.devicePixelRatio, g.devicePixelRatio));
    d = a.Da(y[0], k[0]);
    z = d[0];
    G = d[1];
    d = a.Da(y[1], k[1]);
    l = d[0];
    A = d[1];
    y = Math.atan2(A - G, l - z);
    k = Math.max(G, A) - Math.min(G, A);
    K.beginPath();
    K.strokeStyle = "#ff0000";
    K.moveTo(z, G);
    K.lineTo(l, A);
    K.stroke();
    L &&
      ((K.fillStyle = "#f00"),
      K.fillRect(z - 3, G - 3, 5, 5),
      K.fillRect(l - 3, A - 3, 5, 5),
      (K.fillStyle = a.Ia),
      K.fillRect(z - 2, G - 2, 3, 3),
      K.fillRect(l - 2, A - 2, 3, 3),
      (d = 0.5 * Math.sqrt((l - z) * (l - z) + (A - G) * (A - G))),
      (f = Math.atan2(A - G, l - z)),
      (d = [Math.round(z + d * Math.cos(f)), Math.round(G + d * Math.sin(f))]),
      (K.fillStyle = "#f00"),
      K.fillRect(d[0] - 3, d[1] - 3, 5, 5),
      (K.fillStyle = a.Ia),
      K.fillRect(d[0] - 2, d[1] - 2, 3, 3));
    Q &&
      "line" != Q &&
      (O(e, I),
      (B = ("point1" == Q ? z : l) - 3 - parseInt(e.style.width, 10)),
      (D = ("point1" == Q ? G : A) + 3),
      C(e, { display: "block", left: B + "px", top: D + "px", color: a.Ia }));
    w ||
      ((n.textContent = [b.name, I].join("\n")),
      p.setAttribute("x1", z),
      p.setAttribute("y1", G),
      p.setAttribute("x2", l),
      p.setAttribute("y2", A),
      h.setAttribute("cx", z),
      h.setAttribute("cy", G),
      x.setAttribute("cx", l),
      x.setAttribute("cy", A));
    b.ray_left && (z < l ? (z = 0) : (l = 0));
    b.ray_right && (l > z ? (l = a.Aa) : (z = a.Aa), (F = 3));
    e = Math.max(z, l) - Math.min(z, l);
    this.R = [
      Math.min(z, l, B) - 20,
      Math.min(G, A, D) - 20,
      Math.max(z, l, B) - Math.min(z, l, B) + 40,
      Math.max(G, A, D) - Math.min(G, A, D) + 40,
    ];
    if (u && u.length) {
      K.font = "10px Tahoma, sans-serif";
      K.fillStyle = "#0000FF";
      K.textAlign = "right";
      K.textBaseline = "bottom";
      0 < a.ut && (K.fillStyle = "#FF4500");
      D = Math.min(z, l);
      n = 0;
      for (p = u.length; n < p; n++)
        (B = parseFloat(u[n])),
          A > G ? (H = A - (k / 100) * B) : (H = A + (k / 100) * B),
          (H = Math.floor(H)),
          K.fillRect(D, H, e, 1),
          K.fillText(B.toFixed(1), D + e - F, H - 1);
      this.R[1] = 0;
      this.R[3] = a.ta;
    }
    a.Bg &&
      (b = (b.description || "").substr(0, 64)) &&
      (K.save(),
      K.translate(z, G),
      K.rotate(y),
      (K.textAlign = "left"),
      (K.textBaseline = "bottom"),
      (K.fillStyle = a.Ia),
      K.fillText(b, 1, -2),
      K.restore(),
      (this.R[0] = 0),
      (this.R[1] = 0),
      (this.R[2] = a.Aa),
      (this.R[3] = a.ta));
  };
})();
(function () {
  function v() {
    this.Vf();
    var a = this.v,
      b = this.data,
      c = this.canvas,
      f = this.Nb,
      e = this.Pb,
      g = this.ld,
      n = this.bc,
      p = this.xb,
      h = this.Ra,
      x = this.og,
      q = b.date,
      m = b.value,
      C = b.ray_right,
      w = b.ray_left,
      y = a.Aa,
      k = a.ta,
      K = A.sc || b.disabled,
      u = c.getContext("2d"),
      B = a.pb(q[0], !0),
      l = a.pb(q[1], !0),
      G = a.pb(q[2], !0),
      D = m[0],
      H = m[1],
      F = m[2],
      I,
      Q = this.nc,
      L = this.focused,
      N = this.R,
      P,
      R,
      r;
    r = "point3" != V ? z.qj(B, D, l, H, a.j) : z.qj(B, D, G, F, a.j);
    O(c, "z-index", b.background ? "0" : "");
    f.setAttribute("visibility", K ? "hidden" : "visible");
    parseInt(c.style.width, 10) != y &&
      (d.sa
        ? c.setAttribute("width", y * d.devicePixelRatio)
        : c.setAttribute("width", y),
      O(c, "width", y + "px"));
    parseInt(c.style.height, 10) != k &&
      (d.sa
        ? c.setAttribute("height", k * d.devicePixelRatio)
        : c.setAttribute("height", k),
      O(c, "height", k + "px"));
    N ? u.clearRect.apply(u, N) : u.clearRect(0, 0, a.Aa, a.ta);
    d.sa &&
      (u.setTransform(1, 0, 0, 1, 0, 0),
      u.scale(d.devicePixelRatio, d.devicePixelRatio));
    I = a.Da(q[0], m[0]);
    B = I[0];
    D = I[1];
    I = a.Da(q[1], m[1]);
    l = I[0];
    H = I[1];
    I = a.Da(q[2], m[2]);
    var G = I[0],
      F = I[1],
      ba = G + l - B,
      M = F + H - D,
      m = B,
      c = l,
      f = D,
      y = H,
      k = ba,
      N = G;
    P = M;
    R = F;
    q = z.Hg(B, D, l, H);
    u.beginPath();
    u.strokeStyle = "#ff0000";
    u.moveTo(B, D);
    u.lineTo(l, H);
    u.moveTo(G, F);
    u.lineTo(ba, M);
    I = b.levels;
    for (
      var T = z.jq(B, D, G, F), Y = z.Hg(B, D, G, F), U = 0, v = I.length;
      U < v;
      U++
    ) {
      var S = I[U] / 100,
        S = z.Rd(Y, T * S);
      u.moveTo(G + S[0], F + S[1]);
      u.lineTo(ba + S[0], M + S[1]);
      if (C) {
        var X = z.Rd(q, 1e4);
        u.moveTo(ba + S[0], M + S[1]);
        u.lineTo(ba + S[0] + X[0], M + S[1] + X[1]);
      }
      w &&
        ((X = z.Rd(q - Math.PI, 1e4)),
        u.moveTo(G + S[0], F + S[1]),
        u.lineTo(G + S[0] + X[0], F + S[1] + X[1]));
    }
    u.save();
    u.fillStyle = "red";
    U = 0;
    for (v = I.length; U < v; U++)
      (S = I[U] / 100),
        (S = z.Rd(Y, T * S)),
        u.fillText(I[U], G + S[0], F + S[1]);
    u.restore();
    K ||
      ((e.textContent = [b.name, r].join("\n")),
      p.setAttribute("cx", B),
      p.setAttribute("cy", D),
      h.setAttribute("cx", l),
      h.setAttribute("cy", H),
      x.setAttribute("cx", G),
      x.setAttribute("cy", F));
    C &&
      ((I = z.Rd(q, 1e4)),
      (e = l + I[0]),
      (p = H + I[1]),
      (c = e),
      (y = p),
      u.moveTo(l, H),
      u.lineTo(e, p),
      (e = ba + I[0]),
      (p = M + I[1]),
      (k = e),
      (P = p),
      u.moveTo(ba, M),
      u.lineTo(e, p));
    w &&
      ((I = z.Rd(q - Math.PI, 1e4)),
      (e = G + I[0]),
      (p = F + I[1]),
      (N = e),
      (R = p),
      u.moveTo(G, F),
      u.lineTo(e, p),
      (e = B + I[0]),
      (p = D + I[1]),
      (m = e),
      (f = p),
      u.moveTo(B, D),
      u.lineTo(e, p));
    u.stroke();
    K ||
      (g.setAttribute("x1", m),
      g.setAttribute("y1", f),
      g.setAttribute("x2", c),
      g.setAttribute("y2", y),
      n.setAttribute("x1", k),
      n.setAttribute("y1", P),
      n.setAttribute("x2", N),
      n.setAttribute("y2", R));
    L &&
      ((u.fillStyle = "#f00"),
      u.fillRect(B - 3, D - 3, 5, 5),
      u.fillRect(l - 3, H - 3, 5, 5),
      u.fillRect(G - 3, F - 3, 5, 5),
      (u.fillStyle = a.Ia),
      u.fillRect(B - 2, D - 2, 3, 3),
      u.fillRect(l - 2, H - 2, 3, 3),
      u.fillRect(G - 2, F - 2, 3, 3),
      (I = z.Ti(B, D, l, H))) &&
      ((u.fillStyle = "#f00"),
      u.fillRect(I[0] - 3, I[1] - 3, 5, 5),
      (u.fillStyle = a.Ia),
      u.fillRect(I[0] - 2, I[1] - 2, 3, 3));
    e = B;
    p = D;
    Q &&
      "line" != Q &&
      ((u.font = "10px Tahoma, sans-serif"),
      (u.textAlign = "left"),
      (u.textBaseline = "top"),
      (g = u.measureText(r).width),
      "point1" == Q && ((e = B), (p = D)),
      "point2" == Q && ((e = l), (p = H)),
      "point3" == Q && ((e = G), (p = F)),
      (e -= 3 + g),
      (p += 3),
      (u.fillStyle = a.dj),
      u.fillRect(e, p, g, 11),
      (u.fillStyle = a.Ia),
      u.fillText(r, e, p));
    this.R = null;
    a.Bg &&
      (b = (b.description || "").substr(0, 64)) &&
      (u.save(),
      u.translate(B, D),
      u.rotate(q),
      (u.textAlign = "left"),
      (u.textBaseline = "bottom"),
      (u.fillStyle = a.Ia),
      u.fillText(b, 1, -2),
      u.restore(),
      (this.R = null));
  }
  function r(a) {
    if (this) {
      var b = this.w;
      if (b) {
        var c = b.element;
        if (c) {
          var d = p(c);
          d &&
            setTimeout(function () {
              d.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        Y = b;
        V = "line";
        this == b.xb && (V = "point1");
        this == b.Ra && (V = "point2");
        this == b.og && (V = "point3");
        if ("line" == V) {
          b = c.Ge || q(c);
          c.Ge = b;
          var c = Y.data.date,
            f = Y.data.value,
            g = Y.v,
            n = g.Da(c[0], f[0]);
          ea = b[0] + n[0];
          X = b[1] + n[1];
          n = g.Da(c[1], f[1]);
          ha = b[0] + n[0];
          ga = b[1] + n[1];
          n = g.Da(c[2], f[2]);
          fa = b[0] + n[0];
          U = b[1] + n[1];
          aa = a.clientX;
          ba = a.clientY;
        }
        x(window, "mousemove", l);
        x(window, "mouseup", e);
      }
    }
  }
  function l(a) {
    var b = Y.v,
      c = a.clientX;
    a = a.clientY;
    var d = Y.data.date,
      f = Y.data.value,
      e;
    -1 !== V.indexOf("point") &&
      ((e = b.Tb(c, a)),
      "point1" == V && ((d[0] = e[0]), (f[0] = e[1])),
      "point2" == V && ((d[1] = e[0]), (f[1] = e[1])),
      "point3" == V && ((d[2] = e[0]), (f[2] = e[1])));
    "line" == V &&
      ((e = b.Tb(ea + c - aa, X + a - ba)),
      (d[0] = e[0]),
      (f[0] = e[1]),
      (e = b.Tb(ha + (c - aa), ga + (a - ba))),
      (d[1] = e[0]),
      (f[1] = e[1]),
      (e = b.Tb(fa + (c - aa), U + (a - ba))),
      (d[2] = e[0]),
      (f[2] = e[1]));
    Y.nc = V;
    Y.Ha(b);
  }
  function e(a) {
    if (Y.lc) {
      var b = Y.input;
      b && b.focus();
    }
    Y.lc = null;
    Y.nc = !1;
    Y.Ha(Y.v);
    Y.M("change", a);
    ba = U = U = ga = X = fa = ha = ea = V = Y = null;
    C(window, "mousemove", l);
    C(window, "mouseup", e);
  }
  function k(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function h(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), v.call(b));
        clearTimeout(c);
      }, 50);
    clearTimeout(b.Kb);
  }
  function b(a) {
    var b = this.w;
    clearTimeout(b.Kb);
    b.Kb = setTimeout(function () {
      var c = I();
      ("input" == G(c) && "checkbox" == c.type && c.sf) ||
        ((b.focused = !1), v.call(b), b.M("blur", a));
    }, 0);
  }
  var a = E.va,
    g = E.oc,
    d = E.Qa,
    f = E.controls,
    c = f.L.Sc,
    z = c.Pa.ma,
    A = f.L.Zb,
    m = E.ba.xa,
    u = E.Ma,
    q = E.ma.Vh,
    w = a.sb,
    p = a.Xb,
    n = a.tb,
    x = g.i,
    C = g.hc,
    O = a.$a,
    I = a.Wf,
    G = a.md,
    F,
    y,
    M,
    D,
    L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha,
    fa,
    aa,
    X,
    ga,
    U,
    ba,
    da = (c.Gm.S8 = function (a) {
      da.G.constructor.apply(this, arguments);
    });
  c.cc(da);
  da.type = "Fibonacci Channel";
  da.Ec = function (a, b, d) {
    var f = c.Kf.Ec();
    f.type = da.type;
    f.name = m.BK + " " + d;
    f.date = [a, a, a];
    f.value = [b, b, b];
    f.levels = [61.8, 100, 161.8, 261.8];
    f.ray_right = !1;
    f.ray_left = !1;
    return f;
  };
  da.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    da.G.Qd.call(this) && v.call(this);
    return this;
  };
  da.prototype.Mf = function (a) {
    var b = this.input,
      c = this.Ra,
      d = this.v,
      f = {};
    f.clientX = a.clientX;
    f.clientY = a.clientY;
    f.currentTarget = c;
    this.data.value[2] = d.Tb(0, d.Da(0, this.data.value[2])[1] - 100)[1];
    this.lc = !0;
    r.call(c, f);
    b &&
      b.focus &&
      setTimeout(function () {
        b.focus();
      }, 0);
    return this;
  };
  da.prototype.gb = function () {
    this.R = null;
    var a = this.input;
    a && ((a.w = null), C(a, "focus", h), C(a, "blur", b), (this.input = null));
    var c = this.ld;
    a &&
      ((c.w = null),
      C(c, "mousedown", r),
      C(c, "dblclick", k),
      (this.ld = null));
    c = this.bc;
    a &&
      ((c.w = null),
      C(c, "mousedown", r),
      C(c, "dblclick", k),
      (this.bc = null));
    if ((a = this.xb))
      (a.w = null), C(a, "mousedown", r), C(a, "dblclick", k), (this.xb = null);
    if ((a = this.Ra))
      (a.w = null), C(a, "mousedown", r), C(a, "dblclick", k), (this.Ra = null);
    this.Pb = null;
    da.G.gb.apply(this, arguments);
    return this;
  };
  da.prototype.kb = function (a) {
    if (!F) {
      var b = { position: "absolute", left: "280px", width: "100px" },
        c = {
          position: "absolute",
          left: "216px",
          width: "58px",
          "text-align": "right",
        },
        d = { position: "absolute", left: "84px", width: "130px" },
        e = { position: "absolute", width: "78px", "text-align": "right" },
        g = { position: "absolute" },
        n = { position: "absolute", "white-space": "nowrap" };
      F = u(f.input.Date).b(d).b({ top: "16px" });
      y = u(f.page.I, "vertical-line-time1")
        .Text(m.gd + ":")
        .b(e)
        .b({ top: "20px" });
      M = u(f.input.Date).b(d).b({ top: "48px" });
      D = u(f.page.I, "vertical-line-time2")
        .Text(m.gd + ":")
        .b(e)
        .b({ top: "52px" });
      L = u(f.input.Date).b(d).b({ top: "80px" });
      B = u(f.page.I, "vertical-line-time3")
        .Text(m.gd + ":")
        .b(e)
        .b({ top: "84px" });
      Q = u(f.input.Number).o("vertical-line-value1").b(b).b({ top: "16px" });
      N = u(f.page.I, "vertical-line-value1")
        .Text(m.Ld + ":")
        .b(c)
        .b({ top: "20px" });
      K = u(f.input.Number).o("vertical-line-value2").b(b).b({ top: "48px" });
      P = u(f.page.I, "vertical-line-value2")
        .Text(m.Ld + ":")
        .b(c)
        .b({ top: "52px" });
      T = u(f.input.Number).o("vertical-line-value3").b(b).b({ top: "80px" });
      R = u(f.page.I, "vertical-line-value3")
        .Text(m.Ld + ":")
        .b(c)
        .b({ top: "84px" });
      H = u(f.input.pa)
        .o("vertical-line-ray-right")
        .b(g)
        .b({ top: "116px", left: "84px" });
      S = u(f.page.I, "vertical-line-ray-right")
        .Text(m.Kl)
        .b(n)
        .b({ top: "115px", left: "101px" });
      Z = u(f.input.pa).o("vertical-line-ray-left").b(g).b({
        top: "138px",
        left: "84px",
      });
      W = u(f.page.I, "vertical-line-ray-left")
        .Text(m.Jl)
        .b(n)
        .b({ top: "137px", left: "101px" });
    }
    var b = this.data,
      c = this.v.j,
      d = 6e4 * new Date().getTimezoneOffset(),
      e = b.value[0],
      g = b.value[1],
      n = b.value[2],
      p = b.date[0],
      h = b.date[1],
      x = b.date[2],
      h = h + d,
      x = x + d;
    F.f(p + d);
    M.f(h);
    L.f(x);
    Q.f(e).T(c).Y(Math.pow(10, -c));
    K.f(g).T(c).Y(Math.pow(10, -c));
    T.f(n).T(c).Y(Math.pow(10, -c));
    H.s(!!b.ray_right);
    Z.s(!!b.ray_left);
    a.c(F)
      .c(y)
      .c(M)
      .c(D)
      .c(L)
      .c(B)
      .c(Q)
      .c(N)
      .c(K)
      .c(P)
      .c(T)
      .c(R)
      .c(H)
      .c(S)
      .c(Z)
      .c(W);
    return this;
  };
  da.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      b = this.data;
    b.ray_right = H.s();
    b.ray_left = Z.s();
    b.date[0] = F.f() - a;
    b.date[1] = M.f() - a;
    b.date[2] = L.f() - a;
    b.value[0] = Q.f();
    b.value[1] = K.f();
    b.value[2] = T.f();
    return this;
  };
  da.prototype.Vf = function () {
    var a = this.element,
      c = this.Nb,
      d = this.Pb,
      f = this.input,
      e = this.ld,
      g = this.bc,
      p = this.xb,
      q = this.Ra,
      m = this.og;
    d || ((d = this.Pb = w("title", "http://www.w3.org/2000/svg")), n(c, d));
    e ||
      ((e = this.ld = w("line", "http://www.w3.org/2000/svg")),
      e.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (e.w = this),
      x(e, "mousedown", r),
      x(e, "dblclick", k),
      n(c, e));
    g ||
      ((g = this.bc = w("line", "http://www.w3.org/2000/svg")),
      g.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (g.w = this),
      x(g, "mousedown", r),
      x(g, "dblclick", k),
      n(c, g));
    f ||
      ((f = this.input = w("input")),
      (f.type = "checkbox"),
      (f.w = this),
      O(f, { position: "absolute", top: "-3000px", left: "-3000px" }),
      x(f, "focus", h),
      x(f, "blur", b),
      n(a, f));
    p ||
      ((p = this.xb = w("circle", "http://www.w3.org/2000/svg")),
      p.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      p.setAttribute("r", "10"),
      (p.w = this),
      x(p, "mousedown", r),
      x(p, "dblclick", k),
      n(c, p));
    q ||
      ((q = this.Ra = w("circle", "http://www.w3.org/2000/svg")),
      q.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      q.setAttribute("r", "10"),
      (q.w = this),
      x(q, "mousedown", r),
      x(q, "dblclick", k),
      n(c, q));
    m ||
      ((m = this.og = w("circle", "http://www.w3.org/2000/svg")),
      m.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      m.setAttribute("r", "10"),
      (m.w = this),
      x(m, "mousedown", r),
      x(m, "dblclick", k),
      n(c, m));
  };
})();
(function () {
  var v = E.va,
    r = E.Qa,
    l = E.controls,
    e = l.L.Sc,
    k = l.L.Sc.Pa.ma,
    h = l.L.Zb,
    b = E.ba.xa,
    a = E.Ma,
    g = v.$a,
    d = v.Cd,
    f,
    c,
    z,
    A,
    m,
    u,
    q,
    w,
    p = (e.Gm.U8 = function (a) {
      p.G.constructor.apply(this, arguments);
    });
  e.cc(p, e.Gm.lG);
  p.type = "Fibonacci Fan";
  p.Ec = function (a, c, d) {
    var f = e.Kf.Ec();
    f.type = p.type;
    f.name = b.GO + " " + d;
    f.date = [a, a];
    f.value = [c, c];
    f.levels = [38.2, 50, 61.8];
    return f;
  };
  p.prototype.kb = function (d) {
    if (!f) {
      var e = { position: "absolute" };
      f = a(l.input.Date).b(e).b({ top: "16px", left: "84px", width: "130px" });
      c = a(l.page.I, "vertical-line-time1")
        .Text(b.gd + ":")
        .b(e)
        .b({ top: "20px", width: "78px", "text-align": "right" });
      z = a(l.input.Date).b(e).b({ top: "48px", left: "84px", width: "130px" });
      A = a(l.page.I, "vertical-line-time2")
        .Text(b.gd + ":")
        .b(e)
        .b({ top: "52px", width: "78px", "text-align": "right" });
      m = a(l.input.Number)
        .o("vertical-line-value1")
        .b(e)
        .b({ top: "16px", left: "280px", width: "100px" });
      u = a(l.page.I, "vertical-line-value1")
        .Text(b.Ld + ":")
        .b(e)
        .b({
          top: "20px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      q = a(l.input.Number).o("vertical-line-value2").b(e).b({
        top: "48px",
        left: "280px",
        width: "100px",
      });
      w = a(l.page.I, "vertical-line-value2")
        .Text(b.Ld + ":")
        .b(e)
        .b({
          top: "52px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
    }
    var g = this.data,
      e = this.v.j,
      p = 6e4 * new Date().getTimezoneOffset(),
      h = g.value[0],
      k = g.value[1],
      F = g.date[0],
      g = g.date[1],
      g = g + p;
    f.f(F + p);
    z.f(g);
    m.f(h).T(e).Y(Math.pow(10, -e));
    q.f(k).T(e).Y(Math.pow(10, -e));
    d.c(f).c(c).c(z).c(A).c(m).c(u).c(q).c(w);
    return this;
  };
  p.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      b = this.data;
    b.date[0] = f.f() - a;
    b.date[1] = z.f() - a;
    b.value[0] = m.f();
    b.value[1] = q.f();
    return this;
  };
  p.prototype.ic = function () {
    this.Vf();
    var a = this.v,
      b = this.data,
      c = this.canvas,
      f = this.Nb,
      e = this.text,
      p = this.Pb,
      q = this.qb,
      m = this.xb,
      w = this.Ra,
      u = a.Aa,
      z = a.ta,
      B = h.sc || b.disabled,
      l = b.date,
      A = b.value,
      K = b.levels,
      P = c.getContext("2d"),
      T = a.pb(l[0], !0),
      R = a.pb(l[1], !0),
      H = A[0],
      S = A[1],
      v = T + 1,
      W,
      Y = k.qj(T, H, R, S, a.j),
      V = this.nc,
      v = this.focused,
      T = this.R;
    g(c, "z-index", b.background ? "0" : "");
    g(e, "display", "none");
    f.setAttribute("visibility", B ? "hidden" : "visible");
    parseInt(c.style.width, 10) != u &&
      (r.sa
        ? c.setAttribute("width", u * r.devicePixelRatio)
        : c.setAttribute("width", u),
      g(c, "width", u + "px"));
    parseInt(c.style.height, 10) != z &&
      (r.sa
        ? c.setAttribute("height", z * r.devicePixelRatio)
        : c.setAttribute("height", z),
      g(c, "height", z + "px"));
    T && P.clearRect.apply(P, T);
    r.sa &&
      (P.setTransform(1, 0, 0, 1, 0, 0),
      P.scale(r.devicePixelRatio, r.devicePixelRatio));
    c = a.Da(l[0], A[0]);
    T = c[0];
    H = c[1];
    c = a.Da(l[1], A[1]);
    R = c[0];
    S = c[1];
    l = k.Hg(T, H, R, S);
    A = Math.max(H, S) - Math.min(H, S);
    P.beginPath();
    P.moveTo(T, H);
    P.lineTo(R, S);
    P.strokeStyle = "#ff0000";
    P.stroke();
    v &&
      ((P.fillStyle = "#f00"),
      P.fillRect(T - 3, H - 3, 5, 5),
      P.fillRect(R - 3, S - 3, 5, 5),
      (P.fillStyle = a.Ia),
      P.fillRect(T - 2, H - 2, 3, 3),
      P.fillRect(R - 2, S - 2, 3, 3),
      (c = k.Ti(T, H, R, S))) &&
      ((P.fillStyle = "#f00"),
      P.fillRect(c[0] - 3, c[1] - 3, 5, 5),
      (P.fillStyle = a.Ia),
      P.fillRect(c[0] - 2, c[1] - 2, 3, 3));
    V &&
      "line" != V &&
      (d(e, Y),
      (v = ("point1" == V ? T : R) - 3 - parseInt(e.style.width, 10)),
      g(e, {
        display: "block",
        left: v + "px",
        top: ("point1" == V ? H : S) + 3 + "px",
        color: a.Ia,
      }));
    B ||
      ((p.textContent = [b.name, Y].join("\n")),
      q.setAttribute("x1", T),
      q.setAttribute("y1", H),
      q.setAttribute("x2", R),
      q.setAttribute("y2", S),
      m.setAttribute("cx", T),
      m.setAttribute("cy", H),
      w.setAttribute("cx", R),
      w.setAttribute("cy", S));
    Math.max(T, R);
    Math.min(T, R);
    this.R =
      T < R
        ? [Math.max(T - 10, 0), 0, a.Aa, Math.max(H, S) + 10]
        : [0, 0, Math.min(T + 10, a.Aa), Math.max(H, S) + 10];
    H < S &&
      ((this.R[1] = Math.max(0, Math.min(H - 10, S - 10))), (this.R[3] = a.ta));
    if (K && K.length) {
      e = [];
      q = R;
      P.beginPath();
      m = P.strokeStyle = "#0000FF";
      0 < a.ut && (m = P.strokeStyle = "#FF4500");
      w = 0;
      for (B = K.length; w < B; w++)
        (p = parseFloat(K[w])),
          S > H ? (W = S - (A / 100) * p) : (W = S + (A / 100) * p),
          (c = k.Rd(k.Hg(T, H, q, W), 1e5)),
          P.moveTo(T, H),
          P.lineTo(q + c[0], W + c[1]),
          (e[e.length] = [q, W, p]);
      P.stroke();
      K = m;
      P.save();
      P.font = "10px Tahoma, sans-serif";
      P.textAlign = "center";
      P.textBaseline = "bottom";
      P.fillStyle = K;
      K = 0;
      for (W = e.length; K < W; K++)
        (S = e[K]), P.fillText(S[2].toFixed(1), S[0], S[1]);
      P.restore();
    }
    a.Bg &&
      (b = (b.description || "").substr(0, 64)) &&
      (P.save(),
      P.translate(T, H),
      P.rotate(l),
      (P.textAlign = "left"),
      (P.textBaseline = "bottom"),
      (P.fillStyle = a.Ia),
      P.fillText(b, 1, -2),
      P.restore(),
      (this.R[0] = 0),
      (this.R[1] = 0),
      (this.R[2] = a.Aa),
      (this.R[3] = a.ta));
  };
})();
(function () {
  var v = E.va,
    r = E.ma,
    l = E.Qa,
    e = E.controls,
    k = e.L.Sc,
    h = e.L.Sc.Pa.ma,
    b = e.L.Zb,
    a = E.ba.xa,
    g = E.Ma,
    d = v.$a,
    f = v.Cd,
    c,
    z,
    A,
    m,
    u,
    q,
    w,
    p,
    n,
    x,
    C,
    O,
    I = (k.Gm.R8 = function (a) {
      I.G.constructor.apply(this, arguments);
    });
  k.cc(I, k.Gm.lG);
  I.type = "Fibonacci Arcs";
  I.Ec = function (b, c, d) {
    var f = k.Kf.Ec();
    f.type = I.type;
    f.name = a.FO + " " + d;
    f.date = [b, b];
    f.value = [c, c];
    f.ellipse = !1;
    f.scale = 1;
    f.levels = [38.2, 50, 61.8];
    return f;
  };
  I.prototype.kb = function (b) {
    if (!c) {
      var d = { position: "absolute" };
      c = g(e.input.Date).b(d).b({
        top: "16px",
        left: "84px",
        width: "130px",
      });
      z = g(e.page.I, "vertical-line-time1")
        .Text(a.gd + ":")
        .b(d)
        .b({ top: "20px", width: "78px", "text-align": "right" });
      A = g(e.input.Date).b(d).b({ top: "48px", left: "84px", width: "130px" });
      m = g(e.page.I, "vertical-line-time2")
        .Text(a.gd + ":")
        .b(d)
        .b({ top: "52px", width: "78px", "text-align": "right" });
      u = g(e.input.Number)
        .o("vertical-line-value1")
        .b(d)
        .b({ top: "16px", left: "280px", width: "100px" });
      q = g(e.page.I, "vertical-line-value1")
        .Text(a.Ld + ":")
        .b(d)
        .b({
          top: "20px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      w = g(e.input.Number)
        .o("vertical-line-value2")
        .b(d)
        .b({ top: "48px", left: "280px", width: "100px" });
      p = g(e.page.I, "vertical-line-value2")
        .Text(a.Ld + ":")
        .b(d)
        .b({
          top: "52px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      C = g(e.input.Number)
        .o("scale-input")
        .b(d)
        .Fa(0)
        .T(2)
        .Y(0.01)
        .b({ top: "82px", left: "280px", width: "100px" });
      O = g(e.page.I, C.o())
        .Text(a.hP + ":")
        .b(d)
        .b({
          top: "86px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      n = g(e.input.pa)
        .o("vertical-line-ray-left")
        .b(d)
        .b({ top: "86px", left: "84px" });
      x = g(e.page.I, "vertical-line-ray-left")
        .Text(a.$O + "")
        .b(d)
        .b({ top: "86px", left: "101px", "white-space": "nowrap" });
    }
    var d = this.data,
      f = this.v.j,
      h = 6e4 * new Date().getTimezoneOffset(),
      k = d.value[0],
      l = d.value[1],
      B = d.date[0],
      I = d.date[1],
      I = I + h;
    c.f(B + h);
    A.f(I);
    u.f(k).T(f).Y(Math.pow(10, -f));
    w.f(l).T(f).Y(Math.pow(10, -f));
    C.f(d.scale);
    n.s(!!d.ellipse);
    b.c(c).c(z).c(A).c(m).c(u).c(q).c(w).c(p).c(C).c(O).c(n).c(x);
    return this;
  };
  I.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      b = this.data;
    b.date[0] = c.f() - a;
    b.date[1] = A.f() - a;
    b.value[0] = u.f();
    b.value[1] = w.f();
    b.scale = C.f();
    b.ellipse = n.s();
    return this;
  };
  I.prototype.ic = function () {
    this.Vf();
    var a = this.v,
      c = this.data,
      e = this.canvas,
      g = this.Nb,
      n = this.text,
      p = this.Pb,
      x = this.qb,
      q = this.xb,
      m = this.Ra,
      w = a.Aa,
      C = a.ta,
      u = b.sc || c.disabled,
      k = c.date,
      z = c.value,
      O = c.levels,
      A = e.getContext("2d"),
      I = a.pb(k[0], !0),
      Y = a.pb(k[1], !0),
      v = z[0],
      ea = z[1],
      ha = I + 1,
      fa = h.qj(I, v, Y, ea, a.j),
      aa = this.nc,
      ha = this.focused,
      I = this.R;
    d(e, "z-index", c.background ? "0" : "");
    d(n, "display", "none");
    g.setAttribute("visibility", u ? "hidden" : "visible");
    parseInt(e.style.width, 10) != w &&
      (l.sa
        ? e.setAttribute("width", w * l.devicePixelRatio)
        : e.setAttribute("width", w),
      d(e, "width", w + "px"));
    parseInt(e.style.height, 10) != C &&
      (l.sa
        ? e.setAttribute("height", C * l.devicePixelRatio)
        : e.setAttribute("height", C),
      d(e, "height", C + "px"));
    I ? A.clearRect.apply(A, I) : A.clearRect.apply(A, [0, 0, w, C]);
    A.clearRect(0, 0, a.Aa, a.ta);
    l.sa &&
      (A.setTransform(1, 0, 0, 1, 0, 0),
      A.scale(l.devicePixelRatio, l.devicePixelRatio));
    e = a.Da(k[0], z[0]);
    I = e[0];
    v = e[1];
    e = a.Da(k[1], z[1]);
    Y = e[0];
    ea = e[1];
    k = h.Hg(I, v, Y, ea);
    Math.max(v, ea);
    Math.min(v, ea);
    A.beginPath();
    A.moveTo(I, v);
    A.lineTo(Y, ea);
    A.strokeStyle = "#ff0000";
    A.stroke();
    ha &&
      ((A.fillStyle = "#f00"),
      A.fillRect(I - 3, v - 3, 5, 5),
      A.fillRect(Y - 3, ea - 3, 5, 5),
      (A.fillStyle = a.Ia),
      A.fillRect(I - 2, v - 2, 3, 3),
      A.fillRect(Y - 2, ea - 2, 3, 3),
      (e = h.Ti(I, v, Y, ea))) &&
      ((A.fillStyle = "#f00"),
      A.fillRect(e[0] - 3, e[1] - 3, 5, 5),
      (A.fillStyle = a.Ia),
      A.fillRect(e[0] - 2, e[1] - 2, 3, 3));
    aa &&
      "line" != aa &&
      (f(n, fa),
      (ha = ("point1" == aa ? I : Y) - 3 - parseInt(n.style.width, 10)),
      d(n, {
        display: "block",
        left: ha + "px",
        top: ("point1" == aa ? v : ea) + 3 + "px",
        color: a.Ia,
      }));
    u ||
      ((p.textContent = [c.name, fa].join("\n")),
      x.setAttribute("x1", I),
      x.setAttribute("y1", v),
      x.setAttribute("x2", Y),
      x.setAttribute("y2", ea),
      q.setAttribute("cx", I),
      q.setAttribute("cy", v),
      m.setAttribute("cx", Y),
      m.setAttribute("cy", ea));
    Math.max(I, Y);
    Math.min(I, Y);
    this.R = [
      0,
      Math.min(Math.min(v, ea) - 10, 0),
      w,
      Math.min(Math.max(v, ea) + 10, C),
    ];
    if (O && O.length) {
      p = this.element;
      n = p.Ge || r.Vh(p);
      p.Ge = n;
      p = a.Tb(0, n[1])[1];
      C = a.Tb(0, n[1] + C)[1];
      x = ((p - C) * Math.pow(10, a.j)) / a.ta / (a.total / a.Aa);
      x /= c.scale;
      q = x * x;
      m = c.ellipse;
      p = Y;
      C = [];
      A.beginPath();
      w = A.strokeStyle = "#0000FF";
      0 < a.ut && (w = A.strokeStyle = "#FF4500");
      u = 0;
      for (fa = O.length; u < fa; u++) {
        var n = parseFloat(O[u]),
          aa = ((Y - I) * n) / 100,
          z = ((ea - v) * n) / 100,
          aa = (z = Math.sqrt((aa * aa + q * z * z) / q)),
          X = 2 * z * x,
          ga = 2 * aa,
          z = A,
          ha = Y - X / 2,
          e = ea - ga / 2,
          g = v < ea,
          U = (X / 2) * 0.5522848,
          ba = (ga / 2) * 0.5522848,
          da = ha + X,
          ca = e + ga,
          X = ha + X / 2,
          ga = e + ga / 2;
        m
          ? (z.moveTo(ha, ga),
            z.bezierCurveTo(ha, ga - ba, X - U, e, X, e),
            z.bezierCurveTo(X + U, e, da, ga - ba, da, ga),
            z.bezierCurveTo(da, ga + ba, X + U, ca, X, ca),
            z.bezierCurveTo(X - U, ca, ha, ga + ba, ha, ga))
          : g
          ? (z.moveTo(ha, ga),
            z.bezierCurveTo(ha, ga - ba, X - U, e, X, e),
            z.bezierCurveTo(X + U, e, da, ga - ba, da, ga))
          : (z.moveTo(ha, ga),
            z.bezierCurveTo(ha, ga + ba, X - U, ca, X, ca),
            z.bezierCurveTo(X + U, ca, da, ga + ba, da, ga));
        C[C.length] = [p, ea + (v < ea ? -aa : +aa), n];
      }
      A.stroke();
      A.restore();
      O = w;
      A.save();
      A.font = "10px Tahoma, sans-serif";
      A.textAlign = "center";
      A.textBaseline = "bottom";
      A.fillStyle = O;
      O = 0;
      for (Y = C.length; O < Y; O++)
        (ea = C[O]), A.fillText((+ea[2]).toFixed(1), ea[0], ea[1]);
      A.restore();
    }
    a.Bg &&
      (c = (c.description || "").substr(0, 64)) &&
      (A.save(),
      A.translate(I, v),
      A.rotate(k),
      (A.textAlign = "left"),
      (A.textBaseline = "bottom"),
      (A.fillStyle = a.Ia),
      A.fillText(c, 1, -2),
      A.restore(),
      (this.R[0] = 0),
      (this.R[1] = 0),
      (this.R[2] = a.Aa),
      (this.R[3] = a.ta));
  };
})();
(function () {
  function v(a) {
    if (this) {
      var b = this.w;
      if (b) {
        var c = b.element;
        if (c) {
          var d = w(c);
          d &&
            setTimeout(function () {
              d.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        V = b;
        ea = "line";
        this == b.xb && (ea = "point1");
        this == b.Ra && (ea = "point2");
        this == b.og && (ea = "point3");
        if ("line" == ea) {
          b = c.Ge || u(c);
          c.Ge = b;
          var c = V.data.date,
            f = V.data.value,
            e = V.v,
            g = e.Da(c[0], f[0]);
          ha = b[0] + g[0];
          X = b[1] + g[1];
          g = e.Da(c[1], f[1]);
          fa = b[0] + g[0];
          ga = b[1] + g[1];
          g = e.Da(c[2], f[2]);
          ba = b[0] + g[0];
          da = b[1] + g[1];
          aa = a.clientX;
          U = a.clientY;
        }
        n(window, "mousemove", r);
        n(window, "mouseup", l);
      }
    }
  }
  function r(a) {
    var b = V.v,
      c = a.clientX;
    a = a.clientY;
    var d = V.data.date,
      f = V.data.value,
      e;
    -1 !== ea.indexOf("point") &&
      ((e = b.Tb(c, a)),
      "point1" == ea && ((d[0] = e[0]), (f[0] = e[1])),
      "point2" == ea && ((d[1] = e[0]), (f[1] = e[1])),
      "point3" == ea && ((d[2] = e[0]), (f[2] = e[1])));
    "line" == ea &&
      ((e = b.Tb(ha + c - aa, X + a - U)),
      (d[0] = e[0]),
      (f[0] = e[1]),
      (e = b.Tb(fa + (c - aa), ga + (a - U))),
      (d[1] = e[0]),
      (f[1] = e[1]),
      (e = b.Tb(ba + (c - aa), da + (a - U))),
      (d[2] = e[0]),
      (f[2] = e[1]));
    V.nc = ea;
    V.Ha(b);
  }
  function l(a) {
    if (V.lc) {
      var b = V.input;
      b && b.focus();
    }
    V.lc = null;
    V.nc = !1;
    V.Ha(V.v);
    V.M("change", a);
    ba = da = U = ga = X = aa = fa = ha = ea = V = null;
    x(window, "mousemove", r);
    x(window, "mouseup", l);
  }
  function e(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function k(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), b.ic());
        clearTimeout(c);
      }, 50);
    clearTimeout(b.Kb);
  }
  function h(a) {
    var b = this.w;
    clearTimeout(b.Kb);
    b.Kb = setTimeout(function () {
      var c = G();
      ("input" == F(c) && "checkbox" == c.type && c.sf) ||
        ((b.focused = !1), b.ic(), b.M("blur", a));
    }, 0);
  }
  var b = E.va,
    a = E.oc,
    g = E.Qa,
    d = E.controls,
    f = d.L.Sc,
    c = d.L.Sc.Pa.ma,
    z = d.L.Zb,
    A = E.ba.xa,
    m = E.Ma,
    u = E.ma.Vh,
    q = b.sb,
    w = b.Xb,
    p = b.tb,
    n = a.i,
    x = a.hc,
    C = b.hb,
    O = b.$a,
    I = b.Cd,
    G = b.Wf,
    F = b.md,
    y,
    M,
    D,
    L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha,
    fa,
    aa,
    X,
    ga,
    U,
    ba,
    da,
    ca = (f.Gm.T8 = function (a) {
      ca.G.constructor.apply(this, arguments);
      this.J = !0;
    });
  f.cc(ca);
  ca.type = "Fibonacci Expansion";
  ca.Ec = function (a, b, c) {
    var d = f.Kf.Ec();
    d.type = ca.type;
    d.name = A.HO + " " + c;
    d.date = [a, a, a];
    d.value = [b, b, b];
    d.levels = [61.8, 100, 161.8];
    d.ray_left = !1;
    d.ray_right = !1;
    return d;
  };
  ca.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    ca.G.Qd.call(this) && this.ic(this);
    return this;
  };
  ca.prototype.gb = function () {
    this.R = null;
    var a = this.input;
    a && ((a.w = null), x(a, "focus", k), x(a, "blur", h), (this.input = null));
    var b = this.qb;
    a &&
      ((b.w = null),
      x(b, "mousedown", v),
      x(b, "dblclick", e),
      (this.qb = null));
    if ((a = this.xb))
      (a.w = null), x(a, "mousedown", v), x(a, "dblclick", e), (this.xb = null);
    if ((a = this.Ra))
      (a.w = null), x(a, "mousedown", v), x(a, "dblclick", e), (this.Ra = null);
    if ((a = this.og))
      (a.w = null), x(a, "mousedown", v), x(a, "dblclick", e), (this.og = null);
    this.text = this.Pb = null;
    ca.G.gb.apply(this, arguments);
    return this;
  };
  ca.prototype.Mf = function (a, b) {
    var c = this,
      d = c.Ra,
      f = c.input,
      e = {};
    e.clientX = a.clientX;
    e.clientY = a.clientY;
    e.currentTarget = d;
    c.J = !1;
    c.lc = !0;
    c.focused = !0;
    var g;
    n(
      b.$,
      "mousedown",
      (g = function (a) {
        c.lc = !0;
        v.call(d, e);
        a = c.v.Tb(a.clientX, a.clientY);
        var n = c.data;
        n.date[1] = n.date[2] = a[0];
        n.value[1] = n.value[2] = a[1];
        f &&
          f.focus &&
          setTimeout(function () {
            f.focus();
          }, 0);
        c.J = !0;
        x(b.$, "mousedown", g);
      })
    );
    return c;
  };
  ca.prototype.kb = function (a) {
    if (!y) {
      var b = { position: "absolute" };
      y = m(d.input.Date).b(b).b({
        top: "16px",
        left: "84px",
        width: "130px",
      });
      M = m(d.page.I, "vertical-line-time1")
        .Text(A.gd + ":")
        .b(b)
        .b({ top: "20px", width: "78px", "text-align": "right" });
      D = m(d.input.Date).b(b).b({ top: "48px", left: "84px", width: "130px" });
      L = m(d.page.I, "vertical-line-time2")
        .Text(A.gd + ":")
        .b(b)
        .b({ top: "52px", width: "78px", "text-align": "right" });
      B = m(d.input.Date).b(b).b({ top: "82px", left: "84px", width: "130px" });
      Q = m(d.page.I, "vertical-line-time2")
        .Text(A.gd + ":")
        .b(b)
        .b({ top: "86px", width: "78px", "text-align": "right" });
      N = m(d.input.Number).o("vertical-line-value1").b(b).b({
        top: "16px",
        left: "280px",
        width: "100px",
      });
      K = m(d.page.I, "vertical-line-value1")
        .Text(A.Ld + ":")
        .b(b)
        .b({
          top: "20px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      P = m(d.input.Number)
        .o("vertical-line-value2")
        .b(b)
        .b({ top: "48px", left: "280px", width: "100px" });
      T = m(d.page.I, "vertical-line-value2")
        .Text(A.Ld + ":")
        .b(b)
        .b({
          top: "52px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      R = m(d.input.Number)
        .o("vertical-line-value2")
        .b(b)
        .b({ top: "82px", left: "280px", width: "100px" });
      H = m(d.page.I, "vertical-line-value2")
        .Text(A.Ld + ":")
        .b(b)
        .b({
          top: "86px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      S = m(d.input.pa)
        .o("vertical-line-ray-right")
        .b(b)
        .b({ top: "118px", left: "84px" });
      Z = m(d.page.I, "vertical-line-ray-right")
        .Text(A.Kl)
        .b(b)
        .b({ top: "117px", left: "101px", "white-space": "nowrap" });
      W = m(d.input.pa)
        .o("vertical-line-ray-left")
        .b(b)
        .b({ top: "140px", left: "84px" });
      Y = m(d.page.I, "vertical-line-ray-left")
        .Text(A.Jl)
        .b(b)
        .b({ top: "138px", left: "101px", "white-space": "nowrap" });
    }
    var b = this.data,
      c = this.v.j,
      f = 6e4 * new Date().getTimezoneOffset(),
      e = b.value[0],
      g = b.value[1],
      n = b.value[2],
      p = b.date[0],
      h = b.date[1],
      x = b.date[2],
      h = h + f,
      x = x + f;
    y.f(p + f);
    D.f(h);
    B.f(x);
    N.f(e).T(c).Y(Math.pow(10, -c));
    P.f(g).T(c).Y(Math.pow(10, -c));
    R.f(n).T(c).Y(Math.pow(10, -c));
    S.s(!!b.ray_right);
    W.s(!!b.ray_left);
    a.c(y)
      .c(M)
      .c(D)
      .c(L)
      .c(B)
      .c(Q)
      .c(N)
      .c(K)
      .c(P)
      .c(T)
      .c(R)
      .c(H)
      .c(S)
      .c(Z)
      .c(W)
      .c(Y);
    return this;
  };
  ca.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      b = this.data;
    b.ray_right = S.s();
    b.ray_left = W.s();
    b.date[0] = y.f() - a;
    b.date[1] = D.f() - a;
    b.value[0] = N.f();
    b.value[1] = P.f();
    return this;
  };
  ca.prototype.Vf = function () {
    var a = this.Pb,
      b = this.Nb,
      c = this.qb,
      d = this.input,
      f = this.element,
      g = this.xb,
      x = this.Ra,
      m = this.Ra,
      w = this.text;
    a || ((a = this.Pb = q("title", "http://www.w3.org/2000/svg")), p(b, a));
    c ||
      ((c = this.qb = q("line", "http://www.w3.org/2000/svg")),
      c.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (c.w = this),
      n(c, "mousedown", v),
      n(c, "dblclick", e),
      p(b, c));
    a = this.bc;
    a ||
      ((a = this.bc = q("line", "http://www.w3.org/2000/svg")),
      a.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (a.w = this),
      n(a, "mousedown", v),
      n(a, "dblclick", e),
      p(b, a));
    d ||
      ((d = this.input = q("input")),
      (d.type = "checkbox"),
      (d.w = this),
      O(d, { position: "absolute", top: "-3000px", left: "-3000px" }),
      n(d, "focus", k),
      n(d, "blur", h),
      p(f, d));
    g ||
      ((g = this.xb = q("circle", "http://www.w3.org/2000/svg")),
      g.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      g.setAttribute("r", "10"),
      (g.w = this),
      n(g, "mousedown", v),
      n(g, "dblclick", e),
      p(b, g));
    x ||
      ((x = this.Ra = q("circle", "http://www.w3.org/2000/svg")),
      x.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      x.setAttribute("r", "10"),
      (x.w = this),
      n(x, "mousedown", v),
      n(x, "dblclick", e),
      p(b, x));
    m ||
      ((m = this.og = q("circle", "http://www.w3.org/2000/svg")),
      m.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      m.setAttribute("r", "10"),
      (m.w = this),
      n(m, "mousedown", v),
      n(m, "dblclick", e),
      p(b, m));
    w ||
      ((w = this.text = q("span")),
      C(w, "val"),
      O(w, {
        position: "absolute",
        "white-space": "nowrap",
        width: "80px",
        "text-align": "right",
      }),
      p(f, w));
  };
  ca.prototype.ic = function () {
    this.Vf();
    var a = this.v,
      b = this.data,
      d = this.canvas,
      f = this.Nb,
      e = this.text,
      n = this.Pb,
      p = this.qb,
      h = this.bc,
      x = this.xb,
      q = this.Ra,
      m = this.og,
      w = a.Aa,
      C = a.ta,
      u = z.sc || b.disabled,
      y = b.date,
      k = b.value,
      B = b.levels,
      K = d.getContext("2d"),
      l = a.pb(y[0], !0),
      A = a.pb(y[1], !0),
      G = a.pb(y[2], !0),
      D = k[0],
      H = k[1],
      Q = k[2],
      N = 0,
      F,
      L = c.qj(l, D, G, Q, a.j),
      P = this.nc,
      R = this.focused,
      l = this.R;
    if (!this.J || this.lc)
      R &&
        (K.clearRect(0, 0, w, C),
        (d = a.Da(y[0], k[0])),
        (l = d[0]),
        (D = d[1]),
        (K.fillStyle = "#f00"),
        K.fillRect(l - 3, D - 3, 5, 5),
        (K.fillStyle = a.Ia),
        K.fillRect(l - 2, D - 2, 3, 3));
    else {
      O(d, "z-index", b.background ? "0" : "");
      O(e, "display", "none");
      f.setAttribute("visibility", u ? "hidden" : "visible");
      parseInt(d.style.width, 10) != w &&
        (g.sa
          ? d.setAttribute("width", w * g.devicePixelRatio)
          : d.setAttribute("width", w),
        O(d, "width", w + "px"));
      parseInt(d.style.height, 10) != C &&
        (g.sa
          ? d.setAttribute("height", C * g.devicePixelRatio)
          : d.setAttribute("height", C),
        O(d, "height", C + "px"));
      l && K.clearRect.apply(K, l);
      g.sa &&
        (K.setTransform(1, 0, 0, 1, 0, 0),
        K.scale(g.devicePixelRatio, g.devicePixelRatio));
      d = a.Da(y[0], k[0]);
      l = d[0];
      D = d[1];
      d = a.Da(y[1], k[1]);
      A = d[0];
      H = d[1];
      d = a.Da(y[2], k[2]);
      G = d[0];
      Q = d[1];
      y = c.Hg(l, D, A, H);
      k = Math.max(D, H) - Math.min(D, H);
      K.beginPath();
      K.moveTo(l, D);
      K.lineTo(A, H);
      K.lineTo(G, Q);
      K.strokeStyle = "#ff0000";
      K.stroke();
      R &&
        ((K.fillStyle = "#f00"),
        K.fillRect(l - 3, D - 3, 5, 5),
        K.fillRect(A - 3, H - 3, 5, 5),
        K.fillRect(G - 3, Q - 3, 5, 5),
        (K.fillStyle = a.Ia),
        K.fillRect(l - 2, D - 2, 3, 3),
        K.fillRect(A - 2, H - 2, 3, 3),
        K.fillRect(G - 2, Q - 2, 3, 3),
        (d = c.Ti(l, D, A, H))) &&
        ((K.fillStyle = "#f00"),
        K.fillRect(d[0] - 3, d[1] - 3, 5, 5),
        (K.fillStyle = a.Ia),
        K.fillRect(d[0] - 2, d[1] - 2, 3, 3));
      if (P && "line" != P) {
        I(e, L);
        var r, ba;
        switch (P) {
          case "point1":
            r = l - 3 - parseInt(e.style.width, 10);
            ba = D + 3;
            break;
          case "point2":
            r = A - 3 - parseInt(e.style.width, 10);
            ba = H + 3;
            break;
          case "point3":
            (r = G - 3 - parseInt(e.style.width, 10)), (ba = Q + 3);
        }
        O(e, { display: "block", left: r + "px", top: ba + "px", color: a.Ia });
      }
      u ||
        ((n.textContent = [b.name, L].join("\n")),
        p.setAttribute("x1", l),
        p.setAttribute("y1", D),
        p.setAttribute("x2", A),
        p.setAttribute("y2", H),
        h.setAttribute("x1", A),
        h.setAttribute("y1", H),
        h.setAttribute("x2", G),
        h.setAttribute("y2", Q),
        x.setAttribute("cx", l),
        x.setAttribute("cy", D),
        q.setAttribute("cx", A),
        q.setAttribute("cy", H),
        m.setAttribute("cx", G),
        m.setAttribute("cy", Q));
      b.ray_left && (l < G ? (l = 0) : (G = 0));
      b.ray_right && (G > l ? (G = a.Aa) : (l = a.Aa), (N = 3));
      e = Math.max(l, G) - Math.min(l, G);
      this.R = [
        Math.min(l, A, G) - 40,
        Math.min(D, H, Q) - 20,
        Math.max(l, A, G) - Math.min(l, A, G) + 60,
        Math.max(D, H, Q) - Math.min(D, H, Q) + 40,
      ];
      if (B && B.length) {
        K.font = "10px Tahoma, sans-serif";
        K.fillStyle = "#0000FF";
        K.textAlign = "right";
        K.textBaseline = "bottom";
        0 < a.ut && (K.fillStyle = "#FF4500");
        p = Math.min(l, G);
        h = 0;
        for (x = B.length; h < x; h++)
          (n = parseFloat(B[h])),
            H < D ? (F = Q - (k / 100) * n) : (F = Q + (k / 100) * n),
            (F = Math.floor(F)),
            K.fillRect(p, F, e, 1),
            K.fillText("FE " + n.toFixed(1), p + e - N, F - 1);
        this.R[1] = 0;
        this.R[3] = a.ta;
      }
      a.Bg &&
        (b = (b.description || "").substr(0, 64)) &&
        (K.save(),
        K.translate(l, D),
        K.rotate(y),
        (K.textAlign = "left"),
        (K.textBaseline = "bottom"),
        (K.fillStyle = a.Ia),
        K.fillText(b, 1, -2),
        K.restore(),
        (this.R[0] = 0),
        (this.R[1] = 0),
        (this.R[2] = a.Aa),
        (this.R[3] = a.ta));
    }
  };
})();
(function () {
  var v = E.va,
    r = E.Qa,
    l = E.controls,
    e = l.L.Sc,
    k = l.L.Zb,
    h = E.ba.xa,
    b = E.Ma,
    a = e.Pa.ma,
    g = v.$a,
    d = v.Cd,
    f,
    c,
    z,
    A,
    m,
    u,
    q,
    w,
    p = (e.Gm.Q8 = function (a) {
      p.G.constructor.apply(this, arguments);
    });
  e.cc(p, e.vh.aQ);
  p.type = "Fibo TimeZones";
  p.Ec = function (a, b, c) {
    var d = e.Kf.Ec();
    d.type = p.type;
    d.name = h.IO + " " + c;
    d.date = [a, a];
    d.value = [b, b];
    d.levels = [0, 1, 2, 3, 5, 8, 13, 21, 34];
    return d;
  };
  p.prototype.kb = function (a) {
    if (!f) {
      var d = { position: "absolute" };
      f = b(l.input.Date).b(d).b({ top: "16px", left: "84px", width: "130px" });
      c = b(l.page.I, "vertical-line-time1")
        .Text(h.gd + ":")
        .b(d)
        .b({ top: "20px", width: "78px", "text-align": "right" });
      z = b(l.input.Date).b(d).b({ top: "48px", left: "84px", width: "130px" });
      A = b(l.page.I, "vertical-line-time2")
        .Text(h.gd + ":")
        .b(d)
        .b({ top: "52px", width: "78px", "text-align": "right" });
      m = b(l.input.Number)
        .o("vertical-line-value1")
        .b(d)
        .b({ top: "16px", left: "280px", width: "100px" });
      u = b(l.page.I, "vertical-line-value1")
        .Text(h.Ld + ":")
        .b(d)
        .b({
          top: "20px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      q = b(l.input.Number).o("vertical-line-value2").b(d).b({
        top: "48px",
        left: "280px",
        width: "100px",
      });
      w = b(l.page.I, "vertical-line-value2")
        .Text(h.Ld + ":")
        .b(d)
        .b({
          top: "52px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
    }
    var e = this.data,
      d = this.v.j,
      g = 6e4 * new Date().getTimezoneOffset(),
      p = e.value[0],
      k = e.value[1],
      F = e.date[0],
      e = e.date[1],
      e = e + g;
    f.f(F + g);
    z.f(e);
    m.f(p).T(d).Y(Math.pow(10, -d));
    q.f(k).T(d).Y(Math.pow(10, -d));
    a.c(f).c(c).c(z).c(A).c(m).c(u).c(q).c(w);
    return this;
  };
  p.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      b = this.data;
    b.date[0] = f.f() - a;
    b.date[1] = z.f() - a;
    b.value[0] = m.f();
    b.value[1] = q.f();
    return this;
  };
  p.prototype.ic = function () {
    this.Vf();
    var b = this.canvas,
      c = this.Nb,
      f = this.v,
      e = this.data,
      p = this.text,
      h = this.Pb,
      q = this.qb,
      m = this.xb,
      w = this.Ra,
      u = e.date,
      z = e.value,
      B = f.Aa,
      l = f.ta,
      A = k.sc || e.disabled,
      K = b.getContext("2d");
    g(b, "z-index", e.background ? "0" : "");
    g(p, "display", "none");
    c.setAttribute("visibility", A ? "hidden" : "visible");
    parseInt(b.style.width, 10) != B &&
      (r.sa
        ? b.setAttribute("width", B * r.devicePixelRatio)
        : b.setAttribute("width", B),
      g(b, "width", B + "px"));
    parseInt(b.style.height, 10) != l &&
      (r.sa
        ? b.setAttribute("height", l * r.devicePixelRatio)
        : b.setAttribute("height", l),
      g(b, "height", l + "px"));
    (b = this.R) && K.clearRect.apply(K, b);
    r.sa &&
      (K.setTransform(1, 0, 0, 1, 0, 0),
      K.scale(r.devicePixelRatio, r.devicePixelRatio));
    var P = f.Da(u[0], z[0]),
      b = P[0],
      c = P[1],
      P = f.Da(u[1], z[1]),
      u = P[0],
      z = P[1],
      l = 0;
    if ((0 > b && 0 > u && u < b) || (b > B && u > B && u > b))
      (f = this.qb),
        (K = this.xb),
        (e = this.Ra),
        K.setAttribute("cx", "-100"),
        K.setAttribute("cy", "-100"),
        e.setAttribute("cx", "-100"),
        e.setAttribute("cy", "-100"),
        f.setAttribute("x1", "-100"),
        f.setAttribute("y1", "-100"),
        f.setAttribute("x2", "-100"),
        f.setAttribute("y2", "-100");
    else {
      A ||
        (m.setAttribute("cx", b),
        m.setAttribute("cy", c),
        w.setAttribute("cx", u),
        w.setAttribute("cy", z));
      this.R = [Math.max(0, Math.min(b, u) - 30), 0, f.Aa, f.ta];
      K.beginPath();
      w = K.strokeStyle = "#0000FF";
      0 < f.ut && (w = K.strokeStyle = "#FF4500");
      if (b != u) {
        B = l = a.jq(b, 0, u, 0);
        P = f.Aa;
        b > u && ((B = -l), (this.R = [0, 0, b + 20, f.ta]));
        for (var m = e.levels, T = 0, R = m.length; T < R; T++) {
          var H = b + m[T] * B;
          if (H < P && 0 < H) {
            var v = K,
              Z = f.ta;
            v.moveTo(H + 0.5, 0);
            v.lineTo(H + 0.5, Z);
          }
        }
        K.save();
        K.translate(b, z);
        K.rotate(Math.atan(-90));
        K.fillStyle = w;
        w = 0;
        for (P = m.length; w < P; w++) K.fillText(m[w], 0, B * m[w] - 5);
        K.restore();
      }
      K.stroke();
      K.beginPath();
      K.strokeStyle = "#ff0000";
      K.moveTo(b + 0.5, c + 0.5);
      K.lineTo(u + 0.5, z + 0.5);
      K.stroke();
      A ||
        ((h.textContent = e.name),
        q.setAttribute("x1", b),
        q.setAttribute("y1", c),
        q.setAttribute("x2", u),
        q.setAttribute("y2", z));
      this.focused &&
        ((K.fillStyle = "#f00"),
        K.fillRect(b - 3, c - 3, 5, 5),
        K.fillRect(u - 3, z - 3, 5, 5),
        (K.fillStyle = f.Ia),
        K.fillRect(b - 2, c - 2, 3, 3),
        K.fillRect(u - 2, z - 2, 3, 3),
        (P = a.Ti(b, c, u, z))) &&
        ((K.fillStyle = "#f00"),
        K.fillRect(P[0] - 3, P[1] - 3, 5, 5),
        (K.fillStyle = f.Ia),
        K.fillRect(P[0] - 2, P[1] - 2, 3, 3));
      (h = this.nc) &&
        "line" != h &&
        (d(p, l / f.le),
        g(p, {
          display: "block",
          left:
            ("point1" == h ? b : u) - 3 - parseInt(p.style.width, 10) + "px",
          top: ("point1" == h ? c : z) + 3 + "px",
          color: f.Ia,
        }));
      f.Bg &&
        (e = (e.description || "").substr(0, 64)) &&
        (K.save(),
        K.translate(b, c),
        K.rotate(a.Hg(b, c, u, z)),
        (K.textAlign = "left"),
        (K.textBaseline = "bottom"),
        (K.fillStyle = f.Ia),
        K.fillText(e, 1, -2),
        K.restore(),
        (this.R[0] = 0),
        (this.R[1] = 0),
        (this.R[2] = f.Aa),
        (this.R[3] = f.ta));
    }
  };
})();
(function () {
  function v() {
    var c = this.v,
      d = this.data,
      e = this.canvas,
      g = this.element,
      p = this.Nb,
      q = this.Pb,
      m = this.input,
      C = this.ld,
      u = this.bc,
      k = this.xb,
      y = this.Ra,
      K = this.og,
      z = d.date,
      B = d.value,
      G = d.ray_right,
      I = d.ray_left,
      H = d.fill,
      D = c.Aa,
      Q = c.ta,
      F = A.sc || d.disabled,
      N = e.getContext("2d"),
      L = c.pb(z[0], !0),
      P = c.pb(z[1], !0),
      R = B[0],
      ba = B[1],
      M = L,
      T = R,
      Y,
      v;
    v = L;
    var U = Math.pow(10, c.j),
      P = Math.floor(Math.max(v, P) - Math.min(v, P)),
      ba = Math.floor(Math.max(R, ba) * U - Math.min(R, ba) * U);
    v = [P, ba].join(" / ");
    var U = this.nc,
      S = this.focused,
      ba = this.R,
      X,
      W;
    q || ((q = this.Pb = w("title", "http://www.w3.org/2000/svg")), n(p, q));
    C ||
      ((C = this.ld = w("line", "http://www.w3.org/2000/svg")),
      C.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (C.w = this),
      x(C, "mousedown", l),
      x(C, "dblclick", h),
      n(p, C));
    u ||
      ((u = this.bc = w("line", "http://www.w3.org/2000/svg")),
      u.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (u.w = this),
      x(u, "mousedown", l),
      x(u, "dblclick", h),
      n(p, u));
    m ||
      ((m = this.input = w("input")),
      (m.type = "checkbox"),
      (m.w = this),
      O(m, { position: "absolute", top: "-3000px", left: "-3000px" }),
      x(m, "focus", b),
      x(m, "blur", a),
      n(g, m));
    k ||
      ((k = this.xb = w("circle", "http://www.w3.org/2000/svg")),
      k.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      k.setAttribute("r", "10"),
      (k.w = this),
      x(k, "mousedown", l),
      x(k, "dblclick", h),
      n(p, k));
    y ||
      ((y = this.Ra = w("circle", "http://www.w3.org/2000/svg")),
      y.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      y.setAttribute("r", "10"),
      (y.w = this),
      x(y, "mousedown", l),
      x(y, "dblclick", h),
      n(p, y));
    K ||
      ((K = this.og = w("circle", "http://www.w3.org/2000/svg")),
      K.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      K.setAttribute("r", "10"),
      (K.w = this),
      x(K, "mousedown", l),
      x(K, "dblclick", h),
      n(p, K));
    O(e, "z-index", d.background ? "0" : "");
    O(Y, "display", "none");
    p.setAttribute("visibility", F ? "hidden" : "visible");
    parseInt(e.style.width, 10) != D &&
      (f.sa
        ? e.setAttribute("width", D * f.devicePixelRatio)
        : e.setAttribute("width", D),
      O(e, "width", D + "px"));
    parseInt(e.style.height, 10) != Q &&
      (f.sa
        ? e.setAttribute("height", Q * f.devicePixelRatio)
        : e.setAttribute("height", Q),
      O(e, "height", Q + "px"));
    ba ? N.clearRect.apply(N, ba) : N.clearRect(0, 0, c.Aa, c.ta);
    f.sa &&
      (N.setTransform(1, 0, 0, 1, 0, 0),
      N.scale(f.devicePixelRatio, f.devicePixelRatio));
    Y = c.Da(z[0], B[0]);
    L = Y[0];
    R = Y[1];
    Y = c.Da(z[1], B[1]);
    P = Y[0];
    ba = Y[1];
    Y = c.Da(z[2], B[2]);
    z = Y[0];
    B = Y[1];
    M = z + P - L;
    T = B + ba - R;
    e = L;
    g = P;
    p = R;
    m = ba;
    D = M;
    Q = z;
    X = T;
    W = B;
    N.setLineDash && (N.setLineDash([]), U && N.setLineDash([3]));
    N.strokeStyle = "#ff0000";
    N.beginPath();
    H
      ? (N.moveTo(L, R), N.lineTo(P, ba))
      : (N.moveTo(L, R), N.lineTo(P, ba), N.moveTo(z, B), N.lineTo(M, T));
    F ||
      ((q.textContent = [d.name, v].join("\n")),
      k.setAttribute("cx", L),
      k.setAttribute("cy", R),
      y.setAttribute("cx", P),
      y.setAttribute("cy", ba),
      K.setAttribute("cx", z),
      K.setAttribute("cy", B));
    q = Math.atan2(ba - R, P - L);
    G &&
      ((Y = r(q)),
      (k = P + Y[0]),
      (y = ba + Y[1]),
      (g = k),
      (m = y),
      H || N.moveTo(P, ba),
      N.lineTo(k, y),
      (k = M + Y[0]),
      (y = T + Y[1]),
      (D = k),
      (X = y),
      H || N.moveTo(M, T),
      N.lineTo(k, y));
    H && (N.lineTo(M, T), N.lineTo(z, B));
    I &&
      ((Y = r(q - Math.PI)),
      (k = z + Y[0]),
      (y = B + Y[1]),
      (Q = k),
      (W = y),
      H || N.moveTo(z, B),
      N.lineTo(k, y),
      (k = L + Y[0]),
      (y = R + Y[1]),
      (e = k),
      (p = y),
      H || N.moveTo(L, R),
      N.lineTo(k, y));
    H
      ? (N.lineTo(L, R),
        (N.fillStyle = "rgba(255,0,0,0.5)"),
        N.fill(),
        N.closePath())
      : N.stroke();
    F ||
      (C.setAttribute("x1", e),
      C.setAttribute("y1", p),
      C.setAttribute("x2", g),
      C.setAttribute("y2", m),
      u.setAttribute("x1", D),
      u.setAttribute("y1", X),
      u.setAttribute("x2", Q),
      u.setAttribute("y2", W));
    U &&
      (N.moveTo(L + 0.5, 0),
      N.lineTo(L + 0.5, c.ta),
      N.moveTo(P + 0.5, 0),
      N.lineTo(P + 0.5, c.ta),
      N.stroke());
    S &&
      ((N.fillStyle = "#f00"),
      N.fillRect(L - 3, R - 3, 5, 5),
      N.fillRect(P - 3, ba - 3, 5, 5),
      N.fillRect(z - 3, B - 3, 5, 5),
      (N.fillStyle = c.Ia),
      N.fillRect(L - 2, R - 2, 3, 3),
      N.fillRect(P - 2, ba - 2, 3, 3),
      N.fillRect(z - 2, B - 2, 3, 3),
      (C = 0.5 * Math.sqrt((P - L) * (P - L) + (ba - R) * (ba - R))),
      (u = Math.atan2(ba - R, P - L)),
      (Y = [Math.round(L + C * Math.cos(u)), Math.round(R + C * Math.sin(u))]),
      (N.fillStyle = "#f00"),
      N.fillRect(Y[0] - 3, Y[1] - 3, 5, 5),
      (N.fillStyle = c.Ia),
      N.fillRect(Y[0] - 2, Y[1] - 2, 3, 3));
    k = L;
    y = R;
    U &&
      "line" != U &&
      ((N.font = "10px Tahoma, sans-serif"),
      (N.textAlign = "left"),
      (N.textBaseline = "top"),
      (C = N.measureText(v).width),
      "point1" == U && ((k = L), (y = R)),
      "point2" == U && ((k = P), (y = ba)),
      "point3" == U && ((k = z), (y = B)),
      (k -= 3 + C),
      (y += 3),
      (N.fillStyle = c.dj),
      N.fillRect(k, y, C, 11),
      (N.fillStyle = c.Ia),
      N.fillText(v, k, y));
    I || G
      ? (this.R = null)
      : (this.R = [
          Math.min(L, P, z, M, k) - 3,
          0,
          Math.max(L, P, z, M, k) - Math.min(L, P, z, M, k) + 6,
          c.ta,
        ]);
    c.Bg &&
      (Y = (d.description || "").substr(0, 64)) &&
      (N.save(),
      N.translate(L, R),
      N.rotate(q),
      (N.textAlign = "left"),
      (N.textBaseline = "bottom"),
      (N.fillStyle = c.Ia),
      N.fillText(Y, 1, -2),
      N.restore(),
      (this.R = null));
  }
  function r(a) {
    return [1e4 * Math.cos(a), 1e4 * Math.sin(a)];
  }
  function l(a) {
    if (this) {
      var b = this.w;
      if (b) {
        var c = b.element;
        if (c) {
          var d = p(c);
          d &&
            setTimeout(function () {
              d.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        ea = b;
        ha = "line";
        this == b.xb && (ha = "point1");
        this == b.Ra && (ha = "point2");
        this == b.og && (ha = "point3");
        if ("line" == ha) {
          b = c.Ge || q(c);
          c.Ge = b;
          var c = ea.data.date,
            f = ea.data.value,
            g = ea.v,
            n = g.Da(c[0], f[0]);
          fa = b[0] + n[0];
          U = b[1] + n[1];
          n = g.Da(c[1], f[1]);
          aa = b[0] + n[0];
          ba = b[1] + n[1];
          n = g.Da(c[2], f[2]);
          X = b[0] + n[0];
          da = b[1] + n[1];
          ga = a.clientX;
          ca = a.clientY;
        }
        x(window, "mousemove", e);
        x(window, "mouseup", k);
      }
    }
  }
  function e(a) {
    var b = ea.v,
      c = a.clientX;
    a = a.clientY;
    var d = ea.data.date,
      f = ea.data.value,
      e;
    -1 !== ha.indexOf("point") &&
      ((e = b.Tb(c, a)),
      "point1" == ha && ((d[0] = e[0]), (f[0] = e[1])),
      "point2" == ha && ((d[1] = e[0]), (f[1] = e[1])),
      "point3" == ha && ((d[2] = e[0]), (f[2] = e[1])));
    "line" == ha &&
      ((e = b.Tb(fa + c - ga, U + a - ca)),
      (d[0] = e[0]),
      (f[0] = e[1]),
      (e = b.Tb(aa + (c - ga), ba + (a - ca))),
      (d[1] = e[0]),
      (f[1] = e[1]),
      (e = b.Tb(X + (c - ga), da + (a - ca))),
      (d[2] = e[0]),
      (f[2] = e[1]));
    ea.nc = ha;
    ea.Ha(b);
  }
  function k(a) {
    if (ea.lc) {
      var b = ea.input;
      b && b.focus();
    }
    ea.lc = null;
    ea.nc = !1;
    ea.Ha(ea.v);
    ea.M("change", a);
    ca = da = da = ba = U = X = aa = fa = ha = ea = null;
    C(window, "mousemove", e);
    C(window, "mouseup", k);
  }
  function h(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function b(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), v.call(b));
        clearTimeout(c);
      }, 50);
    clearTimeout(b.Kb);
  }
  function a(a) {
    var b = this.w;
    clearTimeout(b.Kb);
    b.Kb = setTimeout(function () {
      var c = I();
      ("input" == G(c) && "checkbox" == c.type && c.sf) ||
        ((b.focused = !1), v.call(b), b.M("blur", a));
    }, 0);
  }
  var g = E.va,
    d = E.oc,
    f = E.Qa,
    c = E.controls,
    z = c.L.Sc,
    A = c.L.Zb,
    m = E.ba.xa,
    u = E.Ma,
    q = E.ma.Vh,
    w = g.sb,
    p = g.Xb,
    n = g.tb,
    x = d.i,
    C = d.hc,
    O = g.$a,
    I = g.Wf,
    G = g.md,
    F,
    y,
    M,
    D,
    L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha,
    fa,
    aa,
    X,
    ga,
    U,
    ba,
    da,
    ca,
    ka = (z.nr.K8 = function (a) {
      ka.G.constructor.apply(this, arguments);
    });
  z.cc(ka);
  ka.type = "Equidistant Channel";
  ka.Ec = function (a, b, c) {
    var d = z.Kf.Ec();
    d.type = ka.type;
    d.name = m.DO + " " + c;
    d.date = [a, a, a];
    d.value = [b, b, b];
    d.ray_right = !0;
    d.ray_left = !0;
    d.fill = !0;
    return d;
  };
  ka.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    ka.G.Qd.call(this) && v.call(this);
    return this;
  };
  ka.prototype.Mf = function (a) {
    var b = this.input,
      c = this.Ra,
      d = this.v,
      f = {};
    f.clientX = a.clientX;
    f.clientY = a.clientY;
    f.currentTarget = c;
    this.data.value[2] = d.Tb(0, d.Da(0, this.data.value[2])[1] + 200)[1];
    this.lc = !0;
    l.call(c, f);
    b &&
      b.focus &&
      setTimeout(function () {
        b.focus();
      });
    return this;
  };
  ka.prototype.gb = function () {
    this.R = null;
    var c = this.input;
    c && ((c.w = null), C(c, "focus", b), C(c, "blur", a), (this.input = null));
    var d = this.ld;
    c &&
      ((d.w = null),
      C(d, "mousedown", l),
      C(d, "dblclick", h),
      (this.ld = null));
    d = this.bc;
    c &&
      ((d.w = null),
      C(d, "mousedown", l),
      C(d, "dblclick", h),
      (this.bc = null));
    if ((c = this.xb))
      (c.w = null), C(c, "mousedown", l), C(c, "dblclick", h), (this.xb = null);
    if ((c = this.Ra))
      (c.w = null), C(c, "mousedown", l), C(c, "dblclick", h), (this.Ra = null);
    this.Pb = null;
    ka.G.gb.apply(this, arguments);
    return this;
  };
  ka.prototype.kb = function (a) {
    if (!F) {
      var b = { position: "absolute", left: "280px", width: "100px" },
        d = {
          position: "absolute",
          left: "216px",
          width: "58px",
          "text-align": "right",
        },
        f = { position: "absolute", left: "84px", width: "130px" },
        e = { position: "absolute", width: "78px", "text-align": "right" },
        g = { position: "absolute" },
        n = { position: "absolute", "white-space": "nowrap" };
      F = u(c.input.Date).b(f).b({ top: "16px" });
      y = u(c.page.I, "vertical-line-time1")
        .Text(m.gd + ":")
        .b(e)
        .b({ top: "20px" });
      M = u(c.input.Date).b(f).b({ top: "48px" });
      D = u(c.page.I, "vertical-line-time2")
        .Text(m.gd + ":")
        .b(e)
        .b({ top: "52px" });
      L = u(c.input.Date).b(f).b({ top: "80px" });
      B = u(c.page.I, "vertical-line-time3")
        .Text(m.gd + ":")
        .b(e)
        .b({ top: "84px" });
      Q = u(c.input.Number).o("vertical-line-value1").b(b).b({ top: "16px" });
      N = u(c.page.I, "vertical-line-value1")
        .Text(m.Ld + ":")
        .b(d)
        .b({ top: "20px" });
      K = u(c.input.Number).o("vertical-line-value2").b(b).b({ top: "48px" });
      P = u(c.page.I, "vertical-line-value2")
        .Text(m.Ld + ":")
        .b(d)
        .b({ top: "52px" });
      T = u(c.input.Number).o("vertical-line-value3").b(b).b({ top: "80px" });
      R = u(c.page.I, "vertical-line-value3")
        .Text(m.Ld + ":")
        .b(d)
        .b({ top: "84px" });
      H = u(c.input.pa)
        .o("vertical-line-ray-right")
        .b(g)
        .b({ top: "116px", left: "84px" });
      S = u(c.page.I, "vertical-line-ray-right")
        .Text(m.Kl)
        .b(n)
        .b({ top: "115px", left: "101px" });
      Z = u(c.input.pa)
        .o("vertical-line-ray-left")
        .b(g)
        .b({ top: "138px", left: "84px" });
      W = u(c.page.I, "vertical-line-ray-left").Text(m.Jl).b(n).b({
        top: "137px",
        left: "101px",
      });
      Y = u(c.input.pa)
        .o("vertical-line-fill")
        .b(g)
        .b({ top: "116px", left: "280px" });
      V = u(c.page.I, "vertical-line-fill")
        .Text(m.hu)
        .b(n)
        .b({ top: "115px", left: "297px" });
    }
    var b = this.data,
      d = this.v.j,
      f = 6e4 * new Date().getTimezoneOffset(),
      e = b.value[0],
      g = b.value[1],
      n = b.value[2],
      p = b.date[0],
      h = b.date[1],
      x = b.date[2],
      h = h + f,
      x = x + f;
    F.f(p + f);
    M.f(h);
    L.f(x);
    Q.f(e).T(d).Y(Math.pow(10, -d));
    K.f(g).T(d).Y(Math.pow(10, -d));
    T.f(n).T(d).Y(Math.pow(10, -d));
    H.s(!!b.ray_right);
    Z.s(!!b.ray_left);
    Y.s(!!b.fill);
    a.c(F)
      .c(y)
      .c(M)
      .c(D)
      .c(L)
      .c(B)
      .c(Q)
      .c(N)
      .c(K)
      .c(P)
      .c(T)
      .c(R)
      .c(H)
      .c(S)
      .c(Z)
      .c(W)
      .c(Y)
      .c(V);
    return this;
  };
  ka.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      b = this.data;
    b.ray_right = H.s();
    b.ray_left = Z.s();
    b.fill = Y.s();
    b.date[0] = F.f() - a;
    b.date[1] = M.f() - a;
    b.date[2] = L.f() - a;
    b.value[0] = Q.f();
    b.value[1] = K.f();
    b.value[2] = T.f();
    return this;
  };
})();
(function () {
  function v() {
    var a = this.Pb,
      c = this.element,
      d = this.input,
      f = this.ld,
      e = this.bc,
      p = this.xb,
      q = this.Ra,
      m = this.og,
      C = this.Nb;
    a || ((a = this.Pb = w("title", "http://www.w3.org/2000/svg")), n(C, a));
    f ||
      ((f = this.ld = w("line", "http://www.w3.org/2000/svg")),
      f.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (f.w = this),
      x(f, "mousedown", r),
      x(f, "dblclick", k),
      n(C, f));
    e ||
      ((e = this.bc = w("line", "http://www.w3.org/2000/svg")),
      e.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (e.w = this),
      x(e, "mousedown", r),
      x(e, "dblclick", k),
      n(C, e));
    a = this.xf;
    a ||
      ((a = this.xf = w("line", "http://www.w3.org/2000/svg")),
      a.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (a.w = this),
      x(a, "mousedown", r),
      x(a, "dblclick", k),
      n(C, a));
    a = this.CM;
    a ||
      ((a = this.CM = w("line", "http://www.w3.org/2000/svg")),
      a.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (a.w = this),
      x(a, "mousedown", r),
      x(a, "dblclick", k),
      n(C, a));
    d ||
      ((d = this.input = w("input")),
      (d.type = "checkbox"),
      (d.w = this),
      O(d, { position: "absolute", top: "-3000px", left: "-3000px" }),
      x(d, "focus", h),
      x(d, "blur", b),
      n(c, d));
    p ||
      ((p = this.xb = w("circle", "http://www.w3.org/2000/svg")),
      p.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      p.setAttribute("r", "10"),
      (p.w = this),
      x(p, "mousedown", r),
      x(p, "dblclick", k),
      n(C, p));
    q ||
      ((q = this.Ra = w("circle", "http://www.w3.org/2000/svg")),
      q.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      q.setAttribute("r", "10"),
      (q.w = this),
      x(q, "mousedown", r),
      x(q, "dblclick", k),
      n(C, q));
    m ||
      ((m = this.og = w("circle", "http://www.w3.org/2000/svg")),
      m.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      m.setAttribute("r", "10"),
      (m.w = this),
      x(m, "mousedown", r),
      x(m, "dblclick", k),
      n(C, m));
    var c = this.v,
      p = this.data,
      u = this.canvas,
      y = this.Nb,
      K = this.Pb,
      q = this.ld,
      f = this.bc,
      B = this.xb,
      l = this.Ra,
      G = this.og,
      I = p.date,
      N = p.value,
      e = p.ray_right,
      H = p.ray_left,
      D = c.Aa,
      Q = c.ta,
      L = A.sc || p.disabled,
      d = u.getContext("2d"),
      m = c.pb(I[0], !0),
      F = c.pb(I[1], !0),
      P = c.pb(I[2], !0),
      C = N[0],
      R = N[1],
      ba = N[2],
      a = this.focused,
      m = this.R;
    O(u, "z-index", p.background ? "0" : "");
    y.setAttribute("visibility", L ? "hidden" : "visible");
    parseInt(u.style.width, 10) != D &&
      (g.sa
        ? u.setAttribute("width", D * g.devicePixelRatio)
        : u.setAttribute("width", D),
      O(u, "width", D + "px"));
    parseInt(u.style.height, 10) != Q &&
      (g.sa
        ? u.setAttribute("height", Q * g.devicePixelRatio)
        : u.setAttribute("height", Q),
      O(u, "height", Q + "px"));
    m ? d.clearRect.apply(d, m) : d.clearRect(0, 0, c.Aa, c.ta);
    g.sa &&
      (d.setTransform(1, 0, 0, 1, 0, 0),
      d.scale(g.devicePixelRatio, g.devicePixelRatio));
    u = c.Da(I[0], N[0]);
    m = u[0];
    C = u[1];
    u = c.Da(I[1], N[1]);
    F = u[0];
    R = u[1];
    u = c.Da(I[2], N[2]);
    P = u[0];
    ba = u[1];
    u = z.Ti(F, R, P, ba);
    I = u[0];
    u = u[1];
    N = z.Hg(m, C, I, u);
    d.strokeStyle = "red";
    d.beginPath();
    d.moveTo(m, C);
    D = z.jq(m, C, I, u);
    y = z.Rd(N, 6 * D);
    d.lineTo(I + y[0], u + y[1]);
    d.moveTo(F, R);
    d.lineTo(P, ba);
    d.moveTo(F, R);
    d.lineTo(F + y[0], R + y[1]);
    d.moveTo(P, ba);
    d.lineTo(P + y[0], ba + y[1]);
    H &&
      ((Q = z.Rd(N - Math.PI, 1e4)),
      d.moveTo(m, C),
      d.lineTo(m + Q[0], C + Q[1]),
      d.moveTo(F, R),
      d.lineTo(F + Q[0], R + Q[1]),
      d.moveTo(P, ba),
      d.lineTo(P + Q[0], ba + Q[1]));
    e &&
      ((Q = z.Rd(N, 1e4)),
      d.moveTo(I + y[0], u + y[1]),
      d.lineTo(I + y[0] + Q[0], u + y[1] + Q[1]),
      d.moveTo(F + y[0], R + y[1]),
      d.lineTo(F + y[0] + Q[0], R + y[1] + Q[1]),
      d.moveTo(P + y[0], ba + y[1]),
      d.lineTo(P + y[0] + Q[0], ba + y[1] + Q[1]));
    d.stroke();
    d.closePath();
    var M = p.levels,
      Y = z.jq(F, R, I, u),
      T = z.Hg(I, u, F, R);
    d.beginPath();
    for (var v = 0, U = M.length; v < U; v++) {
      var S = M[v] / 100,
        X = z.Rd(T, Y * S);
      d.moveTo(F + X[0], R + X[1]);
      d.lineTo(F + X[0] + y[0], R + X[1] + y[1]);
      e &&
        ((Q = z.Rd(N, 1e4)),
        d.moveTo(F + X[0] + y[0], R + X[1] + y[1]),
        d.lineTo(F + X[0] + y[0] + Q[0], R + X[1] + y[1] + Q[1]));
      H &&
        ((Q = z.Rd(N - Math.PI, 1e4)),
        d.moveTo(F + X[0], R + X[1]),
        d.lineTo(F + X[0] + Q[0], R + X[1] + Q[1]));
      X = z.Rd(T - Math.PI, Y * S);
      d.moveTo(P + X[0], ba + X[1]);
      d.lineTo(P + X[0] + y[0], ba + X[1] + y[1]);
      e &&
        ((Q = z.Rd(N, 1e4)),
        d.moveTo(P + X[0] + y[0], ba + X[1] + y[1]),
        d.lineTo(P + X[0] + y[0] + Q[0], ba + X[1] + y[1] + Q[1]));
      H &&
        ((Q = z.Rd(N - Math.PI, 1e4)),
        d.moveTo(P + X[0], ba + X[1]),
        d.lineTo(P + X[0] + Q[0], ba + X[1] + Q[1]));
    }
    d.save();
    d.fillStyle = "red";
    v = 0;
    for (U = M.length; v < U; v++)
      (S = M[v] / 100),
        (y = z.Rd(T, Y * S)),
        d.fillText(M[v], F + y[0], R + y[1]),
        (y = z.Rd(T - Math.PI, Y * S)),
        d.fillText(M[v], P + y[0], ba + y[1]);
    d.restore();
    d.stroke();
    L ||
      ((K.textContent = [p.name, ""].join("\n")),
      B.setAttribute("cx", m),
      B.setAttribute("cy", C),
      l.setAttribute("cx", F),
      l.setAttribute("cy", R),
      G.setAttribute("cx", P),
      G.setAttribute("cy", ba),
      (y = z.Rd(N, 6 * D)),
      (K = [0, 0]),
      (B = [0, 0]),
      H && (K = z.Rd(N - Math.PI, 1e5)),
      e && (B = z.Rd(N, 1e5)),
      f.setAttribute("x1", m + K[0]),
      f.setAttribute("y1", C + K[1]),
      f.setAttribute("x2", I + y[0] + B[0]),
      f.setAttribute("y2", u + y[1] + B[1]),
      (f = this.xf),
      f.setAttribute("x1", F + K[0]),
      f.setAttribute("y1", R + K[1]),
      f.setAttribute("x2", F + y[0] + B[0]),
      f.setAttribute("y2", R + y[1] + B[1]),
      (f = this.CM),
      f.setAttribute("x1", P + K[0]),
      f.setAttribute("y1", ba + K[1]),
      f.setAttribute("x2", P + y[0] + B[0]),
      f.setAttribute("y2", ba + y[1] + B[1]),
      q.setAttribute("x1", F),
      q.setAttribute("y1", R),
      q.setAttribute("x2", P),
      q.setAttribute("y2", ba));
    a &&
      ((d.fillStyle = "#f00"),
      d.fillRect(m - 3, C - 3, 5, 5),
      d.fillRect(F - 3, R - 3, 5, 5),
      d.fillRect(P - 3, ba - 3, 5, 5),
      d.fillRect(I - 3, u - 3, 5, 5),
      (d.fillStyle = c.Ia),
      d.fillRect(m - 2, C - 2, 3, 3),
      d.fillRect(F - 2, R - 2, 3, 3),
      d.fillRect(P - 2, ba - 2, 3, 3),
      d.fillRect(I - 2, u - 2, 3, 3));
    c.Bg &&
      (p = (p.description || "").substr(0, 64)) &&
      (d.save(),
      d.translate(m, C),
      d.rotate(N),
      (d.textAlign = "left"),
      (d.textBaseline = "bottom"),
      (d.fillStyle = c.Ia),
      d.fillText(p, 1, -2),
      d.restore(),
      (this.R = this.R || []),
      (this.R[0] = 0),
      (this.R[1] = 0),
      (this.R[2] = c.Aa),
      (this.R[3] = c.ta));
  }
  function r(a) {
    if (this) {
      var b = this.w;
      if (b) {
        var c = b.element;
        if (c) {
          var d = p(c);
          d &&
            setTimeout(function () {
              d.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        Y = b;
        V = "line";
        this == b.xb && (V = "point1");
        this == b.Ra && (V = "point2");
        this == b.og && (V = "point3");
        if ("line" == V) {
          b = c.Ge || q(c);
          c.Ge = b;
          var c = Y.data.date,
            f = Y.data.value,
            g = Y.v,
            n = g.Da(c[0], f[0]);
          ea = b[0] + n[0];
          X = b[1] + n[1];
          n = g.Da(c[1], f[1]);
          ha = b[0] + n[0];
          ga = b[1] + n[1];
          n = g.Da(c[2], f[2]);
          fa = b[0] + n[0];
          U = b[1] + n[1];
          aa = a.clientX;
          ba = a.clientY;
        }
        x(window, "mousemove", l);
        x(window, "mouseup", e);
      }
    }
  }
  function l(a) {
    var b = Y.v,
      c = a.clientX;
    a = a.clientY;
    var d = Y.data.date,
      f = Y.data.value,
      e;
    -1 !== V.indexOf("point") &&
      ((e = b.Tb(c, a)),
      "point1" == V && ((d[0] = e[0]), (f[0] = e[1])),
      "point2" == V && ((d[1] = e[0]), (f[1] = e[1])),
      "point3" == V && ((d[2] = e[0]), (f[2] = e[1])));
    "line" == V &&
      ((e = b.Tb(ea + c - aa, X + a - ba)),
      (d[0] = e[0]),
      (f[0] = e[1]),
      (e = b.Tb(ha + (c - aa), ga + (a - ba))),
      (d[1] = e[0]),
      (f[1] = e[1]),
      (e = b.Tb(fa + (c - aa), U + (a - ba))),
      (d[2] = e[0]),
      (f[2] = e[1]));
    Y.nc = V;
    Y.Ha(b);
  }
  function e(a) {
    if (Y.lc) {
      var b = Y.input;
      b && b.focus();
    }
    Y.lc = null;
    Y.nc = !1;
    Y.Ha(Y.v);
    Y.M("change", a);
    ba = U = U = ga = X = fa = ha = ea = V = Y = null;
    C(window, "mousemove", l);
    C(window, "mouseup", e);
  }
  function k(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function h(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), v.call(b));
        clearTimeout(c);
      }, 50);
    clearTimeout(b.Kb);
  }
  function b(a) {
    var b = this.w;
    clearTimeout(b.Kb);
    b.Kb = setTimeout(function () {
      var c = I();
      ("input" == G(c) && "checkbox" == c.type && c.sf) ||
        ((b.focused = !1), v.call(b), b.M("blur", a));
    }, 0);
  }
  var a = E.va,
    g = E.Qa,
    d = E.oc,
    f = E.controls,
    c = f.L.Sc,
    z = c.Pa.ma,
    A = f.L.Zb,
    m = E.ba.xa,
    u = E.Ma,
    q = E.ma.Vh,
    w = a.sb,
    p = a.Xb,
    n = a.tb,
    x = d.i,
    C = d.hc,
    O = a.$a,
    I = a.Wf,
    G = a.md,
    F,
    y,
    M,
    D,
    L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha,
    fa,
    aa,
    X,
    ga,
    U,
    ba,
    da = (c.nr.n5 = function (a) {
      da.G.constructor.apply(this, arguments);
    });
  c.cc(da);
  da.type = "Andrews Pitchfork";
  da.Ec = function (a, b, d) {
    var f = c.Kf.Ec();
    f.type = da.type;
    f.name = m.wK + " " + d;
    f.date = [a, a, a];
    f.value = [b, b, b];
    f.levels = [61.8, 100, 161.8, 261.8];
    f.ray_right = !1;
    f.ray_left = !1;
    return f;
  };
  da.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    da.G.Qd.call(this) && v.call(this);
    return this;
  };
  da.prototype.Mf = function (a) {
    var b = this.Ra,
      c = this.input,
      d = this.v,
      f = {};
    f.clientX = a.clientX;
    f.clientY = a.clientY;
    f.currentTarget = b;
    this.Ge = this.Ge || q(this.element);
    this.data.date[2] = d.Tb(d.Da(this.data.date[2])[0] + 100 + this.Ge[0])[0];
    this.lc = !0;
    r.call(b, f);
    c &&
      c.focus &&
      setTimeout(function () {
        c.focus();
      }, 0);
    return this;
  };
  da.prototype.gb = function () {
    this.R = null;
    var a = this.input;
    a && ((a.w = null), C(a, "focus", h), C(a, "blur", b), (this.input = null));
    var c = this.ld;
    a &&
      ((c.w = null),
      C(c, "mousedown", r),
      C(c, "dblclick", k),
      (this.ld = null));
    c = this.bc;
    a &&
      ((c.w = null),
      C(c, "mousedown", r),
      C(c, "dblclick", k),
      (this.bc = null));
    if ((a = this.xb))
      (a.w = null), C(a, "mousedown", r), C(a, "dblclick", k), (this.xb = null);
    if ((a = this.Ra))
      (a.w = null), C(a, "mousedown", r), C(a, "dblclick", k), (this.Ra = null);
    this.Pb = null;
    da.G.gb.apply(this, arguments);
    return this;
  };
  da.prototype.kb = function (a) {
    if (!F) {
      var b = { position: "absolute", left: "280px", width: "100px" },
        c = {
          position: "absolute",
          left: "216px",
          width: "58px",
          "text-align": "right",
        },
        d = { position: "absolute", left: "84px", width: "130px" },
        e = { position: "absolute", width: "78px", "text-align": "right" },
        g = { position: "absolute" },
        n = { position: "absolute", "white-space": "nowrap" };
      F = u(f.input.Date).b(d).b({ top: "16px" });
      y = u(f.page.I, "vertical-line-time1")
        .Text(m.gd + ":")
        .b(e)
        .b({ top: "20px" });
      M = u(f.input.Date).b(d).b({ top: "48px" });
      D = u(f.page.I, "vertical-line-time2")
        .Text(m.gd + ":")
        .b(e)
        .b({ top: "52px" });
      L = u(f.input.Date).b(d).b({ top: "80px" });
      B = u(f.page.I, "vertical-line-time3")
        .Text(m.gd + ":")
        .b(e)
        .b({ top: "84px" });
      Q = u(f.input.Number).o("vertical-line-value1").b(b).b({ top: "16px" });
      N = u(f.page.I, "vertical-line-value1")
        .Text(m.Ld + ":")
        .b(c)
        .b({ top: "20px" });
      K = u(f.input.Number).o("vertical-line-value2").b(b).b({ top: "48px" });
      P = u(f.page.I, "vertical-line-value2")
        .Text(m.Ld + ":")
        .b(c)
        .b({ top: "52px" });
      T = u(f.input.Number).o("vertical-line-value3").b(b).b({ top: "80px" });
      R = u(f.page.I, "vertical-line-value3")
        .Text(m.Ld + ":")
        .b(c)
        .b({ top: "84px" });
      H = u(f.input.pa)
        .o("vertical-line-ray-right")
        .b(g)
        .b({ top: "116px", left: "84px" });
      S = u(f.page.I, "vertical-line-ray-right")
        .Text(m.Kl)
        .b(n)
        .b({ top: "115px", left: "101px" });
      Z = u(f.input.pa)
        .o("vertical-line-ray-left")
        .b(g)
        .b({ top: "138px", left: "84px" });
      W = u(f.page.I, "vertical-line-ray-left")
        .Text(m.Jl)
        .b(n)
        .b({ top: "137px", left: "101px" });
    }
    var b = this.data,
      c = this.v.j,
      d = 6e4 * new Date().getTimezoneOffset(),
      e = b.value[0],
      g = b.value[1],
      n = b.value[2],
      p = b.date[0],
      h = b.date[1],
      q = b.date[2],
      h = h + d,
      q = q + d;
    F.f(p + d);
    M.f(h);
    L.f(q);
    Q.f(e).T(c).Y(Math.pow(10, -c));
    K.f(g).T(c).Y(Math.pow(10, -c));
    T.f(n).T(c).Y(Math.pow(10, -c));
    H.s(!!b.ray_right);
    Z.s(!!b.ray_left);
    a.c(F)
      .c(y)
      .c(M)
      .c(D)
      .c(L)
      .c(B)
      .c(Q)
      .c(N)
      .c(K)
      .c(P)
      .c(T)
      .c(R)
      .c(H)
      .c(S)
      .c(Z)
      .c(W);
    return this;
  };
  da.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      b = this.data;
    b.ray_right = H.s();
    b.ray_left = Z.s();
    b.date[0] = F.f() - a;
    b.date[1] = M.f() - a;
    b.date[2] = L.f() - a;
    b.value[0] = Q.f();
    b.value[1] = K.f();
    b.value[2] = T.f();
    return this;
  };
})();
(function () {
  function v(a) {
    if (this) {
      var b = this.w;
      if (b) {
        var c = b.element;
        if (c) {
          var d = p(c);
          d &&
            setTimeout(function () {
              d.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        S = b;
        Z = "line";
        this == b.xb && (Z = "point1");
        this == b.Ra && (Z = "point2");
        this == b.og && (Z = "point3");
        if ("line" == Z) {
          b = c.Ge || u(c);
          c.Ge = b;
          var c = S.data.date,
            f = S.data.value,
            e = S.v,
            g = e.Da(c[0], f[0]);
          W = b[0] + g[0];
          ea = b[1] + g[1];
          g = e.Da(c[1], f[1]);
          Y = b[0] + g[0];
          ha = b[1] + g[1];
          V = a.clientX;
          fa = a.clientY;
        }
        x(window, "mousemove", r);
        x(window, "mouseup", l);
      }
    }
  }
  function r(a) {
    var b = S.v,
      c = a.clientX;
    a = a.clientY;
    var d = S.data.date,
      f = S.data.value,
      e;
    if (-1 !== Z.indexOf("point")) {
      e = b.Tb(c, 0);
      if ("point1" == Z) {
        if (e[0] > d[1]) return;
        d[0] = e[0];
      }
      if ("point2" == Z) {
        if (e[0] < d[0]) return;
        d[1] = e[0];
      }
    }
    "line" == Z &&
      ((e = b.Tb(W + c - V, ea + a - fa)),
      (d[0] = e[0]),
      (f[0] = e[1]),
      (e = b.Tb(Y + (c - V), ha + (a - fa))),
      (d[1] = e[0]),
      (f[1] = e[1]));
    S.nc = Z;
    S.Ha(b);
  }
  function l(a) {
    if (S.lc) {
      var b = S.input;
      b && b.focus();
    }
    S.lc = null;
    S.nc = !1;
    S.Ha(S.v);
    S.M("change", a);
    fa = ha = ea = Y = W = Z = S = null;
    C(window, "mousemove", r);
    C(window, "mouseup", l);
  }
  function e(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function k(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), b.ic());
        clearTimeout(c);
      }, 50);
    clearTimeout(b.Kb);
  }
  function h(a) {
    var b = this.w;
    clearTimeout(b.Kb);
    b.Kb = setTimeout(function () {
      var c = G();
      ("input" == F(c) && "checkbox" == c.type && c.sf) ||
        ((b.focused = !1), b.ic(), b.M("blur", a));
    }, 0);
  }
  var b = E.va,
    a = E.oc,
    g = E.Qa,
    d = E.controls,
    f = d.L.Sc,
    c = f.Pa.ma,
    z = d.L.Zb,
    A = E.ba.xa,
    m = E.Ma,
    u = E.ma.Vh,
    q = b.Cd,
    w = b.sb,
    p = b.Xb,
    n = b.tb,
    x = a.i,
    C = a.hc,
    O = b.hb,
    I = b.$a,
    G = b.Wf,
    F = b.md,
    y,
    M,
    D,
    L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha,
    fa,
    aa = (f.nr.O_ = function (a) {
      aa.G.constructor.apply(this, arguments);
      this.data.value = [];
    });
  f.cc(aa);
  aa.type = "StdDev Channel";
  aa.Ec = function (a, b, c) {
    b = f.Kf.Ec();
    b.type = aa.type;
    b.name = A.MO + " " + c;
    b.date = [a, a];
    b.fill = !1;
    b.ray_right = !1;
    b.ray_left = !1;
    b.devnum = 2;
    return b;
  };
  aa.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    aa.G.Qd.call(this) && this.ic();
    return this;
  };
  aa.prototype.Mf = function (a) {
    var b = this.input,
      c = this.Ra,
      d = {};
    d.clientX = a.clientX;
    d.clientY = a.clientY;
    d.currentTarget = c;
    this.lc = !0;
    v.call(c, d);
    b &&
      b.focus &&
      setTimeout(function () {
        b.focus();
      }, 0);
    return this;
  };
  aa.prototype.gb = function () {
    this.R = null;
    var a = this.input;
    a && ((a.w = null), C(a, "focus", k), C(a, "blur", h), (this.input = null));
    if ((a = this.ld))
      (a.w = null), C(a, "mousedown", v), C(a, "dblclick", e), (this.ld = null);
    if ((a = this.bc))
      (a.w = null), C(a, "mousedown", v), C(a, "dblclick", e), (this.bc = null);
    if ((a = this.xb))
      (a.w = null), C(a, "mousedown", v), C(a, "dblclick", e), (this.xb = null);
    if ((a = this.Ra))
      (a.w = null), C(a, "mousedown", v), C(a, "dblclick", e), (this.Ra = null);
    this.text = this.Pb = null;
    aa.G.gb.apply(this, arguments);
    return this;
  };
  aa.prototype.kb = function (a) {
    if (!y) {
      var b = { position: "absolute", left: "84px", width: "130px" },
        c = { position: "absolute", width: "78px", "text-align": "right" },
        f = { position: "absolute" },
        e = { position: "absolute", "white-space": "nowrap" };
      y = m(d.input.Date).b(b).b({ top: "16px" });
      M = m(d.page.I, "vertical-line-time1")
        .Text(A.gd + ":")
        .b(c)
        .b({ top: "20px" });
      D = m(d.input.Date).b(b).b({ top: "48px" });
      L = m(d.page.I, "vertical-line-time2")
        .Text(A.gd + ":")
        .b(c)
        .b({ top: "52px" });
      B = m(d.input.pa).o("vertical-line-ray-right").b(f).b({
        top: "21px",
        left: "280px",
      });
      Q = m(d.page.I, "vertical-line-ray-right")
        .Text(A.Kl)
        .b(e)
        .b({ top: "20px", left: "297px" });
      N = m(d.input.pa)
        .o("vertical-line-ray-left")
        .b(f)
        .b({ top: "55px", left: "280px" });
      K = m(d.page.I, "vertical-line-ray-left")
        .Text(A.Jl)
        .b(e)
        .b({ top: "54px", left: "297px" });
      P = m(d.input.pa)
        .o("vertical-line-fill")
        .b(f)
        .b({ top: "86px", left: "280px" });
      T = m(d.page.I, "vertical-line-fill")
        .Text(A.hu)
        .b(e)
        .b({ top: "85px", left: "297px" });
      R = m(d.input.Number)
        .o("stddev-channel-devnum")
        .T(2)
        .Fa(0)
        .Y(0.01)
        .b(b)
        .b({ top: "81px", left: "84px" });
      H = m(d.page.I, R.o())
        .Text(A.bH + ":")
        .b(c)
        .b({ top: "86px" });
    }
    b = this.data;
    c = 6e4 * new Date().getTimezoneOffset();
    f = b.date[0];
    e = b.date[1];
    f += c;
    e += c;
    R.f(b.devnum);
    y.f(f);
    D.f(e);
    B.s(!!b.ray_right);
    N.s(!!b.ray_left);
    P.s(!!b.fill);
    a.c(y).c(M).c(D).c(L).c(B).c(Q).c(N).c(K).c(P).c(T).c(R).c(H);
    return this;
  };
  aa.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      b = this.data;
    b.ray_right = B.s();
    b.ray_left = N.s();
    b.fill = P.s();
    b.date[0] = y.f() - a;
    b.date[1] = D.f() - a;
    a = parseFloat(R.f());
    b.devnum = a ? a : 1;
    return this;
  };
  aa.prototype.Vf = function () {
    var a = this.Pb,
      b = this.Nb,
      c = this.element;
    a || ((a = this.Pb = w("title", "http://www.w3.org/2000/svg")), n(b, a));
    a = this.ld;
    a ||
      ((a = this.ld = w("line", "http://www.w3.org/2000/svg")),
      a.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (a.w = this),
      x(a, "mousedown", v),
      x(a, "dblclick", e),
      n(b, a));
    a = this.bc;
    a ||
      ((a = this.bc = w("line", "http://www.w3.org/2000/svg")),
      a.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (a.w = this),
      x(a, "mousedown", v),
      x(a, "dblclick", e),
      n(b, a));
    a = this.xf;
    a ||
      ((a = this.xf = w("line", "http://www.w3.org/2000/svg")),
      a.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (a.w = this),
      x(a, "mousedown", v),
      x(a, "dblclick", e),
      n(b, a));
    a = this.input;
    a ||
      ((a = this.input = w("input")),
      (a.type = "checkbox"),
      (a.w = this),
      I(a, { position: "absolute", top: "-3000px", left: "-3000px" }),
      x(a, "focus", k),
      x(a, "blur", h),
      n(c, a));
    a = this.xb;
    a ||
      ((a = this.xb = w("circle", "http://www.w3.org/2000/svg")),
      a.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      a.setAttribute("r", "10"),
      (a.w = this),
      x(a, "mousedown", v),
      x(a, "dblclick", e),
      n(b, a));
    a = this.Ra;
    a ||
      ((a = this.Ra = w("circle", "http://www.w3.org/2000/svg")),
      a.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      a.setAttribute("r", "10"),
      (a.w = this),
      x(a, "mousedown", v),
      x(a, "dblclick", e),
      n(b, a));
    b = this.text;
    b ||
      ((b = this.text = w("span")),
      O(b, "val"),
      I(b, {
        position: "absolute",
        "white-space": "nowrap",
        width: "80px",
        "text-align": "right",
      }),
      n(c, b));
  };
  aa.prototype.$g = function () {
    var a = d.L.Nc.Cc,
      b = this.v,
      c = b.Lb,
      f = this.data.date,
      e = this.data.value,
      g = this.data.devnum,
      n = b.pb(f[0], !0),
      b = b.pb(f[1], !0);
    n > b && ((f = n), (n = b), (b = f));
    0 > n && (n = 0);
    b >= c.length && (b = c.length - 1);
    for (var b = b - n + 1, p, h = 0, q, x = (p = 0), m = 0, f = 0; f < b; f++)
      (q = (c[n + f] && a.Wh(c[n + f], a.ng.Pi)) || 0),
        (h += q),
        (x += q * f),
        (p += f),
        (m += f * f);
    f = (x * b - p * h) / (m * b - p * p) || 0;
    p = (h - p * f) / b || 0;
    e[0] = p;
    e[1] = p + f * (b - 1);
    h = h / b;
    for (f = e = p = 0; f < b; f++)
      (e = (c[n + f] && a.Wh(c[n + f], a.ng.Pi)) || 0),
        (e = e - h),
        (p += e * e);
    return (p = Math.sqrt(p / b) * g);
  };
  aa.prototype.ic = function () {
    this.Vf();
    var a = this.v,
      b = this.data,
      d = this.canvas,
      f = this.Nb,
      e = this.Pb,
      n = this.xb,
      p = this.Ra,
      h = b.date,
      x = b.ray_right,
      m = b.ray_left,
      w = b.fill,
      u = a.Aa,
      C = a.ta,
      y = z.sc || b.disabled,
      k = d.getContext("2d"),
      K = a.pb(h[0], !0),
      B = a.pb(h[1], !0),
      l,
      A = this.nc,
      G = this.focused,
      O = this.R;
    if (
      !(
        (0 >= B - K + 1 && null === O) ||
        (I(d, "z-index", b.background ? "0" : ""),
        I(this.text, "display", "none"),
        f.setAttribute("visibility", y ? "hidden" : "visible"),
        parseInt(d.style.width, 10) != u &&
          (g.sa
            ? d.setAttribute("width", u * g.devicePixelRatio)
            : d.setAttribute("width", u),
          I(d, "width", u + "px")),
        parseInt(d.style.height, 10) != C &&
          (g.sa
            ? d.setAttribute("height", C * g.devicePixelRatio)
            : d.setAttribute("height", C),
          I(d, "height", C + "px")),
        O ? k.clearRect.apply(k, O) : k.clearRect(0, 0, a.Aa, a.ta),
        g.sa &&
          (k.setTransform(1, 0, 0, 1, 0, 0),
          k.scale(g.devicePixelRatio, g.devicePixelRatio)),
        0 > B)
      )
    ) {
      var d = this.$g(),
        N = this.data.value,
        Q = c.qj(K, N[0], B, N[1], a.j);
      l = a.Da(h[0], N[0]);
      K = l[0];
      f = l[1];
      l = a.Da(h[1], N[1]);
      B = l[0];
      O = l[1];
      h = c.Hg(K, f, B, O);
      k.beginPath();
      k.strokeStyle = "#ff0000";
      d =
        f -
        Math.floor(this.v.nb - (N[0] + d) * Math.pow(10, this.v.j) * this.v.Sa);
      w
        ? (m
            ? ((l = c.Rd(h - Math.PI, 1e4)), k.moveTo(K + l[0], f + d + l[1]))
            : k.moveTo(K, f + d),
          x
            ? ((l = c.Rd(h, 1e4)),
              k.lineTo(B + l[0], O + d + l[1]),
              k.lineTo(B + l[0], O - d + l[1]))
            : (k.lineTo(B, O + d), k.lineTo(B, O - d)),
          m
            ? ((l = c.Rd(h - Math.PI, 1e4)), k.lineTo(K + l[0], f - d + l[1]))
            : k.lineTo(K, f - d))
        : (k.moveTo(K, f),
          k.lineTo(B, O),
          k.moveTo(K, f + d),
          k.lineTo(B, O + d),
          k.moveTo(K, f - d),
          k.lineTo(B, O - d),
          x &&
            ((l = c.Rd(h, 1e4)),
            k.moveTo(B, O),
            k.lineTo(B + l[0], O + l[1]),
            k.moveTo(B, O + d),
            k.lineTo(B + l[0], O + d + l[1]),
            k.moveTo(B, O - d),
            k.lineTo(B + l[0], O - d + l[1])),
          m &&
            ((l = c.Rd(h - Math.PI, 1e4)),
            k.moveTo(K, f),
            k.lineTo(K + l[0], f + l[1]),
            k.moveTo(K, f + d),
            k.lineTo(K + l[0], f + d + l[1]),
            k.moveTo(K, f - d),
            k.lineTo(K + l[0], f - d + l[1])));
      k.setLineDash && (k.setLineDash([]), A && k.setLineDash([3]));
      w
        ? ((k.fillStyle = "rgba(255,0,0,0.5)"), k.fill(), k.closePath())
        : k.stroke();
      A &&
        (k.moveTo(K + 0.5, 0),
        k.lineTo(K + 0.5, a.ta),
        k.moveTo(B + 0.5, 0),
        k.lineTo(B + 0.5, a.ta),
        k.stroke(),
        (w = this.text),
        q(w, Q),
        I(w, {
          display: "block",
          left:
            ("point1" == A ? K : B) - 3 - parseInt(w.style.width, 10) + "px",
          top: ("point1" == A ? f : O) + 3 + "px",
          color: a.Ia,
        }));
      y ||
        ((e.textContent = "" + b.name),
        (e = [0, 0]),
        (y = [0, 0]),
        m && (e = c.Rd(h - Math.PI, 1e4)),
        x && (y = c.Rd(h, 1e4)),
        (A = this.ld),
        A.setAttribute("x1", K + e[0]),
        A.setAttribute("y1", f + e[1]),
        A.setAttribute("x2", B + y[0]),
        A.setAttribute("y2", O + y[1]),
        (A = this.bc),
        A.setAttribute("x1", K + e[0]),
        A.setAttribute("y1", f + e[1] + d),
        A.setAttribute("x2", B + y[0]),
        A.setAttribute("y2", O + y[1] + d),
        (A = this.xf),
        A.setAttribute("x1", K + e[0]),
        A.setAttribute("y1", f + e[1] - d + ""),
        A.setAttribute("x2", B + y[0]),
        A.setAttribute("y2", O + y[1] - d + ""),
        n.setAttribute("cx", K),
        n.setAttribute("cy", f),
        p.setAttribute("cx", B),
        p.setAttribute("cy", O));
      G &&
        ((k.fillStyle = "#f00"),
        k.fillRect(K - 3, f - 3, 5, 5),
        k.fillRect(B - 3, O - 3, 5, 5),
        (k.fillStyle = a.Ia),
        k.fillRect(K - 2, f - 2, 3, 3),
        k.fillRect(B - 2, O - 2, 3, 3),
        (l = c.Ti(K, f, B, O))) &&
        ((k.fillStyle = "#f00"),
        k.fillRect(l[0] - 3, l[1] - 3, 5, 5),
        (k.fillStyle = a.Ia),
        k.fillRect(l[0] - 2, l[1] - 2, 3, 3));
      this.R =
        m || x
          ? [0, 0, u, C]
          : [Math.min(K, B) - 3, 0, Math.max(K, B) - Math.min(K, B) + 6, a.ta];
      a.Bg &&
        (w = (b.description || "").substr(0, 64)) &&
        (k.save(),
        k.translate(K, f),
        k.rotate(h),
        (k.textAlign = "left"),
        (k.textBaseline = "bottom"),
        (k.fillStyle = a.Ia),
        k.fillText(w, 1, -2),
        k.restore(),
        (this.R = [0, 0, u, C]));
    }
  };
})();
(function () {
  var v = E.controls,
    r = v.L.Sc,
    l = E.ba.xa,
    e = E.Ma,
    k,
    h,
    b,
    a,
    g,
    d,
    f,
    c,
    z,
    A,
    m = (r.nr.aca = function (a) {
      m.G.constructor.apply(this, arguments);
      this.data.value = [];
    });
  r.cc(m, r.nr.O_);
  m.type = "Regression Channel";
  m.Ec = function (a, b, c) {
    b = r.Kf.Ec();
    b.type = m.type;
    b.name = l.LO + " " + c;
    b.date = [a, a];
    b.fill = !1;
    b.ray_right = !1;
    b.ray_left = !1;
    return b;
  };
  m.prototype.kb = function (m) {
    if (!k) {
      var q = { position: "absolute", left: "84px", width: "130px" },
        w = { position: "absolute", width: "78px", "text-align": "right" },
        p = { position: "absolute" },
        n = {
          position: "absolute",
          "white-space": "nowrap",
        };
      k = e(v.input.Date).b(q).b({ top: "16px" });
      h = e(v.page.I, "vertical-line-time1")
        .Text(l.gd + ":")
        .b(w)
        .b({ top: "20px" });
      b = e(v.input.Date).b(q).b({ top: "48px" });
      a = e(v.page.I, "vertical-line-time2")
        .Text(l.gd + ":")
        .b(w)
        .b({ top: "52px" });
      g = e(v.input.pa)
        .o("vertical-line-ray-right")
        .b(p)
        .b({ top: "21px", left: "280px" });
      d = e(v.page.I, "vertical-line-ray-right")
        .Text(l.Kl)
        .b(n)
        .b({ top: "20px", left: "297px" });
      f = e(v.input.pa)
        .o("vertical-line-ray-left")
        .b(p)
        .b({ top: "55px", left: "280px" });
      c = e(v.page.I, "vertical-line-ray-left")
        .Text(l.Jl)
        .b(n)
        .b({ top: "54px", left: "297px" });
      z = e(v.input.pa)
        .o("vertical-line-fill")
        .b(p)
        .b({ top: "86px", left: "280px" });
      A = e(v.page.I, "vertical-line-fill")
        .Text(l.hu)
        .b(n)
        .b({ top: "85px", left: "297px" });
    }
    q = this.data;
    w = 6e4 * new Date().getTimezoneOffset();
    p = q.date[0];
    n = q.date[1];
    n += w;
    k.f(p + w);
    b.f(n);
    g.s(!!q.ray_right);
    f.s(!!q.ray_left);
    z.s(!!q.fill);
    m.c(k).c(h).c(b).c(a).c(g).c(d).c(f).c(c).c(z).c(A);
    return 246;
  };
  m.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      c = this.data;
    c.ray_right = g.s();
    c.ray_left = f.s();
    c.fill = z.s();
    c.date[0] = k.f() - a;
    c.date[1] = b.f() - a;
    return this;
  };
  m.prototype.$g = function () {
    var a = v.L.Nc.Cc,
      b,
      c = this.v,
      d = c.Lb;
    b = this.data.date;
    var f = c.pb(b[0], !0),
      c = c.pb(b[1], !0),
      e = (this.data.value = [0, 0]);
    f > c && ((b = f), (f = c), (c = b));
    0 > f && (f = 0);
    c >= d.length && (c = d.length - 1);
    var c = c - f + 1,
      g,
      h = 0,
      m,
      k = 0,
      z = (g = 0);
    for (b = 0; b < c; b++)
      (m = (d[f + b] && a.Wh(d[f + b], a.ng.Pi)) || 0),
        (h += m),
        (g += m * b),
        (k += b),
        (z += b * b);
    b = z * c - k * k;
    if (0 === b) return 0;
    g = (g * c - k * h) / b;
    b = (h - k * g) / c;
    e[0] = b || 0;
    e[1] = b + g * (c - 1) || 0;
    m = e = 0;
    h = b;
    for (b = 0; b < c; b++)
      (m = (d[f + b] && a.Wh(d[f + b], a.ng.Pi)) || 0),
        (h += g),
        (m = Math.abs(m - h)),
        e <= m && (e = m);
    return e;
  };
})();
(function () {
  function v(a) {
    if (this) {
      var b = this.w;
      if (b) {
        var c = b.element;
        if (c) {
          var d = w(c);
          d &&
            setTimeout(function () {
              d.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        Y = b;
        V = "line";
        this == b.xb && (V = "point1");
        this == b.Ra && (V = "point2");
        if ("line" == V) {
          b = c.Ge || u(c);
          c.Ge = b;
          var c = Y.data.date,
            f = Y.data.value,
            e = Y.v,
            g = e.Da(c[0], f[0]);
          ea = b[0] + g[0];
          aa = b[1] + g[1];
          g = e.Da(c[1], f[1]);
          ha = b[0] + g[0];
          X = b[1] + g[1];
          fa = a.clientX;
          ga = a.clientY;
        }
        n(window, "mousemove", r);
        n(window, "mouseup", l);
      }
    }
  }
  function r(a) {
    var b = Y.v,
      c = a.clientX;
    a = a.clientY;
    var d = Y.data.date,
      f = Y.data.value,
      e;
    if (-1 !== V.indexOf("point")) {
      e = b.Tb(c, a);
      if ("point1" == V) {
        if (e[0] > d[1]) return;
        d[0] = e[0];
        f[0] = e[1];
      }
      if ("point2" == V) {
        if (e[0] < d[0]) return;
        d[1] = e[0];
        f[1] = e[1];
      }
    }
    "line" == V &&
      0 !== fa - c &&
      0 !== ga - a &&
      ((e = b.Tb(ea + c - fa, aa + a - ga)),
      (d[0] = e[0]),
      (f[0] = e[1]),
      (e = b.Tb(ha + (c - fa), X + (a - ga))),
      (d[1] = e[0]),
      (f[1] = e[1]));
    Y.nc = V;
    Y.Ha(b);
  }
  function l(a) {
    if (Y.lc) {
      var b = Y.input;
      b && b.focus();
    }
    Y.lc = null;
    Y.nc = !1;
    Y.Ha(Y.v);
    Y.M("change", a);
    ga = X = aa = fa = ha = ea = V = Y = null;
    x(window, "mousemove", r);
    x(window, "mouseup", l);
  }
  function e(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function k(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), b.ic());
        clearTimeout(c);
      }, 50);
    clearTimeout(b && b.Kb);
  }
  function h(a) {
    var b = this.w;
    b &&
      (clearTimeout(b.Kb),
      (b.Kb = setTimeout(function () {
        var c = G();
        ("input" == F(c) && "checkbox" == c.type && c.sf) ||
          ((b.focused = !1), b.ic(), b.M("blur", a));
      }, 0)));
  }
  var b = E.va,
    a = E.oc,
    g = E.Qa,
    d = E.controls,
    f = d.L.Sc,
    c = f.Pa.ma,
    z = d.L.Zb,
    A = E.ba.xa,
    m = E.Ma,
    u = E.ma.Vh,
    q = b.sb,
    w = b.Xb,
    p = b.tb,
    n = a.i,
    x = a.hc,
    C = b.hb,
    O = b.$a,
    I = b.Cd,
    G = b.Wf,
    F = b.md,
    y,
    M,
    D,
    L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha,
    fa,
    aa,
    X,
    ga,
    U = (f.yt.Z8 = function (a) {
      U.G.constructor.apply(this, arguments);
    });
  f.cc(U, f.vh.dt);
  U.type = "Gann Line";
  U.Ec = function (a, b, c) {
    var d = f.Kf.Ec();
    d.type = U.type;
    d.name = A.JO + " " + c;
    d.date = [a, a];
    d.value = [b, b];
    d.ray_right = !1;
    d.ray_left = !1;
    d.scale = 100;
    d.pipsperbar = 1;
    return d;
  };
  U.prototype.kb = function (a) {
    if (!y) {
      var b = { position: "absolute" };
      y = m(d.input.Date).b(b).b({ top: "16px", left: "84px", width: "130px" });
      M = m(d.page.I, "vertical-line-time1")
        .Text(A.gd + ":")
        .b(b)
        .b({ top: "20px", width: "78px", "text-align": "right" });
      D = m(d.input.Date).b(b).b({ top: "48px", left: "84px", width: "130px" });
      L = m(d.page.I, "vertical-line-time2")
        .Text(A.gd + ":")
        .b(b)
        .b({ top: "52px", width: "78px", "text-align": "right" });
      B = m(d.input.Number)
        .o("vertical-line-value1")
        .b(b)
        .b({ top: "16px", left: "280px", width: "100px" });
      Q = m(d.page.I, "vertical-line-value1")
        .Text(A.Ld + ":")
        .b(b)
        .b({
          top: "20px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      N = m(d.input.Number).o("vertical-line-value2").b(b).b({
        top: "48px",
        left: "280px",
        width: "100px",
      });
      m(d.page.I, "vertical-line-value2")
        .Text(A.Ld + ":")
        .b(b)
        .b({
          top: "52px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      K = m(d.input.pa)
        .o("vertical-line-ray-right")
        .b(b)
        .b({ top: "118px", left: "84px" });
      P = m(d.page.I, "vertical-line-ray-right")
        .Text(A.Kl)
        .b(b)
        .b({ top: "117px", left: "101px", "white-space": "nowrap" });
      T = m(d.input.pa)
        .o("vertical-line-ray-left")
        .b(b)
        .b({ top: "140px", left: "84px" });
      R = m(d.page.I, "vertical-line-ray-left")
        .Text(A.Jl)
        .b(b)
        .b({ top: "139px", left: "101px", "white-space": "nowrap" });
    }
    var b = this.data,
      c = this.v.j,
      f = 6e4 * new Date().getTimezoneOffset(),
      e = b.value[0],
      g = b.date[0],
      n = b.date[1],
      n = n + f;
    y.f(g + f);
    D.f(n);
    B.f(e).T(c).Y(Math.pow(10, -c));
    K.s(!!b.ray_right);
    T.s(!!b.ray_left);
    a.c(y).c(M).c(D).c(L).c(B).c(Q).c(K).c(P).c(T).c(R);
    H ||
      ((b = { position: "absolute" }),
      (H = m(d.input.Number)
        .o("angle-value")
        .b(b)
        .T(2)
        .Y(0.01)
        .b({ top: "80px", left: "84px", width: "79px" })),
      (S = m(d.page.I, H.o())
        .Text(A.aP + ":")
        .b(b)
        .b({ top: "84px", left: "0px", width: "79px", "text-align": "right" })),
      (Z = m(d.input.Number)
        .o("pipsperbar-value")
        .b(b)
        .T(6)
        .Fa(0)
        .Y(Math.pow(0.1, 6))
        .b({ top: "80px", left: "280px", width: "100px" })),
      (W = m(d.page.I, Z.o())
        .Text(A.wF + ":")
        .b(b)
        .b({
          top: "84px",
          left: "177px",
          width: "97px",
          "text-align": "right",
        })));
    H.f(this.data.scale / 100);
    Z.f(this.data.pipsperbar);
    a.c(H).c(S).c(Z).c(W);
  };
  U.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      b = this.data;
    b.ray_right = K.s();
    b.ray_left = T.s();
    b.date[0] = y.f() - a;
    b.date[1] = D.f() - a;
    b.value[0] = B.f();
    b.value[1] = N.f();
    b.scale = 100 * parseFloat(H.f());
    b.pipsperbar = Z.f();
  };
  U.prototype.Mf = function (a) {
    var b = this.Ra,
      c = this.input,
      d = {};
    d.clientX = a.clientX;
    d.clientY = a.clientY;
    d.currentTarget = b;
    this.lc = !0;
    v.call(b, d);
    c &&
      c.focus &&
      setTimeout(function () {
        c.focus();
      }, 0);
    return this;
  };
  U.prototype.ic = function () {
    var a = this.canvas,
      b = this.element,
      d = this.Nb,
      f = this.v,
      x = this.data,
      m = this.text,
      u = this.Pb,
      y = this.qb,
      w = this.input,
      K = this.xb,
      B = this.Ra,
      l = x.date,
      A = x.value,
      G = x.ray_right,
      N = x.ray_left,
      Q = f.Aa,
      D = f.ta,
      H = z.sc || x.disabled,
      F = a.getContext("2d"),
      L = f.pb(l[0], !0),
      P = f.pb(l[1], !0),
      R = A[0],
      r = A[1],
      M = c.qj(L, R, P, r, f.j),
      Y = this.nc,
      T = this.focused;
    u || ((u = this.Pb = q("title", "http://www.w3.org/2000/svg")), p(d, u));
    y ||
      ((y = this.qb = q("line", "http://www.w3.org/2000/svg")),
      y.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (y.w = this),
      n(y, "mousedown", v),
      n(y, "dblclick", e),
      p(d, y));
    w ||
      ((w = this.input = q("input")),
      (w.type = "checkbox"),
      (w.w = this),
      O(w, { position: "absolute", top: "-3000px", left: "-3000px" }),
      n(w, "focus", k),
      n(w, "blur", h),
      p(b, w));
    K ||
      ((K = this.xb = q("circle", "http://www.w3.org/2000/svg")),
      K.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      K.setAttribute("r", "10"),
      (K.w = this),
      n(K, "mousedown", v),
      n(K, "dblclick", e),
      p(d, K));
    B ||
      ((B = this.Ra = q("circle", "http://www.w3.org/2000/svg")),
      B.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      B.setAttribute("r", "10"),
      (B.w = this),
      n(B, "mousedown", v),
      n(B, "dblclick", e),
      p(d, B));
    m ||
      ((m = this.text = q("span")),
      C(m, "val"),
      O(m, {
        position: "absolute",
        "white-space": "nowrap",
        width: "80px",
        "text-align": "right",
      }),
      p(b, m));
    O(a, "z-index", x.background ? "0" : "");
    O(m, "display", "none");
    d.setAttribute("visibility", H ? "hidden" : "visible");
    parseInt(a.style.width, 10) != Q &&
      (g.sa
        ? a.setAttribute("width", Q * g.devicePixelRatio)
        : a.setAttribute("width", Q),
      O(a, "width", Q + "px"));
    parseInt(a.style.height, 10) != D &&
      (g.sa
        ? a.setAttribute("height", D * g.devicePixelRatio)
        : a.setAttribute("height", D),
      O(a, "height", D + "px"));
    F.clearRect.apply(F, [0, 0, Q, D]);
    g.sa &&
      (F.setTransform(1, 0, 0, 1, 0, 0),
      F.scale(g.devicePixelRatio, g.devicePixelRatio));
    0 === A[1] || A[1] == A[0]
      ? ((P = this.v),
        (L = this.data.scale || 0),
        (R = this.data.value),
        (a = this.data.date),
        1e5 < L && (L = 1e5),
        -1e5 > L && (L = -1e5),
        (r = Math.pow(10, P.j)),
        (P = P.pb(a[1], !0) - P.pb(a[0], !0)),
        (R[1] = R[0] + ((P / r) * L * this.data.pipsperbar) / 100))
      : ((L = this.v),
        (r = this.data.date),
        (R = this.data.value),
        (r = L.pb(r[1], !0) - L.pb(r[0], !0)),
        1 > r ||
          ((L = ((R[1] - R[0]) * Math.pow(10, L.j)) / r),
          (L = (100 * L) / this.data.pipsperbar),
          (L = 0 > L ? L - 0.5 : L + 0.5),
          (this.data.scale = parseInt(L, 10))));
    a = f.Da(l[0], A[0]);
    L = a[0];
    R = a[1];
    a = f.Da(l[1], A[1]);
    P = a[0];
    r = a[1];
    A = L;
    b = P;
    d = R;
    w = r;
    l = c.Hg(L, R, P, r);
    G && ((a = c.Rd(l, 1e5)), (b += a[0]), (w += a[1]));
    N && ((a = c.Rd(l - Math.PI, 1e5)), (A += a[0]), (d += a[1]));
    F.beginPath();
    F.setLineDash && F.setLineDash([]);
    F.strokeStyle = "#ff0000";
    F.moveTo(A + 0.5, d + 0.5);
    F.lineTo(b + 0.5, w + 0.5);
    F.stroke();
    H ||
      ((u.textContent = [x.name, M].join("\n")),
      y.setAttribute("x1", A),
      y.setAttribute("y1", d),
      y.setAttribute("x2", b),
      y.setAttribute("y2", w),
      K.setAttribute("cx", L),
      K.setAttribute("cy", R),
      B.setAttribute("cx", P),
      B.setAttribute("cy", r));
    T &&
      ((F.fillStyle = "#f00"),
      F.fillRect(L - 3, R - 3, 5, 5),
      F.fillRect(P - 3, r - 3, 5, 5),
      (F.fillStyle = f.Ia),
      F.fillRect(L - 2, R - 2, 3, 3),
      F.fillRect(P - 2, r - 2, 3, 3),
      (a = c.Ti(L, R, P, r))) &&
      ((F.fillStyle = "#f00"),
      F.fillRect(a[0] - 3, a[1] - 3, 5, 5),
      (F.fillStyle = f.Ia),
      F.fillRect(a[0] - 2, a[1] - 2, 3, 3));
    Y &&
      (F.beginPath(),
      F.setLineDash && F.setLineDash([3]),
      F.moveTo(L, 0),
      F.lineTo(L, D),
      F.moveTo(P, 0),
      F.lineTo(P, D),
      F.stroke());
    Y &&
      "line" != Y &&
      (I(m, M),
      (u = ("point1" == Y ? L : P) - 3 - parseInt(m.style.width, 10)),
      O(m, {
        display: "block",
        left: u + "px",
        top: ("point1" == Y ? R : r) + 3 + "px",
        color: f.Ia,
      }));
    f.Bg &&
      (x = (x.description || "").substr(0, 64)) &&
      (F.save(),
      F.translate(L, R),
      F.rotate(l),
      (F.textAlign = "left"),
      (F.textBaseline = "bottom"),
      (F.fillStyle = f.Ia),
      F.fillText(x, 1, -2),
      F.restore(),
      (this.R = []),
      (this.R[0] = 0),
      (this.R[1] = 0),
      (this.R[2] = f.Aa),
      (this.R[3] = f.ta));
  };
})();
(function () {
  function v(a) {
    var b = this.v,
      c = this.data,
      d = c.date,
      f = c.value,
      e = Math.pow(10, b.j);
    c.ganndir && (a = -a);
    b = b.pb(d[1], !0) - b.pb(d[0], !0);
    1 > b && (b = 1);
    return f[0] + (b / e) * a * c.pipsperbar;
  }
  function r(a) {
    if (this) {
      var b = this.w;
      if (b) {
        var c = b.element;
        if (c) {
          var d = p(c);
          d &&
            setTimeout(function () {
              d.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        H = b;
        S = "line";
        this == b.xb && (S = "point1");
        this == b.Ra && (S = "point2");
        if ("line" == S) {
          b = c.Ge || q(c);
          c.Ge = b;
          var c = H.data.date,
            f = H.data.value,
            g = H.v,
            n = g.Da(c[0], f[0]);
          Z = b[0] + n[0];
          V = b[1] + n[1];
          n = g.Da(c[1], f[1]);
          W = b[0] + n[0];
          ea = b[1] + n[1];
          Y = a.clientX;
          ha = a.clientY;
        }
        x(window, "mousemove", l);
        x(window, "mouseup", e);
      }
    }
  }
  function l(a) {
    var b = H.v,
      c = a.clientX;
    a = a.clientY;
    var d = H.data.date,
      f = H.data.value,
      e;
    if (-1 !== S.indexOf("point")) {
      e = b.Tb(c, a);
      if ("point1" == S) {
        if (e[0] > d[1]) return;
        d[0] = e[0];
        f[0] = e[1];
      }
      if ("point2" == S) {
        if (e[0] < d[0]) return;
        d[1] = e[0];
        f[1] = e[1];
      }
    }
    "line" == S &&
      0 !== Y - c &&
      0 !== ha - a &&
      ((e = b.Tb(Z + c - Y, V + a - ha)),
      (d[0] = e[0]),
      (f[0] = e[1]),
      (e = b.Tb(W + (c - Y), ea + (a - ha))),
      (d[1] = e[0]),
      (f[1] = e[1]));
    H.nc = S;
    H.Ha(b);
  }
  function e(a) {
    if (H.lc) {
      var b = H.input;
      b && b.focus();
    }
    H.lc = null;
    H.nc = !1;
    H.Ha(H.v);
    H.M("change", a);
    ha = ea = V = Y = W = Z = S = H = null;
    C(window, "mousemove", l);
    C(window, "mouseup", e);
  }
  function k(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function h(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), b.ic());
        clearTimeout(c);
      }, 50);
    clearTimeout(b && b.Kb);
  }
  function b(a) {
    var b = this.w;
    b &&
      (clearTimeout(b.Kb),
      (b.Kb = setTimeout(function () {
        var c = F();
        ("input" == y(c) && "checkbox" == c.type && c.sf) ||
          ((b.focused = !1), b.ic(), b.M("blur", a));
      }, 0)));
  }
  var a = E.va,
    g = E.oc,
    d = E.Qa,
    f = E.controls,
    c = f.L.Sc,
    z = c.Pa.ma,
    A = f.L.Zb,
    m = E.ba.xa,
    u = E.Ma,
    q = E.ma.Vh,
    w = a.sb,
    p = a.Xb,
    n = a.tb,
    x = g.i,
    C = g.hc,
    O = a.hb,
    I = a.$a,
    G = a.Cd,
    F = a.Wf,
    y = a.md,
    M,
    D,
    L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha,
    fa = (c.yt.gS = function (a) {
      fa.G.constructor.apply(this, arguments);
    });
  c.cc(fa, c.vh.dt);
  fa.type = "Gann Fan";
  fa.Ec = function (a, b, d) {
    var f = c.Kf.Ec();
    f.type = fa.type;
    f.name = m.DK + " " + d;
    f.date = [a, a];
    f.value = [b, b];
    f.ganndir = !1;
    f.pipsperbar = 1;
    return f;
  };
  fa.prototype.kb = function (a) {
    if (!M) {
      var b = { position: "absolute" };
      M = u(f.input.Date).b(b).b({ top: "16px", left: "94px", width: "130px" });
      D = u(f.page.I, "vertical-line-time1")
        .Text(m.gd + ":")
        .b(b)
        .b({ top: "20px", width: "87px", "text-align": "right" });
      L = u(f.input.Date).b(b).b({ top: "48px", left: "94px", width: "130px" });
      B = u(f.page.I, "vertical-line-time2")
        .Text(m.gd + ":")
        .b(b)
        .b({ top: "52px", width: "87px", "text-align": "right" });
      Q = u(f.input.Number)
        .o("vertical-line-value1")
        .b(b)
        .b({ top: "16px", left: "310px", width: "100px" });
      N = u(f.page.I, "vertical-line-value1")
        .Text(m.Ld + ":")
        .b(b)
        .b({
          top: "20px",
          left: "216px",
          width: "87px",
          "text-align": "right",
        });
    }
    var c = this.data,
      b = this.v.j,
      d = 6e4 * new Date().getTimezoneOffset(),
      e = c.value[0],
      g = c.date[0],
      n = c.date[1],
      n = n + d;
    M.f(g + d);
    L.f(n);
    Q.f(e).T(b).Y(Math.pow(10, -b));
    a.c(M).c(D).c(L).c(B).c(Q).c(N);
    K ||
      ((b = { position: "absolute" }),
      (K = u(f.input.Number)
        .o("pipsperbar-value")
        .b(b)
        .T(6)
        .Fa(0)
        .Y(Math.pow(0.1, 6))
        .b({ top: "80px", left: "94px", width: "130px" })),
      (P = u(f.page.I, K.o())
        .Text(m.wF + ":")
        .b(b)
        .b({ top: "84px", left: "2px", width: "87px", "text-align": "right" })),
      (T = u(f.input.pa)
        .o("ganndir_control")
        .b(b)
        .b({ top: "118px", left: "94px" })),
      (R = u(f.page.I, T.o())
        .Text(m.ZO + "")
        .b(b)
        .b({ top: "117px", left: "111px", "white-space": "nowrap" })));
    K.f(this.data.pipsperbar);
    T.s(!!c.ganndir);
    a.c(K).c(P).c(T).c(R);
  };
  fa.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      b = this.data;
    b.date[0] = M.f() - a;
    b.date[1] = L.f() - a;
    b.value[0] = Q.f();
    b.pipsperbar = K.f();
    b.ganndir = T.s();
  };
  fa.prototype.Mf = function (a) {
    var b = this.Ra,
      c = this.input,
      d = {};
    d.clientX = a.clientX;
    d.clientY = a.clientY;
    d.currentTarget = b;
    this.lc = !0;
    r.call(b, d);
    c &&
      c.focus &&
      setTimeout(function () {
        c.focus();
      }, 0);
    return this;
  };
  fa.prototype.Vf = function () {
    var a = this.Pb,
      c = this.Nb,
      d = this.qb,
      f = this.input,
      e = this.xb,
      g = this.Ra,
      p = this.text,
      m = this.element;
    a || ((a = this.Pb = w("title", "http://www.w3.org/2000/svg")), n(c, a));
    d ||
      ((d = this.qb = w("line", "http://www.w3.org/2000/svg")),
      d.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (d.w = this),
      x(d, "mousedown", r),
      x(d, "dblclick", k),
      n(c, d));
    f ||
      ((f = this.input = w("input")),
      (f.type = "checkbox"),
      (f.w = this),
      I(f, { position: "absolute", top: "-3000px", left: "-3000px" }),
      x(f, "focus", h),
      x(f, "blur", b),
      n(m, f));
    e ||
      ((e = this.xb = w("circle", "http://www.w3.org/2000/svg")),
      e.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      e.setAttribute("r", "10"),
      (e.w = this),
      x(e, "mousedown", r),
      x(e, "dblclick", k),
      n(c, e));
    g ||
      ((g = this.Ra = w("circle", "http://www.w3.org/2000/svg")),
      g.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      g.setAttribute("r", "10"),
      (g.w = this),
      x(g, "mousedown", r),
      x(g, "dblclick", k),
      n(c, g));
    p ||
      ((p = this.text = w("span")),
      O(p, "val"),
      I(p, {
        position: "absolute",
        "white-space": "nowrap",
        width: "80px",
        "text-align": "right",
      }),
      n(m, p));
  };
  fa.prototype.ic = function () {
    this.Vf();
    var a = this.canvas,
      b = this.Nb,
      c = this.v,
      f = this.data,
      e = this.text,
      g = this.Pb,
      n = this.qb,
      p = this.xb,
      h = this.Ra,
      x = f.date,
      m = f.value,
      q = c.Aa,
      k = c.ta,
      y = A.sc || f.disabled,
      w = a.getContext("2d"),
      u = c.pb(x[0], !0),
      C = c.pb(x[1], !0),
      K = C - u,
      B = m[0],
      l = m[1],
      O,
      N,
      Q,
      F,
      D = z.qj(u, B, C, l, c.j),
      H = this.nc,
      L = this.focused;
    I(a, "z-index", f.background ? "0" : "");
    I(e, "display", "none");
    b.setAttribute("visibility", y ? "hidden" : "visible");
    parseInt(a.style.width, 10) != q &&
      (d.sa
        ? a.setAttribute("width", q * d.devicePixelRatio)
        : a.setAttribute("width", q),
      I(a, "width", q + "px"));
    parseInt(a.style.height, 10) != k &&
      (d.sa
        ? a.setAttribute("height", k * d.devicePixelRatio)
        : a.setAttribute("height", k),
      I(a, "height", k + "px"));
    (u = this.R) && w.clearRect.apply(w, u);
    d.sa &&
      (w.setTransform(1, 0, 0, 1, 0, 0),
      w.scale(d.devicePixelRatio, d.devicePixelRatio));
    m[1] = v.call(this, 1);
    F = c.Da(x[0], m[0]);
    u = F[0];
    B = F[1];
    F = c.Da(x[1], m[1]);
    C = F[0];
    l = F[1];
    b = u;
    O = C;
    N = B;
    Q = l;
    a = z.Hg(u, B, C, l);
    if (!H && 1 < K) {
      w.beginPath();
      w.setLineDash && w.setLineDash([]);
      w.strokeStyle = "#ff0000";
      F = z.Rd(a, 1e5);
      w.moveTo(b + 0.5, N + 0.5);
      w.lineTo(O + 0.5 + F[0], Q + 0.5 + F[1]);
      for (
        var K = [8, 4, 3, 2, 0.5, 0.333333, 0.25, 0.125], P = 0;
        8 > P;
        P++
      ) {
        m[1] = v.call(this, K[P]);
        var R = (m[1] - c.ob) / c.scale;
        0 < R && (R += 0.50001);
        0 > R && (R -= 0.50001);
        F = c.Da(x[1], m[1]);
        var r = z.Rd(z.Hg(u, B, F[0], F[1] - R), 1e5);
        w.moveTo(u, B);
        w.lineTo(F[0] + r[0], r[1] + F[1] - R);
      }
      w.stroke();
      x = f.ganndir;
      this.R = [u - 20, x ? B - 10 : 0, q - u + 20, x ? k : B + 10];
    } else this.R = [u - 20, 0, q - u + 20, k];
    y ||
      ((g.textContent = [f.name, D].join("\n")),
      n.setAttribute("x1", b),
      n.setAttribute("y1", N),
      n.setAttribute("x2", O),
      n.setAttribute("y2", Q),
      p.setAttribute("cx", u),
      p.setAttribute("cy", B),
      h.setAttribute("cx", C),
      h.setAttribute("cy", l));
    L &&
      ((w.fillStyle = "#f00"),
      w.fillRect(u - 3, B - 3, 5, 5),
      w.fillRect(C - 3, l - 3, 5, 5),
      (w.fillStyle = c.Ia),
      w.fillRect(u - 2, B - 2, 3, 3),
      w.fillRect(C - 2, l - 2, 3, 3),
      (F = z.Ti(u, B, C, l))) &&
      ((w.fillStyle = "#f00"),
      w.fillRect(F[0] - 3, F[1] - 3, 5, 5),
      (w.fillStyle = c.Ia),
      w.fillRect(F[0] - 2, F[1] - 2, 3, 3));
    H &&
      (w.beginPath(),
      w.setLineDash && w.setLineDash([3]),
      w.moveTo(u, 0),
      w.lineTo(u, k),
      w.moveTo(C, 0),
      w.lineTo(C, k),
      w.stroke());
    H &&
      "line" != H &&
      (G(e, D),
      (g = ("point1" == H ? u : C) - 3 - parseInt(e.style.width, 10)),
      I(e, {
        display: "block",
        left: g + "px",
        top: ("point1" == H ? B : l) + 3 + "px",
        color: c.Ia,
      }));
    c.Bg &&
      (f = (f.description || "").substr(0, 64)) &&
      (w.save(),
      w.translate(u, B),
      w.rotate(a),
      (w.textAlign = "left"),
      (w.textBaseline = "bottom"),
      (w.fillStyle = c.Ia),
      w.fillText(f, 1, -2),
      w.restore(),
      (this.R = []),
      (this.R[0] = 0),
      (this.R[1] = 0),
      (this.R[2] = c.Aa),
      (this.R[3] = c.ta));
  };
})();
(function () {
  var v = E.va,
    r = E.ma,
    l = E.Qa,
    e = E.controls,
    k = e.L.Sc,
    h = k.Pa.ma,
    b = h.KP,
    a = e.L.Zb,
    g = E.ba.xa,
    d = v.$a,
    f = v.Cd,
    c = (k.yt.Y8 = function (a) {
      c.G.constructor.apply(this, arguments);
    });
  k.cc(c, k.yt.gS);
  c.type = "Gann Grid";
  c.Ec = function (a, b, d) {
    var f = k.Kf.Ec();
    f.type = c.type;
    f.name = g.EK + " " + d;
    f.date = [a, a];
    f.value = [b, b];
    f.ganndir = !1;
    f.pipsperbar = 1;
    return f;
  };
  c.prototype.ic = function () {
    this.Vf();
    var c = this.canvas,
      e = this.Nb,
      g = this.v,
      k = this.data,
      q = this.text,
      w = this.Pb,
      p = this.qb,
      n = this.xb,
      x = this.Ra,
      C = k.date,
      O = k.value,
      I = g.Aa,
      G = g.ta,
      F = a.sc || k.disabled,
      y = c.getContext("2d"),
      M = g.pb(C[0], !0),
      D = g.pb(C[1], !0),
      L = O[0],
      B = O[1],
      Q,
      N,
      K,
      P = h.qj(M, L, D, B, g.j),
      T = this.nc,
      R = this.focused;
    d(c, "z-index", k.background ? "0" : "");
    d(q, "display", "none");
    e.setAttribute("visibility", F ? "hidden" : "visible");
    parseInt(c.style.width, 10) != I &&
      (l.sa
        ? c.setAttribute("width", I * l.devicePixelRatio)
        : c.setAttribute("width", I),
      d(c, "width", I + "px"));
    parseInt(c.style.height, 10) != G &&
      (l.sa
        ? c.setAttribute("height", G * l.devicePixelRatio)
        : c.setAttribute("height", G),
      d(c, "height", G + "px"));
    y.clearRect(0, 0, I, G);
    l.sa &&
      (y.setTransform(1, 0, 0, 1, 0, 0),
      y.scale(l.devicePixelRatio, l.devicePixelRatio));
    M = 1;
    c = this.v;
    L = this.data;
    e = L.date;
    B = L.value;
    D = Math.pow(10, c.j);
    L.ganndir && (M = -M);
    c = c.pb(e[1], !0) - c.pb(e[0], !0);
    1 > c && (c = 1);
    O[1] = B[0] + (c / D) * M * L.pipsperbar;
    K = g.Da(C[0], O[0]);
    M = K[0];
    L = K[1];
    K = g.Da(C[1], O[1]);
    D = K[0];
    B = K[1];
    c = M;
    e = D;
    Q = L;
    N = B;
    C = h.Hg(M, L, D, B);
    if (!T) {
      y.beginPath();
      y.setLineDash && y.setLineDash([]);
      y.strokeStyle = "#ff0000";
      K = h.Rd(C, 1e6);
      y.moveTo(c + 0.5, Q + 0.5);
      y.lineTo(e + 0.5 + K[0], N + 0.5 + K[1]);
      K = D - M;
      var H = this.element,
        v = H.Ge || r.Vh(H);
      H.Ge = v;
      H = g.Tb(0, v[1])[1];
      v = g.Tb(0, v[1] + G)[1];
      O = H == v ? L - B : (g.ta * (O[1] - O[0])) / (H - v);
      if (!(5 > Math.abs(K) || 5 > Math.abs(O))) {
        v = [D, B];
        H = [D + K, B - O];
        do
          (v[1] += O),
            (H[1] += O),
            (v[0] += K),
            (H[0] += K),
            (H = b(I, G, v, H)),
            (H = H[1]),
            y.moveTo(v[0], v[1]),
            y.lineTo(H[0], H[1]);
        while (Math.abs(v[1]) < 2 * G);
        v = [D, B];
        H = [D + K, B - O];
        do
          (v[1] -= O),
            (H[1] -= O),
            (v[0] -= K),
            (H[0] -= K),
            (H = b(I, G, v, H)),
            (H = H[1]),
            y.moveTo(v[0], v[1]),
            y.lineTo(H[0], H[1]);
        while (Math.abs(v[1]) < 2 * G);
        v = [D, B];
        H = [D + K, B + O];
        do
          (H = b(I, G, v, H)),
            (H = H[1]),
            y.moveTo(v[0], v[1]),
            y.lineTo(H[0], H[1]),
            (v[1] -= O),
            (H[1] -= O),
            (v[0] += K),
            (H[0] += K);
        while (Math.abs(v[1]) < 2 * G);
        v = [D, B];
        H = [D - K, B - O];
        do
          (H = b(I, G, v, H)),
            (H = H[0]),
            y.moveTo(v[0], v[1]),
            y.lineTo(H[0], H[1]),
            (v[1] -= O),
            (H[1] -= O),
            (v[0] += K),
            (H[0] += K);
        while (Math.abs(v[1]) < 2 * G);
      }
      y.stroke();
    }
    F ||
      ((w.textContent = [k.name, P].join("\n")),
      p.setAttribute("x1", c),
      p.setAttribute("y1", Q),
      p.setAttribute("x2", e),
      p.setAttribute("y2", N),
      n.setAttribute("cx", M),
      n.setAttribute("cy", L),
      x.setAttribute("cx", D),
      x.setAttribute("cy", B));
    R &&
      ((y.fillStyle = "#f00"),
      y.fillRect(M - 3, L - 3, 5, 5),
      y.fillRect(D - 3, B - 3, 5, 5),
      (y.fillStyle = g.Ia),
      y.fillRect(M - 2, L - 2, 3, 3),
      y.fillRect(D - 2, B - 2, 3, 3),
      (K = h.Ti(M, L, D, B))) &&
      ((y.fillStyle = "#f00"),
      y.fillRect(K[0] - 3, K[1] - 3, 5, 5),
      (y.fillStyle = g.Ia),
      y.fillRect(K[0] - 2, K[1] - 2, 3, 3));
    T &&
      (y.beginPath(),
      y.setLineDash && y.setLineDash([3]),
      y.moveTo(M, 0),
      y.lineTo(M, G),
      y.moveTo(D, 0),
      y.lineTo(D, G),
      y.stroke());
    T &&
      "line" != T &&
      (f(q, P),
      (w = ("point1" == T ? M : D) - 3 - parseInt(q.style.width, 10)),
      d(q, {
        display: "block",
        left: w + "px",
        top: ("point1" == T ? L : B) + 3 + "px",
        color: g.Ia,
      }));
    g.Bg &&
      (k = (k.description || "").substr(0, 64)) &&
      (y.save(),
      y.translate(M, L),
      y.rotate(C),
      (y.textAlign = "left"),
      (y.textBaseline = "bottom"),
      (y.fillStyle = g.Ia),
      y.fillText(k, 1, -2),
      y.restore(),
      (this.R = []),
      (this.R[0] = 0),
      (this.R[1] = 0),
      (this.R[2] = g.Aa),
      (this.R[3] = g.ta));
  };
})();
(function () {
  function v(a) {
    return !isNaN(a);
  }
  function r(a) {
    switch (a) {
      case 1:
        return "I";
      case 2:
        return "II";
      case 3:
        return "III";
      case 4:
        return "IV";
      case 5:
        return "V";
    }
    return "";
  }
  function l(a) {
    if (this) {
      var b = this.w;
      if (b) {
        var c = b.element;
        if (c) {
          var d = n(c);
          d &&
            setTimeout(function () {
              d.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        R = b;
        H = null;
        this == b.button1 && (H = "point1");
        this == b.button2 && (H = "point2");
        this == b.button3 && (H = "point3");
        this == b.button4 && (H = "point4");
        this == b.button5 && (H = "point5");
        C(window, "mousemove", e);
        C(window, "mouseup", k);
      }
    }
  }
  function e(a) {
    var b = R.v,
      c = a.clientX,
      d = a.clientY;
    a = R.data.date;
    var f = R.data.value;
    -1 !== H.indexOf("point") &&
      ((c = b.Tb(c, d)),
      "point1" == H && ((a[0] = c[0]), (f[0] = c[1])),
      "point2" == H && ((a[1] = c[0]), (f[1] = c[1])),
      "point3" == H && ((a[2] = c[0]), (f[2] = c[1])),
      "point4" == H && ((a[3] = c[0]), (f[3] = c[1])),
      "point5" == H && ((a[4] = c[0]), (f[4] = c[1])));
    R.nc = H;
    R.Ha(b);
  }
  function k(a) {
    if (R.lc) {
      var b = R.input;
      b && b.focus();
    }
    R.lc = null;
    R.nc = !1;
    R.Ha(R.v);
    R.M("change", a);
    H = R = null;
    O(window, "mousemove", e);
    O(window, "mouseup", k);
  }
  function h(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function b(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), b.ic());
        clearTimeout(c);
      }, 50);
    clearTimeout(b.Kb);
  }
  function a(a) {
    var b = this.w;
    clearTimeout(b.Kb);
    b.Kb = setTimeout(function () {
      var c = F();
      ("input" == y(c) && "checkbox" == c.type && c.sf) ||
        ((b.focused = !1), b.ic(), b.M("blur", a));
    }, 0);
  }
  var g = E.va,
    d = E.oc,
    f = E.Qa,
    c = E.controls,
    z = c.L.Sc,
    A = c.L.Sc.Pa.ma,
    m = A.PF,
    u = c.L.Zb,
    q = E.ba.xa,
    w = E.Ma,
    p = g.sb,
    n = g.Xb,
    x = g.tb,
    C = d.i,
    O = d.hc,
    I = g.hb,
    G = g.$a,
    F = g.Wf,
    y = g.md,
    M = [
      {
        value: 0,
        label: "Grand Supercycle",
      },
      { value: 1, label: "Supercycle" },
      { value: 2, label: "Cycle" },
      { value: 3, label: "Primary" },
      { value: 4, label: "Intermediate" },
      { value: 5, label: "Minor" },
      { value: 6, label: "Minute" },
      { value: 7, label: "Minuette" },
      { value: 8, label: "Subminuette" },
    ],
    D = [],
    L = [],
    B = [],
    Q = [],
    N,
    K,
    P,
    T,
    R,
    H,
    S = (z.oE.I8 = function (a) {
      S.G.constructor.apply(this, arguments);
      this.J = !0;
    });
  z.cc(S);
  S.type = "Elliott Motive Wave";
  S.Ec = function (a, b, c) {
    var d = z.Kf.Ec();
    d.type = S.type;
    d.name = q.zK + " " + c;
    d.date = [a];
    d.value = [b];
    d.degree = 3;
    d.drawlines = !0;
    return d;
  };
  S.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    S.G.Qd.call(this) && this.ic(this);
    return this;
  };
  S.prototype.gb = function () {
    this.R = null;
    var c = this.input;
    c && ((c.w = null), O(c, "focus", b), O(c, "blur", a), (this.input = null));
    for (
      var c = ["button1", "button2", "button3", "button4", "button5"],
        d = 0,
        f = c.length;
      d < f;
      d++
    ) {
      var e = this[c[d]];
      e &&
        ((e.w = null),
        O(e, "mousedown", l),
        O(e, "dblclick", h),
        (this[c[d]] = null));
    }
    this.text = this.Pb = null;
    S.G.gb.apply(this, arguments);
    return this;
  };
  S.prototype.Mf = function (a, b) {
    var c = this,
      d = c.button5,
      f = c.input,
      e = {};
    e.clientX = a.clientX;
    e.clientY = a.clientY;
    e.currentTarget = d;
    c.J = !1;
    c.lc = !0;
    c.focused = !0;
    var g = 1,
      n;
    C(
      b.$,
      "mousedown",
      (n = function (a) {
        c.lc = !0;
        c.J = !0;
        a = c.v.Tb(a.clientX, a.clientY);
        var p = c.data;
        p.date[g] = a[0];
        p.value[g] = a[1];
        g++;
        5 <= g &&
          (l.call(d, e),
          f &&
            f.focus &&
            setTimeout(function () {
              f.focus();
            }, 0),
          (c.J = !0),
          O(b.$, "mousedown", n));
      })
    );
    return c;
  };
  S.prototype.kb = function (a) {
    if (!D.length)
      for (var b = { position: "absolute" }, d = 0; 5 > d; d++)
        (D[d] = w(c.input.Date)
          .b(b)
          .b({ top: 16 + 34 * d + "px", left: "84px", width: "130px" })),
          (L[d] = w(c.page.I, "vertical-line-time1")
            .Text(q.gd + ":")
            .b(b)
            .b({
              top: 20 + 34 * d + "px",
              width: "78px",
              "text-align": "right",
            })),
          (B[d] = w(c.input.Number)
            .o("vertical-line-value" + d)
            .b(b)
            .b({ top: 16 + 34 * d + "px", left: "280px", width: "100px" })),
          (Q[d] = w(c.page.I, B[d].o())
            .Text(q.Ld + ":")
            .b(b)
            .b({
              top: 20 + 34 * d + "px",
              left: "216px",
              width: "58px",
              "text-align": "right",
            }));
    for (
      var f = this.data,
        e = this.v.j,
        g = 6e4 * new Date().getTimezoneOffset(),
        d = 0;
      5 > d;
      d++
    )
      D[d].f(f.date[d] + g),
        B[d].f(f.value[d]),
        B[d].T(e).Y(Math.pow(10, -e)),
        a.c(D[d]).c(L[d]).c(B[d]).c(Q[d]);
    N ||
      ((N = w(c.input.of)
        .o("degree-method")
        .de(M)
        .b({
          position: "absolute",
          left: "84px",
          top: "187px",
          width: "296px",
        })),
      (K = w(c.page.I, N.o())
        .Text(q.aH + ":")
        .b({
          position: "absolute",
          top: "192px",
          width: "80px",
          "text-align": "right",
        })),
      (P = w(c.input.pa)
        .o("vertical-line-ray-right")
        .b(b)
        .b({ top: "221px", left: "84px" })),
      (T = w(c.page.I, P.o())
        .Text(q.vF)
        .b(b)
        .b({ top: "220px", left: "101px", "white-space": "nowrap" })));
    P.s(!!f.drawlines);
    N.f(parseInt(f.degree, 10));
    a.c(N).c(K).c(P).c(T);
    return 365;
  };
  S.prototype.lb = function () {
    for (
      var a = 6e4 * new Date().getTimezoneOffset(), b = this.data, c = 0;
      5 > c;
      c++
    )
      (b.date[c] = D[c].f() - a), (b.value[c] = B[c].f());
    b.drawlines = P.s();
    b.degree = N.f();
    return this;
  };
  S.prototype.Vf = function () {
    var c = this.Pb,
      d = this.Nb,
      f = this.input,
      e = this.element,
      g = this.text;
    c || ((c = this.Pb = p("title", "http://www.w3.org/2000/svg")), x(d, c));
    f ||
      ((f = this.input = p("input")),
      (f.type = "checkbox"),
      (f.w = this),
      G(f, { position: "absolute", top: "-3000px", left: "-3000px" }),
      C(f, "focus", b),
      C(f, "blur", a),
      x(e, f));
    c = ["button1", "button2", "button3", "button4", "button5"];
    for (f = 0; 5 > f; f++) {
      var n = this[c[f]];
      n ||
        ((n = this[c[f]] = p("circle", "http://www.w3.org/2000/svg")),
        n.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
        n.setAttribute("r", "15"),
        (n.w = this),
        C(n, "mousedown", l),
        C(n, "dblclick", h),
        x(d, n));
    }
    g ||
      ((g = this.text = p("span")),
      I(g, "val"),
      G(g, {
        position: "absolute",
        "white-space": "nowrap",
        width: "80px",
        "text-align": "right",
      }),
      x(e, g));
  };
  S.prototype.ic = function () {
    this.Vf();
    var a = this.v,
      b = this.data,
      c = this.canvas,
      d = this.Nb,
      e = this.text,
      g = this.Pb,
      n = a.Aa,
      p = a.ta,
      h = u.sc || b.disabled,
      x = b.date,
      q = b.value,
      w = c.getContext("2d"),
      k = a.pb(x[0], !0);
    a.pb(x[1], !0);
    var y = a.pb(x[2], !0),
      C = q[0],
      y = A.qj(k, C, y, q[2], a.j),
      K = this.focused,
      B = this.R;
    G(c, "z-index", b.background ? "0" : "");
    G(e, "display", "none");
    d.setAttribute("visibility", h ? "hidden" : "visible");
    parseInt(c.style.width, 10) != n &&
      (f.sa
        ? c.setAttribute("width", n * f.devicePixelRatio)
        : c.setAttribute("width", n),
      G(c, "width", n + "px"));
    parseInt(c.style.height, 10) != p &&
      (f.sa
        ? c.setAttribute("height", p * f.devicePixelRatio)
        : c.setAttribute("height", p),
      G(c, "height", p + "px"));
    B ? w.clearRect.apply(w, B) : w.clearRect(0, 0, n, p);
    f.sa &&
      (w.setTransform(1, 0, 0, 1, 0, 0),
      w.scale(f.devicePixelRatio, f.devicePixelRatio));
    c = [];
    d = [];
    for (n = 0; 5 > n; n++)
      (e = a.Da(x[n], q[n])), (c[n] = e[0]), (d[n] = e[1]);
    var z, l;
    this.R = [
      (z = Math.min.apply(Math, c.filter(v)) - 20),
      (l = Math.min.apply(Math, d.filter(v)) - 40),
      Math.max.apply(Math, c.filter(v)) - z + 20,
      Math.max.apply(Math, d.filter(v)) - l + 40,
    ];
    this.R[1] > p ? (this.R[1] = p) : 0 > this.R[1] && (this.R[1] = 0);
    this.R[3] > p ? (this.R[3] = p) : 0 > this.R[3] && (this.R[3] = 0);
    x = A.Hg(c[0], d[0], c[1], d[1]);
    if (b.drawlines) {
      w.beginPath();
      w.strokeStyle = "#ff0000";
      for (n = 0; 4 > n; n++)
        (q = c[n]),
          (z = d[n]),
          (l = c[n + 1]),
          (B = d[n + 1]),
          0 > z
            ? ((e = m(0, [q, z], [l, B])), (q = e[0]), (z = 0))
            : z > p && ((e = m(p, [q, z], [l, B])), (q = e[0]), (z = p)),
          0 > B
            ? ((e = m(0, [q, z], [l, B])), (l = e[0]), (B = 0))
            : B > p && ((e = m(p, [q, z], [l, B])), (l = e[0]), (B = p)),
          w.moveTo(q, z),
          w.lineTo(l, B);
      w.stroke();
    }
    p = b.degree;
    q = d[0] < d[1];
    w.fillStyle = "red";
    w.textAlign = "center";
    switch (+p) {
      case 0:
      case 6:
        for (z = 0; 5 > z; z++)
          (w.font = "16px Tahoma"),
            (l = d[z]),
            (l = q
              ? 0 === (z + 1) % 2
                ? l + 20
                : l - 10
              : 0 === (z + 1) % 2
              ? l - 10
              : l + 20),
            (e = r(z + 1)),
            6 == p && (e = e.toLowerCase()),
            w.fillText(e, c[z], l),
            w.beginPath(),
            (w.strokeStyle = "red"),
            w.arc(c[z], l - 6, 10, 0, 2 * Math.PI),
            w.stroke();
        break;
      case 1:
      case 7:
        for (z = 0; 5 > z; z++)
          (w.font = "16px Tahoma"),
            (l = d[z]),
            (l = q
              ? 0 === (z + 1) % 2
                ? l + 20
                : l - 10
              : 0 === (z + 1) % 2
              ? l - 10
              : l + 20),
            (e = r(z + 1)),
            7 == p && (e = e.toLowerCase()),
            w.fillText("(" + e + ")", c[z], l);
        break;
      case 2:
      case 8:
        for (z = 0; 5 > z; z++)
          (w.font = "17px Tahoma"),
            (l = d[z]),
            (l = q
              ? 0 === (z + 1) % 2
                ? l + 20
                : l - 10
              : 0 === (z + 1) % 2
              ? l - 10
              : l + 20),
            (e = r(z + 1)),
            8 == p && (e = e.toLowerCase()),
            w.fillText(e, c[z], l);
        break;
      case 4:
        for (z = 0; 5 > z; z++)
          (w.font = "18px Arial"),
            (l = d[z]),
            (l = q
              ? 0 === (z + 1) % 2
                ? l + 20
                : l - 10
              : 0 === (z + 1) % 2
              ? l - 10
              : l + 20),
            w.fillText("(" + (z + 1) + ")", c[z], l);
        break;
      case 5:
        for (z = 0; 5 > z; z++)
          (w.font = "18px Arial"),
            (l = d[z]),
            (l = q
              ? 0 === (z + 1) % 2
                ? l + 20
                : l - 10
              : 0 === (z + 1) % 2
              ? l - 10
              : l + 20),
            w.fillText(z + 1, c[z], l);
        break;
      case 3:
        for (z = 0; 5 > z; z++)
          (w.font = "18px Arial"),
            (l = d[z]),
            (l = q
              ? 0 === (z + 1) % 2
                ? l + 20
                : l - 10
              : 0 === (z + 1) % 2
              ? l - 10
              : l + 20),
            w.fillText(String(z + 1), c[z], l),
            w.beginPath(),
            (w.strokeStyle = "red"),
            w.arc(c[z], l - 6, 10, 0, 2 * Math.PI),
            w.stroke();
    }
    if (K)
      for (n = 0; 5 > n; n++)
        (w.fillStyle = "#f00"),
          w.fillRect(c[n] - 3, d[n] - 3, 5, 5),
          (w.fillStyle = a.Ia),
          w.fillRect(c[n] - 2, d[n] - 2, 3, 3);
    if (!h)
      for (g.textContent = [b.name, y].join("\n"), n = 0; 5 > n; n++)
        isNaN(c[n]) ||
          isNaN(d[n]) ||
          (this["button" + (n + 1)].setAttribute("cx", c[n]),
          this["button" + (n + 1)].setAttribute("cy", d[n]));
    a.Bg &&
      (b = (b.description || "").substr(0, 64)) &&
      (w.save(),
      w.translate(k, C),
      w.rotate(x),
      (w.textAlign = "left"),
      (w.textBaseline = "bottom"),
      (w.fillStyle = a.Ia),
      w.fillText(b, 1, -2),
      w.restore(),
      (this.R[0] = 0),
      (this.R[1] = 0),
      (this.R[2] = a.Aa),
      (this.R[3] = a.ta));
  };
})();
(function () {
  function v(a) {
    return !isNaN(a);
  }
  function r(a) {
    switch (a) {
      case 1:
        return "a";
      case 2:
        return "b";
      case 3:
        return "c";
    }
    return "";
  }
  function l(a) {
    if (this) {
      var b = this.w;
      if (b) {
        var c = b.element;
        if (c) {
          var d = n(c);
          d &&
            setTimeout(function () {
              d.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        R = b;
        H = null;
        this == b.button1 && (H = "point1");
        this == b.button2 && (H = "point2");
        this == b.button3 && (H = "point3");
        C(window, "mousemove", e);
        C(window, "mouseup", k);
      }
    }
  }
  function e(a) {
    var b = R.v,
      c = a.clientX,
      d = a.clientY;
    a = R.data.date;
    var f = R.data.value;
    -1 !== H.indexOf("point") &&
      ((c = b.Tb(c, d)),
      "point1" == H && ((a[0] = c[0]), (f[0] = c[1])),
      "point2" == H && ((a[1] = c[0]), (f[1] = c[1])),
      "point3" == H && ((a[2] = c[0]), (f[2] = c[1])));
    R.nc = H;
    R.Ha(b);
  }
  function k(a) {
    if (R.lc) {
      var b = R.input;
      b && b.focus();
    }
    R.lc = null;
    R.nc = !1;
    R.Ha(R.v);
    R.M("change", a);
    H = R = null;
    O(window, "mousemove", e);
    O(window, "mouseup", k);
  }
  function h(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function b(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), b.ic());
        clearTimeout(c);
      }, 50);
    clearTimeout(b.Kb);
  }
  function a(a) {
    var b = this.w;
    clearTimeout(b.Kb);
    b.Kb = setTimeout(function () {
      var c = F();
      ("input" == y(c) && "checkbox" == c.type && c.sf) ||
        ((b.focused = !1), b.ic(), b.M("blur", a));
    }, 0);
  }
  var g = E.va,
    d = E.oc,
    f = E.Qa,
    c = E.controls,
    z = c.L.Sc,
    A = c.L.Sc.Pa.ma,
    m = A.PF,
    u = c.L.Zb,
    q = E.ba.xa,
    w = E.Ma,
    p = g.sb,
    n = g.Xb,
    x = g.tb,
    C = d.i,
    O = d.hc,
    I = g.hb,
    G = g.$a,
    F = g.Wf,
    y = g.md,
    M = [
      { value: 0, label: "Grand Supercycle" },
      { value: 1, label: "Supercycle" },
      { value: 2, label: "Cycle" },
      { value: 3, label: "Primary" },
      { value: 4, label: "Intermediate" },
      {
        value: 5,
        label: "Minor",
      },
      { value: 6, label: "Minute" },
      { value: 7, label: "Minuette" },
      { value: 8, label: "Subminuette" },
    ],
    D = [],
    L = [],
    B = [],
    Q = [],
    N,
    K,
    P,
    T,
    R,
    H,
    S = (z.oE.H8 = function (a) {
      S.G.constructor.apply(this, arguments);
      this.J = !0;
    });
  z.cc(S);
  S.type = "Elliott Corrective Wave ";
  S.Ec = function (a, b, c) {
    var d = z.Kf.Ec();
    d.type = S.type;
    d.name = q.yK + " " + c;
    d.date = [a];
    d.value = [b];
    d.degree = 7;
    d.drawlines = !1;
    return d;
  };
  S.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    S.G.Qd.call(this) && this.ic(this);
    return this;
  };
  S.prototype.gb = function () {
    this.R = null;
    var c = this.input;
    c && ((c.w = null), O(c, "focus", b), O(c, "blur", a), (this.input = null));
    for (
      var c = ["button1", "button2", "button3"], d = 0, f = c.length;
      d < f;
      d++
    ) {
      var e = this[c[d]];
      e &&
        ((e.w = null),
        O(e, "mousedown", l),
        O(e, "dblclick", h),
        (this[c[d]] = null));
    }
    this.text = this.Pb = null;
    S.G.gb.apply(this, arguments);
    return this;
  };
  S.prototype.Mf = function (a, b) {
    var c = this,
      d = c.button3,
      f = c.input,
      e = {};
    e.clientX = a.clientX;
    e.clientY = a.clientY;
    e.currentTarget = d;
    c.J = !1;
    c.lc = !0;
    c.focused = !0;
    var g = 1,
      n;
    C(
      b.$,
      "mousedown",
      (n = function (a) {
        c.lc = !0;
        c.J = !0;
        a = c.v.Tb(a.clientX, a.clientY);
        var p = c.data;
        p.date[g] = a[0];
        p.value[g] = a[1];
        g++;
        3 <= g &&
          (l.call(d, e),
          f &&
            f.focus &&
            setTimeout(function () {
              f.focus();
            }, 0),
          (c.J = !0),
          O(b.$, "mousedown", n));
      })
    );
    return c;
  };
  S.prototype.kb = function (a) {
    if (!D.length)
      for (var b = { position: "absolute" }, d = 0; 3 > d; d++)
        (D[d] = w(c.input.Date)
          .b(b)
          .b({ top: 16 + 34 * d + "px", left: "84px", width: "130px" })),
          (L[d] = w(c.page.I, "vertical-line-time1")
            .Text(q.gd + ":")
            .b(b)
            .b({
              top: 20 + 34 * d + "px",
              width: "78px",
              "text-align": "right",
            })),
          (B[d] = w(c.input.Number)
            .o("vertical-line-value" + d)
            .b(b)
            .b({ top: 16 + 34 * d + "px", left: "280px", width: "100px" })),
          (Q[d] = w(c.page.I, B[d].o())
            .Text(q.Ld + ":")
            .b(b)
            .b({
              top: 20 + 34 * d + "px",
              left: "216px",
              width: "58px",
              "text-align": "right",
            }));
    for (
      var f = this.data,
        e = this.v.j,
        g = 6e4 * new Date().getTimezoneOffset(),
        d = 0;
      3 > d;
      d++
    )
      D[d].f(f.date[d] + g),
        B[d].f(f.value[d]),
        B[d].T(e).Y(Math.pow(10, -e)),
        a.c(D[d]).c(L[d]).c(B[d]).c(Q[d]);
    N ||
      ((N = w(c.input.of)
        .o("degree-method")
        .de(M)
        .b({
          position: "absolute",
          left: "84px",
          top: "121px",
          width: "296px",
        })),
      (K = w(c.page.I, N.o())
        .Text(q.aH + ":")
        .b({
          position: "absolute",
          top: "124px",
          width: "80px",
          "text-align": "right",
        })),
      (P = w(c.input.pa)
        .o("vertical-line-ray-right")
        .b(b)
        .b({ top: "153px", left: "84px" })),
      (T = w(c.page.I, P.o())
        .Text(q.vF)
        .b(b)
        .b({ top: "152px", left: "101px", "white-space": "nowrap" })));
    P.s(!!f.drawlines);
    N.f(parseInt(f.degree, 10));
    a.c(N).c(K).c(P).c(T);
    return 300;
  };
  S.prototype.lb = function () {
    for (
      var a = 6e4 * new Date().getTimezoneOffset(), b = this.data, c = 0;
      3 > c;
      c++
    )
      (b.date[c] = D[c].f() - a), (b.value[c] = B[c].f());
    b.drawlines = P.s();
    b.degree = N.f();
    return this;
  };
  S.prototype.Vf = function () {
    var c = this.Pb,
      d = this.Nb,
      f = this.input,
      e = this.element,
      g = this.text;
    c || ((c = this.Pb = p("title", "http://www.w3.org/2000/svg")), x(d, c));
    f ||
      ((f = this.input = p("input")),
      (f.type = "checkbox"),
      (f.w = this),
      G(f, { position: "absolute", top: "-3000px", left: "-3000px" }),
      C(f, "focus", b),
      C(f, "blur", a),
      x(e, f));
    c = ["button1", "button2", "button3"];
    for (f = 0; 5 > f; f++) {
      var n = this[c[f]];
      n ||
        ((n = this[c[f]] = p("circle", "http://www.w3.org/2000/svg")),
        n.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
        n.setAttribute("r", "15"),
        (n.w = this),
        C(n, "mousedown", l),
        C(n, "dblclick", h),
        x(d, n));
    }
    g ||
      ((g = this.text = p("span")),
      I(g, "val"),
      G(g, {
        position: "absolute",
        "white-space": "nowrap",
        width: "80px",
        "text-align": "right",
      }),
      x(e, g));
  };
  S.prototype.ic = function () {
    this.Vf();
    var a = this.v,
      b = this.data,
      c = this.canvas,
      d = this.Nb,
      e = this.text,
      g = this.Pb,
      n = a.Aa,
      p = a.ta,
      h = u.sc || b.disabled,
      x = b.date,
      q = b.value,
      w = c.getContext("2d"),
      k = a.pb(x[0], !0);
    a.pb(x[1], !0);
    var y = a.pb(x[2], !0),
      C = q[0],
      y = A.qj(k, C, y, q[2], a.j),
      K = this.focused;
    G(c, "z-index", b.background ? "0" : "");
    G(e, "display", "none");
    d.setAttribute("visibility", h ? "hidden" : "visible");
    parseInt(c.style.width, 10) != n &&
      (f.sa
        ? c.setAttribute("width", n * f.devicePixelRatio)
        : c.setAttribute("width", n),
      G(c, "width", n + "px"));
    parseInt(c.style.height, 10) != p &&
      (f.sa
        ? c.setAttribute("height", p * f.devicePixelRatio)
        : c.setAttribute("height", p),
      G(c, "height", p + "px"));
    w.clearRect(0, 0, n, p);
    f.sa &&
      (w.setTransform(1, 0, 0, 1, 0, 0),
      w.scale(f.devicePixelRatio, f.devicePixelRatio));
    c = [];
    d = [];
    for (n = 0; 3 > n; n++)
      (e = a.Da(x[n], q[n])), (c[n] = e[0]), (d[n] = e[1]);
    var B, z;
    this.R = [
      (B = Math.min.apply(Math, c.filter(v)) - 20),
      (z = Math.min.apply(Math, d.filter(v)) - 40),
      Math.max.apply(Math, c.filter(v)) - B + 20,
      Math.max.apply(Math, d.filter(v)) - z + 40,
    ];
    x = A.Hg(c[0], d[0], c[1], d[1]);
    if (b.drawlines) {
      w.beginPath();
      w.strokeStyle = "#ff0000";
      for (n = 0; 3 > n; n++) {
        q = c[n];
        B = d[n];
        z = c[n + 1];
        var l = d[n + 1];
        0 > B
          ? ((e = m(0, [q, B], [z, l])), (q = e[0]), (B = 0))
          : B > p && ((e = m(p, [q, B], [z, l])), (q = e[0]), (B = p));
        0 > l
          ? ((e = m(0, [q, B], [z, l])), (z = e[0]), (l = 0))
          : l > p && ((e = m(p, [q, B], [z, l])), (z = e[0]), (l = p));
        w.moveTo(q, B);
        w.lineTo(z, l);
      }
      w.stroke();
    }
    q = b.degree;
    p = d[0] < d[1];
    w.fillStyle = "red";
    w.textAlign = "center";
    switch (+q) {
      case 0:
      case 6:
        for (q = 0; 3 > q; q++)
          (w.font = "16px Tahoma"),
            (e = d[q]),
            (e = p
              ? 0 === (q + 1) % 2
                ? e + 20
                : e - 10
              : 0 === (q + 1) % 2
              ? e - 10
              : e + 20),
            (n = r(q + 1)),
            w.fillText(n, c[q], e),
            w.beginPath(),
            (w.strokeStyle = "red"),
            w.arc(c[q], e - 6, 10, 0, 2 * Math.PI),
            w.stroke();
        break;
      case 1:
      case 7:
        for (q = 0; 3 > q; q++)
          (w.font = "16px Tahoma"),
            (e = d[q]),
            (e = p
              ? 0 === (q + 1) % 2
                ? e + 20
                : e - 10
              : 0 === (q + 1) % 2
              ? e - 10
              : e + 20),
            (n = r(q + 1)),
            w.fillText("(" + n + ")", c[q], e);
        break;
      case 2:
      case 8:
        for (q = 0; 3 > q; q++)
          (w.font = "17px Tahoma"),
            (e = d[q]),
            (e = p
              ? 0 === (q + 1) % 2
                ? e + 20
                : e - 10
              : 0 === (q + 1) % 2
              ? e - 10
              : e + 20),
            (n = r(q + 1)),
            w.fillText(n, c[q], e);
        break;
      case 4:
        for (q = 0; 3 > q; q++)
          (w.font = "18px Arial"),
            (e = d[q]),
            (e = p
              ? 0 === (q + 1) % 2
                ? e + 20
                : e - 10
              : 0 === (q + 1) % 2
              ? e - 10
              : e + 20),
            w.fillText("(" + r(q + 1).toUpperCase() + ")", c[q], e);
        break;
      case 5:
        for (q = 0; 3 > q; q++)
          (w.font = "18px Arial"),
            (e = d[q]),
            (e = p
              ? 0 === (q + 1) % 2
                ? e + 20
                : e - 10
              : 0 === (q + 1) % 2
              ? e - 10
              : e + 20),
            w.fillText(r(q + 1).toUpperCase(), c[q], e);
        break;
      case 3:
        for (q = 0; 3 > q; q++)
          (w.font = "18px Arial"),
            (e = d[q]),
            (e = p
              ? 0 === (q + 1) % 2
                ? e + 20
                : e - 10
              : 0 === (q + 1) % 2
              ? e - 10
              : e + 20),
            w.fillText(r(q + 1).toUpperCase(), c[q], e),
            w.beginPath(),
            (w.strokeStyle = "red"),
            w.arc(c[q], e - 6, 10, 0, 2 * Math.PI),
            w.stroke();
    }
    if (K)
      for (n = 0; 3 > n; n++)
        (w.fillStyle = "#f00"),
          w.fillRect(c[n] - 3, d[n] - 3, 5, 5),
          (w.fillStyle = a.Ia),
          w.fillRect(c[n] - 2, d[n] - 2, 3, 3);
    if (!h)
      for (g.textContent = [b.name, y].join("\n"), n = 0; 3 > n; n++)
        isNaN(c[n]) ||
          isNaN(d[n]) ||
          (this["button" + (n + 1)].setAttribute("cx", c[n]),
          this["button" + (n + 1)].setAttribute("cy", d[n]));
    a.Bg &&
      (b = (b.description || "").substr(0, 64)) &&
      (w.save(),
      w.translate(k, C),
      w.rotate(x),
      (w.textAlign = "left"),
      (w.textBaseline = "bottom"),
      (w.fillStyle = a.Ia),
      w.fillText(b, 1, -2),
      w.restore(),
      (this.R[0] = 0),
      (this.R[1] = 0),
      (this.R[2] = a.Aa),
      (this.R[3] = a.ta));
  };
})();
(function () {
  function v(a) {
    if (this) {
      var b = this.w;
      if (b) {
        var c = b.element;
        if (c) {
          var d = w(c);
          d &&
            setTimeout(function () {
              d.focus();
            }, 0);
        }
        if (a.button) return !0;
        a.stopPropagation && a.stopPropagation();
        R = b;
        H = "line";
        this == b.xb && (H = "point1");
        this == b.Ra && (H = "point2");
        if ("line" == H) {
          b = c.Ge || u(c);
          c.Ge = b;
          var c = R.data.date,
            f = R.data.value,
            e = R.v,
            g = e.Da(c[0], f[0]);
          S = b[0] + g[0];
          Y = b[1] + g[1];
          g = e.Da(c[1], f[1]);
          Z = b[0] + g[0];
          V = b[1] + g[1];
          W = a.clientX;
          ea = a.clientY;
        }
        n(window, "mousemove", r);
        n(window, "mouseup", l);
      }
    }
  }
  function r(a) {
    var b = R.v,
      c = a.clientX;
    a = a.clientY;
    var d = R.data.date,
      f = R.data.value,
      e;
    -1 !== H.indexOf("point") &&
      ((e = b.Tb(c, a)),
      "point1" == H && ((d[0] = e[0]), (f[0] = e[1])),
      "point2" == H && ((d[1] = e[0]), (f[1] = e[1])));
    "line" == H &&
      ((e = b.Tb(S + c - W, Y + a - ea)),
      (d[0] = e[0]),
      (f[0] = e[1]),
      (e = b.Tb(Z + (c - W), V + (a - ea))),
      (d[1] = e[0]),
      (f[1] = e[1]));
    R.nc = H;
    R.Ha(b);
  }
  function l(a) {
    if (R.lc) {
      var b = R.input;
      b && b.focus();
    }
    R.lc = null;
    R.nc = !1;
    R.Ha(R.v);
    R.M("change", a);
    ea = V = Y = W = Z = S = H = R = null;
    x(window, "mousemove", r);
    x(window, "mouseup", l);
  }
  function e(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function k(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && ((b.focused = !0), b.M("focus", a), b.ic());
        clearTimeout(c);
      }, 50);
    clearTimeout(b && b.Kb);
  }
  function h(a) {
    var b = this.w;
    b &&
      (clearTimeout(b && b.Kb),
      (b.Kb = setTimeout(function () {
        var c = G();
        ("input" == F(c) && "checkbox" == c.type && c.sf) ||
          ((b.focused = !1), b.ic(), b.M("blur", a));
      }, 0)));
  }
  var b = E.va,
    a = E.oc,
    g = E.Qa,
    d = E.controls,
    f = d.L.Sc,
    c = d.L.Sc.Pa.ma,
    z = d.L.Zb,
    A = E.ba.xa,
    m = E.Ma,
    u = E.ma.Vh,
    q = b.sb,
    w = b.Xb,
    p = b.tb,
    n = a.i,
    x = a.hc,
    C = b.hb,
    O = b.$a,
    I = b.Cd,
    G = b.Wf,
    F = b.md,
    y,
    M,
    D,
    L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha = (f.TM.$ba = function (a) {
      ha.G.constructor.apply(this, arguments);
    });
  f.cc(ha, f.vh.dt);
  ha.type = "Rectangle";
  ha.Ec = function (a, b, c) {
    var d = f.Kf.Ec();
    d.type = ha.type;
    d.name = A.GK + " " + c;
    d.date = [a, a];
    d.value = [b, b];
    d.fill = !0;
    return d;
  };
  ha.prototype.Mf = function (a) {
    var b = this.Ra,
      c = this.input,
      d = {};
    d.clientX = a.clientX;
    d.clientY = a.clientY;
    d.currentTarget = b;
    this.lc = !0;
    v.call(b, d);
    c &&
      c.focus &&
      setTimeout(function () {
        c.focus();
      }, 0);
    return this;
  };
  ha.prototype.gb = function () {
    var a = this.og;
    a &&
      ((a.w = null),
      x(a, "mousedown", v),
      x(a, "dblclick", e),
      (this.og = null));
    ha.G.gb.apply(this, arguments);
    return this;
  };
  ha.prototype.kb = function (a) {
    if (!y) {
      var b = { position: "absolute" };
      y = m(d.input.Date).b(b).b({ top: "16px", left: "84px", width: "130px" });
      M = m(d.page.I, "vertical-line-time1")
        .Text(A.gd + ":")
        .b(b)
        .b({ top: "20px", width: "78px", "text-align": "right" });
      D = m(d.input.Date).b(b).b({ top: "48px", left: "84px", width: "130px" });
      L = m(d.page.I, "vertical-line-time2")
        .Text(A.gd + ":")
        .b(b)
        .b({ top: "52px", width: "78px", "text-align": "right" });
      B = m(d.input.Number)
        .o("vertical-line-value1")
        .b(b)
        .b({ top: "16px", left: "280px", width: "100px" });
      Q = m(d.page.I, "vertical-line-value1")
        .Text(A.Ld + ":")
        .b(b)
        .b({
          top: "20px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      N = m(d.input.Number)
        .o("vertical-line-value2")
        .b(b)
        .b({ top: "48px", left: "280px", width: "100px" });
      K = m(d.page.I, "vertical-line-value2")
        .Text(A.Ld + ":")
        .b(b)
        .b({
          top: "52px",
          left: "216px",
          width: "58px",
          "text-align": "right",
        });
      P = m(d.input.pa)
        .o("fill--control")
        .b(b)
        .b({ top: "84px", left: "84px" });
      T = m(d.page.I, "fill--control")
        .Text(A.hu)
        .b(b)
        .b({ top: "83px", left: "101px", "white-space": "nowrap" });
    }
    var b = this.data,
      c = this.v.j,
      f = 6e4 * new Date().getTimezoneOffset(),
      e = b.value[0],
      g = b.value[1],
      n = b.date[0],
      p = b.date[1],
      p = p + f;
    y.f(n + f);
    D.f(p);
    B.f(e).T(c).Y(Math.pow(10, -c));
    N.f(g).T(c).Y(Math.pow(10, -c));
    P.s(!!b.fill);
    a.c(y).c(M).c(D).c(L).c(B).c(Q).c(N).c(K).c(P).c(T);
    return this;
  };
  ha.prototype.lb = function () {
    var a = 6e4 * new Date().getTimezoneOffset(),
      b = this.data;
    b.date[0] = y.f() - a;
    b.date[1] = D.f() - a;
    b.value[0] = B.f();
    b.value[1] = N.f();
    b.fill = P.s();
    return this;
  };
  ha.prototype.ic = function () {
    this.Vf();
    var a = this.canvas,
      b = this.Nb,
      d = this.v,
      f = this.data,
      e = this.text,
      n = this.Pb,
      p = this.qb,
      h = this.xb,
      q = this.Ra,
      x = f.date,
      m = f.value,
      w = f.fill,
      k = d.Aa,
      y = d.ta,
      C = z.sc || f.disabled,
      u = a.getContext("2d"),
      B = d.pb(x[0], !0),
      K = d.pb(x[1], !0),
      l = m[0],
      A = m[1],
      G = c.qj(B, l, K, A, d.j),
      N = this.nc,
      F = this.focused,
      B = this.R;
    O(a, "z-index", f.background ? "0" : "");
    O(e, "display", "none");
    b.setAttribute("visibility", C ? "hidden" : "visible");
    parseInt(a.style.width, 10) != k &&
      (g.sa
        ? a.setAttribute("width", k * g.devicePixelRatio)
        : a.setAttribute("width", k),
      O(a, "width", k + "px"));
    parseInt(a.style.height, 10) != y &&
      (g.sa
        ? a.setAttribute("height", y * g.devicePixelRatio)
        : a.setAttribute("height", y),
      O(a, "height", y + "px"));
    B ? u.clearRect.apply(u, B) : u.clearRect(0, 0, k, k);
    g.sa &&
      (u.setTransform(1, 0, 0, 1, 0, 0),
      u.scale(g.devicePixelRatio, g.devicePixelRatio));
    a = d.Da(x[0], m[0]);
    B = a[0];
    l = a[1];
    a = d.Da(x[1], m[1]);
    K = a[0];
    A = a[1];
    x = B;
    m = K;
    a = B;
    a = l;
    b = A;
    !C &&
      (h.setAttribute("cx", x),
      h.setAttribute("cy", a),
      q.setAttribute("cx", m),
      q.setAttribute("cy", b),
      (a = c.Ti(B, l, K, A))) &&
      (this.og.setAttribute("cx", a[0]), this.og.setAttribute("cy", a[1]));
    h = c.Hg(B, l, K, A);
    w
      ? ((u.fillStyle = "rgba(255,0,0,0.5)"), u.fillRect(B, l, K - B, A - l))
      : (u.beginPath(),
        (u.strokeStyle = "red"),
        u.rect(B, l, K - B, A - l),
        u.stroke());
    C ||
      ((n.textContent = [f.name, G].join("\n")),
      (n = [
        [B, l],
        [K, l],
        [K, A],
        [B, A],
        [B, l],
      ]
        .map(function (a) {
          return a.join(",");
        })
        .join(" ")),
      p.setAttribute("points", n));
    F &&
      ((u.fillStyle = "#f00"),
      u.fillRect(B - 3, l - 3, 5, 5),
      u.fillRect(K - 3, A - 3, 5, 5),
      (u.fillStyle = d.Ia),
      u.fillRect(B - 2, l - 2, 3, 3),
      u.fillRect(K - 2, A - 2, 3, 3),
      (a = c.Ti(B, l, K, A))) &&
      ((u.fillStyle = "#f00"),
      u.fillRect(a[0] - 3, a[1] - 3, 5, 5),
      (u.fillStyle = d.Ia),
      u.fillRect(a[0] - 2, a[1] - 2, 3, 3));
    N &&
      "line" != N &&
      (I(e, G),
      (a = ("point1" == N ? B : K) - 3 - parseInt(e.style.width, 10)),
      O(e, {
        display: "block",
        left: a + "px",
        top: ("point1" == N ? l : A) + 3 + "px",
        color: d.Ia,
      }));
    this.R = [
      Math.min(B, K) - 15,
      Math.min(l, A) - 5,
      Math.max(B, K) - Math.min(B, K) + 20,
      Math.max(l, A) - Math.min(l, A) + 20,
    ];
    d.Bg &&
      (f = (f.description || "").substr(0, 64)) &&
      (u.save(),
      u.translate(B, l),
      u.rotate(h),
      (u.textAlign = "left"),
      (u.textBaseline = "bottom"),
      (u.fillStyle = d.Ia),
      u.fillText(f, 1, -2),
      u.restore(),
      (this.R[0] = 0),
      (this.R[1] = 0),
      (this.R[2] = d.Aa),
      (this.R[3] = d.ta));
  };
  ha.prototype.Vf = function () {
    var a = this.Nb,
      b = this.text,
      c = this.Pb,
      d = this.qb,
      f = this.input,
      g = this.xb,
      x = this.element,
      m = this.Ra;
    c || ((c = this.Pb = q("title", "http://www.w3.org/2000/svg")), p(a, c));
    d ||
      ((d = this.qb = q("polyline", "http://www.w3.org/2000/svg")),
      d.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (d.w = this),
      n(d, "mousedown", v),
      n(d, "dblclick", e),
      p(a, d));
    f ||
      ((f = this.input = q("input")),
      (f.type = "checkbox"),
      (f.w = this),
      O(f, { position: "absolute", top: "-3000px", left: "-3000px" }),
      n(f, "focus", k),
      n(f, "blur", h),
      p(x, f));
    g ||
      ((g = this.xb = q("circle", "http://www.w3.org/2000/svg")),
      g.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      g.setAttribute("r", "10"),
      (g.w = this),
      n(g, "mousedown", v),
      n(g, "dblclick", e),
      p(a, g));
    m ||
      ((m = this.Ra = q("circle", "http://www.w3.org/2000/svg")),
      m.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      m.setAttribute("r", "10"),
      (m.w = this),
      n(m, "mousedown", v),
      n(m, "dblclick", e),
      p(a, m));
    c = this.og;
    c ||
      ((c = this.og = q("circle", "http://www.w3.org/2000/svg")),
      c.setAttribute("style", "stroke:none;fill:black;fill-opacity:0;"),
      c.setAttribute("r", "10"),
      (c.w = this),
      n(c, "mousedown", v),
      n(c, "dblclick", e),
      p(a, c));
    b ||
      ((b = this.text = q("span")),
      C(b, "val"),
      O(b, {
        position: "absolute",
        "white-space": "nowrap",
        width: "80px",
        "text-align": "right",
      }),
      p(x, b));
  };
})();
(function () {
  function v() {
    var d = this.v,
      f = this.data,
      p = this.canvas,
      h = this.element,
      x = this.Nb,
      m = this.Pb,
      k = this.ld,
      u = this.bc,
      y = this.xf,
      C = this.input,
      z = this.nc,
      A = this.focused,
      G = this.R,
      F = d.se,
      D = d.Cj,
      L = q.sc || f.disabled,
      v = p.getContext("2d");
    m || ((m = this.Pb = w("title", "http://www.w3.org/2000/svg")), n(x, m));
    k ||
      ((k = this.ld = w("line", "http://www.w3.org/2000/svg")),
      k.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (k.w = this),
      I(k, "mousedown", e),
      I(k, "dblclick", b),
      n(x, k));
    u ||
      ((u = this.bc = w("line", "http://www.w3.org/2000/svg")),
      u.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (u.w = this),
      I(u, "mousedown", e),
      I(u, "dblclick", b),
      n(x, u));
    y ||
      ((y = this.xf = w("line", "http://www.w3.org/2000/svg")),
      y.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (y.w = this),
      I(y, "mousedown", e),
      I(y, "dblclick", b),
      n(x, y));
    C ||
      ((C = this.input = w("input")),
      (C.type = "checkbox"),
      (C.w = this),
      O(C, { position: "absolute", top: "-3000px", left: "-3000px" }),
      I(C, "focus", a),
      I(C, "blur", g),
      n(h, C));
    x.setAttribute("visibility", L ? "hidden" : "visible");
    L ||
      (k.setAttribute("x1", 0),
      k.setAttribute("y1", 0),
      k.setAttribute("x2", 0),
      k.setAttribute("y2", 0),
      u.setAttribute("x1", 0),
      u.setAttribute("y1", 0),
      u.setAttribute("x2", 0),
      u.setAttribute("y2", 0),
      y.setAttribute("x1", 0),
      y.setAttribute("y1", 0),
      y.setAttribute("x2", 0),
      y.setAttribute("y2", 0));
    parseInt(p.style.width, 10) != F &&
      (c.sa
        ? p.setAttribute("width", F * c.devicePixelRatio)
        : p.setAttribute("width", F),
      O(p, "width", F + "px"));
    parseInt(p.style.height, 10) != D &&
      (c.sa
        ? p.setAttribute("height", D * c.devicePixelRatio)
        : p.setAttribute("height", D),
      O(p, "height", D + "px"));
    void 0 !== G && v.clearRect.apply(v, G);
    c.sa &&
      (v.setTransform(1, 0, 0, 1, 0, 0),
      v.scale(c.devicePixelRatio, c.devicePixelRatio));
    if (
      !(
        f.Ej ||
        ((v.font = "10px Tahoma, sans-serif"),
        (v.textAlign = "left"),
        (v.textBaseline = "bottom"),
        (p = Number.MAX_VALUE),
        (h = 0),
        (C = f.N),
        (x = d.Da(0, C)[1]),
        0 > x || x > d.ta - 1)
      )
    ) {
      h = Math.max(h, x);
      p = Math.min(p, x);
      v.beginPath();
      v.strokeStyle = d.pw;
      v.setLineDash([9, 6, 3, 6]);
      v.moveTo(0, x + 0.5);
      v.lineTo(d.Aa, x + 0.5);
      v.stroke();
      L ||
        ((m.textContent = r(this.data)),
        k.setAttribute("x1", 0),
        k.setAttribute("y1", x),
        k.setAttribute("x2", d.Aa),
        k.setAttribute("y2", x));
      v.fillStyle = d.Ia;
      v.fillText(r(this.data), 5.5, x - 2 + 0.5);
      (C = f.C) &&
        C != f.mi &&
        ((x = d.Da(0, C)[1]),
        0 < x &&
          x < d.ta - 1 &&
          ((h = Math.max(h, x)),
          (p = Math.min(p, x)),
          v.beginPath(),
          (v.strokeStyle = d.jk),
          v.setLineDash([9, 6, 3, 6]),
          v.moveTo(0, x + 0.5),
          v.lineTo(d.Aa, x + 0.5),
          v.stroke(),
          (v.fillStyle = d.Ia),
          (v.textBaseline = "bottom"),
          v.fillText(l(f, "sl"), 5, x - 2),
          L ||
            (u.setAttribute("x1", 0),
            u.setAttribute("y1", x),
            u.setAttribute("x2", d.Aa),
            u.setAttribute("y2", x))));
      if ((C = f.mi))
        if (
          ((x = d.Da(0, C)[1]),
          0 < x &&
            x < d.ta - 1 &&
            ((h = Math.max(h, x)),
            (p = Math.min(p, x)),
            v.beginPath(),
            (v.strokeStyle = d.jk),
            v.setLineDash([9, 6, 3, 6]),
            v.moveTo(0, x + 0.5),
            v.lineTo(d.Aa, x + 0.5),
            v.stroke(),
            "price" != z &&
              ((v.fillStyle = d.Ia),
              (v.textBaseline = "bottom"),
              v.fillText(l(f, "sl", "sl" == z), 5, x - 2)),
            (A && "sl" == z) || "price" == z))
        )
          (m = C.toFixed(d.j)),
            (v.fillStyle = d.jk),
            v.fillRect(
              d.Aa + 3,
              Math.max(x - 6, 0),
              v.measureText(m).width + 6,
              13
            ),
            (v.fillStyle = d.dj),
            (v.textBaseline = "middle"),
            v.fillText(m, d.Aa + 6, Math.max(x + 1, 7));
      (C = f.D) &&
        C != f.ni &&
        ((x = d.Da(0, C)[1]),
        0 < x &&
          x < d.ta - 1 &&
          ((h = Math.max(h, x)),
          (p = Math.min(p, x)),
          v.beginPath(),
          (v.strokeStyle = d.jk),
          v.setLineDash([9, 6, 3, 6]),
          v.moveTo(0, x + 0.5),
          v.lineTo(d.Aa, x + 0.5),
          v.stroke(),
          (v.fillStyle = d.Ia),
          (v.textBaseline = "bottom"),
          v.fillText(l(f, "tp"), 5, x - 2),
          L ||
            (y.setAttribute("x1", 0),
            y.setAttribute("y1", x),
            y.setAttribute("x2", d.Aa),
            y.setAttribute("y2", x))));
      if ((C = f.ni))
        if (
          ((x = d.Da(0, C)[1]),
          0 < x &&
            x < d.ta - 1 &&
            ((h = Math.max(h, x)),
            (p = Math.min(p, x)),
            v.beginPath(),
            (v.strokeStyle = d.jk),
            v.setLineDash([9, 6, 3, 6]),
            v.moveTo(0, x + 0.5),
            v.lineTo(d.Aa, x + 0.5),
            v.stroke(),
            "price" != z &&
              ((v.fillStyle = d.Ia),
              (v.textBaseline = "bottom"),
              v.fillText(l(f, "tp", "tp" == z), 5, x - 2)),
            (A && "tp" == z) || "price" == z))
        )
          (m = C.toFixed(d.j)),
            (v.fillStyle = d.jk),
            v.fillRect(
              d.Aa + 3,
              Math.max(x - 6, 0),
              v.measureText(m).width + 6,
              13
            ),
            (v.fillStyle = d.dj),
            (v.textBaseline = "middle"),
            v.fillText(m, d.Aa + 6, Math.max(x + 1, 7));
      "price" == z &&
        (C = f.Cr) &&
        ((x = d.Da(0, C)[1]),
        0 < x &&
          x < d.ta - 1 &&
          ((h = Math.max(h, x)),
          (p = Math.min(p, x)),
          v.beginPath(),
          (v.strokeStyle = d.pw),
          v.setLineDash([9, 6, 3, 6]),
          v.moveTo(0, x + 0.5),
          v.lineTo(d.Aa, x + 0.5),
          v.stroke(),
          (v.fillStyle = d.Ia),
          (v.textBaseline = "bottom"),
          v.fillText(r(f, !0), 5.5, x - 2 + 0.5),
          (m = C.toFixed(d.j)),
          (v.fillStyle = d.pw),
          v.fillRect(
            d.Aa + 3,
            Math.max(x - 6, 0),
            v.measureText(m).width + 6,
            13
          ),
          (v.fillStyle = d.dj),
          (v.textBaseline = "middle"),
          v.fillText(m, d.Aa + 6, Math.max(x + 1, 7))));
      this.R = [0, p, d.se, h - p];
      this.R[1] -= 14;
      this.R[3] += 24;
    }
  }
  function r(a, b) {
    var c = A.data.eb,
      d = [];
    d.push(a.gk(!1));
    if (b) {
      var f = a.l;
      if (f) {
        var e = u.O.Ka(f);
        if (e) {
          var e = m.pd.We(a.Cr, e.Ta, e.j),
            g = {};
          (f = u.wa.u(f)) &&
            m.ci.QB(
              a.zb() ? c.Ja : c.Va,
              a.l,
              a.wc,
              a.zb() ? f.dc : f.vb,
              e,
              g
            ) &&
            d.push(
              ", ",
              g.ya.toFixed(u.H.yc),
              " ",
              u.H.hf,
              ", ",
              g.DE,
              " pip(s)"
            );
        }
      }
    }
    return d.join("");
  }
  function l(a, b, c) {
    var d = A.data.eb,
      f = [];
    f.push("#", a.Xf());
    f.push(" ", b);
    if (c && (c = a.l)) {
      var e = u.O.Ka(c);
      if (e) {
        b = m.pd.We("sl" == b ? a.mi : a.ni, e.Ta, e.j);
        e = a.N;
        if (a.yb == d.hd || a.yb == d.jd) e = a.Na;
        u.wa.u(c) &&
          ((c = {}),
          m.ci.QB(a.zb() ? d.Ja : d.Va, a.l, a.wc, e, b, c) &&
            f.push(
              ", ",
              c.ya.toFixed(u.H.yc),
              " ",
              u.H.hf,
              ", ",
              c.DE,
              " pip(s)"
            ));
      }
    }
    return f.join("");
  }
  function e(a) {
    var b = this;
    if (b) {
      var c = b.w;
      if (c) {
        var d = c.element;
        if (d) {
          var f = p(d);
          f &&
            setTimeout(function () {
              b == c.bc && (f.gp = "sl");
              b == c.xf && (f.gp = "tp");
              f.focus();
            }, 0);
        }
        if (a.button || !m.P.ih()) return !0;
        a.stopPropagation && a.stopPropagation();
        M = "price";
        y = a.clientY;
        F = c;
        b == c.bc && (M = "sl");
        b == c.xf && (M = "tp");
        a = F.v;
        var d = F.data,
          e;
        d.Cr = d.N || 0;
        d.mi = d.C || 0;
        d.ni = d.D || 0;
        e = d.N;
        "sl" == M && d.C && (e = d.C);
        "tp" == M && d.D && (e = d.D);
        d = a.Da(0, e)[1];
        D = y - d - a.hE;
        F.nc = M;
        I(window, "mousemove", k);
        I(window, "mouseup", h);
      }
    }
  }
  function k(a) {
    var b = F.v,
      c = F.data;
    c &&
      ((a = b.Tb(0, a.clientY - D)[1]),
      "sl" == M && (c.mi = a),
      "tp" == M && (c.ni = a),
      "price" == M &&
        ((c.Cr = a),
        c.C && (c.mi = a + (c.C - c.N)),
        c.D && (c.ni = a + (c.D - c.N))));
    F.Ha(b);
  }
  function h(a) {
    1 < Math.abs(a.clientY - y) && F.M("change", a);
    F.data.Cr = null;
    F.data.mi = null;
    F.data.ni = null;
    F.nc = !1;
    F.Ha(F.v);
    M = D = y = F = null;
    G(window, "mousemove", k);
    G(window, "mouseup", h);
  }
  function b(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function a(a) {
    var b = this,
      c = b.w;
    if (c)
      var d = setTimeout(function () {
        c &&
          c.v &&
          ((c.focused = !0), c.M("focus", a, b.gp), v.call(c), (b.gp = null));
        clearTimeout(d);
      }, 50);
    clearTimeout(c.Kb);
  }
  function g(a) {
    var b = this.w;
    clearTimeout(b.Kb);
    b.Kb = setTimeout(function () {
      var c = x();
      ("input" == C(c) && "checkbox" == c.type && c.sf) ||
        ((b.focused = !1), v.call(b), b.M("blur", a));
    }, 0);
  }
  var d = E.va,
    f = E.oc,
    c = E.Qa,
    z = E.controls.L.Sc,
    A = E.V,
    m = A.control,
    u = A.la,
    q = E.controls.L.Zb,
    w = d.sb,
    p = d.Xb,
    n = d.tb,
    x = d.Wf,
    C = d.md,
    O = d.$a,
    I = f.i,
    G = f.hc,
    F,
    y,
    M,
    D,
    L = (z.qW = function (a) {
      L.G.constructor.apply(this, [a, !0]);
    });
  z.cc(L);
  L.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    v.call(this);
    return this;
  };
  L.prototype.gb = function () {
    this.R = null;
    var c = this.input;
    c && ((c.w = null), G(c, "focus", a), G(c, "blur", g), (this.input = null));
    var d = this.ld;
    c &&
      ((d.w = null),
      G(d, "mousedown", e),
      G(d, "dblclick", b),
      (this.ld = null));
    d = this.bc;
    c &&
      ((d.w = null),
      G(d, "mousedown", e),
      G(d, "dblclick", b),
      (this.bc = null));
    d = this.xf;
    c &&
      ((d.w = null),
      G(d, "mousedown", e),
      G(d, "dblclick", b),
      (this.xf = null));
    this.Pb = null;
    L.G.gb.apply(this, arguments);
    return this;
  };
})();
(function () {
  function v() {
    var c = this.v,
      d = this.data,
      e = !!c.s4,
      g = e ? c.s4 : this.canvas,
      n = this.element,
      x = this.Nb,
      m = this.Pb,
      w = this.ld,
      k = this.bc,
      y = this.xf,
      z = this.input,
      A = this.nc,
      G = this.focused,
      F = this.R,
      I = c.se,
      D = c.Cj,
      v = u.sc || d.disabled,
      M = g.getContext("2d");
    v ||
      (m || ((m = this.Pb = q("title", "http://www.w3.org/2000/svg")), p(x, m)),
      w ||
        ((w = this.ld = q("line", "http://www.w3.org/2000/svg")),
        w.setAttribute(
          "style",
          "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
        ),
        (w.w = this),
        O(w, "mousedown", l),
        O(w, "dblclick", h),
        p(x, w)),
      k ||
        ((k = this.bc = q("line", "http://www.w3.org/2000/svg")),
        k.setAttribute(
          "style",
          "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
        ),
        (k.w = this),
        O(k, "mousedown", l),
        O(k, "dblclick", h),
        p(x, k)),
      y ||
        ((y = this.xf = q("line", "http://www.w3.org/2000/svg")),
        y.setAttribute(
          "style",
          "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
        ),
        (y.w = this),
        O(y, "mousedown", l),
        O(y, "dblclick", h),
        p(x, y)),
      z ||
        ((z = this.input = q("input")),
        (z.type = "checkbox"),
        (z.w = this),
        C(z, { position: "absolute", top: "-3000px", left: "-3000px" }),
        O(z, "focus", b),
        O(z, "blur", a),
        p(n, z)),
      x.setAttribute("visibility", v ? "hidden" : "visible"));
    v ||
      (w.setAttribute("x1", 0),
      w.setAttribute("y1", 0),
      w.setAttribute("x2", 0),
      w.setAttribute("y2", 0),
      k.setAttribute("x1", 0),
      k.setAttribute("y1", 0),
      k.setAttribute("x2", 0),
      k.setAttribute("y2", 0),
      y.setAttribute("x1", 0),
      y.setAttribute("y1", 0),
      y.setAttribute("x2", 0),
      y.setAttribute("y2", 0));
    e ||
      (parseInt(g.style.width, 10) != I &&
        (f.sa
          ? g.setAttribute("width", I * f.devicePixelRatio)
          : g.setAttribute("width", I),
        C(g, "width", I + "px")),
      parseInt(g.style.height, 10) != D &&
        (f.sa
          ? g.setAttribute("height", D * f.devicePixelRatio)
          : g.setAttribute("height", D),
        C(g, "height", D + "px")),
      void 0 !== F && M.clearRect.apply(M, F),
      f.sa &&
        (M.setTransform(1, 0, 0, 1, 0, 0),
        M.scale(f.devicePixelRatio, f.devicePixelRatio)));
    if (
      !(
        d.Ej ||
        ((M.font = "10px Tahoma, sans-serif"),
        (M.textAlign = "left"),
        (M.textBaseline = "bottom"),
        (e = Number.MAX_VALUE),
        (g = 0),
        (x = d.Jc),
        (n = c.Da(0, x)[1]),
        0 > n || n > c.ta - 1)
      )
    ) {
      g = Math.max(g, n);
      e = Math.min(e, n);
      M.beginPath();
      M.strokeStyle = c.pw;
      M.setLineDash([9, 6, 3, 6]);
      M.moveTo(0, n + 0.5);
      M.lineTo(c.Aa, n + 0.5);
      M.stroke();
      v ||
        ((m.textContent = this.data.gk(!1)),
        w.setAttribute("x1", 0),
        w.setAttribute("y1", n),
        w.setAttribute("x2", c.Aa),
        w.setAttribute("y2", n));
      M.fillStyle = c.Ia;
      M.fillText(this.data.gk(!1), 5.5, n - 2 + 0.5);
      if ((x = d.Mb))
        (n = c.Da(0, x)[1]),
          0 < n &&
            n < c.ta - 1 &&
            ((g = Math.max(g, n)),
            (e = Math.min(e, n)),
            x != d.mi &&
              (M.beginPath(),
              (M.strokeStyle = c.jk),
              M.setLineDash([9, 6, 3, 6]),
              M.moveTo(0, n + 0.5),
              M.lineTo(c.Aa, n + 0.5),
              M.stroke(),
              (M.fillStyle = c.Ia),
              (M.textBaseline = "bottom"),
              M.fillText(r(d, "sl"), 5, n - 2)),
            v ||
              (k.setAttribute("x1", 0),
              k.setAttribute("y1", n),
              k.setAttribute("x2", c.Aa),
              k.setAttribute("y2", n)));
      if ((x = d.mi))
        if (
          ((n = c.Da(0, x)[1]),
          0 < n &&
            n < c.ta - 1 &&
            ((g = Math.max(g, n)),
            (e = Math.min(e, n)),
            M.beginPath(),
            (M.strokeStyle = c.jk),
            M.setLineDash([9, 6, 3, 6]),
            M.moveTo(0, n + 0.5),
            M.lineTo(c.Aa, n + 0.5),
            M.stroke(),
            "price" != A &&
              ((M.fillStyle = c.Ia),
              (M.textBaseline = "bottom"),
              M.fillText(r(d, "sl", "sl" == A), 5, n - 2)),
            (G && "sl" == A) || "price" == A))
        )
          (m = x.toFixed(c.j)),
            (M.fillStyle = c.jk),
            M.fillRect(
              c.Aa + 3,
              Math.max(n - 6, 0),
              M.measureText(m).width + 6,
              13
            ),
            (M.fillStyle = c.dj),
            (M.textBaseline = "middle"),
            M.fillText(m, c.Aa + 6, Math.max(n + 1, 7));
      if ((x = d.Qb))
        (n = c.Da(0, x)[1]),
          0 < n &&
            n < c.ta - 1 &&
            ((g = Math.max(g, n)),
            (e = Math.min(e, n)),
            x != d.ni &&
              (M.beginPath(),
              (M.strokeStyle = c.jk),
              M.setLineDash([9, 6, 3, 6]),
              M.moveTo(0, n + 0.5),
              M.lineTo(c.Aa, n + 0.5),
              M.stroke(),
              (M.fillStyle = c.Ia),
              (M.textBaseline = "bottom"),
              M.fillText(r(d, "tp"), 5, n - 2)),
            v ||
              (y.setAttribute("x1", 0),
              y.setAttribute("y1", n),
              y.setAttribute("x2", c.Aa),
              y.setAttribute("y2", n)));
      if ((x = d.ni))
        if (
          ((n = c.Da(0, x)[1]),
          0 < n &&
            n < c.ta - 1 &&
            ((g = Math.max(g, n)),
            (e = Math.min(e, n)),
            M.beginPath(),
            (M.strokeStyle = c.jk),
            M.setLineDash([9, 6, 3, 6]),
            M.moveTo(0, n + 0.5),
            M.lineTo(c.Aa, n + 0.5),
            M.stroke(),
            "price" != A &&
              ((M.fillStyle = c.Ia),
              (M.textBaseline = "bottom"),
              M.fillText(r(d, "tp", "tp" == A), 5, n - 2)),
            (G && "tp" == A) || "price" == A))
        )
          (m = x.toFixed(c.j)),
            (M.fillStyle = c.jk),
            M.fillRect(
              c.Aa + 3,
              Math.max(n - 6, 0),
              M.measureText(m).width + 6,
              13
            ),
            (M.fillStyle = c.dj),
            (M.textBaseline = "middle"),
            M.fillText(m, c.Aa + 6, Math.max(n + 1, 7));
      this.R = [0, e, c.se, g - e];
      this.R[1] -= 14;
      this.R[3] += 24;
    }
  }
  function r(a, b, c) {
    var d = z.data.eb,
      f = [];
    f.push("#", a.ka);
    f.push(" ", b);
    if (c && (c = a.l)) {
      var e = m.O.Ka(c);
      e &&
        ((b = A.pd.We("sl" == b ? a.mi : a.ni, e.Ta, e.j)),
        m.wa.u(c) &&
          ((c = {}),
          A.ci.QB(a.zb() ? d.Ja : d.Va, a.l, a.m, a.Jc, b, c) &&
            f.push(
              ", ",
              c.ya.toFixed(m.H.yc),
              " ",
              m.H.hf,
              ", ",
              c.DE,
              " pip(s)"
            )));
    }
    return f.join("");
  }
  function l(a) {
    var b = this;
    if (b) {
      var c = b.w;
      if (c) {
        var d = c.element;
        if (d) {
          var f = w(d);
          f &&
            setTimeout(function () {
              b == c.bc && (f.gp = "sl");
              b == c.xf && (f.gp = "tp");
              f.focus();
            }, 0);
        }
        if (a.button || !A.P.ih()) return !0;
        a.stopPropagation && a.stopPropagation();
        y = "price";
        F = a.clientY;
        G = c;
        b == c.bc && (y = "sl");
        b == c.xf && (y = "tp");
        a = G.v;
        var d = G.data,
          g;
        d.Cr = d.Jc || 0;
        d.mi = d.Mb || 0;
        d.ni = d.Qb || 0;
        g = d.Jc;
        "sl" == y && d.Mb && (g = d.Mb);
        "tp" == y && d.Qb && (g = d.Qb);
        d = a.Da(0, g)[1];
        M = F - d - a.hE;
        G.nc = y;
        O(window, "mousemove", e);
        O(window, "mouseup", k);
      }
    }
  }
  function e(a) {
    var b = G.v,
      c = G.data;
    if (
      c &&
      ((a = b.Tb(0, a.clientY - M)[1]),
      "sl" == y && (c.mi = a),
      "tp" == y && (c.ni = a),
      "price" == y)
    ) {
      if ((c.zb() && a < c.Jc) || (c.uc() && a > c.Jc))
        (c.mi = a), (c.ni = c.Qb), (G.nc = "sl");
      if ((c.zb() && a > c.Jc) || (c.uc() && a < c.Jc))
        (c.ni = a), (c.mi = c.Mb), (G.nc = "tp");
    }
    G.Ha(b);
  }
  function k(a) {
    1 < Math.abs(a.clientY - F) && G.M("change", a);
    G.data.mi = null;
    G.data.ni = null;
    G.nc = !1;
    G.Ha(G.v);
    y = M = F = G = null;
    I(window, "mousemove", e);
    I(window, "mouseup", k);
  }
  function h(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function b(a) {
    var b = this,
      c = b.w;
    if (c)
      var d = setTimeout(function () {
        c &&
          c.v &&
          ((c.focused = !0), c.M("focus", a, b.gp), v.call(c), (b.gp = null));
        clearTimeout(d);
      }, 50);
    clearTimeout(c.Kb);
  }
  function a(a) {
    var b = this.w;
    clearTimeout(b.Kb);
    b.Kb = setTimeout(function () {
      var c = n();
      ("input" == x(c) && "checkbox" == c.type && c.sf) ||
        ((b.focused = !1), v.call(b), b.M("blur", a));
    }, 0);
  }
  var g = E.va,
    d = E.oc,
    f = E.Qa,
    c = E.controls.L.Sc,
    z = E.V,
    A = z.control,
    m = z.la,
    u = E.controls.L.Zb,
    q = g.sb,
    w = g.Xb,
    p = g.tb,
    n = g.Wf,
    x = g.md,
    C = g.$a,
    O = d.i,
    I = d.hc,
    G,
    F,
    y,
    M,
    D = (c.rW = function (a) {
      D.G.constructor.apply(this, [a, !0]);
    });
  c.cc(D);
  D.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    v.call(this);
    return this;
  };
  D.prototype.gb = function () {
    this.R = null;
    var c = this.input;
    c && ((c.w = null), I(c, "focus", b), I(c, "blur", a), (this.input = null));
    var d = this.ld;
    c &&
      ((d.w = null),
      I(d, "mousedown", l),
      I(d, "dblclick", h),
      (this.ld = null));
    d = this.bc;
    c &&
      ((d.w = null),
      I(d, "mousedown", l),
      I(d, "dblclick", h),
      (this.bc = null));
    d = this.xf;
    c &&
      ((d.w = null),
      I(d, "mousedown", l),
      I(d, "dblclick", h),
      (this.xf = null));
    this.Pb = null;
    D.G.gb.apply(this, arguments);
    return this;
  };
})();
(function () {
  function v(a, b) {
    return b == F.OPEN
      ? a[1]
      : b == F.Ku
      ? a[2]
      : b == F.zq
      ? a[3]
      : b == F.Pi
      ? a[4]
      : b == F.ss
      ? (a[2] + a[3]) / 2
      : b == F.Iv
      ? (a[2] + a[3] + a[4]) / 3
      : b == F.iL
      ? (a[2] + a[3] + a[4] + a[4]) / 4
      : 0;
  }
  function r(a) {
    return 10 > a ? "0" + a : "" + a;
  }
  function l(a) {
    var b = this.w;
    if (b)
      var c = setTimeout(function () {
        b && b.v && b.M("focus", a);
        clearTimeout(c);
      }, 50);
    clearTimeout(b.Kb);
  }
  function e(a) {
    var b = this.w;
    clearTimeout(b.Kb);
    b.Kb = setTimeout(function () {
      var c = C();
      ("input" == O(c) && "checkbox" == c.type && c.sf) || b.M("blur", a);
    }, 0);
  }
  var k = E.va,
    h = E.ma,
    b = E.Qa,
    a = E.controls,
    g = E.oc,
    d = a.L.Nc,
    f = E.V,
    c = E.Ma,
    z = E.ba.xa,
    A = g.i,
    m = g.hc,
    u = k.sb,
    q = k.Uj,
    w = k.mm,
    p = k.tb,
    n = k.hb,
    x = k.$a,
    C = k.Wf,
    O = k.md,
    I = k.Cd,
    G = k.Ad,
    k = (d.types = {});
  k.jn = 0;
  k.Jf = 1;
  var F = { Pi: 0, OPEN: 1, Ku: 2, zq: 3, ss: 4, Iv: 5, iL: 6, wba: 7, N8: 8 },
    y = { oh: 1, Po: 2, JH: 4, Oi: 8 };
  y.Kd = y.oh | y.Po | y.JH | y.Oi;
  k = [];
  k[0] = { value: F.Pi, label: "Close" };
  k[1] = { value: F.OPEN, label: "Open" };
  k[2] = { value: F.Ku, label: "High" };
  k[3] = { value: F.zq, label: "Low" };
  k[4] = { value: F.ss, label: "Median Price (HL/2)" };
  k[5] = { value: F.Iv, label: "Typical Price (HLC/3)" };
  k[6] = {
    value: F.iL,
    label: "Weighted Close (HLCC/4)",
  };
  var M = {},
    D,
    L,
    B,
    Q,
    N,
    K,
    P = (d.Cc = function (b) {
      b || (b = {});
      void 0 == b.id && (b.id = new Date().getTime().toString());
      void 0 == b.period_flags && (b.period_flags = a.L.Fl.Kd);
      this.id = b.id;
      this.data = b;
      this.dg("focus", "blur", "doubleclick", "title", "draw", "destroy");
      this.iw = !0;
    });
  P.zk = 4e3;
  P.Xh = 4e3;
  P.TL = k;
  P.ng = F;
  P.xh = y;
  P.Wh = v;
  P.eg = function (a) {
    a = new Date(a);
    var b = [];
    b.push(a.getUTCFullYear());
    b.push(".");
    b.push(r(a.getUTCMonth() + 1));
    b.push(".");
    b.push(r(a.getUTCDate()));
    b.push(" ");
    b.push(r(a.getUTCHours()));
    b.push(":");
    b.push(r(a.getUTCMinutes()));
    return b.join("");
  };
  P.hS = function (a) {
    var c = {};
    if (b.Pd) {
      var d = window.localStorage.indicators;
      if (d)
        try {
          c = window.JSON.parse(d);
        } catch (f) {}
      for (var c = c.top || {}, d = [], e = 0; e < a.length; e++) {
        var g = a[e],
          n = c[g] || {};
        d[e] = { name: g, t: n.t || 0, count: n.count || 0 };
      }
      return d;
    }
    return null;
  };
  P.prototype.ha = function (a, b, c) {
    var d = this.canvas,
      f = this.Nb,
      e = this.element;
    !d &&
      this.wm() &&
      ((d = this.canvas = u("canvas")),
      (d.id = [this.id, "graph"].join("_")),
      n(d, "graphic"));
    e ||
      ((e = this.element = u("div")),
      (e.id = [this.id, "admin"].join("_")),
      n(e, "admin"));
    f ||
      ((f = this.Nb = u("g", "http://www.w3.org/2000/svg")),
      (f.id = [this.id, "svg"].join("_")));
    if (d) {
      var g = G(d);
      (g && g == a) || p(a, d);
    }
    ((g = G(e)) && g == b) || p(b, e);
    ((g = G(f)) && g == c) || p(c, f);
    return this;
  };
  P.prototype.Qd = function () {
    var b = a.L.Fl,
      c = a.L.rg,
      d = this.canvas,
      f = this.element,
      e = this.Nb;
    if (!f || !G(f)) return !1;
    var g = this.data,
      n = this.v;
    if (!g || !n || (n.display && !n.display())) return !1;
    var n = n.cb && n.cb.period,
      p = g.period_flags;
    if (g.temp)
      return (
        x(d, "display", "none"),
        x(f, "display", "none"),
        e.setAttribute("visibility", "hidden"),
        !1
      );
    if (p == b.Kd)
      return (
        x(d, "display", ""),
        x(f, "display", ""),
        e.setAttribute("visibility", "visible"),
        !0
      );
    if (
      !(
        (n != c.Ve || p & b.Ve) &&
        (n != c.Pe || p & b.Pe) &&
        (n != c.Ne || p & b.Ne) &&
        (n != c.Oe || p & b.Oe) &&
        (n != c.Sd || p & b.Sd) &&
        (n != c.pe || p & b.pe) &&
        (n != c.Ce || p & b.Ce) &&
        (n != c.ze || p & b.ze) &&
        (n != c.nh || p & b.Zj)
      )
    )
      return (
        x(d, "display", "none"),
        x(f, "display", "none"),
        e.setAttribute("visibility", "hidden"),
        !1
      );
    x(d, "display", "");
    x(f, "display", "");
    e.setAttribute("visibility", "visible");
    return !0;
  };
  P.prototype.gb = function () {
    var a = this.input;
    a && ((a.w = null), m(a, "focus", l), m(a, "blur", e), (this.input = null));
    this.M("blur", { target: this.element });
    this.M("destroy", { target: this.element });
    q(this.canvas);
    q(this.element);
    q(this.Nb);
    w(this.canvas);
    w(this.element);
    w(this.Nb);
    this.title =
      this.data =
      this.v =
      this.Nb =
      this.element =
      this.canvas =
        null;
    this.mu();
    return this;
  };
  P.prototype.dg = function (a) {
    var b = this.ke;
    b || (b = this.ke = {});
    if (arguments.length)
      for (var c = 0, d = arguments.length; c < d; c++) b[arguments[c]] = [];
    return this;
  };
  P.prototype.M = function () {
    var a = this.ke,
      b = !0,
      c;
    c = Array.prototype.shift.apply(arguments);
    if (!a || !a[c]) throw Error(["Control hasn't event \"", c, '"'].join(""));
    if ((a = a[c]))
      for (var d = 0, f = a.length; d < f; d++)
        if ((c = a[d]))
          try {
            !1 === c.apply(this, arguments) && (b = !1);
          } catch (e) {
            console.log(e);
          }
    return b;
  };
  P.prototype.tc = function () {
    var a = this.data;
    return a ? a.type || "" : "";
  };
  P.prototype.cd = function () {
    var a = this.data;
    return a ? a.type || "" : "";
  };
  P.prototype.i = function (a, b) {
    var c = this.ke;
    if (!c || !c[a]) return this;
    c[a].push(b);
    return this;
  };
  P.prototype.hc = function (a, b) {
    var c = this.ke;
    if (!c || !c[a]) return this;
    if ((c = c[a]))
      for (var d = 0, f = c.length; d < f; d++)
        if (c[d] == b) {
          c[d] = null;
          break;
        }
    return this;
  };
  P.prototype.mu = function () {
    var a,
      b = this.ke;
    if (b) {
      for (var c in b)
        if ((a = b[c])) {
          for (var d = 0, f = a.length; d < f; d++) a[d] = null;
          b[c] = null;
        }
      this.ke = null;
    }
    return this;
  };
  P.prototype.kb = function (b, f) {
    void 0 === f && (f = y.Kd);
    if (!D) {
      var e = {
          position: "absolute",
          top: "21px",
          width: "80px",
          "text-align": "right",
        },
        g = { position: "absolute", top: "16px", left: "84px", width: "100px" };
      D = c(a.input.Number)
        .o("moving-average-period")
        .Fa(1)
        .mc(4e3)
        .T(0)
        .Y(1)
        .b(g);
      L = c(a.page.I, "moving-average-period")
        .Text(z.ST + ":")
        .b(e);
      B = c(a.input.Number)
        .o("moving-average-shift")
        .Fa(0)
        .mc(4e3)
        .T(0)
        .Y(1)
        .b(g)
        .b({ left: "264px" });
      Q = c(a.page.I, "moving-average-shift")
        .Text(z.dH + ":")
        .b(e)
        .b({ left: "190px", width: "68px" });
      N = c(a.input.of)
        .o("moving-average-apply")
        .de(d.Cc.TL)
        .b(g)
        .b({ top: "84px", width: "280px" });
      K = c(a.page.I, "moving-average-apply")
        .Text(z.$G + ":")
        .b(e)
        .b({ top: "89px" });
    }
    e = this.data;
    g = 16;
    D.h(!1);
    L.h(!1);
    B.h(!1);
    Q.h(!1);
    N.h(!1);
    K.h(!1);
    f & y.oh &&
      (D.h(!0).b({ top: g + "px" }),
      L.h(!0).b({
        top: g + 5 + "px",
      }),
      f & y.Po
        ? (D.b({ left: "84px" }), L.b({ left: "0", width: "80px" }))
        : (D.b({ left: "264px" }), L.b({ left: "190px", width: "68px" })));
    f & y.Po &&
      (B.h(!0).b({ top: g + "px" }), Q.h(!0).b({ top: g + 5 + "px" }));
    f & (y.oh | y.Po) && (g += 34);
    f & y.Oi &&
      (N.h(!0).b({ top: g + "px" }), K.h(!0).b({ top: g + 5 + "px" }));
    D.h() && D.f(parseInt(e.period, 10));
    B.h() && B.f(parseInt(e.shift, 10));
    N.h() && N.f(parseInt(e.applyto, 10));
    b.c(D).c(L).c(B).c(Q).c(N).c(K);
    return 0;
  };
  P.prototype.lb = function () {
    var a = this.data;
    a &&
      (D.h() && (a.period = parseInt(D.f(), 10)),
      B.h() && (a.shift = Math.min(parseInt(B.f(), 10), 4e3)),
      N.h() && (a.applyto = parseInt(N.f(), 10)));
    this.Sf();
    return this;
  };
  P.prototype.Zf = function (a) {
    if (a && a.length && b.Pd) {
      var c = window.localStorage.indicators;
      if (
        c &&
        c.indexOf &&
        0 === c.indexOf("{") &&
        (c = window.JSON.parse(c)) &&
        (c = c.defaults)
      ) {
        var d = this.data,
          f;
        if (d) {
          a = a.split(" ");
          for (var e = 0, g = a.length; e < g; e++)
            (f = a[e]) && void 0 !== c[f] && void 0 === d[f] && (d[f] = c[f]);
        }
      }
    }
  };
  P.prototype.Sf = function () {
    if (b.Pd) {
      var a = {},
        c = this.data,
        d;
      (d = window.localStorage.indicators) &&
        d.indexOf &&
        0 === d.indexOf("{") &&
        (a = window.JSON.parse(d));
      (d = a.defaults) || (d = a.defaults = {});
      for (var f in c)
        if (
          "period" == f ||
          "shift" == f ||
          "method" == f ||
          "applyto" == f ||
          "deviation" == f ||
          "fast_ema" == f ||
          "slow_ema" == f ||
          "macd_sma" == f ||
          "deviation" == f ||
          "deviation" == f ||
          "deviations" == f
        )
          d[f] = c[f];
      window.localStorage.indicators = window.JSON.stringify(a);
    }
  };
  P.prototype.S = function (a) {
    var b = this.v;
    return b && (b = b.cb) ? b.digits || 0 : 1 < a ? 2 : a + 1;
  };
  P.prototype.Lf = function () {
    this.result = null;
    return this;
  };
  P.prototype.jb = function () {
    var a = this.input;
    if (a)
      var b = setTimeout(function () {
        a.focus();
        clearTimeout(b);
      }, 0);
    return this;
  };
  P.prototype.hk = function () {
    var a = this.input;
    a ||
      ((a = this.input = u("input")),
      (a.type = "checkbox"),
      (a.w = this),
      x(a, { position: "absolute", top: "-3000px", left: "-3000px" }),
      A(a, "focus", l),
      A(a, "blur", e),
      p(this.element, a));
    return this;
  };
  P.prototype.di = function (a) {
    var c = this.element,
      d = this.v,
      e = this.title;
    e ||
      ((e = this.title = u("span")),
      n(e, "val"),
      x(e, {
        display: "inline-block",
        "margin-top": "2px",
        "white-space": "nowrap",
      }),
      p(c, e));
    c = "4px";
    if ("Main" == this.tc() && !b.Km && !d.readOnly && f.control.P) {
      var c = 0,
        g = f.la.O.Ka(d.cb.symbol);
      (g ? g.hs() : 1) && c++;
      f.control.P.Il(d.cb.symbol) && c++;
      c = c ? (1 == c ? "22px" : "40px") : "5px";
    }
    x(e, { "margin-left": c });
    x(e, { background: "transparent", color: d.Ia });
    I(e, a);
  };
  P.prototype.wm = function () {
    return !0;
  };
  P.prototype.sh = function (b) {
    var c = a.L.rg,
      d = this.v,
      f = this.Ub,
      e = d.cb,
      g = d.Lb;
    if (g && g.length && e && e.periods) {
      var n = e.from,
        p = e.period,
        x = d.ta,
        q = d.le,
        m = d.wd,
        w = 1 < n ? (g[n - 1] && g[n - 1][0]) || null : null,
        k;
      w && (w = new Date(w));
      if (b) {
        b = [];
        for (var y = n, n = Math.min(n + m, g.length - 1), m = 0; y <= n; y++)
          if ((k = g[y])) {
            if (w) {
              k = new Date(k[0]);
              if (p < c.pe && k.getUTCDate() == w.getUTCDate()) {
                m += q;
                continue;
              }
              if (
                p == c.pe &&
                (k.getUTCDate() == w.getUTCDate() || 1 != k.getUTCDay())
              ) {
                m += q;
                continue;
              }
              if (p == c.Ce && k.getUTCMonth() == w.getUTCMonth()) {
                m += q;
                continue;
              }
              if (p >= c.ze && k.getFullYear() == w.getFullYear()) {
                m += q;
                continue;
              }
              b[b.length] = m;
              b[b.length] = 0;
              b[b.length] = m;
              b[b.length] = x;
              w = k;
            } else w = new Date(k[0]);
            m += q;
          }
        b = new Float32Array(b);
        e.s3 = b;
      } else b = e.s3;
      f.ud(b, h.be(d.Ia), 3);
    }
  };
  P.prototype.Fi = function () {
    var a = this.data.applyto || 0,
      b = this.v.Lb,
      c = [b.fa, b.ea, a].join("_"),
      d = M[c];
    if (!d || b.length != d.length) {
      var d = [],
        f;
      if (b)
        for (var e = 0, g = b.length; e < g; e++)
          (f = b[e]) && d.push(P.Wh(f, a));
      d = M[c] = d;
    }
    d[b.length - 1] = v(b[b.length - 1], a);
    return d;
  };
  d.cc = function (a, b) {
    function c() {}
    void 0 === b && (b = P);
    c.prototype = b.prototype;
    a.prototype = new c();
    a.prototype.constructor = a;
    a.G = b.prototype;
    a.prototype.G = b.prototype;
  };
  d.Ch = function (a, b) {
    for (var c in b) b.hasOwnProperty(c) && (a.prototype[c] = b[c]);
  };
  d.yG = function (a) {
    return d.oG()[a];
  };
  var T = {};
  d.oG = function () {
    if (!Object.getOwnPropertyNames(T).length) {
      var a, b;
      for (b in d.af)
        (a = d.af[b].prototype.tc()),
          (a = a.replace(/\s/g, "")),
          (T[a] = d.af[b]);
      for (b in d.Gd)
        (a = d.Gd[b].prototype.tc()),
          (a = a.replace(/\s/g, "")),
          (T[a] = d.Gd[b]);
      for (b in d.ik)
        (a = d.ik[b].prototype.tc()),
          (a = a.replace(/\s/g, "")),
          (T[a] = d.ik[b]);
      for (b in d.Sj)
        (a = d.Sj[b].prototype.tc()),
          (a = a.replace(/\s/g, "")),
          (T[a] = d.Sj[b]);
    }
    return T;
  };
  d.pG = function () {
    var a = [],
      b;
    for (b in d.oG()) a[a.length] = T[b].prototype.tc();
    return a;
  };
  d.Fu = function (a) {
    switch (a) {
      case "trend":
        a = d.af;
        break;
      case "bills":
        a = d.ik;
        break;
      case "oscillators":
        a = d.Gd;
        break;
      case "volumes":
        a = d.Sj;
        break;
      default:
        return [];
    }
    var b = [],
      c;
    for (c in a) b.push(a[c].prototype.tc());
    return b;
  };
})();
(function () {
  var v = E.va,
    r = E.controls,
    l = E.Qa,
    e = E.ma,
    k = E.Bh,
    h = r.L.Nc,
    b = r.L.Zb,
    a = h.Cc,
    g = e.xk,
    d = v.sb,
    f = v.tb,
    c = v.$a,
    z = [30 / 255, 144 / 255, 1];
  h.Pa = h.Pa || {};
  v = h.Pa.Gd = {};
  v.Ha = function (a) {
    var b = this;
    if (!a) return b;
    b.v = a;
    if (!b.Ob) {
      a = a.cb;
      if (!a) return b;
      var c = r.L.Af;
      c &&
        c.Vb(
          a.symbol,
          (b.Ob = function () {
            b.G.Qd.call(b) &&
              (b.ug.call(b, !0),
              b.wq.call(b),
              b.wi.call(b, !0),
              b.G.di.call(b, b.OD.call(b)));
          }),
          void 0,
          !1
        );
    }
    if (!b.G.Qd.call(b)) return b;
    b.G.hk.call(b);
    b.ug.call(b);
    b.wq.call(b);
    b.wi.call(b);
    b.G.di.call(b, b.OD.call(b));
    b.wn.call(b);
    return b;
  };
  v.gb = function () {
    var b = this,
      c = b.v;
    b.ob = null;
    b.ib = null;
    b.Sa = null;
    b.nb = null;
    b.result = null;
    Object.getOwnPropertyNames(b)
      .filter(function (a) {
        return a.match(/^result/);
      })
      .forEach(function (a) {
        b[a] = null;
      });
    b.Ub = null;
    var d = b.qb;
    d && ((d.w = null), h.Pa.Fd.Hh(d), (b.qb = null));
    if ((d = b.Hd)) (d.w = null), h.Pa.Fd.Hh(d), (b.Hd = null);
    c &&
      (c = c.cb) &&
      b.Ob &&
      ((d = r.L.Af) && d.Ng(c.symbol, b.Ob), (b.Ob = null));
    a.prototype.gb.apply(this, arguments);
    return b;
  };
  v.Lf = function () {
    var a = this.Ub;
    this.result = null;
    a && a.Oa();
    (a = this.qb) && a.setAttribute("points", "");
    return this;
  };
  v.wq = function () {
    var a = this.result,
      b;
    if (a) {
      var c = this.v,
        d = this.data,
        f = c.ta;
      b = c.wd;
      var e = c.cb.from,
        c = Math.pow(10, this.S()),
        g = d.min,
        d = d.max,
        h = !1,
        k = !1,
        z = isNaN(parseFloat(g)),
        l = isNaN(parseFloat(d));
      if (z || l) {
        z && ((g = Number.MAX_VALUE), (h = !0));
        l && ((d = -Number.MAX_VALUE), (k = !0));
        for (var G = e, e = e + b; G <= e; G++)
          (b = a[G]),
            void 0 !== b && (z && b < g && (g = b), l && b > d && (d = b));
      }
      a = this.Bu();
      b = a * (k + h);
      f = f - b;
      this.Sa = f / (d * c - g * c);
      h && (g -= ((d - g) / f) * a);
      k && (d += ((d - g) / f) * a);
      this.nb = Math.round(f + this.Sa * g * c + b);
      this.ob = g;
      this.ib = d;
    }
  };
  v.wi = function (d) {
    var f = this.result;
    if (f && f.length) {
      var h = this.v,
        q = h.Aa,
        w = this.canvas,
        p = this.Ub,
        n = h.cb,
        x = h.Lb,
        C = h.se,
        O = h.ta,
        I = h.le,
        G = h.wd,
        F = b.sc,
        y = Math.pow(10, this.S()),
        r = Math.min(this.data.shift || 0, a.zk),
        D = this.nb,
        L = this.Sa,
        B = this.Hi || z;
      if (x && x.length && n) {
        var Q = n.from,
          n = Math.min(Q + G, x.length - 1);
        if (
          !(
            (d && Q + G < x.length - 1) ||
            (this.Ik(),
            parseInt(w.style.width, 10) != C &&
              (l.sa
                ? w.setAttribute("width", C * l.devicePixelRatio)
                : w.setAttribute("width", C),
              c(w, "width", C + "px")),
            parseInt(w.style.height, 10) != O &&
              (l.sa
                ? w.setAttribute("height", O * l.devicePixelRatio)
                : w.setAttribute("height", O),
              c(w, "height", O + "px")),
            p || (p = this.Ub = new k(w)),
            p.Oa(),
            1 > G)
          )
        ) {
          this.G.sh.call(this);
          var N, K, P, v;
          l.yd || ((v = !0), (P = p.vi()));
          3 === this.dh &&
            (v
              ? (P.beginPath(),
                (P.strokeStyle = h.xd),
                P.setLineDash && P.setLineDash([3]),
                P.moveTo(0, D * l.devicePixelRatio + 0.5),
                P.lineTo(
                  q * l.devicePixelRatio + 0.5,
                  D * l.devicePixelRatio + 0.5
                ),
                P.stroke(),
                P.closePath())
              : p.ud(new Float32Array([0, D, q, D]), e.be(h.xd), 3));
          d = this.qb;
          F || ((N = []), d.setAttribute("points", ""));
          v
            ? (P.beginPath(),
              P.setLineDash && P.setLineDash([]),
              (P.strokeStyle = g(B)))
            : (K = []);
          h = Q - r;
          r = n - r;
          for (q = n = 0; h <= r; h++, q++)
            (w = f[h]),
              void 0 !== w &&
                ((w = Math.floor(D - w * y * L)),
                F || (N[N.length] = [n, w].join()),
                v
                  ? 0 == q
                    ? P.moveTo(
                        n * l.devicePixelRatio + 0.5,
                        w * l.devicePixelRatio + 0.5
                      )
                    : P.lineTo(
                        n * l.devicePixelRatio + 0.5,
                        w * l.devicePixelRatio + 0.5
                      )
                  : ((K[K.length] = n), (K[K.length] = w))),
              (n += I);
          F || d.setAttribute("points", N.join(" "));
          v ? P.stroke() : p.Ue(K, B);
        }
      }
    }
  };
  v.Bu = function () {
    return 10;
  };
  v.wn = function () {
    var a = {};
    a.target = this.element;
    a.nb = this.nb;
    a.ib = this.ib;
    a.ob = this.ob;
    a.Sa = this.Sa;
    a.type = this.dh || 2;
    a.j = this.S();
    this.M("draw", a);
  };
  v.Kh = function (a) {
    var b = "",
      c = this.result,
      d = this.data,
      f = this.v.pb(a),
      c = c[f],
      b = b + (this.tc() + " (" + d.period + ")"),
      b = b + ("\nTime: " + h.Cc.eg(a));
    return (b += "\nValue: " + c.toFixed(this.S()));
  };
  v.Ik = function () {
    var a = this.qb,
      b = this.Nb;
    a ||
      ((a = d("title", "http://www.w3.org/2000/svg")),
      f(b, a),
      (a = this.qb = d("polyline", "http://www.w3.org/2000/svg")),
      a.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      (a.w = this),
      h.Pa.Fd.Cg(a),
      f(b, a));
  };
  v.OD = function () {
    var a = this.result,
      b = this.S(),
      c = [];
    c.push(this.cd());
    a &&
      a.length &&
      ((a = a[a.length - 1]),
      isNaN(a) ? (a = 0) : (a = a.toFixed(b)),
      c.push(" ", a));
    return c.join("");
  };
})();
(function () {
  function v() {
    var a = this.Jd,
      b = this.ue,
      c = this.S(),
      d = [];
    d.push(this.cd());
    a &&
      a.length &&
      (d.push(" ", a[a.length - 1].toFixed(c)),
      d.push(" ", b[b.length - 1].toFixed(c)));
    return d.join("");
  }
  var r = E.va,
    l = E.controls,
    e = E.Qa,
    k = E.ma,
    h = E.Bh,
    b = l.L.Nc,
    a = l.L.Zb,
    g = b.Cc,
    d = r.sb,
    f = r.tb,
    c = r.$a,
    z = k.xk,
    A = [0, 128 / 255, 0],
    m = [1, 0, 0];
  b.Pa = b.Pa || {};
  var r = (b.Pa.JM = {}),
    u = b.Pa.Gd,
    q;
  for (q in u) u.hasOwnProperty(q) && (r[q] = u[q]);
  r.Ha = function (a) {
    var b = this;
    if (!a) return b;
    b.v = a;
    if (!b.Ob) {
      a = a.cb;
      if (!a) return b;
      var c = l.L.Af;
      c &&
        c.Vb(
          a.symbol,
          (b.Ob = function () {
            b.G.Qd.call(b) &&
              (b.ug.call(b, !0),
              b.wq.call(b),
              b.wi.call(b, !0),
              b.G.di.call(b, v.call(b)));
          }),
          void 0,
          !1
        );
    }
    if (!b.G.Qd.call(b)) return b;
    b.G.hk.call(b);
    b.ug.call(b);
    b.wq.call(b);
    b.wi.call(b);
    b.G.di.call(b, v.call(b));
    b.wn.call(b);
    return b;
  };
  r.gb = function () {
    var a = this,
      c = a.v;
    a.ob = null;
    a.ib = null;
    a.Sa = null;
    a.nb = null;
    a.result = null;
    Object.getOwnPropertyNames(a)
      .filter(function (a) {
        return a.match(/^result/);
      })
      .forEach(function (b) {
        a[b] = null;
      });
    a.Ub = null;
    var d = a.qb;
    d && ((d.w = null), b.Pa.Fd.Hh(d), (a.qb = null));
    if ((d = a.bc)) (d.w = null), b.Pa.Fd.Hh(d), (a.bc = null);
    c &&
      (c = c.cb) &&
      a.Ob &&
      ((d = l.L.Af) && d.Ng(c.symbol, a.Ob), (a.Ob = null));
    g.prototype.gb.apply(this, arguments);
    return a;
  };
  r.wq = function () {
    var a = this.Jd,
      b = this.ue,
      c;
    if (a && b) {
      var d = this.v,
        f = this.data;
      c = d.wd;
      var e = d.cb.from,
        g = Math.pow(10, this.S()),
        h = this.Bu(),
        d = d.ta - 2 * h,
        q = f.min,
        f = f.max,
        m,
        k,
        u = isNaN(parseFloat(q)),
        z = isNaN(parseFloat(f));
      if (u || z) {
        u && ((q = Number.MAX_VALUE), (m = !0));
        z && ((f = Number.MIN_VALUE), (k = !0));
        for (var l = e, e = e + c; l <= e; l++) {
          if ((c = a[l])) u && c < q && (q = c), z && c > f && (f = c);
          if ((c = b[l])) u && c < q && (q = c), z && c > f && (f = c);
        }
      }
      this.Sa = d / (f * g - q * g);
      m && (q -= ((f - q) / d) * h);
      k && (f += ((f - q) / d) * h);
      this.nb = Math.round(d + this.Sa * q * g + 2 * h);
      this.ob = q;
      this.ib = f;
    }
  };
  r.wi = function (b) {
    var d = this.Jd,
      f = this.ue;
    if (d && d.length) {
      var g = this.v,
        q = g.Aa,
        u = this.canvas,
        l = this.Ub,
        G = g.cb,
        F = g.Lb,
        y = g.se,
        r = g.ta,
        D = g.le,
        L = g.wd,
        B = a.sc,
        Q = Math.pow(10, this.S()),
        N = this.nb,
        K = this.Sa;
      if (F && F.length && G) {
        var P = G.from,
          G = Math.min(P + L, F.length - 1);
        if (
          !(
            (b && P + L < F.length - 1) ||
            (this.Ik(),
            parseInt(u.style.width, 10) != y &&
              (e.sa
                ? u.setAttribute("width", y * e.devicePixelRatio)
                : u.setAttribute("width", y),
              c(u, "width", y + "px")),
            parseInt(u.style.height, 10) != r &&
              (e.sa
                ? u.setAttribute("height", r * e.devicePixelRatio)
                : u.setAttribute("height", r),
              c(u, "height", r + "px")),
            l || (l = this.Ub = new h(u)),
            l.Oa(),
            1 > L)
          )
        ) {
          this.G.sh.call(this);
          var v, R, H, S;
          e.yd || ((S = !0), (H = l.vi()), H.setLineDash && H.setLineDash([]));
          3 === this.dh &&
            (S
              ? (H.setLineDash && H.setLineDash([3]),
                (H.strokeStyle = g.xd),
                H.beginPath(),
                H.moveTo(0, N + 0.5),
                H.lineTo(q, N + 0.5),
                H.stroke())
              : l.ud(new Float32Array([0, N, q, N]), k.be(g.xd), 3));
          b = this.qb;
          g = this.bc;
          B ||
            ((v = []),
            (R = []),
            b.setAttribute("points", ""),
            g.setAttribute("points", ""));
          q = [];
          u = [];
          for (y = F = 0; P <= G; P++, y++)
            (r = d[P]),
              void 0 !== r &&
                (isNaN(r) && (r = 0),
                (r = Math.floor(N - r * Q * K)),
                B || (v[v.length] = [F, r].join()),
                (q[q.length] = F),
                (q[q.length] = r)),
              (r = f[P]),
              void 0 !== r &&
                (isNaN(r) && (r = 0),
                (r = Math.floor(N - r * Q * K)),
                B || (R[R.length] = [F, r].join()),
                (u[u.length] = F),
                (u[u.length] = r)),
              (F += D);
          B ||
            (b.setAttribute("points", v.join(" ")),
            g.setAttribute("points", R.join(" ")));
          if (S) {
            H.strokeStyle = z(A);
            H.beginPath();
            H.setLineDash && H.setLineDash([]);
            P = 0;
            for (G = q.length; P < G; P += 2)
              (F = q[P]),
                (r = q[P + 1]),
                0 === P ? H.moveTo(F, r) : H.lineTo(F, r);
            H.stroke();
            H.strokeStyle = z(m);
            H.beginPath();
            P = 0;
            for (G = u.length; P < G; P += 2)
              (F = u[P]),
                (r = u[P + 1]),
                0 === P ? H.moveTo(F, r) : H.lineTo(F, r);
            H.stroke();
          } else l.Ue(q, A), l.Ue(u, m);
        }
      }
    }
  };
  r.Bu = function () {
    return 10;
  };
  r.Ik = function () {
    var a = this.qb,
      c = this.Nb;
    a ||
      ((a = d("title", "http://www.w3.org/2000/svg")),
      f(c, a),
      (a = this.qb = d("polyline", "http://www.w3.org/2000/svg")),
      a.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      a.setAttribute("data-type", "value"),
      (a.w = this),
      b.Pa.Fd.Cg(a),
      f(c, a));
    a = this.bc;
    a ||
      ((a = d("title", "http://www.w3.org/2000/svg")),
      f(c, a),
      (a = this.bc = d("polyline", "http://www.w3.org/2000/svg")),
      a.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      a.setAttribute("data-type", "signal"),
      (a.w = this),
      b.Pa.Fd.Cg(a),
      f(c, a));
  };
})();
(function () {
  function v() {
    if (this) {
      var a = this.w;
      a && a.jb();
    }
  }
  function r(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function l(a) {
    if (this) {
      var b = d(f(this));
      if (b) {
        var e = this.w;
        e && ((a = e.v.Tb(a.clientX, 0)), (b.textContent = e.Kh(a[0], this)));
      }
    }
  }
  function e() {
    if (this) {
      var a = d(f(this));
      a && (a.textContent = "");
    }
  }
  var k = E.va,
    h = E.oc,
    b = E.controls.L.Nc,
    a = h.i,
    g = h.hc,
    d = k.Xb,
    f = k.Ad;
  b.Pa = b.Pa || {};
  k = b.Pa.Fd = {};
  k.Cg = function (b) {
    b &&
      (a(b, "mousedown", v),
      a(b, "mouseover", l),
      a(b, "mousemove", l),
      a(b, "mouseout", e),
      a(b, "dblclick", r));
  };
  k.Hh = function (a) {
    a &&
      (g(a, "mousedown", v),
      g(a, "dblclick", r),
      g(a, "mouseover", l),
      g(a, "mouseout", e));
  };
})();
(function () {
  function v() {
    var a = this.v,
      b = a.cb,
      d = a.Lb,
      e = a.ta,
      g = a.HM,
      n = a.wd,
      p = b.from,
      a = (Math.floor(e / g) - 3) * g,
      e = e - Math.floor(e / g) * g,
      h = Math.pow(10, b.digits),
      x = Number.MAX_VALUE,
      q = Number.MIN_VALUE;
    d &&
      b &&
      ((d = d.slice(p, p + n + 1)),
      (x = d.reduce(f, Number.MAX_VALUE)),
      (q = d.reduce(c, Number.MIN_VALUE)));
    x == q && ((x -= Math.pow(10, b.digits)), (q += Math.pow(10, b.digits)));
    this.ob = x;
    this.ib = q;
    this.Sa = a / (q * h - x * h);
    this.nb = a - 2 * g + this.Sa * x * h + e + 3 * g;
  }
  function r() {
    var a = this.v,
      b = this.canvas,
      c = this.Ub,
      d = a.cb;
    if (d) {
      var f = a.Aa,
        a = a.ta;
      parseInt(b.style.width, 10) != f &&
        (n.sa
          ? b.setAttribute("width", f * n.devicePixelRatio)
          : b.setAttribute("width", f),
        N(b, "width", f + "px"));
      parseInt(b.style.height, 10) != a &&
        (n.sa
          ? b.setAttribute("height", a * n.devicePixelRatio)
          : b.setAttribute("height", a),
        N(b, "height", a + "px"));
      N(b, "z-index", d.foreground ? "299" : "");
      c || (c = this.Ub = new O(b));
      c.Oa();
    }
  }
  function l() {
    var a = this.v,
      c = this.Nb,
      d = this.Kw,
      f = this.Hd,
      g = a.cb,
      a = a.Lb;
    if (g && a && a.length) {
      var a = g.type,
        p = g.scale;
      this.sh(!0);
      f ||
        ((f = M("title", "http://www.w3.org/2000/svg")),
        L(c, f),
        (f = this.Hd = M("polygon", "http://www.w3.org/2000/svg")),
        f.setAttribute("style", "fill:black;fill-opacity:0;"),
        (f.w = this),
        F(f, "mouseover", u),
        F(f, "mousemove", u),
        F(f, "mouseout", q),
        L(c, f));
      d ||
        ((d = this.Kw = M("polyline", "http://www.w3.org/2000/svg")),
        d.setAttribute(
          "style",
          "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
        ),
        (d.w = this),
        F(d, "mouseover", u),
        F(d, "mousemove", u),
        F(d, "mouseout", q),
        (d.w = this),
        L(c, d));
      N(f, "display", "none");
      N(d, "display", "none");
      g.foreground && b.call(this);
      if (1 == p) e.call(this);
      else {
        if ("quote" == a) {
          var h = this.v,
            c = this.Hd,
            d = this.Ub,
            x = this.nb,
            m = this.Sa,
            k = h.cb,
            w = h.Lb,
            y = C.be(h.nw),
            f = C.be(h.mw),
            p = C.be(h.mE),
            l = C.be(h.lE),
            K = h.le,
            B = h.WL,
            O = h.iE,
            D = G.sc,
            I = k.from,
            r = Math.pow(10, k.digits),
            Q = Math.floor(0.5 * B);
          if (w && w.length && k) {
            var v, ra, na, sa, va, ma, Fa, ia;
            N(c, "display", "");
            D || ((na = []), (sa = []), c.setAttribute("points", ""));
            k = [];
            va = [];
            ma = [];
            Fa = [];
            for (
              var ya = I, I = Math.min(I + h.wd, w.length - 1), Da = 0;
              ya <= I;
              ya++
            )
              if ((h = w[ya]))
                (v = Math.floor(x - h[2] * r * m)),
                  (ra = Math.floor(x - h[3] * r * m)),
                  D ||
                    ((na[na.length] = [[Da - O, v].join()]),
                    (na[na.length] = [[Da + O, v].join()]),
                    (sa[sa.length] = [[Da - O, ra].join()]),
                    (sa[sa.length] = [[Da + O, ra].join()])),
                  (ia = [Da - 1, v, 1, ra - v]),
                  h[4] > h[1] ? (k[k.length] = ia) : (va[va.length] = ia),
                  0 < B &&
                    ((v = Math.floor(x - Number(Math.max(h[4], h[1]) * r) * m)),
                    (ra = Math.ceil(
                      Number(
                        (Math.max(h[4], h[1]) - Math.min(h[4], h[1])) * r
                      ) * m
                    )),
                    (ia = [Da - Q - 2, v, B + 2, ra]),
                    h[4] > h[1] ? (k[k.length] = ia) : (va[va.length] = ia),
                    h[4] > h[1] && 2 < ra
                      ? (ma[ma.length] = [Da - Q - 1, v + 1, B, ra - 2])
                      : (Fa[Fa.length] = [Da - Q - 1, v + 1, B, ra - 2])),
                  (Da += K);
            d.Dg(y);
            x = 0;
            for (m = k.length; x < m; x++) d.Gg.apply(d, k[x]);
            d.Fg();
            d.Dg(f);
            x = 0;
            for (m = va.length; x < m; x++) d.Gg.apply(d, va[x]);
            d.Fg();
            d.Dg(p);
            x = 0;
            for (m = ma.length; x < m; x++) d.Gg.apply(d, ma[x]);
            d.Fg();
            d.Dg(l);
            x = 0;
            for (m = Fa.length; x < m; x++) d.Gg.apply(d, Fa[x]);
            d.Fg();
            D || c.setAttribute("points", na.concat(sa.reverse()).join(" "));
          }
        }
        if (
          "bar" == a &&
          ((d = this.v),
          (na = this.Ub),
          (sa = this.Hd),
          (va = d.cb),
          (f = d.Lb),
          (p = C.be(d.nw)),
          (c = C.be(d.mw)),
          (l = d.le),
          (D = d.iE),
          (k = d.Dm),
          (K = d.wd),
          (d = G.sc),
          (Fa = Math.floor(0.5 * k)),
          (x = Math.pow(10, va.digits)),
          (B = va.from),
          (m = this.nb),
          (w = this.Sa),
          f && f.length && va)
        ) {
          var Ba, Ia;
          N(sa, "display", "");
          d || ((Ba = []), (Ia = []), sa.setAttribute("points", ""));
          va = [];
          ma = [];
          y = B;
          K = Math.min(B + K, f.length - 1);
          for (B = 0; y <= K; y++)
            if ((O = f[y]))
              (Q = Math.floor(m - O[2] * x * w)),
                (ya = Math.floor(m - O[3] * x * w)),
                d ||
                  ((Ba[Ba.length] = [[B - D, Q].join()]),
                  (Ba[Ba.length] = [[B + D, Q].join()]),
                  (Ia[Ia.length] = [[B - D, ya].join()]),
                  (Ia[Ia.length] = [[B + D, ya].join()])),
                (r = O[4] > O[1]),
                (Q = [B - 1 - Fa, Q, k, ya - Q]),
                r ? (va[va.length] = Q) : (ma[ma.length] = Q),
                0 < D &&
                  ((Q = Math.floor(m - O[1] * x * w)),
                  (Q = [B - 1 - Fa - D, Q, D + k, k]),
                  r ? (va[va.length] = Q) : (ma[ma.length] = Q),
                  (ya = Math.floor(m - O[4] * x * w)),
                  (Q = [B - 1 - Fa, ya, D + k, k]),
                  r ? (va[va.length] = Q) : (ma[ma.length] = Q)),
                (B += l);
          na.Dg(p);
          f = 0;
          for (p = va.length; f < p; f++) na.Gg.apply(na, va[f]);
          na.Fg();
          na.Dg(c);
          f = 0;
          for (p = ma.length; f < p; f++) na.Gg.apply(na, ma[f]);
          na.Fg();
          d || sa.setAttribute("points", Ba.concat(Ia.reverse()).join(" "));
        }
        "line" == a && e.call(this);
      }
      if (
        g.volumes &&
        ((g = this.v),
        (Ba = this.Ub),
        (sa = g.cb),
        (Ia = g.Lb) &&
          Ia.length &&
          sa &&
          ((l = sa.from),
          (a = g.ta),
          (c = g.HM),
          (na = g.le),
          (sa = (p = !0 === sa.volumes || 2 === sa.volumes) ? 5 : 6),
          (D = g.wd),
          !(1 > D)))
      ) {
        var c = Math.max(Math.floor(a / 8 / c), 1) * c,
          Ka,
          d = l,
          f = Math.min(l + D + 1, Ia.length);
        n.yd || ((Ka = !0), Ba.Dg(C.be(g.qw)));
        if (d <= f) {
          p = Ia.slice(l, l + D + 1).reduce(p ? z : A, 0);
          d = l;
          D = l = 0;
          for (k = new Float32Array(4 * (f - d)); d <= f; d++, D++)
            if ((va = Ia[d]))
              (va = (parseFloat(va[sa]) * c) / p),
                Ka
                  ? Ba.Gg(l - 1, a - va, 1, va)
                  : ((k[4 * D] = l),
                    (k[4 * D + 1] = a - va),
                    (k[4 * D + 2] = l),
                    (k[4 * D + 3] = a)),
                (l += na);
          Ka ? Ba.Fg() : Ba.ud(k, C.be(g.qw));
        }
      }
    }
  }
  function e() {
    var a = this.v,
      b = this.Kw,
      c = this.Ub,
      d = a.cb,
      f = a.Lb,
      e = a.le,
      g = G.sc,
      n = d.from,
      p = Math.pow(10, d.digits),
      h = this.nb,
      x = this.Sa;
    if (f && f.length && d) {
      N(b, "display", "");
      var d = [],
        q = [];
      g || ((d = []), b.setAttribute("points", ""));
      for (
        var m = n, n = Math.min(n + a.wd, f.length - 1), k = 0, w;
        m <= n;
        m++
      )
        if ((w = f[m]))
          (w = Math.floor(h - w[4] * p * x)),
            (q[q.length] = k),
            (q[q.length] = w),
            g || (d[d.length] = [k, w].join()),
            (k += e);
      c.Ue(q, C.be(a.nE));
      g || b.setAttribute("points", d.join(" "));
    }
  }
  function k() {
    var a = this.v,
      b = this.YL,
      c = a.cb,
      f = a.Lb;
    if (c && f && f.length) {
      var e = a.se,
        g = a.Cj,
        p = n.devicePixelRatio,
        x = b.getContext("2d"),
        q;
      b.gi != e && (b.setAttribute("width", e * p), N(b, "width", e + "px"));
      b.fi != g && (b.setAttribute("height", g * p), N(b, "height", g + "px"));
      ((q = b.Qv) || 0 === q) && x.clearRect(0, q - 15, e, 30);
      ((q = b.Ov) || 0 === q) && x.clearRect(0, q - 15, e, 30);
      ((q = b.Yv) || 0 === q) && x.clearRect(0, q - 15, e, 30);
      x.setTransform(1, 0, 0, 1, 0, 0);
      x.scale(p, p);
      !1 !== c.ask &&
        (p = f.Ov) &&
        (h.call(this, x, p, a.lw, a.lw, a.dj), (b.Ov = d.call(this, p)));
      !1 !== c.last &&
        (p = f.Yv) &&
        (h.call(this, x, p, a.ow, a.ow, a.dj), (b.Yv = d.call(this, p)));
      !1 !== c.bid &&
        (c = f.Qv) &&
        (h.call(this, x, c, a.xd, a.Ia, a.dj), (b.Qv = d.call(this, c)));
      b.gi = e;
      b.fi = g;
    }
  }
  function h(a, b, c, f, e) {
    var g = this.v,
      n = g.cb,
      p = g.Aa,
      h = g.ta,
      g = d.call(this, b);
    0 <= g &&
      g < h &&
      ((b = b.toFixed(n.digits)),
      (a.font = "9px Tahoma, sans-serif"),
      (a.fillStyle = c),
      a.fillRect(0, g, p, 1),
      (a.fillStyle = f),
      a.fillRect(p + 3, Math.max(g - 6, 0), a.measureText(b).width + 6, 13),
      (a.fillStyle = e),
      (a.textAlign = "left"),
      (a.textBaseline = "middle"),
      a.fillText(b, p + 6, Math.max(g + 1, 7)));
  }
  function b() {
    var a = {};
    a.target = n.Km ? this.canvas : this.element;
    a.nb = this.nb;
    a.ib = this.ib;
    a.ob = this.ob;
    a.Sa = this.Sa;
    a.j = this.S();
    a.Ub = this.Ub;
    a.type = 1;
    this.M("draw", a);
  }
  function a() {
    this.v.cb.foreground && b.call(this);
  }
  function g() {
    this.v.cb.foreground || b.call(this);
  }
  function d(a) {
    return Math.floor(this.nb - a * Math.pow(10, this.v.cb.digits) * this.Sa);
  }
  function f(a, b) {
    return Math.min(a, b[2], b[3]);
  }
  function c(a, b) {
    return Math.max(a, b[2], b[3]);
  }
  function z(a, b) {
    return Math.max(a || Number.MIN_VALUE, b[5]);
  }
  function A(a, b) {
    return Math.max(a || Number.MIN_VALUE, b[6]);
  }
  function m() {
    var a = this.v,
      b = a.cb,
      c = a.Lb,
      a = [];
    a.push(b.symbol_name);
    a.push(",");
    var d = b.period,
      f = p.L.rg,
      e = "";
    d == f.Ve && (e = "M1");
    d == f.Pe && (e = "M5");
    d == f.Ne && (e = "M15");
    d == f.Oe && (e = "M30");
    d == f.Sd && (e = "H1");
    d == f.pe && (e = "H4");
    d == f.Ce && (e = "Daily");
    d == f.ze && (e = "Weekly");
    d == f.nh && (e = "Monthly");
    a.push(e);
    b.ohlc &&
      c &&
      ((b = b.digits || 2), (c = c[c.length - 1])) &&
      (a.push("&nbsp;&nbsp;"),
      a.push(c[1].toFixed(b), " "),
      a.push(c[2].toFixed(b), " "),
      a.push(c[3].toFixed(b), " "),
      a.push(c[4].toFixed(b)));
    return a.join("");
  }
  function u(a) {
    if (this) {
      var b = Q(B(this));
      if (b) {
        var c = this.w;
        if (c) {
          var d = [],
            f = c.v,
            e = f.Lb,
            g = f.Tb(a.clientX, 0);
          a = f.pb(g[0]);
          d.push("Time: ", I.Cc.eg(g[0]));
          d.push("\nOpen: ", e[a][1].toFixed(c.S()));
          d.push("\nHigh: ", e[a][2].toFixed(c.S()));
          d.push("\nLow: ", e[a][3].toFixed(c.S()));
          d.push("\nClose: ", e[a][4].toFixed(c.S()));
          c = f.cb.volumes;
          1 === c && d.push("\nVolume: ", e[a][6]);
          (2 !== c && !0 !== c) || d.push("\nTick Volume: ", e[a][5]);
          b.textContent = d.join("");
        }
      }
    }
  }
  function q() {
    if (this) {
      var a = Q(B(this));
      a && (a.textContent = "");
    }
  }
  var w = E.va,
    p = E.controls,
    n = E.Qa,
    x = E.oc,
    C = E.ma,
    O = E.Bh,
    I = p.L.Nc,
    G = p.L.Zb,
    F = x.i,
    y = x.hc,
    M = w.sb,
    D = w.hb,
    L = w.tb,
    B = w.Ad,
    Q = w.Xb,
    N = w.$a,
    K = (I.xW = function (a) {
      K.G.constructor.apply(this, arguments);
    });
  I.cc(K);
  K.prototype.ha = function (a) {
    var b = this.YL;
    b ||
      ((b = this.YL = M("canvas")),
      (b.id = [this.id, "graph1"].join("_")),
      D(b, "graphic"));
    B(b) || L(a, b);
    K.G.ha.apply(this, arguments);
    return this;
  };
  K.prototype.Ha = function (b) {
    var c = this;
    if (!b) return c;
    c.v = b;
    if (!b.readOnly && (b = b.cb)) {
      var d = p.L.Af;
      !d ||
        (c.Ob && d.RG(b.symbol, c.Ob)) ||
        d.Vb(
          b.symbol,
          (c.Ob = function () {
            K.G.Qd.call(c) &&
              (v.call(c),
              r.call(c),
              a.call(c),
              l.call(c),
              k.call(c),
              K.G.di.call(c, m.call(c)),
              g.call(c));
          }),
          void 0,
          !1
        );
    }
    if (!K.G.Qd.call(c)) return c;
    v.call(c);
    r.call(c);
    a.call(c);
    l.call(c);
    k.call(c);
    K.G.di.call(c, m.call(c));
    g.call(c);
    return c;
  };
  K.prototype.gb = function () {
    var a = this.v.cb,
      b = this.Hd;
    b &&
      ((b.w = null),
      y(b, "mouseover", u),
      y(b, "mousemove", u),
      y(b, "mouseout", q),
      (this.Hd = null));
    if ((b = this.Kw))
      (b.w = null),
        y(b, "mouseover", u),
        y(b, "mousemove", u),
        y(b, "mouseout", q),
        (this.Kw = null);
    this.nb = this.Sa = this.ib = this.ob = this.axis = null;
    this.Ob && (b = p.L.Af) && (b.Ng(a.symbol, this.Ob), (this.Ob = null));
    K.G.gb.apply(this, arguments);
    return this;
  };
})();
(function () {
  function v(a, b, c, d, e) {
    if (a && b && !(1 > d || (a.length < d && e != f.Si))) {
      var g, h, m, k, u, y;
      k = d - 1;
      c && (k = a.length - d - 1);
      switch (e) {
        case f.Zh:
          c = 0;
          m = k;
          for (k = y = m - (d - 1); k <= m; k++) c += a[k] || 0;
          b[m] = c / d;
          k = m + 1;
          for (m = y; k < a.length; k++, m++)
            (c -= a[m] || 0), (c += a[k] || 0), (b[k] = c / d);
          break;
        case f.Si:
          e = 2 / (d + 1);
          k = 1;
          c && (k = a.length - d - 1);
          1 === k && (b[0] = a[0]);
          for (m = a.length; k < m; k++) b[k] = a[k] * e + b[k - 1] * (1 - e);
          break;
        case f.Ns:
          for (m = a.length; k < m; k++) {
            if (k == d - 1) for (c = 0, u = k + 1 - d; u <= k; u++) c += a[u];
            else c = (b[k - 1] || 0) * (d - 1) + a[k];
            b[k] = c / d;
          }
          break;
        case f.fB:
          h = g = c = 0;
          m = k;
          k = y = m - (d - 1);
          for (u = 1; k <= m; k++, u++)
            (e = a[k]), (c += e * u), (g += e), (h += u);
          b[m] = c / h;
          k = m + 1;
          for (m = y; k < a.length; k++, m++)
            (e = a[k]),
              (c = c - g + e * d),
              (g -= a[m]),
              (g += e),
              (b[k] = c / h);
      }
    }
  }
  var r = E.va,
    l = E.controls,
    e = l.L.Nc,
    k = l.L.Zb,
    h = E.Ma,
    b = e.Cc,
    a = E.ba.xa,
    g = r.sb,
    d = r.tb,
    f = { Zh: 0, Si: 1, Ns: 2, fB: 3 },
    c = [];
  c[0] = { value: f.Zh, label: "Simple" };
  c[1] = { value: f.Si, label: "Exponential" };
  c[2] = { value: f.Ns, label: "Smoothed" };
  c[3] = { value: f.fB, label: "Linear Weighted" };
  var z = [255, 0, 0],
    A,
    m,
    u = (e.af.Dh = function (a) {
      u.G.constructor.apply(this, arguments);
      this.Zf("period shift method applyto");
      a = this.data;
      void 0 === a.period && (a.period = 14);
      void 0 === a.shift && (a.shift = 0);
      void 0 === a.method && (a.method = f.Zh);
      void 0 === a.applyto && (a.applyto = b.ng.Pi);
    });
  e.cc(u);
  u.re = e.types.jn;
  u.method = f;
  u.Gw = c;
  u.Hf = v;
  u.aK = function (a, b, c) {
    var d = 0;
    if (a >= b - 1 && 0 < b) {
      for (var f = 0; f < b; f++) d += c[a - f];
      d /= b;
    }
    return d;
  };
  u.K_ = function (a, b, c, d) {
    var f = 0;
    if (0 < b) {
      if (a == b - 1) {
        for (var e = 0; e < b; e++) f += d[a - e];
        f /= b;
      }
      a >= b && (f = (c * (b - 1) + d[a]) / b);
    }
    return f;
  };
  u.fG = function (a, b, c) {
    var d = 0;
    0 < a && ((a = 2 / (a + 1)), (d = c * a + b * (1 - a)));
    return d;
  };
  u.WU = function (a, b, c) {
    var d = 0,
      f = 0,
      e = 0;
    if (a >= b - 1 && 0 < b) {
      for (d = b; 0 < d; d--) (e += d), (f += c[a - d + 1] * (b - d + 1));
      d = f / e;
    }
    return d;
  };
  u.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    if (!u.G.Qd.call(this)) return this;
    u.G.hk.call(this);
    this.vm();
    this.$g();
    this.ic();
    return this;
  };
  u.prototype.gb = function () {
    this.result = null;
    var a = this.qb;
    a && ((a.w = null), e.Pa.Fd.Hh(a), (this.qb = null));
    if (this.Ob) {
      if ((a = this.v.cb)) {
        var b = l.L.Af;
        b && b.Ng(a.symbol, this.Ob);
      }
      this.Ob = null;
    }
    u.G.gb.apply(this, arguments);
    return this;
  };
  u.prototype.cd = function () {
    var a = ["MA"],
      b = this.data;
    b && a.push("(", b.period, ")");
    return a.join("");
  };
  u.prototype.tc = function () {
    return "Moving Average";
  };
  u.prototype.kb = function (d, f) {
    var e = b.xh;
    void 0 === f && (f = e.Kd);
    A ||
      ((A = h(l.input.of)
        .o("moving-average-method")
        .de(c)
        .b({
          position: "absolute",
          left: "84px",
          top: "84px",
          width: "280px",
        })),
      (m = h(l.page.I, "moving-average-method")
        .Text(a.ks + ":")
        .b({
          position: "absolute",
          top: "89px",
          width: "80px",
          "text-align": "right",
        })));
    A.h(!1);
    m.h(!1);
    f & e.JH && (A.h(!0), m.h(!0));
    var g = this.data;
    A.h() && A.f(parseInt(g.method, 10));
    u.G.kb.call(this, d, e.oh | e.Po | e.Oi);
    d.c(A).c(m);
    return 0;
  };
  u.prototype.lb = u.prototype.ye = function () {
    var a = this.data;
    a && A.h() && (a.method = parseInt(A.f(), 10));
    u.G.lb.apply(this, arguments);
    this.Sf();
    return this;
  };
  u.prototype.Lf = function () {
    this.result = null;
    return this;
  };
  u.prototype.wm = function () {
    return !1;
  };
  u.prototype.vm = function () {
    var a = this,
      b = a.v.cb;
    if (!a.Ob) {
      var c = l.L.Af;
      c &&
        c.Vb(
          b.symbol,
          (a.Ob = function () {
            a.$g(!0);
          }),
          void 0,
          !1
        );
    }
  };
  u.prototype.$g = function (a) {
    var b = this.data,
      c = this.result,
      d = b.method ? parseInt(b.method, 10) : f.Zh,
      b = parseInt(b.period, 10),
      e = this.v.Lb;
    !e ||
      !e.length ||
      1 > b ||
      (e.length < b && d != f.Si) ||
      (!a && c && c.length == e.length && c.ea == e.ea && c.fa == e.fa) ||
      (a || ((c = this.result = []), (c.ea = e.ea), (c.fa = e.fa)),
      v(this.Fi(), c, a, b, d));
  };
  u.prototype.ic = function () {
    var a = this.v,
      c = this.data,
      f = this.result,
      n,
      h = this.Nb,
      m = this.qb,
      u = a.Ub,
      l = a.cb;
    if (u && f && f.length && l) {
      var A = a.le,
        F = k.sc,
        y = a.nb,
        r = a.Sa,
        D = l.from,
        l = Math.pow(10, l.digits),
        c = Math.min(c.shift || 0, b.zk);
      m ||
        ((m = g("title", "http://www.w3.org/2000/svg")),
        d(h, m),
        (m = this.qb = g("polyline", "http://www.w3.org/2000/svg")),
        m.setAttribute(
          "style",
          "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
        ),
        (m.w = this),
        e.Pa.Fd.Cg(m),
        d(h, m));
      var L,
        h = D,
        D = Math.min(D + a.wd, f.length - 1),
        B = 0,
        Q = 0;
      F || ((L = []), m.setAttribute("points", ""));
      for (a = new Float32Array(2 * (D - h + 1)); h <= D + c; h++, Q++) {
        if ((n = f[h - c]))
          (n = Math.floor(y - n * l * r)),
            (a[2 * Q] = B),
            (a[2 * Q + 1] = n),
            F || (L[L.length] = [B, n].join());
        B += A;
      }
      u.Ue(a, z);
      F || m.setAttribute("points", L.join(" "));
    }
    return this;
  };
  u.prototype.Kh = function (a) {
    var b = "",
      c = this.data,
      d = this.result,
      f = this.v.pb(a),
      d = d[f],
      b = b + ("Moving Average (" + c.period + ")"),
      b = b + ("\nTime: " + e.Cc.eg(a));
    return (b += "\nValue: " + d.toFixed(this.S()));
  };
})();
(function () {
  function v() {
    if (this) {
      var a = this.w;
      a && a.jb();
    }
  }
  function r(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function l(a) {
    if (this) {
      var b = m(u(this));
      if (b) {
        var c = this.w;
        if (c) {
          var f = [],
            e = c.v,
            g = c.data,
            n = c.result;
          a = e.Tb(a.clientX, 0);
          var p = e.pb(a[0]),
            h = e.ib,
            e = Math.min(parseInt(g.shift, 10) || 0, d.zk),
            h = (h / 100) * (parseFloat(g.deviation) || 0),
            n = n[p - e];
          this == c.ld && (n += h);
          this == c.bc && (n -= h);
          this == c.ld && f.push("Upper Envelope ");
          this == c.bc && f.push("Lower Envelope ");
          f.push("(", g.period, ")");
          f.push("\nTime: ", d.eg(a[0]));
          f.push("\nValue: ", (n || 0).toFixed(c.S()));
          b.textContent = f.join("");
        }
      }
    }
  }
  function e() {
    if (this) {
      var a = m(u(this));
      a && (a.textContent = "");
    }
  }
  var k = E.va,
    h = E.oc,
    b = E.controls,
    a = b.L.Nc,
    g = b.L.Zb,
    d = a.Cc,
    f = E.Ma,
    c = E.ba.xa,
    z = k.sb,
    A = k.tb,
    m = k.Xb,
    u = k.Ad,
    q = h.i,
    w = h.hc,
    p = [1, 0, 0],
    n = [0, 0, 1],
    x,
    C,
    O = (a.af.J8 = function (a) {
      O.G.constructor.apply(this, arguments);
      this.Zf("deviation");
      a = this.data;
      void 0 === a.deviation && (a.deviation = 0.1);
    });
  a.cc(O, a.af.Dh);
  O.re = a.types.jn;
  O.prototype.gb = function () {
    this.result = null;
    var a = this.ld;
    a &&
      ((a.w = null),
      w(a, "mousedown", v),
      w(a, "mouseover", l),
      w(a, "mouseout", e),
      w(a, "dblclick", r),
      (this.ld = null));
    if ((a = this.bc))
      (a.w = null),
        w(a, "mousedown", v),
        w(a, "mouseover", l),
        w(a, "mouseout", e),
        w(a, "dblclick", r),
        (this.bc = null);
    O.G.gb.apply(this, arguments);
    return this;
  };
  O.prototype.cd = function () {
    var a = ["Env"],
      b = this.data;
    b && a.push("(", b.period, ")");
    return a.join("");
  };
  O.prototype.tc = function () {
    return "Envelopes";
  };
  O.prototype.kb = function (a) {
    O.G.kb.apply(this, arguments);
    x ||
      ((x = f(b.input.Number)
        .o("envelopes-deviation")
        .Fa(0)
        .mc(100)
        .Y(0.1)
        .T(2)
        .b({
          position: "absolute",
          top: "16px",
          left: "84px",
          width: "100px",
        })
        .b({ top: "118px", width: "80px" })),
      (C = f(b.page.I, "envelopes-deviation")
        .Text(c.OT + ":")
        .b({
          position: "absolute",
          top: "21px",
          width: "80px",
          "text-align": "right",
        })
        .b({ top: "123px" })));
    x.f(parseFloat(this.data.deviation));
    a.c(x).c(C);
    return 272;
  };
  O.prototype.lb = O.prototype.ye = function () {
    var a = this.data;
    a && (a.deviation = parseFloat(x.f()));
    O.G.lb.apply(this, arguments);
    return this;
  };
  O.prototype.wm = function () {
    return !1;
  };
  O.prototype.ic = function () {
    var a = this.v,
      b = this.result,
      c = this.data,
      f = this.Nb,
      h = this.ld,
      x = this.bc,
      m = a.Ub,
      k = a.cb;
    if (m && b && b.length && k) {
      var w = a.le,
        u = g.sc,
        C = a.nb,
        O = a.Sa,
        T = a.ib,
        R = k.from,
        k = Math.pow(10, k.digits),
        H = Math.min(c.shift || 0, d.zk),
        c = (T / 100) * (parseFloat(c.deviation) || 0);
      h ||
        ((h = z("title", "http://www.w3.org/2000/svg")),
        A(f, h),
        (h = this.ld = z("polyline", "http://www.w3.org/2000/svg")),
        h.setAttribute(
          "style",
          "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
        ),
        (h.w = this),
        q(h, "mousedown", v),
        q(h, "mouseover", l),
        q(h, "mouseout", e),
        q(h, "dblclick", r),
        A(f, h));
      x ||
        ((x = this.bc = z("polyline", "http://www.w3.org/2000/svg")),
        x.setAttribute(
          "style",
          "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
        ),
        (x.w = this),
        q(x, "mousedown", v),
        q(x, "mouseover", l),
        q(x, "mouseout", e),
        q(x, "dblclick", r),
        A(f, x));
      var S,
        Z,
        a = Math.min(R + a.wd, b.length - 1),
        W = a + H,
        Y = 0,
        V = 0,
        ea;
      u ||
        ((S = []),
        (Z = []),
        h.setAttribute("points", ""),
        x.setAttribute("points", ""));
      f = new Float32Array(2 * (W - R + 1));
      for (T = new Float32Array(2 * (W - R + 1)); R <= W; R++, V++) {
        if ((a = b[R - H]))
          (ea = Math.floor(C - (a + c) * k * O)),
            u || (S[S.length] = [Y, ea].join()),
            (f[2 * V] = Y),
            (f[2 * V + 1] = ea),
            (ea = Math.floor(C - (a - c) * k * O)),
            u || (Z[Z.length] = [Y, ea].join()),
            (T[2 * V] = Y),
            (T[2 * V + 1] = ea);
        Y += w;
      }
      m.Ue(f, n);
      m.Ue(T, p);
      u ||
        (h.setAttribute("points", S.join(" ")),
        x.setAttribute("points", Z.join(" ")));
    }
    return this;
  };
})();
(function () {
  function v() {
    if (this) {
      var a = this.w;
      if (a && (a = a.element)) {
        var b = m(a);
        b &&
          setTimeout(function () {
            b.focus();
          }, 0);
      }
    }
  }
  function r(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function l(a) {
    if (this) {
      var b = m(u(this));
      if (b) {
        var c = this.w;
        if (c) {
          var f = [],
            e = c.v,
            g = c.data,
            n = c.result,
            p = c.Jd;
          a = e.Tb(a.clientX, 0);
          var e = e.pb(a[0]),
            h = Math.min(parseInt(g.shift, 10) || 0, d.zk),
            n = n[e - h],
            p = p[e - h];
          this == c.bc && (n += p);
          this == c.xf && (n -= p);
          f.push("Bollinger Bands(", g.period, ")");
          f.push("\nTime: ", d.eg(a[0]));
          f.push("\nValue: ", (n || 0).toFixed(c.S()));
          b.textContent = f.join("");
        }
      }
    }
  }
  function e() {
    if (this) {
      var a = m(u(this));
      a && (a.textContent = "");
    }
  }
  var k = E.va,
    h = E.oc,
    b = E.controls,
    a = b.L.Nc,
    g = b.L.Zb,
    d = a.Cc,
    f = E.Ma,
    c = E.ba.xa,
    z = k.sb,
    A = k.tb,
    m = k.Xb,
    u = k.Ad,
    q = h.i,
    w = h.hc,
    p = [60 / 255, 179 / 255, 113 / 255],
    n,
    x,
    C = (a.af.s5 = function (a) {
      C.G.constructor.apply(this, arguments);
      this.data.method = null;
      delete this.data.method;
      this.Zf("deviations");
      a = this.data;
      void 0 === a.deviations && (a.deviations = 2);
    });
  a.cc(C, a.af.Dh);
  C.re = a.types.jn;
  C.prototype.gb = function () {
    this.result = null;
    var a = this.ld;
    a &&
      ((a.w = null),
      w(a, "mousedown", v),
      w(a, "mouseover", l),
      w(a, "mouseout", e),
      w(a, "dblclick", r),
      (this.ld = null));
    if ((a = this.bc))
      (a.w = null),
        w(a, "mousedown", v),
        w(a, "mouseover", l),
        w(a, "mouseout", e),
        w(a, "dblclick", r),
        (this.bc = null);
    if ((a = this.bc))
      (a.w = null),
        w(a, "mousedown", v),
        w(a, "mouseover", l),
        w(a, "mouseout", e),
        w(a, "dblclick", r),
        (this.xf = null);
    C.G.gb.apply(this, arguments);
    return this;
  };
  C.prototype.cd = function () {
    var a = ["Bands"],
      b = this.data;
    b && a.push("(", b.period, ")");
    return a.join("");
  };
  C.prototype.tc = function () {
    return "Bollinger Bands";
  };
  C.prototype.kb = function (a) {
    var e = d.xh;
    C.G.kb.call(this, a, e.oh | e.Po | e.Oi);
    n ||
      ((n = f(b.input.Number)
        .o("bollingerbands-deviations")
        .Fa(0)
        .mc(100)
        .Y(1)
        .T(2)
        .b({ position: "absolute", left: "84px", width: "100px" })
        .b({ top: "84px", width: "80px" })),
      (x = f(b.page.I, "bollingerbands-deviations")
        .Text(c.bH + ":")
        .b({ position: "absolute", width: "80px", "text-align": "right" })
        .b({ top: "89px" })));
    n.f(parseFloat(this.data.deviations));
    a.c(n).c(x);
    return 0;
  };
  C.prototype.lb = C.prototype.ye = function () {
    var a = this.data;
    a && (a.deviations = parseFloat(n.f()));
    C.G.lb.apply(this, arguments);
    return this;
  };
  C.prototype.Lf = function () {
    this.Jd = null;
    C.G.Lf.apply(this, arguments);
    return this;
  };
  C.prototype.$g = function (a) {
    C.G.$g.apply(this, arguments);
    var b = a,
      c = d.Wh,
      f = this.data,
      e = this.result,
      g = this.Jd,
      n = parseInt(f.period, 10),
      p = parseInt(f.applyto, 10),
      f = parseFloat(f.deviations),
      h = this.v.Lb,
      x,
      m;
    if (e && (b || !g || g.length != e.length)) {
      (b && g) || (g = this.Jd = []);
      x = n - 1;
      b && (x = h.length - n - 1);
      for (var k = x, q = h.length, u; k < q; k++) {
        b = 0;
        x = e[k];
        for (u = k + 1 - n; u <= k; ) (m = c(h[u++], p) - x), (b += m * m);
        g[k] = f * Math.sqrt(b / n);
      }
    }
  };
  C.prototype.ic = function () {
    var a = this.v,
      b = this.result,
      c = this.Jd,
      f,
      n = this.data;
    f = this.Nb;
    var h = this.ld,
      x = this.bc,
      m = this.xf,
      k = a.Ub,
      u = a.cb;
    if (b && b.length && u) {
      var w = a.le,
        C = g.sc,
        P = a.nb,
        T = a.Sa,
        R = u.from,
        u = Math.pow(10, u.digits),
        n = Math.min(n.shift || 0, d.zk);
      h ||
        ((h = z("title", "http://www.w3.org/2000/svg")),
        A(f, h),
        (h = this.ld = z("polyline", "http://www.w3.org/2000/svg")),
        h.setAttribute(
          "style",
          "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
        ),
        (h.w = this),
        q(h, "mousedown", v),
        q(h, "mouseover", l),
        q(h, "mouseout", e),
        q(h, "dblclick", r),
        A(f, h));
      x ||
        ((x = this.bc = z("polyline", "http://www.w3.org/2000/svg")),
        x.setAttribute(
          "style",
          "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
        ),
        (x.w = this),
        q(x, "mousedown", v),
        q(x, "mouseover", l),
        q(x, "mouseout", e),
        q(x, "dblclick", r),
        A(f, x));
      m ||
        ((m = this.xf = z("polyline", "http://www.w3.org/2000/svg")),
        m.setAttribute(
          "style",
          "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
        ),
        (m.w = this),
        q(m, "mousedown", v),
        q(m, "mouseover", l),
        q(m, "mouseout", e),
        q(m, "dblclick", r),
        A(f, m));
      var H,
        S,
        Z,
        W,
        Y,
        V,
        a = Math.min(R + a.wd, b.length - 1),
        ea = a + n,
        ha = 0,
        fa = 0,
        aa;
      C ||
        ((H = []),
        (S = []),
        (Z = []),
        h.setAttribute("points", ""),
        x.setAttribute("points", ""),
        m.setAttribute("points", ""));
      W = new Float32Array(2 * (ea - R + 1));
      Y = new Float32Array(2 * (ea - R + 1));
      for (V = new Float32Array(2 * (ea - R + 1)); R <= ea; R++, fa++)
        (a = b[R - n]),
          (f = c[R - n]),
          a &&
            ((aa = Math.floor(P - a * u * T)),
            C || (H[H.length] = [ha, aa].join()),
            (W[2 * fa] = ha),
            (W[2 * fa + 1] = aa)),
          f &&
            ((aa = Math.floor(P - (a + f) * u * T)),
            C || (S[S.length] = [ha, aa].join()),
            (Y[2 * fa] = ha),
            (Y[2 * fa + 1] = aa),
            (aa = Math.floor(P - (a - f) * u * T)),
            C || (Z[Z.length] = [ha, aa].join()),
            (V[2 * fa] = ha),
            (V[2 * fa + 1] = aa)),
          (ha += w);
      k.Ue(W, p);
      k.Ue(Y, p);
      k.Ue(V, p);
      C ||
        (h.setAttribute("points", H.join(" ")),
        x.setAttribute("points", S.join(" ")),
        m.setAttribute("points", Z.join(" ")));
    }
    return this;
  };
  C.prototype.wm = function () {
    return !1;
  };
})();
(function () {
  function v() {
    I.g(!O.s());
    I.g() ||
      setTimeout(function () {
        I.jb().Gb();
      }, 0);
  }
  function r() {
    y.g(!F.s());
    y.g() ||
      setTimeout(function () {
        y.jb().Gb();
      }, 0);
  }
  var l = E.controls,
    e = E.va,
    k = E.Qa,
    h = E.ma,
    b = E.Bh,
    a = l.L.Zb,
    g = l.L.Nc,
    d = g.Cc,
    f = g.af.Dh.fG,
    c = E.Ma,
    z = E.ba.xa,
    A = e.$a,
    m = h.xk,
    u = e.sb,
    q = e.tb,
    w = h.Vc,
    p = [32 / 255, 178 / 255, 170 / 255],
    n = [154 / 255, 205 / 255, 50 / 255],
    x = [245 / 255, 222 / 255, 179 / 255],
    C,
    O,
    I,
    G,
    F,
    y,
    M = (g.af.g5 = function (a) {
      M.G.constructor.apply(this, arguments);
      this.Zf("period");
      this.dh = 2;
      a = this.data;
      void 0 === a.period && (a.period = 14);
    });
  g.cc(M);
  g.Ch(M, g.Pa.Gd);
  M.re = g.types.Jf;
  M.prototype.gb = function () {
    g.Pa.Gd.gb.call(this);
    var a = this.bc;
    a && ((a.w = null), g.Pa.Fd.Hh(a), (this.bc = null));
    if ((a = this.xf)) (a.w = null), g.Pa.Fd.Hh(a), (this.xf = null);
  };
  M.prototype.cd = function () {
    var a = ["ADX"],
      b = this.data;
    b && a.push("(", b.period, ")");
    return a.join("");
  };
  M.prototype.tc = function () {
    return "Average Directional Movement Index";
  };
  M.prototype.Lf = function () {
    var a = this.Ub;
    this.J = this.ue = this.Jd = null;
    a && a.Oa();
    return this;
  };
  M.prototype.kb = function (a) {
    var b = this.data,
      f = this.v;
    M.G.kb.call(this, a, d.xh.oh);
    f = (f && f.cb && f.cb.digits) || 4;
    if (!C) {
      var e = {
          position: "absolute",
          top: "55px",
          width: "260px",
          "text-align": "right",
          "white-space": "nowrap",
        },
        g = { position: "absolute", top: "56px", left: "264px" },
        n = { position: "absolute", top: "50px", left: "284px", width: "80px" };
      I = c(l.input.Number).o("adx-min-value").Y(Math.pow(0.1, f)).T(f).b(n);
      O = c(l.input.pa).o("adx-min").b(g).i("change", v);
      C = c(l.page.I, "adx-min")
        .Text(z.hg + ":")
        .b(e);
      e.top = "89px";
      g.top = "91px";
      n.top = "84px";
      y = c(l.input.Number).o("adx-max-value").Y(Math.pow(0.1, f)).T(f).b(n);
      F = c(l.input.pa).o("adx-max").b(g).i("change", r);
      G = c(l.page.I, "adx-max")
        .Text(z.gg + ":")
        .b(e);
    }
    void 0 !== b.min
      ? (O.s(!0), I.g(!1).f(b.min))
      : (O.s(!1), I.g(!0).f(this.ob));
    void 0 !== b.max
      ? (F.s(!0), y.g(!1).f(b.max))
      : (F.s(!1), y.g(!0).f(this.ib));
    a.c(I).c(O).c(C).c(y).c(F).c(G);
    return 235;
  };
  M.prototype.lb = M.prototype.ye = function () {
    if (y && I) {
      var a = this.data;
      a &&
        (y.g() || I.g() || (y.f() <= I.f() && y.f(I.Fa() + 1)),
        y.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(y.f())),
        I.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(I.f())));
    }
    M.G.lb.apply(this, arguments);
    this.Sf();
    return this;
  };
  M.prototype.S = function () {
    return 2;
  };
  M.prototype.ug = function (a) {
    var b = this.Jd,
      c = this.ue,
      d = this.J,
      e = this.v.Lb,
      g = e.length,
      n = this.data.period;
    if (!e || !e.length || 1 > n) this.J = this.ue = this.Jd = null;
    else if (a || !b || b.length != e.length || b.ea != e.ea || b.fa != e.fa)
      for (
        (a && b && c && d) ||
          ((b = this.Jd = w(g)),
          (b.ea = e.ea),
          (b.fa = e.fa),
          (c = this.ue = w(g)),
          (d = this.J = w(g))),
          a = a ? e.length - 1 : 1;
        a < g;
        a++
      ) {
        var p = e[a],
          h = e[a - 1],
          x = p[2],
          m = p[3],
          k = h[4],
          p = x - h[2],
          h = h[3] - m;
        0 > p && (p = 0);
        0 > h && (h = 0);
        p > h ? (h = 0) : p < h ? (p = 0) : (h = p = 0);
        x = Math.max(
          Math.max(Math.abs(x - m), Math.abs(x - k)),
          Math.abs(m - k)
        );
        0 !== x ? ((p = (100 * p) / x), (x = (100 * h) / x)) : (x = p = 0);
        c[a] = f(n, c[a - 1], p);
        d[a] = f(n, d[a - 1], x);
        x = c[a] + d[a];
        x = 0 !== x ? 100 * Math.abs((c[a] - d[a]) / x) : 0;
        b[a] = f(n, b[a - 1], x);
      }
  };
  M.prototype.wq = function () {
    var a = this.Jd,
      b = this.ue,
      c = this.J,
      d;
    if (a) {
      var f = this.v,
        e = this.data,
        g = f.cb,
        n = f.ta;
      d = f.wd;
      var p = g.from,
        g = Math.pow(10, g.digits),
        f = e.min,
        e = e.max,
        h,
        x,
        m = isNaN(parseFloat(f)),
        k = isNaN(parseFloat(e));
      if (m || k) {
        m && ((f = Number.MAX_VALUE), (h = !0));
        k && ((e = Number.MIN_VALUE), (x = !0));
        for (var q = p, p = p + d; q <= p; q++) {
          if ((d = a[q])) m && d < f && (f = d), k && d > e && (e = d);
          if ((d = b[q])) m && d < f && (f = d), k && d > e && (e = d);
          if ((d = c[q])) m && d < f && (f = d), k && d > e && (e = d);
        }
      }
      a = 10 * (x + h);
      n = n - a;
      this.Sa = n / (e * g - f * g);
      h && (f -= ((e - f) / n) * 10);
      x && (e += ((e - f) / n) * 10);
      this.nb = Math.round(n + this.Sa * f * g + a);
      this.ob = f;
      this.ib = e;
    }
  };
  M.prototype.wi = function (c) {
    var d = this.Jd,
      f = this.ue,
      e = this.J;
    if (d && d.length) {
      var g = this.v,
        h = this.canvas,
        q = this.Ub,
        u = g.cb,
        w = g.Lb,
        y = g.se,
        C = g.ta,
        l = g.le,
        z = g.wd,
        g = a.sc,
        G = Math.pow(10, u.digits),
        F = this.nb,
        O = this.Sa;
      if (w && w.length && u) {
        var r = u.from,
          u = Math.min(r + z, w.length - 1);
        if (
          !(
            (c && r + z < w.length - 1) ||
            (this.Ik(),
            parseInt(h.style.width, 10) != y &&
              (k.sa
                ? h.setAttribute("width", y * k.devicePixelRatio)
                : h.setAttribute("width", y),
              A(h, "width", y + "px")),
            parseInt(h.style.height, 10) != C &&
              (k.sa
                ? h.setAttribute("height", C * k.devicePixelRatio)
                : h.setAttribute("height", C),
              A(h, "height", C + "px")),
            q || (q = this.Ub = new b(h)),
            q.Oa(),
            1 > z)
          )
        ) {
          this.G.sh.call(this);
          var I, v, M, ga, U, ba;
          k.yd || ((ba = !0), (U = q.vi()));
          c = this.qb;
          h = this.bc;
          w = this.xf;
          g ||
            ((I = []),
            (v = []),
            (M = []),
            c.setAttribute("points", ""),
            h.setAttribute("points", ""),
            w.setAttribute("points", ""));
          for (var y = [], C = [], z = [], da = 0, ca = 0; r <= u; r++, ca++)
            (ga = d[r]),
              void 0 !== ga &&
                ((ga = Math.floor(F - ga * G * O)),
                g || (I[I.length] = [da, ga].join()),
                (y[y.length] = da),
                (y[y.length] = ga)),
              (ga = f[r]),
              void 0 !== ga &&
                ((ga = Math.floor(F - ga * G * O)),
                g || (v[v.length] = [da, ga].join()),
                (C[C.length] = da),
                (C[C.length] = ga)),
              (ga = e[r]),
              void 0 !== ga &&
                ((ga = Math.floor(F - ga * G * O)),
                g || (M[M.length] = [da, ga].join()),
                (z[z.length] = da),
                (z[z.length] = ga)),
              (da += l);
          g ||
            (c.setAttribute("points", I.join(" ")),
            h.setAttribute("points", v.join(" ")),
            w.setAttribute("points", M.join(" ")));
          if (ba) {
            U.strokeStyle = m(n);
            U.beginPath();
            U.setLineDash && U.setLineDash([3]);
            r = 0;
            for (u = C.length; r < u; r += 2)
              (da = C[r] * k.devicePixelRatio + 0.5),
                (ga = C[r + 1] * k.devicePixelRatio + 0.5),
                0 === r ? U.moveTo(da, ga) : U.lineTo(da, ga);
            U.stroke();
            U.strokeStyle = m(x);
            U.beginPath();
            U.setLineDash && U.setLineDash([3]);
            r = 0;
            for (u = z.length; r < u; r += 2)
              (da = z[r] * k.devicePixelRatio + 0.5),
                (ga = z[r + 1] * k.devicePixelRatio + 0.5),
                0 === r ? U.moveTo(da, ga) : U.lineTo(da, ga);
            U.stroke();
            U.beginPath();
            U.strokeStyle = m(p);
            U.setLineDash && U.setLineDash([]);
            r = 0;
            for (u = y.length; r < u; r += 2)
              (da = y[r] * k.devicePixelRatio + 0.5),
                (ga = y[r + 1] * k.devicePixelRatio + 0.5),
                0 === r ? U.moveTo(da, ga) : U.lineTo(da, ga);
            U.stroke();
          } else q.Ue(y, p), q.Ue(C, n, 3), q.Ue(z, x, 3);
        }
      }
    }
  };
  M.prototype.Ik = function () {
    var a = this.qb,
      b = this.Nb;
    a ||
      ((a = u("title", "http://www.w3.org/2000/svg")),
      q(b, a),
      (a = this.qb = u("polyline", "http://www.w3.org/2000/svg")),
      a.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      a.setAttribute("data-type", "adx"),
      (a.w = this),
      g.Pa.Fd.Cg(a),
      q(b, a));
    a = this.bc;
    a ||
      ((a = u("title", "http://www.w3.org/2000/svg")),
      q(b, a),
      (a = this.bc = u("polyline", "http://www.w3.org/2000/svg")),
      a.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      a.setAttribute("data-type", "+di"),
      (a.w = this),
      g.Pa.Fd.Cg(a),
      q(b, a));
    a = this.xf;
    a ||
      ((a = u("title", "http://www.w3.org/2000/svg")),
      q(b, a),
      (a = this.xf = u("polyline", "http://www.w3.org/2000/svg")),
      a.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      ),
      a.setAttribute("data-type", "-di"),
      (a.w = this),
      g.Pa.Fd.Cg(a),
      q(b, a));
  };
  M.prototype.OD = function () {
    var a = this.Jd,
      b = this.ue,
      c = this.J,
      d = this.S(),
      f = this.cd() + " ";
    a && a.length && (f += a[a.length - 1].toFixed(d));
    b && b.length && (f += " +DI:" + b[b.length - 1].toFixed(d));
    c && c.length && (f += " -DI:" + c[c.length - 1].toFixed(d));
    return f;
  };
  M.prototype.Kh = function (a, b) {
    var c = [],
      f = this.Jd,
      e = this.ue,
      g = this.J,
      n = this.v.pb(a),
      p = this.S(),
      h = b.getAttribute("data-type");
    c.push(this.tc());
    c.push("\nTime: ", d.eg(a));
    "adx" == h
      ? c.push("\nADX: ", f[n].toFixed(p))
      : "+di" == h
      ? c.push("\n+DI: ", e[n].toFixed(p))
      : c.push("\n-DI: ", g[n].toFixed(p));
    return c.join("");
  };
})();
(function () {
  function v() {
    function a(e) {
      var g = c("title", "http://www.w3.org/2000/svg");
      z(f, g);
      g = c("polyline", "http://www.w3.org/2000/svg");
      g.setAttribute(
        "style",
        "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
      );
      g.setAttribute("data-type", e);
      g.w = d;
      b.Pa.Fd.Cg(g);
      z(f, g);
      return g;
    }
    var d = this,
      f = d.Nb;
    d.xw || (d.xw = a("chikou"));
    d.Bw || (d.Bw = a("tenkan"));
    d.yw || (d.yw = a("kijun"));
    d.zw || (d.zw = a("spanA"));
    d.Aw || (d.Aw = a("spanB"));
  }
  function r(a, b, c) {
    var d;
    d = a[c][2];
    for (var f = c; f > c - b && 0 <= f; f--) {
      var e = a[f][2];
      d < e && (d = e);
    }
    return d;
  }
  function l(a, b, c) {
    var d;
    d = a[c][3];
    for (var f = c; f > c - b && 0 <= f; f--) {
      var e = a[f][3];
      d > e && (d = e);
    }
    return d;
  }
  var e = E.va,
    k = E.controls,
    h = E.ma,
    b = k.L.Nc,
    a = k.L.Zb,
    g = E.Ma,
    d = b.Cc,
    f = E.ba.xa,
    c = e.sb,
    z = e.tb,
    A = [0, 1, 0],
    m = [1, 0, 0],
    u = [0, 0, 255],
    q = [244 / 255, 164 / 255, 96 / 255],
    w = [216 / 255, 191 / 255, 216 / 255],
    p,
    n,
    x,
    C,
    O,
    I,
    G = (b.af.e$ = function (a) {
      G.G.constructor.apply(this, arguments);
      this.Zf("tenkan kijun senkou");
      a = this.data;
      void 0 === a.tenkan && (a.tenkan = 9);
      void 0 === a.kijun && (a.kijun = 26);
      void 0 === a.senkou && (a.senkou = 52);
    });
  b.cc(G);
  G.re = b.types.jn;
  G.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    if (!G.G.Qd.call(this)) return this;
    G.G.hk.call(this);
    this.vm();
    this.$g();
    this.ic();
    return this;
  };
  G.prototype.gb = function () {
    function a(c) {
      c && ((c.w = null), b.Pa.Fd.Hh(c));
    }
    this.result = null;
    a(this.xw);
    this.xw = null;
    a(this.Bw);
    this.Bw = null;
    a(this.yw);
    this.yw = null;
    a(this.zw);
    this.zw = null;
    a(this.Aw);
    this.Aw = null;
    if (this.Ob) {
      var c = this.v.cb;
      if (c) {
        var d = k.L.Af;
        d && d.Ng(c.symbol, this.Ob);
      }
      this.Ob = null;
    }
    G.G.gb.apply(this, arguments);
    return this;
  };
  G.prototype.cd = function () {
    var a = "Ichimoku",
      b = this.data;
    b && (a += "(" + b.tenkan + "," + b.kijun + "," + b.senkou + ")");
    return a;
  };
  G.prototype.tc = function () {
    return "Ichimoku Kinko Hyo";
  };
  G.prototype.kb = function (a) {
    var b = this.data,
      c = {
        left: "150px",
        position: "absolute",
        top: "21px",
        width: "80px",
        "text-align": "right",
      },
      e = { left: "234px", position: "absolute", top: "16px", width: "100px" };
    p ||
      ((p = g(k.input.Number).o("tenkan-sen").Fa(1).mc(d.Xh).T(0).Y(1).b(e)),
      (n = g(k.page.I, p.o())
        .Text(f.bU + ":")
        .b(c)),
      (e.top = "50px"),
      (c.top = "55px"),
      (x = g(k.input.Number).o("kijun-sen").Fa(1).mc(d.Xh).T(0).Y(1).b(e)),
      (C = g(k.page.I, x.o())
        .Text(f.QT + ":")
        .b(c)),
      (e.top = "84px"),
      (c.top = "89px"),
      (O = g(k.input.Number).o("senkou").Fa(1).mc(d.Xh).T(0).Y(1).b(e)),
      (I = g(k.page.I, O.o())
        .Text(f.ZT + ":")
        .b(c)));
    p.f(parseInt(b.tenkan, 10));
    x.f(parseInt(b.kijun, 10));
    O.f(parseInt(b.senkou, 10));
    a.c(p).c(n).c(x).c(C).c(O).c(I);
    return 0;
  };
  G.prototype.lb = G.prototype.ye = function () {
    var a = this.data;
    a &&
      ((a.tenkan = parseInt(p.f(), 10)),
      (a.kijun = parseInt(x.f(), 10)),
      (a.senkou = parseInt(O.f(), 10)));
    this.Sf();
    return this;
  };
  G.prototype.Lf = function () {
    this.Pw = this.Ow = this.Nw = this.Qw = this.Mw = null;
    return this;
  };
  G.prototype.wm = function () {
    return !1;
  };
  G.prototype.vm = function () {
    var a = this,
      b = a.v.cb;
    if (!a.Ob) {
      var c = k.L.Af;
      c &&
        c.Vb(
          b.symbol,
          (a.Ob = function () {
            a.$g(!0);
          }),
          void 0,
          !1
        );
    }
  };
  G.prototype.$g = function (a) {
    var b = this.data,
      c = this.Mw,
      d = this.Qw,
      f = this.Nw,
      e = this.Ow,
      g = this.Pw,
      n = b.tenkan,
      p = b.kijun,
      b = b.senkou,
      x = this.v.Lb,
      m = x.length;
    if (
      x &&
      x.length &&
      (a || !d || d.length != x.length || d.ea != x.ea || d.fa != x.fa)
    ) {
      a ||
        ((d = this.Qw = h.Vc(m)),
        (d.ea = x.ea),
        (d.fa = x.fa),
        (c = this.Mw = h.Vc(m)),
        (f = this.Nw = h.Vc(m)),
        (e = this.Ow = h.Vc(m)),
        (g = this.Pw = h.Vc(m)));
      var k = 0;
      for (a && (k = m - 1); k < m; k++) {
        c[k] = x[k][4];
        a = r(x, n, k);
        var q = l(x, n, k);
        d[k] = (a + q) / 2;
        a = r(x, p, k);
        q = l(x, p, k);
        f[k] = (a + q) / 2;
        e[k] = (d[k] + f[k]) / 2;
        a = r(x, b, k);
        q = l(x, b, k);
        g[k] = (a + q) / 2;
      }
    }
  };
  G.prototype.ic = function () {
    var b = this.v,
      c = this.data,
      d = this.Mw,
      f = this.Qw,
      e = this.Nw,
      g = this.Ow,
      n = this.Pw,
      p,
      h = b.Ub,
      x = b.cb;
    if (h && f && f.length && x) {
      var k = b.le,
        C = a.sc,
        l = b.nb,
        z = b.Sa,
        G = x.from,
        x = Math.pow(10, x.digits),
        c = c.kijun;
      v.call(this);
      var r = this.xw,
        O = this.Bw,
        I = this.yw,
        ea = this.zw,
        ha = this.Aw,
        fa = {},
        aa = G,
        b = Math.min(G + b.wd, b.Lb.length - 1),
        G = 0,
        X = -c,
        ga = 0;
      C ||
        ((fa = { chikou: [], tenkan: [], kijun: [], spanA: [], spanB: [] }),
        r.setAttribute("points", ""),
        O.setAttribute("points", ""),
        I.setAttribute("points", ""),
        ea.setAttribute("points", ""),
        ha.setAttribute("points", ""));
      for (
        var U = [],
          ba = new Float32Array(2 * (b - aa + 1)),
          da = new Float32Array(2 * (b - aa + 1)),
          ca = [],
          ka = [],
          oa = [],
          ra = [];
        aa <= b + c;
        aa++, ga++
      ) {
        if ((p = d[aa - X]))
          (p = Math.floor(l - p * x * z)),
            (U[2 * ga] = G),
            (U[2 * ga + 1] = p),
            C || (fa.chikou[fa.chikou.length] = [G, p].join());
        if ((p = f[aa]))
          (p = Math.floor(l - p * x * z)),
            (ba[2 * ga] = G),
            (ba[2 * ga + 1] = p),
            C || (fa.tenkan[fa.tenkan.length] = [G, p].join());
        if ((p = e[aa]))
          (p = Math.floor(l - p * x * z)),
            (da[2 * ga] = G),
            (da[2 * ga + 1] = p),
            C || (fa.kijun[fa.kijun.length] = [G, p].join());
        if ((p = g[aa + X]))
          (p = Math.floor(l - p * x * z)),
            (ca[2 * ga] = G),
            (ca[2 * ga + 1] = p),
            C || (fa.spanA[fa.spanA.length] = [G, p].join());
        if ((p = n[aa + X]))
          (p = Math.floor(l - p * x * z)),
            (ka[2 * ga] = G),
            (ka[2 * ga + 1] = p),
            C || (fa.spanB[fa.spanB.length] = [G, p].join());
        p = ca[2 * ga + 1];
        var na = ka[2 * ga + 1],
          sa = p < na ? oa : ra;
        sa[sa.length] = G;
        sa[sa.length] = p;
        sa[sa.length] = G;
        sa[sa.length] = na;
        G += k;
      }
      h.Ue(U, A);
      h.Ue(ba, m);
      h.Ue(da, u);
      h.Ue(ca, q, 3);
      h.Ue(ka, w, 3);
      h.ud(oa, q, 3);
      h.ud(ra, w, 3);
      C ||
        (r.setAttribute("points", fa.chikou.join(" ")),
        O.setAttribute("points", fa.tenkan.join(" ")),
        I.setAttribute("points", fa.kijun.join(" ")),
        ea.setAttribute("points", fa.spanA.join(" ")),
        ha.setAttribute("points", fa.spanB.join(" ")));
    }
    return this;
  };
  G.prototype.Kh = function (a, b) {
    var c = [],
      f = this.data,
      e = this.v.pb(a),
      g,
      n = parseInt(f.kijun, 10) || 0,
      p = this.Mw,
      h = this.Qw,
      x = this.Nw,
      m = this.Ow,
      k = this.Pw,
      q = b.getAttribute("data-type");
    c.push("Ichimoku (", [f.tenkan, f.kijun, f.senkou].join(), ")");
    c.push("\nTime: ", d.eg(a));
    "tenkan" == q &&
      h[e] &&
      c.push("\nTenkan-sen: ", (h[e] || 0).toFixed(this.S()));
    "kijun" == q &&
      x[e] &&
      c.push("\nKijun-sen: ", (x[e] || 0).toFixed(this.S()));
    "chikou" == q &&
      (g = p[e + n]) &&
      c.push("\nChikou Span: ", g.toFixed(this.S()));
    "spanA" == q &&
      (g = m[e - n]) &&
      c.push("\nSenkou Span A: ", g.toFixed(this.S()));
    "spanB" == q &&
      (g = k[e - n]) &&
      c.push("\nSenkou Span B: ", g.toFixed(this.S()));
    return c.join("");
  };
})();
(function () {
  function v(a, b, c) {
    for (var d = c[b][2]; b <= a; b++) d < c[b][2] && (d = c[b][2]);
    return d;
  }
  function r() {
    if (this) {
      var a = this.w;
      a && a.jb();
    }
  }
  function l(a) {
    if (this) {
      var b = this.w;
      b && b.M("doubleclick", a);
    }
  }
  function e(a) {
    if (this) {
      var b = p(n(this));
      if (b) {
        var c = this.w;
        if (c) {
          var d = "",
            f = c.v,
            e = c.data,
            g = c.result;
          a = f.Tb(a.clientX, 0);
          f = f.pb(a[0]);
          d += "Parabolic SAR (" + e.step + ", " + e.max + ")";
          d += "\nTime: " + z.eg(a[0]);
          d += "\nValue: " + (g[f] || 0).toFixed(c.S());
          b.textContent = d;
        }
      }
    }
  }
  function k() {
    if (this) {
      var a = p(n(this));
      a && (a.textContent = "");
    }
  }
  var h = E.va,
    b = E.oc,
    a = E.controls,
    g = E.ma,
    d = a.L.Nc,
    f = a.L.Zb,
    c = E.Ma,
    z = d.Cc,
    A = E.ba.xa,
    m = z.ng.Ku,
    u = z.ng.zq,
    q = h.sb,
    w = h.tb,
    p = h.Xb,
    n = h.Ad,
    x = b.i,
    C = b.hc,
    O = [0, 1, 0],
    I,
    G,
    F,
    y,
    M = (d.af.xba = function (a) {
      M.G.constructor.apply(this, arguments);
      this.Zf("step max");
      a = this.data;
      void 0 === a.step && (a.step = 0.02);
      void 0 === a.max && (a.max = 0.2);
    });
  d.cc(M);
  M.re = d.types.jn;
  M.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    if (!M.G.Qd.call(this)) return this;
    M.G.hk.call(this);
    this.vm();
    this.$g();
    this.ic();
    return this;
  };
  M.prototype.gb = function () {
    this.result = null;
    var b = this.group;
    b &&
      ((b.w = null),
      (b.wb = null),
      C(b, "mousedown", r),
      C(b, "mouseover", e),
      C(b, "mouseout", k),
      C(b, "dblclick", l),
      (this.group = null));
    if (this.Ob) {
      if ((b = this.v.cb)) {
        var c = a.L.Af;
        c && c.Ng(b.symbol, this.Ob);
      }
      this.Ob = null;
    }
    M.G.gb.apply(this, arguments);
    return this;
  };
  M.prototype.cd = function () {
    return "SAR";
  };
  M.prototype.tc = function () {
    return "Parabolic SAR";
  };
  M.prototype.kb = function (b) {
    var d = this.data,
      f = {
        left: "150px",
        position: "absolute",
        top: "21px",
        width: "80px",
        "text-align": "right",
      },
      e = {
        left: "234px",
        position: "absolute",
        top: "16px",
        width: "100px",
      };
    I ||
      ((I = c(a.input.Number).o("step-sar").Fa(0).Y(0.01).T(2).b(e)),
      (G = c(a.page.I, I.o())
        .Text(A.aU + ":")
        .b(f)),
      (f.top = "55px"),
      (e.top = "50px"),
      (F = c(a.input.Number).o("max-sar").Fa(0).Y(0.001).T(3).b(e)),
      (y = c(a.page.I, F.o())
        .Text(A.RT + ":")
        .b(f)));
    I.f(parseFloat(d.step));
    F.f(parseFloat(d.max));
    b.c(I).c(G).c(F).c(y);
    return 0;
  };
  M.prototype.lb = M.prototype.ye = function () {
    var a = this.data;
    a && ((a.max = parseFloat(F.f())), (a.step = parseFloat(I.f())));
    this.Sf();
    return this;
  };
  M.prototype.Lf = function () {
    this.result = null;
    return this;
  };
  M.prototype.wm = function () {
    return !1;
  };
  M.prototype.vm = function () {
    var b = this,
      c = b.v.cb;
    if (!b.Ob) {
      var d = a.L.Af;
      d &&
        d.Vb(
          c.symbol,
          (b.Ob = function () {
            b.$g(!0);
          }),
          void 0,
          !1
        );
    }
  };
  M.prototype.$g = function (a) {
    var b = this.data,
      c = b.step,
      b = b.max,
      d = this.result,
      f = this.y4,
      e = this.x4,
      n = this.v.Lb,
      p = n.length;
    if (
      n &&
      p &&
      !(
        3 > p ||
        (!a && d && d.length == n.length && d.ea == n.ea && d.fa == n.fa)
      )
    ) {
      a ||
        ((d = this.result = g.Vc(p)),
        (d.ea = n.ea),
        (d.fa = n.fa),
        (f = this.y4 = g.Vc(p)),
        (e = this.x4 = g.Vc(p)));
      var h = p - 2,
        x,
        k;
      a ||
        ((h = 1),
        (e[0] = c),
        (e[1] = c),
        (d[0] = n[0][2]),
        (x = 0),
        (k = !1),
        (d[1] = v(h, x, n)),
        (f[0] = z.Wh(n[h], u)),
        (f[1] = f[0]));
      for (a = h; a < p - 1; a++) {
        h = n[a];
        if (k)
          d[a] > h[3] &&
            ((k = !1), (d[a] = v(a, x, n)), (f[a] = h[3]), (x = a), (e[a] = c));
        else if (d[a] < h[2]) {
          k = !0;
          for (var q = n[x][3]; x <= a; x++) q > n[x][3] && (q = n[x][3]);
          d[a] = q;
          f[a] = h[2];
          x = a;
          e[a] = c;
        }
        var q = z.Wh(h, m),
          w = z.Wh(n[a - 1], m),
          h = z.Wh(h, u),
          C = z.Wh(n[a - 1], u);
        if (k) {
          if (
            (q > f[a - 1] && a != x
              ? ((f[a] = q), (e[a] = e[a - 1] + c), e[a] > b && (e[a] = b))
              : a != x && ((e[a] = e[a - 1]), (f[a] = f[a - 1])),
            (d[a + 1] = d[a] + e[a] * (f[a] - d[a])),
            d[a + 1] > h || d[a + 1] > C)
          )
            d[a + 1] = Math.min(h, C);
        } else if (
          (h < f[a - 1] && a != x
            ? ((f[a] = h), (e[a] = e[a - 1] + c), e[a] > b && (e[a] = b))
            : a != x && ((e[a] = e[a - 1]), (f[a] = f[a - 1])),
          (d[a + 1] = d[a] + e[a] * (f[a] - d[a])),
          d[a + 1] < q || d[a + 1] < w)
        )
          d[a + 1] = Math.max(q, w);
      }
    }
  };
  M.prototype.ic = function () {
    var a = this.v,
      b = this.result,
      c,
      d = a.Ub,
      g = a.cb;
    if (d && b && b.length && g) {
      var n = a.le,
        p = f.sc,
        m = a.nb,
        u = a.Sa,
        C = g.from,
        g = Math.pow(10, g.digits),
        y = this.Nb,
        z = this.group;
      z ||
        ((z = q("title", "http://www.w3.org/2000/svg")),
        w(y, z),
        (z = this.group = q("g", "http://www.w3.org/2000/svg")),
        (z.w = this),
        x(z, "mousedown", r),
        x(z, "mouseover", e),
        x(z, "mouseout", k),
        x(z, "dblclick", l),
        w(y, z));
      for (
        var y = C, C = Math.min(C + a.wd, a.Lb.length - 1), A = (z = 0), a = [];
        y <= C;
        y++, A++
      ) {
        if ((c = b[y]))
          (c = Math.floor(m - c * g * u)), (a[a.length] = [z, c, 1.5]);
        z += n;
      }
      d.RR(a, O);
      if (!p && ((b = this.group), !b.wb || b.wb.toString() != a.toString())) {
        h.Uj(b);
        for (d = 0; d < a.length; d++)
          (n = q("circle", "http://www.w3.org/2000/svg")),
            n.setAttribute("style", "opacity:0"),
            n.setAttribute("cx", a[d][0]),
            n.setAttribute("cy", a[d][1]),
            n.setAttribute("r", 5),
            w(b, n);
        b.wb = a;
      }
    }
    return this;
  };
})();
(function () {
  function v(a, b, c, d) {
    for (var f = 0, e = 0; e < a; e++) f += Math.pow(b[d - e] - c[d], 2);
    return (f = Math.sqrt(f / a));
  }
  function r() {
    w.g(!q.s());
    w.g() ||
      setTimeout(function () {
        w.jb().Gb();
      }, 0);
  }
  function l() {
    x.g(!n.s());
    x.g() ||
      setTimeout(function () {
        x.jb().Gb();
      }, 0);
  }
  var e = E.controls,
    k = E.ma,
    h = e.L.Nc,
    b = h.Cc,
    a = h.af.Dh,
    g = a.aK,
    d = a.fG,
    f = a.K_,
    c = a.WU,
    z = a.method,
    A = E.Ma,
    m = E.ba.xa,
    u,
    q,
    w,
    p,
    n,
    x,
    C,
    O,
    I = (h.af.Nca = function (a) {
      I.G.constructor.apply(this, arguments);
      this.Zf("period shift method applyto");
      this.Hi = [60 / 255, 179 / 255, 113 / 255];
      a = this.data;
      a.min = 0;
      void 0 === a.period && (a.period = 20);
      void 0 === a.shift && (a.shift = 0);
      void 0 === a.method && (a.method = z.Zh);
      void 0 === a.applyto && (a.applyto = b.ng.Pi);
    });
  h.cc(I);
  h.Ch(I, h.Pa.Gd);
  I.re = h.types.Jf;
  I.prototype.cd = function () {
    var a = ["StdDev"],
      b = this.data;
    b && a.push("(", b.period, ")");
    return a.join("");
  };
  I.prototype.tc = function () {
    return "Standard Deviation ";
  };
  I.prototype.kb = function (c) {
    var d = b.xh;
    I.G.kb.call(this, c, d.oh | d.Oi | d.Po);
    d = this.data;
    if (!u) {
      var f = {
          position: "absolute",
          top: "123px",
          width: "260px",
          "text-align": "right",
          "white-space": "nowrap",
        },
        g = { position: "absolute", top: "125px", left: "264px" },
        h = {
          position: "absolute",
          top: "118px",
          left: "284px",
          width: "80px",
        };
      w = A(e.input.Number).o("stdDev--min-value").Y(1e-6).T(6).b(h);
      q = A(e.input.pa).o("stdDev--min").b(g).i("change", r);
      u = A(e.page.I, "stdDev--min")
        .Text(m.hg + ":")
        .b(f);
      f.top = "157px";
      g.top = "159px";
      h.top = "152px";
      x = A(e.input.Number).o("stdDev--max-value").Y(1e-6).T(6).b(h);
      n = A(e.input.pa).o("stdDev--max").b(g).i("change", l);
      p = A(e.page.I, "stdDev--max")
        .Text(m.gg + ":")
        .b(f);
      f = {
        position: "absolute",
        top: "89px",
        width: "80px",
        "text-align": "right",
      };
      h = { position: "absolute", left: "84px", top: "84px", width: "280px" };
      C = A(e.input.of).o("stdDev-method").de(a.Gw).b(h);
      O = A(e.page.I, "stdDev-method")
        .Text(m.ks + ":")
        .b(f);
    }
    C.f(parseInt(d.method));
    void 0 !== d.min
      ? (q.s(!0), w.g(!1).f(d.min))
      : (q.s(!1), w.g(!0).f(this.ob));
    void 0 !== d.max
      ? (n.s(!0), x.g(!1).f(d.max))
      : (n.s(!1), x.g(!0).f(this.ib));
    c.c(C).c(O).c(w).c(q).c(u).c(x).c(n).c(p);
    return 302;
  };
  I.prototype.lb = I.prototype.ye = function () {
    if (x && w) {
      var a = this.data;
      a &&
        ((a.method = parseInt(C.f())),
        x.g() || w.g() || (x.f() <= w.f() && x.f(w.Fa() + 1)),
        x.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(x.f())),
        w.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(w.f())));
    }
    I.G.lb.apply(this, arguments);
    return this;
  };
  I.prototype.S = function () {
    return I.G.S.apply(this, arguments) + 1;
  };
  I.prototype.ug = function (a) {
    var b = this.data,
      e = this.result,
      n = this.J,
      p = this.v.Lb,
      h = p.length,
      x = b.period,
      b = b.method;
    if (!p || !h || h < x) this.J = this.result = null;
    else if (a || !e || e.length != p.length || e.ea != p.ea || e.fa != p.fa) {
      (a && e) ||
        ((e = this.result = k.Vc(p.length)),
        (e.ea = p.ea),
        (e.fa = p.fa),
        (n = this.J = k.Vc(p.length)));
      var m = x - 1,
        p = this.Fi();
      a && (m = h - 1);
      switch (b) {
        case z.Si:
          for (a = m; a < h; a++)
            (n[a] = a == x - 1 ? g(a, x, p) : d(x, n[a - 1], p[a])),
              (e[a] = v(x, p, n, a));
          break;
        case z.Ns:
          for (a = m; a < h; a++)
            (n[a] = a == x - 1 ? g(a, x, p) : f(a, x, n[a - 1], p)),
              (e[a] = v(x, p, n, a));
          break;
        case z.fB:
          for (a = m; a < h; a++) (n[a] = c(a, x, p)), (e[a] = v(x, p, n, a));
          break;
        default:
          for (a = m; a < h; a++) (n[a] = g(a, x, p)), (e[a] = v(x, p, n, a));
      }
    }
  };
})();
(function () {
  function v(a) {
    var b = this.result,
      c = this.v.Lb,
      d = this.data.period;
    if (!c || !c.length || 1 > d) this.result = null;
    else if (a || !b || b.length != c.length || b.ea != c.ea || b.fa != c.fa) {
      (a && b) ||
        ((b = this.result = f.Vc(c.length)), (b.ea = c.ea), (b.fa = c.fa));
      var e = d,
        g = c.length;
      a && (e = c.length - 1);
      for (a = this.Fi(); e < g; ) (b[e] = (100 * a[e]) / a[e - d]), e++;
    }
  }
  function r() {
    var a = this.result,
      b;
    if (a) {
      var c = this.v,
        d = this.data;
      b = c.wd;
      var f = c.cb.from,
        e = Math.pow(10, this.S()),
        c = c.ta - 20,
        g = d.min,
        d = d.max,
        n;
      if (isNaN(parseFloat(g)) || isNaN(parseFloat(d))) {
        n = !0;
        for (
          var g = Number.MAX_VALUE, d = Number.MIN_VALUE, p = f, f = f + b;
          p <= f;
          p++
        )
          if ((b = a[p])) b > d && (d = b), b < g && (g = b);
      }
      this.Sa = c / (d * e - g * e);
      n && ((a = ((d - g) / c) * 10), (g -= a), (d += a));
      this.nb = c + this.Sa * g * e + 20;
      this.ob = g;
      this.ib = d;
    }
  }
  function l(a) {
    var b = this.result;
    if (b && b.length) {
      var f = this.v,
        e = this.canvas,
        g = this.Nb,
        h = this.Ub,
        m = this.qb,
        k = f.cb,
        q = f.Lb,
        u = f.se,
        l = f.ta,
        y = f.le,
        r = f.wd,
        f = A.sc,
        O = Math.pow(10, this.S()),
        G = this.nb,
        I = this.Sa;
      if (q && q.length && k) {
        var F = k.from,
          k = Math.min(F + r, q.length - 1);
        if (
          !(
            (a && F + r < q.length - 1) ||
            (m ||
              ((m = w("title", "http://www.w3.org/2000/svg")),
              p(g, m),
              (m = this.qb = w("polyline", "http://www.w3.org/2000/svg")),
              m.setAttribute(
                "style",
                "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
              ),
              (m.w = this),
              z.Pa.Fd.Cg(m),
              p(g, m)),
            parseInt(e.style.width, 10) != u &&
              (d.sa
                ? e.setAttribute("width", u * d.devicePixelRatio)
                : e.setAttribute("width", u),
              n(e, "width", u + "px")),
            parseInt(e.style.height, 10) != l &&
              (d.sa
                ? e.setAttribute("height", l * d.devicePixelRatio)
                : e.setAttribute("height", l),
              n(e, "height", l + "px")),
            h || (h = this.Ub = new c(e)),
            h.Oa(),
            1 > r)
          )
        ) {
          D.G.sh.call(this);
          var v, M, ga;
          d.yd ||
            ((ga = !0),
            (M = h.vi()),
            M.setLineDash && M.setLineDash([]),
            (M.strokeStyle = x(C)),
            M.beginPath());
          f || ((v = []), m.setAttribute("points", ""));
          e = [];
          g = F;
          for (l = u = 0; g <= k; g++, l++) {
            if ((a = b[g]))
              (a = Math.floor(G - a * O * I)),
                f || (v[v.length] = [u, a].join()),
                ga
                  ? 0 == l
                    ? M.moveTo(
                        u * d.devicePixelRatio + 0.5,
                        a * d.devicePixelRatio + 0.5
                      )
                    : M.lineTo(
                        u * d.devicePixelRatio + 0.5,
                        a * d.devicePixelRatio + 0.5
                      )
                  : ((e[e.length] = u), (e[e.length] = a));
            u += y;
          }
          f || m.setAttribute("points", v.join(" "));
          ga ? M.stroke() : h.Ue(e, C);
        }
      }
    }
  }
  function e() {
    var a = {};
    a.target = this.element;
    a.nb = this.nb;
    a.ib = this.ib;
    a.ob = this.ob;
    a.Sa = this.Sa;
    a.type = 2;
    a.j = this.S();
    this.M("draw", a);
  }
  function k() {
    var a = this.result,
      b = this.S(),
      c = [];
    c.push(this.cd());
    a && a.length && c.push(" ", a[a.length - 1].toFixed(b));
    return c.join("");
  }
  function h() {
    G.g(!I.s());
    G.g() ||
      setTimeout(function () {
        G.jb().Gb();
      }, 0);
  }
  function b() {
    M.g(!y.s());
    M.g() ||
      setTimeout(function () {
        M.jb().Gb();
      }, 0);
  }
  var a = E.va,
    g = E.controls,
    d = E.Qa,
    f = E.ma,
    c = E.Bh,
    z = g.L.Nc,
    A = g.L.Zb,
    m = z.Cc,
    u = E.Ma,
    q = E.ba.xa,
    w = a.sb,
    p = a.tb,
    n = a.$a,
    x = f.xk,
    C = [30 / 255, 144 / 255, 1],
    O,
    I,
    G,
    F,
    y,
    M,
    D = (z.Gd.iaa = function (a) {
      D.G.constructor.apply(this, arguments);
      this.Zf("period applyto");
      a = this.data;
      void 0 === a.period && (a.period = 14);
      void 0 === a.applyto && (a.applyto = m.ng.Pi);
    });
  z.cc(D);
  D.re = z.types.Jf;
  D.prototype.Ha = function (a) {
    var b = this;
    if (!a) return b;
    b.v = a;
    if (!b.Ob) {
      a = a.cb;
      if (!a) return;
      var c = g.L.Af;
      c &&
        c.Vb(
          a.symbol,
          (b.Ob = function () {
            D.G.Qd.call(b) &&
              (v.call(b, !0),
              r.call(b),
              l.call(b, !0),
              D.G.di.call(b, k.call(b)));
          }),
          void 0,
          !1
        );
    }
    if (!D.G.Qd.call(b)) return b;
    D.G.hk.call(b);
    v.call(b);
    r.call(b);
    l.call(b);
    D.G.di.call(b, k.call(b));
    e.call(b);
    return b;
  };
  D.prototype.gb = function () {
    var a = this.v;
    this.Ub = this.result = this.nb = this.Sa = this.ib = this.ob = null;
    var b = this.qb;
    b && ((b.w = null), z.Pa.Fd.Hh(b), (this.qb = null));
    a &&
      (a = a.cb) &&
      this.Ob &&
      ((b = g.L.Af) && b.Ng(a.symbol, this.Ob), (this.Ob = null));
    D.G.gb.apply(this, arguments);
    return this;
  };
  D.prototype.cd = function () {
    var a = ["Momentum"],
      b = this.data;
    b && a.push("(", b.period, ")");
    return a.join("");
  };
  D.prototype.tc = function () {
    return "Momentum";
  };
  D.prototype.kb = function (a) {
    var c = m.xh;
    D.G.kb.call(this, a, c.oh | c.Oi);
    var c = this.data,
      d = Math.pow(0.1, this.S());
    if (!O) {
      var f = {
          position: "absolute",
          top: "89px",
          width: "260px",
          "text-align": "right",
          "white-space": "nowrap",
        },
        e = { position: "absolute", top: "91px", left: "264px" },
        n = { position: "absolute", top: "84px", left: "284px", width: "80px" };
      G = u(g.input.Number).o("momemtum-min-value").Y(d).T(this.S()).b(n);
      I = u(g.input.pa).o("momemtum-min").b(e).i("change", h);
      O = u(g.page.I, "momemtum-min")
        .Text(q.hg + ":")
        .b(f);
      f.top = "123px";
      e.top = "125px";
      n.top = "118px";
      M = u(g.input.Number).o("momemtum-max-value").Y(d).T(this.S()).b(n);
      y = u(g.input.pa).o("momemtum-max").b(e).i("change", b);
      F = u(g.page.I, "momemtum-max")
        .Text(q.gg + ":")
        .b(f);
    }
    void 0 !== c.min
      ? (I.s(!0), G.g(!1).f(c.min))
      : (I.s(!1), G.g(!0).f(this.ob));
    void 0 !== c.max
      ? (y.s(!0), M.g(!1).f(c.max))
      : (y.s(!1), M.g(!0).f(this.ib));
    a.c(G).c(I).c(O).c(M).c(y).c(F);
    return 272;
  };
  D.prototype.lb = D.prototype.ye = function () {
    var a = this.data;
    a &&
      M &&
      G &&
      (M.g() || G.g() || (M.f() <= G.f() && M.f(G.Fa() + 1)),
      M.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(M.f())),
      G.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(G.f())));
    D.G.lb.apply(this, arguments);
    this.Sf();
    return this;
  };
  D.prototype.S = function () {
    return 2;
  };
  D.prototype.Kh = function (a) {
    if (this) {
      var b = [],
        c = this.data,
        d = this.result,
        f = this.v.pb(a),
        d = d[f];
      b.push("Momentum (", c.period, ")");
      b.push("\nTime: ", m.eg(a));
      b.push("\nValue: ", d.toFixed(this.S()));
      return b.join("");
    }
  };
})();
(function () {
  function v(a) {
    var b = u.method,
      c = this.data,
      d = this.v.Lb;
    if (d && d.length) {
      var f = this.iM,
        e = this.UM,
        g = this.Jd,
        n = this.ue,
        p = parseInt(c.fast_ema, 10) || 0,
        h = parseInt(c.slow_ema, 10) || 0,
        c = parseInt(c.macd_sma, 10) || 0,
        p = Math.max(1, Math.min(p, m.Xh)),
        h = Math.max(1, Math.min(h, m.Xh)),
        c = Math.max(1, Math.min(c, m.Xh));
      a ||
        !g ||
        (g.length == d.length && g.ea == d.ea && g.fa == d.fa) ||
        (n = this.ue = g = this.Jd = e = this.UM = f = this.iM = null);
      f || (f = this.iM = []);
      e || (e = this.UM = []);
      g || ((g = this.Jd = []), (g.ea = d.ea), (g.fa = d.fa));
      n || ((n = this.ue = []), (n.ea = d.ea), (n.fa = d.fa));
      d = this.Fi();
      if (p !== h) {
        u.Hf(d, f, a, p, b.Si);
        u.Hf(d, e, a, h, b.Si);
        p = a ? f.length - Math.max(h, p) : 0;
        for (h = f.length; p < h; p++) g[p] = f[p] - e[p];
        u.Hf(g, n, a, c, b.Zh);
      }
    }
  }
  function r() {
    var a = this.Jd,
      b,
      c = this.ue;
    if (a && a.length && c && c.length) {
      var d = this.v,
        f = this.data,
        e = d.ta;
      b = d.wd;
      var g = d.cb.from,
        d = Math.pow(10, this.S()),
        n = f.min,
        f = f.max,
        p = !1,
        h = !1,
        x = isNaN(parseFloat(n)),
        m = isNaN(parseFloat(f));
      if (x || m) {
        x && ((n = Number.MAX_VALUE), (p = !0));
        m && ((f = -Number.MAX_VALUE), (h = !0));
        for (var k = g, g = g + b; k <= g; k++) {
          if ((b = a[k])) x && b < n && (n = b), m && b > f && (f = b);
          if ((b = c[k])) x && b < n && (n = b), m && b > f && (f = b);
        }
      }
      a = 10 * (h + p);
      e = e - a;
      this.Sa = e / (f * d - n * d);
      p && (n -= ((f - n) / e) * 10);
      h && (f += ((f - n) / e) * 10);
      this.nb = Math.round(e + this.Sa * n * d + a);
      this.ob = n;
      this.ib = f;
    }
  }
  function l(a) {
    var b = this.Jd,
      e = this.ue;
    if (b && b.length && e && e.length) {
      var g = this.v,
        h = this.canvas,
        m = this.Nb,
        k = this.Ub,
        q = this.ld,
        u = this.bc,
        w = g.cb,
        l = g.Lb,
        y = g.se,
        K = g.Aa,
        B = g.ta,
        r = g.le,
        G = g.Dm,
        I = g.wd,
        F = A.sc,
        v = w.from,
        N = Math.pow(10, this.S()),
        Q = this.nb,
        D = this.Sa,
        M = 5 > w.scale && d.yd;
      if (
        l &&
        l.length &&
        w &&
        !(a && v + I < l.length - 1) &&
        (q ||
          ((q = p("title", "http://www.w3.org/2000/svg")),
          n(m, q),
          (q = this.ld = p("polygon", "http://www.w3.org/2000/svg")),
          q.setAttribute("style", "fill:black;fill-opacity:0;"),
          q.setAttribute("data-type", "macd"),
          (q.w = this),
          z.Pa.Fd.Cg(q),
          n(m, q)),
        u ||
          ((u = this.bc = p("polyline", "http://www.w3.org/2000/svg")),
          u.setAttribute(
            "style",
            "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
          ),
          u.setAttribute("data-type", "signal"),
          (u.w = this),
          z.Pa.Fd.Cg(u),
          n(m, u)),
        parseInt(h.style.width, 10) != y &&
          (d.sa
            ? h.setAttribute("width", y * d.devicePixelRatio)
            : h.setAttribute("width", y),
          x(h, "width", y + "px")),
        parseInt(h.style.height, 10) != B &&
          (d.sa
            ? h.setAttribute("height", B * d.devicePixelRatio)
            : h.setAttribute("height", B),
          x(h, "height", B + "px")),
        k || (k = this.Ub = new c(h)),
        k.Oa(),
        !(1 > I))
      ) {
        h = !d.yd;
        m = k.vi();
        h
          ? (m.setLineDash && m.setLineDash([3]),
            (m.strokeStyle = g.xd),
            m.beginPath(),
            m.moveTo(0, Q * d.devicePixelRatio + 0.5),
            m.lineTo(
              K * d.devicePixelRatio + 0.5,
              Q * d.devicePixelRatio + 0.5
            ),
            m.stroke())
          : k.ud(new Float32Array([0, Q, K, Q]), f.be(g.xd), 3);
        T.G.sh.call(this);
        var L,
          P,
          ia,
          y = v,
          B = Math.min(v + I, l.length - 1);
        if (y <= B) {
          a = K = 0;
          F ||
            ((ia = []),
            (ia[ia.length] = [K, Q].join()),
            q.setAttribute("points", ""));
          for (
            M ? (P = new Float32Array(4 * (B - y + 1))) : k.Dg(f.be(g.xd));
            y <= B;
            y++, a++
          ) {
            if ((w = b[y]))
              0 < w
                ? ((L = Math.round(w * N * D)),
                  (w = Q - L),
                  F || (ia[ia.length] = [K, w].join()),
                  M &&
                    ((P[4 * a] = K),
                    (P[4 * a + 1] = w),
                    (P[4 * a + 2] = K),
                    (P[4 * a + 3] = Q)))
                : ((L = Math.round(Math.abs(w) * N * D)),
                  (w = Q),
                  F || (ia[ia.length] = [K, w + L].join()),
                  M &&
                    ((P[4 * a] = K),
                    (P[4 * a + 1] = Q),
                    (P[4 * a + 2] = K),
                    (P[4 * a + 3] = w + L))),
                M || k.Gg(K - Math.floor(0.5 * G) - 1, w, G, L);
            K += r;
          }
          M ? k.ud(P, f.be(g.xd)) : k.Fg();
          F ||
            ((ia[ia.length] = [K, Q].join()),
            q.setAttribute("points", ia.join(" ")),
            u.setAttribute("points", ""));
        }
        y = v;
        B = Math.min(v + I, l.length - 1);
        if (B >= y) {
          a = K = 0;
          F || (ia = []);
          for (
            h
              ? (m.strokeStyle = C(O))
              : (P = new Float32Array(2 * (B - y + 1)));
            y <= B;
            y++, a++
          ) {
            if ((w = e[y]))
              (w = Math.floor(Q - w * N * D)),
                h
                  ? 0 === a
                    ? m.moveTo(
                        K * d.devicePixelRatio + 0.5,
                        w * d.devicePixelRatio + 0.5
                      )
                    : m.lineTo(
                        K * d.devicePixelRatio + 0.5,
                        w * d.devicePixelRatio + 0.5
                      )
                  : ((P[2 * a] = K), (P[2 * a + 1] = w)),
                F || (ia[ia.length] = [K, w].join());
            K += r;
          }
          h ? m.stroke() : k.Ue(P, O, 3);
          F || u.setAttribute("points", ia.join(" "));
        }
      }
    }
  }
  function e() {
    var a = {};
    a.target = this.element;
    a.nb = this.nb || 0;
    a.ib = this.ib || 0;
    a.ob = this.ob || 0;
    a.Sa = this.Sa || 0;
    a.j = this.S();
    a.type = 3;
    this.M("draw", a);
  }
  function k() {
    var a = this.Jd,
      b = this.ue,
      c = this.S(),
      d = [];
    d.push(this.cd(this));
    a && a.length && d.push(" ", a[a.length - 1].toFixed(c));
    b && b.length && d.push(" ", b[b.length - 1].toFixed(c));
    return d.join("");
  }
  function h() {
    F.g(!G.s());
    F.g() ||
      setTimeout(function () {
        F.jb().Gb();
      });
  }
  function b() {
    P.g(!K.s());
    P.g() ||
      setTimeout(function () {
        P.jb().Gb();
      });
  }
  var a = E.va,
    g = E.controls,
    d = E.Qa,
    f = E.ma,
    c = E.Bh,
    z = g.L.Nc,
    A = g.L.Zb,
    m = z.Cc,
    u = z.af.Dh,
    q = E.Ma,
    w = E.ba.xa,
    p = a.sb,
    n = a.tb,
    x = a.$a,
    C = f.xk,
    O = [1, 0, 0],
    I,
    G,
    F,
    y,
    M,
    D,
    L,
    B,
    Q,
    N,
    K,
    P,
    T = (z.Gd.B$ = function (a) {
      T.G.constructor.apply(this, arguments);
      this.Zf("fast_ema slow_ema macd_sma applyto");
      a = this.data;
      void 0 === a.fast_ema && (a.fast_ema = 12);
      void 0 === a.slow_ema && (a.slow_ema = 26);
      void 0 === a.macd_sma && (a.macd_sma = 9);
      void 0 === a.applyto && (a.applyto = m.ng.Pi);
    });
  z.cc(T);
  T.re = z.types.Jf;
  T.prototype.Ha = function (a) {
    var b = this;
    if (!a) return b;
    b.v = a;
    if (!b.Ob) {
      a = a.cb;
      if (!a) return;
      var c = g.L.Af;
      c &&
        c.Vb(
          a.symbol,
          (b.Ob = function () {
            T.G.Qd.call(b) &&
              (v.call(b, !0),
              r.call(b),
              l.call(b, !0),
              T.G.di.call(b, k.call(b)));
          }),
          void 0,
          !1
        );
    }
    if (T.G.Qd.call(b))
      return (
        T.G.hk.call(b),
        v.call(b),
        r.call(b),
        l.call(b),
        T.G.di.call(b, k.call(b)),
        e.call(b),
        b
      );
  };
  T.prototype.gb = function () {
    var a = this.v;
    this.nb = this.Sa = this.ib = this.ob = null;
    var b = this.ld;
    b && ((b.w = null), z.Pa.Fd.Hh(b), (this.ld = null));
    if ((b = this.bc)) (b.w = null), z.Pa.Fd.Hh(b), (this.bc = null);
    a &&
      (a = a.cb) &&
      this.Ob &&
      ((b = g.L.Af) && b.Ng(a.symbol, this.Ob), (this.Ob = null));
    T.G.gb.apply(this, arguments);
    return this;
  };
  T.prototype.cd = function () {
    var a = ["MACD"],
      b = this.data;
    b && a.push("(", b.fast_ema, ",", b.slow_ema, ",", b.macd_sma, ")");
    return a.join("");
  };
  T.prototype.tc = function () {
    return "MACD";
  };
  T.prototype.kb = function (a) {
    T.G.kb.call(this, a, m.xh.Oi);
    var c = this.data,
      d = this.S();
    if (!I) {
      var f = { position: "absolute", "white-space": "nowrap" },
        e = { position: "absolute", left: "264px" },
        n = { position: "absolute", width: "80px" };
      f.top = "57px";
      n.top = "52px";
      f.right = "-80px";
      n.left = "84px";
      M = q(g.input.Number).o("fast-ema").Y(1).Fa(1).mc(m.Xh).T(0).b(n);
      y = q(g.page.I, "fast-ema")
        .Text(w.cH + ":")
        .b(f);
      f.right = "-280px";
      n.left = "284px";
      L = q(g.input.Number).o("slow-ema").Y(1).Fa(1).mc(m.Xh).T(0).b(n);
      D = q(g.page.I, "slow-ema")
        .Text(w.eH + ":")
        .b(f);
      f.top = "89px";
      n.top = "84px";
      Q = q(g.input.Number).o("macd-sma").Y(1).Fa(1).mc(m.Xh).T(0).b(n);
      B = q(g.page.I, "macd-sma").Text("MACD SMA:").b(f);
      f.right = "-260px";
      f.top = "123px";
      e.top = "125px";
      n.top = "118px";
      F = q(g.input.Number)
        .o("mcad-min-value")
        .Y(1e-6)
        .T(d + 1)
        .b(n);
      G = q(g.input.pa).o("mcad-min").b(e).i("change", h);
      I = q(g.page.I, "mcad-min")
        .Text(w.hg + ":")
        .b(f);
      f.top = "155px";
      e.top = "157px";
      n.top = "150px";
      P = q(g.input.Number)
        .o("mcad-max-value")
        .Y(1e-6)
        .T(d + 1)
        .b(n);
      K = q(g.input.pa).o("mcad-max").b(e).i("change", b);
      N = q(g.page.I, "mcad-max")
        .Text(w.gg + ":")
        .b(f);
    }
    L.f(c.slow_ema || 0);
    M.f(c.fast_ema || 0);
    Q.f(c.macd_sma || 0);
    void 0 !== c.min
      ? (G.s(!0), F.g(!1).f(c.min))
      : (G.s(!1), F.g(!0).f(void 0 === this.ob ? 0 : this.ob));
    void 0 !== c.max
      ? (K.s(!0), P.g(!1).f(c.max))
      : (K.s(!1), P.g(!0).f(void 0 === this.ib ? 0 : this.ib));
    a.c(M).c(y).c(L).c(D).c(Q).c(B).c(G).c(F).c(I).c(K).c(P).c(N);
    return 302;
  };
  T.prototype.lb = T.prototype.ye = function () {
    var a = this.data;
    a &&
      ((a.slow_ema = L.f()),
      (a.fast_ema = M.f()),
      (a.macd_sma = Q.f()),
      P &&
        F &&
        (P.g() || F.g() || (P.f() <= F.f() && P.f(F.Fa() + 1)),
        P.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(P.f())),
        F.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(F.f()))));
    T.G.lb.apply(this, arguments);
    this.Sf();
    return this;
  };
  T.prototype.S = function () {
    return T.G.S.apply(this, arguments) + 1;
  };
  T.prototype.Lf = function () {
    var a = this.Ub;
    this.ue = this.Jd = null;
    a && a.Oa();
    return this;
  };
  T.prototype.Kh = function (a, b) {
    var c = [],
      d = this.Jd,
      f = this.ue,
      e = this.v.pb(a),
      d = d[e],
      f = f[e],
      e = b.getAttribute("data-type");
    if (d && f)
      return (
        c.push(this.cd()),
        c.push("\nTime: ", m.eg(a)),
        "macd" == e
          ? c.push("\nValue: ", d.toFixed(this.S()))
          : c.push("\nSignal: ", f.toFixed(this.S())),
        c.join("")
      );
  };
})();
(function () {
  function v() {
    z.g(!c.s());
    z.g() ||
      setTimeout(function () {
        z.jb().Gb();
      }, 0);
  }
  function r() {
    u.g(!m.s());
    u.g() ||
      setTimeout(function () {
        u.jb().Gb();
      }, 0);
  }
  var l = E.controls,
    e = E.ma,
    k = l.L.Nc,
    h = k.Cc,
    b = k.af.Dh,
    a = b.method,
    g = E.Ma,
    d = E.ba.xa,
    f,
    c,
    z,
    A,
    m,
    u,
    q = (k.Gd.h5 = function (a) {
      q.G.constructor.apply(this, arguments);
      this.Zf("period");
      a = this.data;
      void 0 === a.period && (a.period = 14);
    });
  k.cc(q);
  k.Ch(q, k.Pa.Gd);
  q.re = k.types.Jf;
  q.prototype.cd = function () {
    var a = ["ATR"],
      b = this.data;
    b && a.push("(", b.period, ")");
    return a.join("");
  };
  q.prototype.tc = function () {
    return "Average True Range";
  };
  q.prototype.kb = function (a) {
    q.G.kb.call(this, a, h.xh.oh);
    var b = this.data,
      e = this.S() || 5,
      x = Math.pow(0.1, e);
    if (!f) {
      var k = {
          position: "absolute",
          top: "55px",
          width: "260px",
          "text-align": "right",
          "white-space": "nowrap",
        },
        O = { position: "absolute", top: "57px", left: "264px" },
        I = { position: "absolute", top: "50px", left: "284px", width: "80px" };
      z = g(l.input.Number).Y(x).T(e).b(I);
      c = g(l.input.pa).o("atr--min").b(O).i("change", v);
      f = g(l.page.I, "atr--min")
        .Text(d.hg + ":")
        .b(k);
      k.top = "89px";
      O.top = "91px";
      I.top = "84px";
      u = g(l.input.Number).Y(x).T(e).b(I);
      m = g(l.input.pa).o("atr--max").b(O).i("change", r);
      A = g(l.page.I, "atr--max")
        .Text(d.gg + ":")
        .b(k);
    }
    void 0 !== b.min
      ? (c.s(!0), z.g(!1).f(b.min))
      : (c.s(!1), z.g(!0).f(this.ob));
    void 0 !== b.max
      ? (m.s(!0), u.g(!1).f(b.max))
      : (m.s(!1), u.g(!0).f(this.ib));
    a.c(z).c(c).c(f).c(u).c(m).c(A);
    return 240;
  };
  q.prototype.lb = q.prototype.ye = function () {
    if (u && z) {
      var a = this.data;
      a &&
        (u.g() || z.g() || (u.f() <= z.f() && u.f(z.Fa() + 1)),
        u.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(u.f())),
        z.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(z.f())));
    }
    q.G.lb.apply(this, arguments);
    this.Sf();
    return this;
  };
  q.prototype.S = function () {
    return q.G.S.apply(this, arguments);
  };
  q.prototype.ug = function (c) {
    var d = this.result,
      f = this.J,
      g = this.v.Lb,
      h = this.data.period;
    if (!g || !g.length || 1 > h) this.J = this.result = null;
    else if (c || !d || d.length != g.length || d.ea != g.ea || d.fa != g.fa) {
      (c && d) ||
        ((d = this.result = e.Vc(g.length)),
        (d.ea = g.ea),
        (d.fa = g.fa),
        (f = this.J = e.Vc(g.length)));
      var m = h,
        k = g.length;
      for (c && (m = g.length - 1); m < k; ) {
        var q = g[m],
          u = g[m - 1];
        f[m] = Math.max(q[2] - q[3], u[4] - q[2], u[4] - q[3]);
        m++;
      }
      b.Hf(f, d, c, h, a.Zh);
    }
  };
})();
(function () {
  function v() {
    x.g(!n.s());
    x.g() ||
      setTimeout(function () {
        x.jb().Gb();
      }, 0);
  }
  function r() {
    I.g(!O.s());
    I.g() ||
      setTimeout(function () {
        I.jb().Gb();
      }, 0);
  }
  var l = E.va,
    e = E.controls,
    k = E.ma,
    h = E.Qa,
    b = E.Bh,
    a = e.L.Zb,
    g = e.L.Nc,
    d = g.Cc,
    f = g.af.Dh,
    c = f.method,
    z = l.sb,
    A = l.tb,
    m = l.$a,
    u = E.Ma,
    q = E.ba.xa,
    w = [192 / 255, 192 / 255, 192 / 255],
    p,
    n,
    x,
    C,
    O,
    I,
    G = (g.Gd.NN = function (a) {
      G.G.constructor.apply(this, arguments);
      this.Zf("period applyto");
      a = this.data;
      this.dh = 3;
      void 0 === a.period && (a.period = 13);
      void 0 === a.applyto && (a.applyto = g.Cc.ng.ss);
    });
  g.cc(G);
  g.Ch(G, g.Pa.Gd);
  G.re = g.types.Jf;
  G.prototype.cd = function () {
    var a = ["Bears"],
      b = this.data;
    b && a.push(" (", b.period, ")");
    return a.join("");
  };
  G.prototype.tc = function () {
    return "Bears Power";
  };
  G.prototype.kb = function (a) {
    var b = d.xh;
    G.G.kb.call(this, a, b.oh | b.Oi);
    var b = this.data,
      c = this.S(),
      f = Math.pow(0.1, c);
    if (!p) {
      var g = {
          position: "absolute",
          top: "89px",
          width: "260px",
          "text-align": "right",
          "white-space": "nowrap",
        },
        h = { position: "absolute", top: "91px", left: "264px" },
        m = { position: "absolute", top: "85px", left: "284px", width: "80px" };
      x = u(e.input.Number).o("atr--min-value").Y(f).T(c).b(m);
      n = u(e.input.pa).o("atr--min").b(h).i("change", v);
      p = u(e.page.I, "atr--min")
        .Text(q.hg + ":")
        .b(g);
      g.top = "123px";
      h.top = "125px";
      m.top = "118px";
      I = u(e.input.Number).o("atr--max-value").Y(f).T(c).b(m);
      O = u(e.input.pa).o("atr--max").b(h).i("change", r);
      C = u(e.page.I, "atr--max")
        .Text(q.gg + ":")
        .b(g);
    }
    void 0 !== b.min
      ? (n.s(!0), x.g(!1).f(b.min))
      : (n.s(!1), x.g(!0).f(this.ob));
    void 0 !== b.max
      ? (O.s(!0), I.g(!1).f(b.max))
      : (O.s(!1), I.g(!0).f(this.ib));
    a.c(x).c(n).c(p).c(I).c(O).c(C);
    return 270;
  };
  G.prototype.lb = G.prototype.ye = function () {
    if (I && x) {
      var a = this.data;
      a &&
        (I.g() || x.g() || (I.f() <= x.f() && I.f(x.Fa() + 1)),
        I.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(I.f())),
        x.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(x.f())));
    }
    G.G.lb.apply(this, arguments);
    this.Sf();
    return this;
  };
  G.prototype.S = function () {
    return G.G.S.apply(this, arguments) + 1;
  };
  G.prototype.ug = function (a) {
    var b = this.result,
      d = this.qa,
      e = this.v.Lb,
      g = this.data.period;
    if (!e || !e.length || 1 > g) this.J = this.result = null;
    else if (a || !b || b.length != e.length || b.ea != e.ea || b.fa != e.fa) {
      (a && b) ||
        ((b = this.result = k.Vc(e.length)),
        (b.ea = e.ea),
        (b.fa = e.fa),
        (d = this.qa = k.Vc(e.length)));
      var n = this.Fi();
      f.Hf(n, d, a, g, c.Si);
      n = e.length;
      for (a && (g = e.length - 1); g < n; ) (b[g] = e[g][3] - d[g]), g++;
    }
  };
  G.prototype.wi = function (c) {
    var d = this.result;
    if (d && d.length) {
      var f = this.v,
        e = this.canvas,
        n = this.Ub,
        p = f.cb,
        x = f.Lb,
        q = f.se,
        u = f.Aa,
        C = f.ta,
        l = f.le,
        r = f.Dm,
        O = f.wd,
        I = a.sc,
        v = p.from,
        W = Math.pow(10, this.S()),
        Y = this.nb,
        V = this.Sa,
        ea = !(5 > p.scale && h.yd);
      if (
        x &&
        x.length &&
        p &&
        !(c && v + O < x.length - 1) &&
        ((p = this.Hd),
        (c = this.Nb),
        p ||
          ((p = z("title", "http://www.w3.org/2000/svg")),
          A(c, p),
          (p = this.Hd = z("polygon", "http://www.w3.org/2000/svg")),
          p.setAttribute("style", "fill:black;fill-opacity:0;"),
          (p.w = this),
          g.Pa.Fd.Cg(p),
          A(c, p)),
        parseInt(e.style.width, 10) != q &&
          (h.sa
            ? e.setAttribute("width", q * h.devicePixelRatio)
            : e.setAttribute("width", q),
          m(e, "width", q + "px")),
        parseInt(e.style.height, 10) != C &&
          (h.sa
            ? e.setAttribute("height", C * h.devicePixelRatio)
            : e.setAttribute("height", C),
          m(e, "height", C + "px")),
        n || (n = this.Ub = new b(e)),
        n.Oa(),
        !(1 > O))
      ) {
        e = n.vi();
        h.yd
          ? n.ud(new Float32Array([0, Y, u, Y]), k.be(f.xd), 3)
          : (e.setLineDash && e.setLineDash([3]),
            (e.strokeStyle = f.xd),
            e.beginPath(),
            e.moveTo(0, Y * h.devicePixelRatio + 0.5),
            e.lineTo(
              u * h.devicePixelRatio + 0.5,
              Y * h.devicePixelRatio + 0.5
            ),
            e.stroke());
        G.G.sh.call(this);
        var u = [],
          ha,
          f = v,
          O = Math.min(v + O, x.length - 1);
        if (f <= O) {
          v = x = 0;
          I ||
            ((ha = []),
            (ha[ha.length] = [x, Y].join()),
            this.Hd.setAttribute("points", ""));
          for (; f <= O; f++, v++) {
            if ((e = d[f]))
              0 < e
                ? ((q = Math.round(e * W * V)),
                  (e = Y - q),
                  I || (ha[ha.length] = [x, e].join()),
                  ea ||
                    ((C = u.length),
                    (u[C] = x),
                    (u[C + 1] = e),
                    (u[C + 2] = x),
                    (u[C + 3] = Y)))
                : ((q = Math.round(Math.abs(e) * W * V)),
                  (e = Y),
                  I || (ha[ha.length] = [x, e + q].join()),
                  ea ||
                    ((C = u.length),
                    (u[C] = x),
                    (u[C + 1] = Y),
                    (u[C + 2] = x),
                    (u[C + 3] = e + q))),
                ea && (u[u.length] = [x - Math.floor(0.5 * r) - 1, e, r, q]);
            x += l;
          }
          if (ea) {
            n.Dg(w);
            for (f = 0; f < u.length; f++)
              (d = u[f]), n.Gg(d[0], d[1], d[2], d[3]);
            n.Fg();
          } else n.ud(u, w);
          I ||
            ((ha[ha.length] = [x, Y].join()),
            this.Hd.setAttribute("points", ha.join(" ")));
        }
      }
    }
  };
})();
(function () {
  var v = E.ma,
    r = E.controls.L.Nc,
    l = r.af.Dh,
    e = l.method,
    k = (r.Gd.t5 = function (e) {
      k.G.constructor.apply(this, arguments);
    });
  r.cc(k, r.Gd.NN);
  k.re = r.types.Jf;
  k.prototype.cd = function () {
    var e = ["Bulls"],
      b = this.data;
    b && e.push("(", b.period, ")");
    return e.join("");
  };
  k.prototype.tc = function () {
    return "Bulls Power";
  };
  k.prototype.ug = function (h) {
    var b = this.result,
      a = this.qa,
      g = this.v.Lb,
      d = this.data.period;
    if (!g || !g.length || 1 > d) this.J = this.result = null;
    else if (h || !b || b.length != g.length || b.ea != g.ea || b.fa != g.fa) {
      (h && b) ||
        ((b = this.result = v.Vc(g.length)),
        (b.ea = g.ea),
        (b.fa = g.fa),
        (a = this.qa = v.Vc(g.length)));
      var f = this.Fi();
      l.Hf(f, a, h, d, e.Si);
      f = g.length;
      for (h && (d = g.length - 1); d < f; ) (b[d] = g[d][2] - a[d]), d++;
    }
  };
})();
(function () {
  function v() {
    w.g(!q.s());
    w.g() ||
      setTimeout(function () {
        w.jb().Gb();
      }, 0);
  }
  function r() {
    x.g(!n.s());
    x.g() ||
      setTimeout(function () {
        x.jb().Gb();
      }, 0);
  }
  var l = E.controls,
    e = E.ma,
    k = E.Bh,
    h = E.Qa,
    b = l.L.Nc,
    a = l.L.Zb,
    g = b.Cc,
    d = b.af.Dh,
    f = d.method,
    c = E.Ma,
    z = E.ba.xa,
    A = E.va.$a,
    m = e.xk,
    u,
    q,
    w,
    p,
    n,
    x,
    C = (b.Gd.B5 = function (a) {
      C.G.constructor.apply(this, arguments);
      this.Zf("period applyto");
      this.Hi = [32 / 255, 178 / 255, 170 / 255];
      this.dh = 3;
      a = this.data;
      void 0 === a.applyto && (a.applyto = g.ng.zq);
      void 0 === a.period && (a.period = 14);
    });
  b.cc(C);
  b.Ch(C, b.Pa.Gd);
  C.re = b.types.Jf;
  C.prototype.cd = function () {
    var a = ["CCI"],
      b = this.data;
    b && a.push(" (", b.period, ")");
    return a.join("");
  };
  C.prototype.tc = function () {
    return "Commodity Channel Index";
  };
  C.prototype.kb = function (a) {
    var b = g.xh;
    C.G.kb.call(this, a, b.oh | b.Oi);
    var b = this.data,
      d = this.S() || 4,
      f = Math.pow(0.1, d);
    if (!u) {
      var e = {
          position: "absolute",
          top: "89px",
          width: "260px",
          "text-align": "right",
          "white-space": "nowrap",
        },
        h = { position: "absolute", top: "91px", left: "264px" },
        m = {
          position: "absolute",
          top: "84px",
          left: "284px",
          width: "80px",
        };
      w = c(l.input.Number).o("atr--min-value").Y(f).T(d).b(m);
      q = c(l.input.pa).o("atr--min").b(h).i("change", v);
      u = c(l.page.I, "atr--min")
        .Text(z.hg + ":")
        .b(e);
      e.top = "123px";
      h.top = "125px";
      m.top = "118px";
      x = c(l.input.Number).o("atr--max-value").Y(f).T(d).b(m);
      n = c(l.input.pa).o("atr--max").b(h).i("change", r);
      p = c(l.page.I, "atr--max")
        .Text(z.gg + ":")
        .b(e);
    }
    void 0 !== b.min
      ? (q.s(!0), w.g(!1).f(b.min))
      : (q.s(!1), w.g(!0).f(this.ob));
    void 0 !== b.max
      ? (n.s(!0), x.g(!1).f(b.max))
      : (n.s(!1), x.g(!0).f(this.ib));
    a.c(w).c(q).c(u).c(x).c(n).c(p);
    return 272;
  };
  C.prototype.lb = C.prototype.ye = function () {
    if (x && w) {
      var a = this.data;
      a &&
        (x.g() || w.g() || (x.f() <= w.f() && x.f(w.Fa() + 1)),
        x.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(x.f())),
        w.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(w.f())));
    }
    C.G.lb.apply(this, arguments);
    this.Sf();
    return this;
  };
  C.prototype.S = function () {
    return 2;
  };
  C.prototype.wn = function () {
    var a = {};
    a.target = this.element;
    a.nb = this.nb;
    a.ib = this.ib;
    a.ob = this.ob;
    a.Sa = this.Sa;
    a.type = this.dh || 2;
    a.j = this.S();
    a.vr = [100, -100];
    this.M("draw", a);
  };
  C.prototype.ug = function (a) {
    var b = this.result,
      c = this.v.Lb,
      g = this.qa,
      n = this.J,
      p = this.Yb,
      h = this.data.period;
    if (!c || !c.length || 1 > h) this.result = null;
    else if (a || !b || b.length != c.length || b.ea != c.ea || b.fa != c.fa) {
      (a && b) ||
        ((b = this.result = e.Vc(c.length)),
        (b.ea = c.ea),
        (b.fa = c.fa),
        (n = this.J = e.Vc(c.length)),
        (g = this.qa = e.Vc(c.length)),
        (p = this.Yb = e.Vc(c.length)));
      var x = c.length,
        m = this.Fi();
      d.Hf(m, p, a, h, f.Zh);
      c = h - 1;
      a && (c = x - 2);
      for (var k = 0.015 / h; c < x; ) {
        var q = 0;
        for (a = c + 1 - h; a <= c; ) q += Math.abs(m[a++] - p[c]);
        n[c] = q * k;
        g[c] = m[c] - p[c];
        b[c] = 0 === n[c] ? 0 : g[c] / n[c];
        c++;
      }
    }
  };
  C.prototype.wi = function (b) {
    var c = this.result;
    if (c && c.length) {
      var d = this.v,
        f = d.Aa,
        g = this.canvas,
        n = this.Ub,
        p = d.cb,
        x = d.Lb,
        q = d.se,
        u = d.ta,
        w = d.le,
        C = d.wd,
        l = a.sc,
        z = Math.pow(10, this.S()),
        r = this.nb,
        v = this.Sa,
        S = this.Hi;
      if (x && x.length && p) {
        var Z = p.from,
          p = Math.min(Z + C, x.length - 1);
        if (
          !(
            (b && Z + C < x.length - 1) ||
            (this.Ik(),
            parseInt(g.style.width, 10) != q &&
              (h.sa
                ? g.setAttribute("width", q * h.devicePixelRatio)
                : g.setAttribute("width", q),
              A(g, "width", q + "px")),
            parseInt(g.style.height, 10) != u &&
              (h.sa
                ? g.setAttribute("height", u * h.devicePixelRatio)
                : g.setAttribute("height", u),
              A(g, "height", u + "px")),
            n || (n = this.Ub = new k(g)),
            n.Oa(),
            1 > C)
          )
        ) {
          this.G.sh.call(this);
          var W, Y, V;
          h.yd ||
            ((V = !0),
            (Y = n.vi()),
            Y.setLineDash && Y.setLineDash([]),
            (Y.strokeStyle = m(S)),
            Y.beginPath());
          V
            ? (Y.setLineDash && Y.setLineDash([3]),
              Y.beginPath(),
              (Y.strokeStyle = d.xd),
              Y.moveTo(0, r * h.devicePixelRatio + 0.5),
              Y.lineTo(
                f * h.devicePixelRatio + 0.5,
                r * h.devicePixelRatio + 0.5
              ),
              (b = Math.floor(r - 100 * z * v)),
              Y.moveTo(0, b * h.devicePixelRatio + 0.5),
              Y.lineTo(
                f * h.devicePixelRatio + 0.5,
                b * h.devicePixelRatio + 0.5
              ),
              (b = Math.floor(r + 100 * z * v)),
              Y.moveTo(0, b * h.devicePixelRatio + 0.5),
              Y.lineTo(
                f * h.devicePixelRatio + 0.5,
                b * h.devicePixelRatio + 0.5
              ),
              Y.stroke())
            : (n.ud(new Float32Array([0, r, f, r]), e.be(d.xd), 3),
              (b = Math.floor(r - 100 * z * v)),
              n.ud(new Float32Array([0, b, f, b]), e.be(d.xd), 3),
              (b = Math.floor(r + 100 * z * v)),
              n.ud(new Float32Array([0, b, f, b]), e.be(d.xd), 3));
          f = this.qb;
          l || ((W = []), f.setAttribute("points", ""));
          d = [];
          V && (Y.beginPath(), Y.setLineDash([]), (Y.strokeStyle = m(S)));
          for (x = g = 0; Z <= p; Z++, x++) {
            if ((b = c[Z]))
              (b = Math.floor(r - b * z * v)),
                l || (W[W.length] = [g, b].join()),
                V
                  ? 0 === x
                    ? Y.moveTo(
                        g * h.devicePixelRatio + 0.5,
                        b * h.devicePixelRatio + 0.5
                      )
                    : Y.lineTo(
                        g * h.devicePixelRatio + 0.5,
                        b * h.devicePixelRatio + 0.5
                      )
                  : ((d[d.length] = g), (d[d.length] = b));
            g += w;
          }
          l || f.setAttribute("points", W.join(" "));
          V ? Y.stroke() : n.Ue(d, S);
        }
      }
    }
  };
})();
(function () {
  function v() {
    q.g(!u.s());
    q.g() ||
      setTimeout(function () {
        q.jb().Gb();
      }, 0);
  }
  function r() {
    n.g(!p.s());
    n.g() ||
      setTimeout(function () {
        n.jb().Gb();
      }, 0);
  }
  var l = E.controls,
    e = E.ma,
    k = E.Bh,
    h = E.Qa,
    b = l.L.Nc,
    a = l.L.Zb,
    g = b.Cc,
    d = b.af.Dh,
    f = E.Ma,
    c = E.ba.xa,
    z = E.va.$a,
    A = e.xk,
    m,
    u,
    q,
    w,
    p,
    n,
    x = (b.Gd.B8 = function (a) {
      x.G.constructor.apply(this, arguments);
      this.Zf("period");
      this.Hi = [32 / 255, 178 / 255, 170 / 255];
      this.dh = 2;
      a = this.data;
      void 0 === a.period && (a.period = 14);
    });
  b.cc(x);
  b.Ch(x, b.Pa.Gd);
  x.re = b.types.Jf;
  x.prototype.cd = function () {
    var a = ["DeM"],
      b = this.data;
    b && a.push("(", b.period, ")");
    return a.join("");
  };
  x.prototype.tc = function () {
    return "DeMarker";
  };
  x.prototype.kb = function (a) {
    x.G.kb.call(this, a, g.xh.oh);
    var b = this.data,
      d = this.S() || 4,
      e = Math.pow(0.1, d);
    if (!m) {
      var h = {
          position: "absolute",
          top: "55px",
          width: "260px",
          "text-align": "right",
          "white-space": "nowrap",
        },
        k = { position: "absolute", top: "57px", left: "264px" },
        z = { position: "absolute", top: "50px", left: "284px", width: "80px" };
      q = f(l.input.Number).o("dem--min-value").Y(e).T(d).b(z);
      u = f(l.input.pa).o("dem--min").b(k).i("change", v);
      m = f(l.page.I, "dem--min")
        .Text(c.hg + ":")
        .b(h);
      h.top = "89px";
      k.top = "91px";
      z.top = "84px";
      n = f(l.input.Number).o("dem--max-value").Y(e).T(d).b(z);
      p = f(l.input.pa).o("dem--max").b(k).i("change", r);
      w = f(l.page.I, "dem--max")
        .Text(c.gg + ":")
        .b(h);
    }
    void 0 !== b.min
      ? (u.s(!0), q.g(!1).f(b.min))
      : (u.s(!1), q.g(!0).f(this.ob));
    void 0 !== b.max
      ? (p.s(!0), n.g(!1).f(b.max))
      : (p.s(!1), n.g(!0).f(this.ib));
    a.c(q).c(u).c(m).c(n).c(p).c(w);
    return 238;
  };
  x.prototype.lb = x.prototype.ye = function () {
    if (n && q) {
      var a = this.data;
      a &&
        (n.g() || q.g() || (n.f() <= q.f() && n.f(q.Fa() + 1)),
        n.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(n.f())),
        q.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(q.f())));
    }
    x.G.lb.apply(this, arguments);
    this.Sf();
    return this;
  };
  x.prototype.S = function () {
    return 3;
  };
  x.prototype.wn = function () {
    var a = {};
    a.target = this.element;
    a.nb = this.nb;
    a.ib = this.ib;
    a.ob = this.ob;
    a.Sa = this.Sa;
    a.type = this.dh;
    a.j = this.S();
    a.vr = [0.7, 0.3];
    this.M("draw", a);
  };
  x.prototype.ug = function (a) {
    var b = this.result,
      c = this.v.Lb,
      f = this.J,
      g = this.qa,
      n = this.data.period;
    if (!c || !c.length || 1 > n) this.result = null;
    else if (n > c.length) this.result = null;
    else if (a || !b || b.length != c.length || b.ea != c.ea || b.fa != c.fa) {
      (a && b) ||
        ((b = this.result = e.Vc(c.length)),
        (b.ea = c.ea),
        (b.fa = c.fa),
        (f = this.J = e.Vc(c.length)),
        (g = this.qa = e.Vc(c.length)));
      var p = n,
        h = c.length,
        x;
      if (a) p = c.length - 1;
      else
        for (a = 1; a < n - 1; a++) {
          var m = c[a],
            k = c[a - 1];
          x = m[2] - k[2];
          0 > x && (x = 0);
          f[p] = x;
          x = k[3] - m[3];
          0 > x && (x = 0);
          g[p] = x;
        }
      for (a = d.aK; p < h; )
        (m = c[p]),
          (k = c[p - 1]),
          (x = m[2] - k[2]),
          0 > x && (x = 0),
          (f[p] = x),
          (x = k[3] - m[3]),
          0 > x && (x = 0),
          (g[p] = x),
          (x = a(p, n, f)),
          (m = a(p, n, g)),
          (b[p] = x / (x + m)),
          p++;
    }
  };
  x.prototype.wi = function (b) {
    var c = this.result;
    if (c && c.length) {
      var d = this.v,
        f = d.Aa,
        g = this.canvas,
        n = this.Ub,
        p = d.cb,
        x = d.Lb,
        m = d.se,
        q = d.ta,
        u = d.le,
        w = d.wd,
        l = a.sc,
        r = Math.pow(10, this.S()),
        v = this.nb,
        R = this.Sa,
        H = this.Hi;
      if (x && x.length && p) {
        var S = p.from,
          p = Math.min(S + w, x.length - 1);
        if (
          !(
            (b && S + w < x.length - 1) ||
            (this.Ik(),
            parseInt(g.style.width, 10) != m &&
              (h.sa
                ? g.setAttribute("width", m * h.devicePixelRatio)
                : g.setAttribute("width", m),
              z(g, "width", m + "px")),
            parseInt(g.style.height, 10) != q &&
              (h.sa
                ? g.setAttribute("height", q * h.devicePixelRatio)
                : g.setAttribute("height", q),
              z(g, "height", q + "px")),
            n || (n = this.Ub = new k(g)),
            n.Oa(),
            1 > w)
          )
        ) {
          this.G.sh.call(this);
          var Z, W, Y;
          h.yd || ((Y = !0), (W = n.vi()));
          b = Math.floor(v - 0.7 * r * R);
          n.ud(new Float32Array([0, b, f, b]), e.be(d.xd), 3);
          b = Math.floor(v - 0.3 * r * R);
          n.ud(new Float32Array([0, b, f, b]), e.be(d.xd), 3);
          f = this.qb;
          l || ((Z = []), f.setAttribute("points", ""));
          d = [];
          Y &&
            (W.beginPath(),
            (W.strokeStyle = A(H)),
            W.setLineDash && W.setLineDash([]));
          for (x = g = 0; S <= p; S++, x++)
            (b = c[S]),
              void 0 !== b &&
                (isNaN(b) && (b = 0),
                (b = Math.floor(v - b * r * R)),
                l || (Z[Z.length] = [g, b].join()),
                Y
                  ? 0 === x
                    ? W.moveTo(
                        g * h.devicePixelRatio + 0.5,
                        b * h.devicePixelRatio + 0.5
                      )
                    : W.lineTo(
                        g * h.devicePixelRatio + 0.5,
                        b * h.devicePixelRatio + 0.5
                      )
                  : ((d[d.length] = g), (d[d.length] = b))),
              (g += u);
          l || f.setAttribute("points", Z.join(" "));
          Y ? W.stroke() : n.Ue(d, H);
        }
      }
    }
  };
})();
(function () {
  function v() {
    z.g(!c.s());
    z.g() ||
      setTimeout(function () {
        z.jb().Gb();
      }, 0);
  }
  function r() {
    u.g(!m.s());
    u.g() ||
      setTimeout(function () {
        u.jb().Gb();
      }, 0);
  }
  var l = E.controls,
    e = E.ma,
    k = l.L.Nc,
    h = k.Cc,
    b = k.af.Dh,
    a = b.method,
    g = E.Ma,
    d = E.ba.xa,
    f,
    c,
    z,
    A,
    m,
    u,
    q,
    w,
    p,
    n,
    x = (k.Gd.V8 = function (b) {
      x.G.constructor.apply(this, arguments);
      this.Zf("period applyto method");
      b = this.data;
      this.Hi = [32 / 255, 178 / 255, 170 / 255];
      this.dh = 3;
      void 0 === b.period && (b.period = 13);
      void 0 === b.applyto && (b.applyto = k.Cc.ng.Pi);
      void 0 === b.method && (b.method = a.Zh);
    });
  k.cc(x);
  k.Ch(x, k.Pa.Gd);
  x.re = k.types.Jf;
  x.prototype.cd = function () {
    var a = ["Force"],
      b = this.data;
    b && a.push("(", b.period, ")");
    return a.join("");
  };
  x.prototype.tc = function () {
    return "Force Index";
  };
  x.prototype.kb = function (a) {
    var e = this.data,
      k = h.xh,
      G = {
        position: "absolute",
        top: "21px",
        width: "80px",
        "text-align": "right",
      },
      F = { position: "absolute", top: "16px", width: "115px", left: "84px" };
    q ||
      ((q = g(l.input.of).o("force-method").de(b.Gw).b(F)),
      (w = g(l.page.I, "force-method")
        .Text(d.ks + ":")
        .b(G)),
      (p = g(l.input.of)
        .o("force-volume")
        .de([
          {
            value: 0,
            label: d.GP,
          },
          { value: 1, label: d.sP },
        ])
        .b(F)
        .b({ top: "84px", width: "125px" })),
      (n = g(l.page.I, "force-volume")
        .Text(d.HP + ":")
        .b(G)
        .b({ top: "91px" })));
    q.h() && q.f(parseInt(e.method, 10));
    p.h() && p.f(parseInt(e.volumes, 10) || 0);
    a.c(p).c(n);
    x.G.kb.call(this, a, k.oh | k.Oi);
    a.c(q).c(w);
    k = this.S() || 6;
    G = Math.pow(0.1, k);
    if (!f) {
      var F = {
          position: "absolute",
          top: "121px",
          width: "260px",
          "text-align": "right",
          "white-space": "nowrap",
        },
        y = { position: "absolute", top: "123px", left: "264px" },
        M = {
          position: "absolute",
          top: "116px",
          left: "284px",
          width: "80px",
        };
      z = g(l.input.Number).o("atr--min-value").Y(G).T(k).b(M);
      c = g(l.input.pa).o("atr--min").b(y).i("change", v);
      f = g(l.page.I, "atr--min")
        .Text(d.hg + ":")
        .b(F);
      F.top = "153px";
      y.top = "155px";
      M.top = "148px";
      u = g(l.input.Number).o("atr--max-value").Y(G).T(k).b(M);
      m = g(l.input.pa).o("atr--max").b(y).i("change", r);
      A = g(l.page.I, "atr--max")
        .Text(d.gg + ":")
        .b(F);
    }
    void 0 !== e.min
      ? (c.s(!0), z.g(!1).f(e.min))
      : (c.s(!1), z.g(!0).f(this.ob));
    void 0 !== e.max
      ? (m.s(!0), u.g(!1).f(e.max))
      : (m.s(!1), u.g(!0).f(this.ib));
    a.c(z).c(c).c(f).c(u).c(m).c(A);
    return 300;
  };
  x.prototype.lb = x.prototype.ye = function () {
    var a = this.data;
    a &&
      (u &&
        z &&
        (u.g() || z.g() || (u.f() <= z.f() && u.f(z.Fa() + 1)),
        u.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(u.f())),
        z.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(z.f()))),
      q.g() || (a.method = parseFloat(q.f())),
      (a.volumes = parseFloat(p.f())));
    x.G.lb.apply(this, arguments);
    this.Sf();
    return this;
  };
  x.prototype.S = function () {
    return x.G.S.apply(this, arguments) + 1;
  };
  x.prototype.ug = function (a) {
    var c = this.data,
      d = this.result,
      f = this.J,
      g = this.v.Lb,
      n = c.period,
      c = c.method;
    if (!g || !g.length || 1 > n) this.result = null;
    else if (a || !d || d.length != g.length || d.ea != g.ea || d.fa != g.fa) {
      (a && d) ||
        ((d = this.result = t.ma.Vc(g.length)),
        (d.ea = g.ea),
        (d.fa = g.fa),
        (f = this.J = e.Vc(g.length)));
      var p = n,
        h = g.length;
      a && (p = g.length - 1);
      var x = this.Fi();
      for (b.Hf(x, f, a, n, c); p < h; )
        (d[p] = g[p][5] * (f[p] - f[p - 1])), p++;
    }
  };
})();
(function () {
  function v() {
    n.g(!p.s());
    n.g() ||
      setTimeout(function () {
        n.jb().Gb();
      }, 0);
  }
  function r() {
    O.g(!C.s());
    O.g() ||
      setTimeout(function () {
        O.jb().Gb();
      }, 0);
  }
  var l = E.va,
    e = E.controls,
    k = E.ma,
    h = E.Qa,
    b = E.Bh,
    a = e.L.Zb,
    g = e.L.Nc,
    d = g.Cc,
    f = g.af.Dh,
    c = l.sb,
    z = l.tb,
    A = l.$a,
    m = E.Ma,
    u = E.ba.xa,
    q = [192 / 255, 192 / 255, 192 / 255],
    w,
    p,
    n,
    x,
    C,
    O,
    I,
    G,
    F,
    y,
    M,
    D,
    L = (g.Gd.sba = function (a) {
      L.G.constructor.apply(this, arguments);
      this.Zf("fast_ema slow_ema macd_sma applyto");
      a = this.data;
      this.dh = 3;
      void 0 === a.fast_ema && (a.fast_ema = 12);
      void 0 === a.slow_ema && (a.slow_ema = 26);
      void 0 === a.macd_sma && (a.macd_sma = 9);
      void 0 === a.applyto && (a.applyto = g.Cc.ng.Pi);
    });
  g.cc(L);
  g.Ch(L, g.Pa.Gd);
  L.re = g.types.Jf;
  L.prototype.cd = function () {
    var a = ["OsMA"],
      b = this.data;
    b && a.push("(", [b.fast_ema, b.slow_ema, b.macd_sma].join(), ")");
    return a.join("");
  };
  L.prototype.tc = function () {
    return "Moving Average of Oscillator";
  };
  L.prototype.kb = function (a) {
    L.G.kb.call(this, a, d.xh.Oi);
    var b = this.data;
    if (!w) {
      var c = { position: "absolute", "white-space": "nowrap" },
        f = { position: "absolute", left: "264px" },
        g = { position: "absolute", width: "80px" };
      c.top = "57px";
      g.top = "52px";
      c.right = "-80px";
      g.left = "84px";
      G = m(e.input.Number).o("fast-ema").Y(1).Fa(1).mc(d.Xh).T(0).b(g);
      I = m(e.page.I, "fast-ema")
        .Text(u.cH + ":")
        .b(c);
      c.right = "-280px";
      g.left = "284px";
      y = m(e.input.Number).o("slow-ema").Y(1).Fa(1).mc(d.Xh).T(0).b(g);
      F = m(e.page.I, "slow-ema")
        .Text(u.eH + ":")
        .b(c);
      c.top = "89px";
      g.top = "84px";
      D = m(e.input.Number).o("macd-sma").Y(1).Fa(1).mc(d.Xh).T(0).b(g);
      M = m(e.page.I, "macd-sma").Text("MACD SMA:").b(c);
      c.right = "-260px";
      c.top = "123px";
      f.top = "125px";
      g.top = "118px";
      var h = this.S(),
        k = Math.pow(0.1, h);
      n = m(e.input.Number).o("mcad-min-value").Y(k).T(h).b(g);
      p = m(e.input.pa).o("mcad-min").b(f).i("change", v);
      w = m(e.page.I, "mcad-min")
        .Text(u.hg + ":")
        .b(c);
      c.top = "155px";
      f.top = "157px";
      g.top = "150px";
      O = m(e.input.Number).o("mcad-max-value").Y(k).T(h).b(g);
      C = m(e.input.pa).o("mcad-max").b(f).i("change", r);
      x = m(e.page.I, "mcad-max")
        .Text(u.gg + ":")
        .b(c);
    }
    y.f(b.slow_ema || 0);
    G.f(b.fast_ema || 0);
    D.f(b.macd_sma || 0);
    void 0 !== b.min
      ? (p.s(!0), n.g(!1).f(b.min))
      : (p.s(!1), n.g(!0).f(void 0 === this.ob ? 0 : this.ob));
    void 0 !== b.max
      ? (C.s(!0), O.g(!1).f(b.max))
      : (C.s(!1), O.g(!0).f(void 0 === this.ib ? 0 : this.ib));
    a.c(D).c(M).c(G).c(I).c(y).c(F).c(n).c(p).c(w).c(O).c(C).c(x);
    return 302;
  };
  L.prototype.lb = L.prototype.ye = function () {
    var a = this.data;
    a &&
      ((a.slow_ema = y.f()),
      (a.fast_ema = G.f()),
      (a.macd_sma = D.f()),
      O &&
        n &&
        (O.g() || n.g() || (O.f() <= n.f() && O.f(n.Fa() + 1)),
        O.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(O.f())),
        n.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(n.f()))));
    L.G.lb.apply(this, arguments);
    this.Sf();
    return this;
  };
  L.prototype.S = function () {
    return (L.G.S.apply(this, arguments) || 5) + 2;
  };
  L.prototype.ug = function (a) {
    var b = f.method,
      c = this.data,
      e = this.v.Lb;
    if (e && e.length) {
      var g = this.J,
        n = this.qa,
        p = this.result,
        h = this.Jd,
        x = this.ue,
        m = parseInt(c.fast_ema, 10) || 0,
        k = parseInt(c.slow_ema, 10) || 0,
        c = parseInt(c.macd_sma, 10) || 0,
        m = Math.max(1, Math.min(m, d.Xh)),
        k = Math.max(1, Math.min(k, d.Xh)),
        c = Math.max(1, Math.min(c, d.Xh));
      a ||
        !p ||
        (p.length == e.length && p.ea == e.ea && p.fa == e.fa) ||
        (x =
          this.ue =
          h =
          this.Jd =
          p =
          this.result =
          n =
          this.qa =
          g =
          this.J =
            null);
      g || (g = this.J = []);
      n || (n = this.qa = []);
      p || ((p = this.result = []), (p.ea = e.ea), (p.fa = e.fa));
      h || ((h = this.Jd = []), (h.ea = e.ea), (h.fa = e.fa));
      x || ((x = this.ue = []), (x.ea = e.ea), (x.fa = e.fa));
      e = this.Fi();
      if (m !== k) {
        f.Hf(e, g, a, m, b.Si);
        f.Hf(e, n, a, k, b.Si);
        for (
          var e = a ? g.length - Math.max(k, m) : 0, q = g.length;
          e < q;
          e++
        )
          h[e] = g[e] - n[e];
        f.Hf(h, x, a, c, b.Zh);
        e = a ? g.length - Math.max(k, m, c) : 0;
        for (q = g.length; e < q; e++) p[e] = h[e] - x[e];
      }
    }
  };
  L.prototype.wi = function (d) {
    var f = this.result;
    if (f && f.length) {
      var e = this.v,
        n = this.canvas,
        p = this.Ub,
        x = e.cb,
        m = e.Lb,
        u = e.se,
        w = e.Aa,
        l = e.ta,
        C = e.le,
        y = e.Dm,
        r = e.wd,
        v = a.sc,
        G = x.from,
        O = Math.pow(10, this.S()),
        I = this.nb,
        F = this.Sa,
        D = !(5 > x.scale && h.yd);
      if (
        m &&
        m.length &&
        x &&
        !(d && G + r < m.length - 1) &&
        ((x = this.Hd),
        (d = this.Nb),
        x ||
          ((x = c("title", "http://www.w3.org/2000/svg")),
          z(d, x),
          (x = this.Hd = c("polygon", "http://www.w3.org/2000/svg")),
          x.setAttribute("style", "fill:black;fill-opacity:0;"),
          (x.w = this),
          g.Pa.Fd.Cg(x),
          z(d, x)),
        parseInt(n.style.width, 10) != u &&
          (h.sa
            ? n.setAttribute("width", u * h.devicePixelRatio)
            : n.setAttribute("width", u),
          A(n, "width", u + "px")),
        parseInt(n.style.height, 10) != l &&
          (h.sa
            ? n.setAttribute("height", l * h.devicePixelRatio)
            : n.setAttribute("height", l),
          A(n, "height", l + "px")),
        p || (p = this.Ub = new b(n)),
        p.Oa(),
        !(1 > r))
      ) {
        n = p.vi();
        h.yd
          ? p.ud(new Float32Array([0, I, w, I]), k.be(e.xd), 3)
          : (n.setLineDash && n.setLineDash([3]),
            (n.strokeStyle = e.xd),
            n.beginPath(),
            n.moveTo(0, I * h.devicePixelRatio + 0.5),
            n.lineTo(
              w * h.devicePixelRatio + 0.5,
              I * h.devicePixelRatio + 0.5
            ),
            n.stroke());
        L.G.sh.call(this);
        var w = [],
          M,
          e = G,
          r = Math.min(G + r, m.length - 1);
        if (e <= r) {
          G = m = 0;
          v ||
            ((M = []),
            (M[M.length] = [m, I].join()),
            this.Hd.setAttribute("points", ""));
          for (; e <= r; e++, G++) {
            if ((n = f[e]))
              0 < n
                ? ((u = Math.round(n * O * F)),
                  (n = I - u),
                  v || (M[M.length] = [m, n].join()),
                  D ||
                    ((l = w.length),
                    (w[l] = m),
                    (w[l + 1] = n),
                    (w[l + 2] = m),
                    (w[l + 3] = I)))
                : ((u = Math.round(Math.abs(n) * O * F)),
                  (n = I),
                  v || (M[M.length] = [m, n + u].join()),
                  D ||
                    ((l = w.length),
                    (w[l] = m),
                    (w[l + 1] = I),
                    (w[l + 2] = m),
                    (w[l + 3] = n + u))),
                D && (w[w.length] = [m - Math.floor(0.5 * y) - 1, n, y, u]);
            m += C;
          }
          if (D) {
            p.Dg(q);
            for (e = 0; e < w.length; e++)
              (f = w[e]), p.Gg(f[0], f[1], f[2], f[3]);
            p.Fg();
          } else p.ud(w, q);
          v ||
            ((M[M.length] = [m, I].join()),
            this.Hd.setAttribute("points", M.join(" ")));
        }
      }
    }
  };
  L.prototype.Kh = function (a) {
    var b = "",
      c = this.result,
      d = this.data,
      f = this.v.pb(a),
      c = c[f],
      b =
        b +
        (this.tc() + " (" + [d.fast_ema, d.slow_ema, d.macd_sma].join() + ")"),
      b = b + ("\nTime: " + g.Cc.eg(a));
    return (b += "\nValue: " + c.toFixed(this.S()));
  };
})();
(function () {
  function v() {
    u.g(!m.s());
    u.g() ||
      setTimeout(function () {
        u.jb().Gb();
      }, 0);
  }
  function r() {
    p.g(!w.s());
    p.g() ||
      setTimeout(function () {
        p.jb().Gb();
      }, 0);
  }
  var l = E.controls,
    e = E.ma,
    k = E.Bh,
    h = E.Qa,
    b = l.L.Nc,
    a = l.L.Zb,
    g = b.Cc,
    d = E.Ma,
    f = E.ba.xa,
    c = E.va.$a,
    z = e.xk,
    A,
    m,
    u,
    q,
    w,
    p,
    n = (b.Gd.Yba = function (a) {
      n.G.constructor.apply(this, arguments);
      this.Zf("period applyto");
      this.Hi = [30 / 255, 144 / 255, 1];
      this.dh = 2;
      a = this.data;
      a.max = 100;
      a.min = 0;
      void 0 === a.applyto && (a.applyto = g.ng.zq);
      void 0 === a.period && (a.period = 14);
    });
  b.cc(n);
  b.Ch(n, b.Pa.Gd);
  n.re = b.types.Jf;
  n.prototype.cd = function () {
    var a = ["RSI"],
      b = this.data;
    b && a.push("(", b.period, ")");
    return a.join("");
  };
  n.prototype.tc = function () {
    return "Relative Strength Index";
  };
  n.prototype.kb = function (a) {
    var b = g.xh;
    n.G.kb.call(this, a, b.oh | b.Oi);
    b = this.data;
    if (!A) {
      var c = Math.pow(0.1, this.S()),
        e = {
          position: "absolute",
          top: "89px",
          width: "260px",
          "text-align": "right",
          "white-space": "nowrap",
        },
        h = { position: "absolute", top: "91px", left: "264px" },
        k = { position: "absolute", top: "84px", left: "284px", width: "80px" };
      u = d(l.input.Number).o("atr--min-value").Y(c).T(this.S()).b(k);
      m = d(l.input.pa).o("atr--min").b(h).i("change", v);
      A = d(l.page.I, "atr--min")
        .Text(f.hg + ":")
        .b(e);
      e.top = "123px";
      h.top = "125px";
      k.top = "118px";
      p = d(l.input.Number).o("atr--max-value").Y(c).T(this.S()).b(k);
      w = d(l.input.pa).o("atr--max").b(h).i("change", r);
      q = d(l.page.I, "atr--max")
        .Text(f.gg + ":")
        .b(e);
    }
    void 0 !== b.min
      ? (m.s(!0), u.g(!1).f(b.min))
      : (m.s(!1), u.g(!0).f(this.ob));
    void 0 !== b.max
      ? (w.s(!0), p.g(!1).f(b.max))
      : (w.s(!1), p.g(!0).f(this.ib));
    a.c(u).c(m).c(A).c(p).c(w).c(q);
    return 272;
  };
  n.prototype.lb = n.prototype.ye = function () {
    var a = this.data;
    a &&
      p &&
      u &&
      (p.g() || u.g() || (p.f() <= u.f() && p.f(u.Fa() + 1)),
      p.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(p.f())),
      u.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(u.f())));
    n.G.lb.apply(this, arguments);
    this.Sf();
    return this;
  };
  n.prototype.S = function () {
    return 2;
  };
  n.prototype.wn = function () {
    var a = {};
    a.target = this.element;
    a.nb = this.nb;
    a.ib = this.ib;
    a.ob = this.ob;
    a.Sa = this.Sa;
    a.type = this.dh;
    a.j = this.S();
    a.vr = [70, 30];
    this.M("draw", a);
  };
  n.prototype.ug = function (a) {
    var b = this.result,
      c = this.qa,
      d = this.J,
      f = this.v.Lb,
      g = this.data.period;
    if (!f || !f.length || 1 > g) this.result = null;
    else if (a || !b || b.length != f.length || b.ea != f.ea || b.fa != f.fa) {
      (a && b) ||
        ((b = this.result = e.Vc(f.length)),
        (b.ea = f.ea),
        (b.fa = f.fa),
        (c = this.qa = e.Vc(f.length)),
        (d = this.J = e.Vc(f.length)));
      var n = f.length,
        p = this.Fi(),
        f = g - 1;
      for (a && (f = n - 2); f < n; ) {
        var h = (a = 0),
          m = f + 1 - g;
        if (f == g) {
          for (; m <= f; ) {
            var k = p[m] - p[m - 1];
            0 < k ? (h += k) : (a -= k);
            m++;
          }
          c[f] = h / g;
          d[f] = a / g;
        } else
          (k = p[f] - p[f - 1]),
            0 < k ? (h = k) : (a = -k),
            (c[f] = (c[f - 1] * (g - 1) + h) / g),
            (d[f] = (d[f - 1] * (g - 1) + a) / g);
        b[f] = 0 === d[f] ? 0 : 100 - 100 / (1 + c[f] / d[f]);
        f++;
      }
    }
  };
  n.prototype.wi = function (b) {
    var d = this.result;
    if (d && d.length) {
      var f = this.v,
        g = f.Aa,
        n = this.canvas,
        p = this.Ub,
        m = f.cb,
        q = f.Lb,
        u = f.se,
        w = f.ta,
        l = f.le,
        A = f.wd,
        r = a.sc,
        K = Math.pow(10, this.S()),
        v = this.nb,
        T = this.Sa,
        R = this.Hi;
      if (q && q.length && m) {
        var H = m.from,
          m = Math.min(H + A, q.length - 1);
        if (
          !(
            (b && H + A < q.length - 1) ||
            (this.Ik(),
            parseInt(n.style.width, 10) != u &&
              (h.sa
                ? n.setAttribute("width", u * h.devicePixelRatio)
                : n.setAttribute("width", u),
              c(n, "width", u + "px")),
            parseInt(n.style.height, 10) != w &&
              (h.sa
                ? n.setAttribute("height", w * h.devicePixelRatio)
                : n.setAttribute("height", w),
              c(n, "height", w + "px")),
            p || (p = this.Ub = new k(n)),
            p.Oa(),
            1 > A)
          )
        ) {
          this.G.sh.call(this);
          var S, Z, W;
          h.yd ||
            ((W = !0),
            (Z = p.vi()),
            Z.setLineDash && Z.setLineDash([]),
            (Z.strokeStyle = z(R)),
            Z.beginPath());
          W
            ? (Z.setLineDash && Z.setLineDash([3]),
              (Z.strokeStyle = f.xd),
              Z.beginPath(),
              (b = Math.floor(v - 30 * K * T)),
              Z.moveTo(0, b * h.devicePixelRatio + 0.5),
              Z.lineTo(
                g * h.devicePixelRatio + 0.5,
                b * h.devicePixelRatio + 0.5
              ),
              (b = Math.floor(v - 70 * K * T)),
              Z.moveTo(0, b * h.devicePixelRatio + 0.5),
              Z.lineTo(
                g * h.devicePixelRatio + 0.5,
                b * h.devicePixelRatio + 0.5
              ),
              Z.stroke())
            : ((b = Math.floor(v - 30 * K * T)),
              p.ud(new Float32Array([0, b, g, b]), e.be(f.xd), 3),
              (b = Math.floor(v - 70 * K * T)),
              p.ud(new Float32Array([0, b, g, b]), e.be(f.xd), 3));
          g = this.qb;
          r || ((S = []), g.setAttribute("points", ""));
          f = [];
          W &&
            (Z.beginPath(),
            (Z.strokeStyle = z(R)),
            Z.setLineDash && Z.setLineDash([0]));
          for (q = n = 0; H <= m; H++, q++) {
            if ((b = d[H]))
              (b = Math.floor(v - b * K * T)),
                r || (S[S.length] = [n, b].join()),
                W
                  ? 0 === q
                    ? Z.moveTo(
                        n * h.devicePixelRatio + 0.5,
                        b * h.devicePixelRatio + 0.5
                      )
                    : Z.lineTo(
                        n * h.devicePixelRatio + 0.5,
                        b * h.devicePixelRatio + 0.5
                      )
                  : ((f[f.length] = n), (f[f.length] = b));
            n += l;
          }
          r || g.setAttribute("points", S.join(" "));
          W ? Z.stroke() : p.Ue(f, R);
        }
      }
    }
  };
})();
(function () {
  function v() {
    f.g(!d.s());
    f.g() ||
      setTimeout(function () {
        f.jb().Gb();
      }, 0);
  }
  function r() {
    A.g(!z.s());
    A.g() ||
      setTimeout(function () {
        A.jb().Gb();
      }, 0);
  }
  var l = E.controls,
    e = E.ma,
    k = l.L.Nc,
    h = k.Cc,
    b = E.Ma,
    a = E.ba.xa,
    g,
    d,
    f,
    c,
    z,
    A,
    m = (k.Gd.Zba = function (a) {
      m.G.constructor.apply(this, arguments);
      this.Zf("period");
      this.dh = 3;
      a = this.data;
      void 0 === a.period && (a.period = 10);
    });
  k.cc(m);
  k.Ch(m, k.Pa.JM);
  m.re = k.types.Jf;
  m.prototype.cd = function () {
    var a = ["RVI"],
      b = this.data;
    b && a.push("(", b.period, ")");
    return a.join("");
  };
  m.prototype.tc = function () {
    return "Relative Vigor Index";
  };
  m.prototype.Lf = function () {
    var a = this.Ub;
    this.ue = this.Jd = null;
    a && a.Oa();
    return this;
  };
  m.prototype.kb = function (e) {
    m.G.kb.call(this, e, h.xh.oh);
    var k = this.data;
    if (!g) {
      var w = {
          position: "absolute",
          top: "55px",
          width: "260px",
          "text-align": "right",
          "white-space": "nowrap",
        },
        p = { position: "absolute", top: "57px", left: "264px" },
        n = { position: "absolute", top: "50px", left: "284px", width: "80px" },
        x = Math.pow(0.1, this.S());
      f = b(l.input.Number).o("rvi--min-value").Y(x).T(this.S()).b(n);
      d = b(l.input.pa).o("rvi--min").b(p).i("change", v);
      g = b(l.page.I, "rvi--min")
        .Text(a.hg + ":")
        .b(w);
      w.top = "89px";
      p.top = "91px";
      n.top = "84px";
      A = b(l.input.Number).o("rvi--max-value").Y(x).T(this.S()).b(n);
      z = b(l.input.pa).o("rvi--max").b(p).i("change", r);
      c = b(l.page.I, "rvi--max")
        .Text(a.gg + ":")
        .b(w);
    }
    void 0 !== k.min
      ? (d.s(!0), f.g(!1).f(k.min))
      : (d.s(!1), f.g(!0).f(this.ob));
    void 0 !== k.max
      ? (z.s(!0), A.g(!1).f(k.max))
      : (z.s(!1), A.g(!0).f(this.ib));
    e.c(f).c(d).c(g).c(A).c(z).c(c);
    return 240;
  };
  m.prototype.lb = function () {
    var a = this.data;
    a &&
      (A.g() || f.g() || (A.f() <= f.f() && A.f(f.Fa() + 1)),
      A.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(A.f())),
      f.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(f.f())));
    m.G.lb.apply(this, arguments);
    this.Sf();
    return this;
  };
  m.prototype.S = function () {
    return 3;
  };
  m.prototype.ug = function (a) {
    var b = this.Jd,
      c = this.ue,
      d = this.v.Lb,
      f = this.data.period;
    if (!d || !d.length || 1 > f) this.ue = this.Jd = null;
    else if (a || !b || b.length != d.length || b.ea != d.ea || b.fa != d.fa) {
      (a && b && c) ||
        ((b = this.Jd = e.Vc(d.length)),
        (b.ea = d.ea),
        (b.fa = d.fa),
        (c = this.ue = e.Vc(d.length)));
      var g = f + 3,
        h = d.length;
      a && (g = d.length - 2);
      for (var m, k, l, z; g < h; ) {
        z = l = 0;
        for (var y = g - f + 1; y <= g; y++)
          (m =
            (d[y][4] -
              d[y][1] +
              2 * (d[y - 1][4] - d[y - 1][1]) +
              2 * (d[y - 2][4] - d[y - 2][1]) +
              (d[y - 3][4] - d[y - 3][1])) /
            6),
            (k =
              (d[y][2] -
                d[y][3] +
                2 * (d[y - 1][2] - d[y - 1][3]) +
                2 * (d[y - 2][2] - d[y - 2][3]) +
                (d[y - 3][2] - d[y - 3][3])) /
              6),
            (l += m),
            (z += k);
        b[g] = 0 !== z ? l / z : l;
        g++;
      }
      g = f + 4;
      for (a && (g = d.length - 1); g < h; )
        (c[g] = (b[g] + 2 * b[g - 1] + 2 * b[g - 2] + b[g - 3]) / 6), g++;
    }
  };
  m.prototype.Kh = function (a, b) {
    var c = "",
      d = this.Jd,
      f = this.ue,
      e = this.data,
      g = this.v.pb(a),
      h = b.getAttribute("data-type"),
      c = c + (this.tc() + " (" + e.period + ")"),
      c = c + ("\nTime: " + k.Cc.eg(a));
    "value" == h
      ? ((d = d[g]), (c += "\nValue: " + d.toFixed(this.S())))
      : ((d = f[g]), (c += "\nSignal: " + d.toFixed(this.S())));
    return c;
  };
})();
(function () {
  function v() {
    D.g(!M.s());
    D.g() ||
      setTimeout(function () {
        D.jb().Gb();
      }, 0);
  }
  function r() {
    Q.g(!B.s());
    Q.g() ||
      setTimeout(function () {
        Q.jb().Gb();
      }, 0);
  }
  var l = E.controls,
    e = E.Qa,
    k = E.ma,
    h = E.Bh,
    b = l.L.Zb,
    a = l.L.Nc,
    g = a.af.Dh,
    d = E.Ma,
    f = E.ba.xa,
    c = E.va.$a,
    z = k.xk,
    A = [23 / 255, 178 / 255, 170 / 255],
    m = [1, 0, 0],
    u = [
      { value: 0, label: "Low/High" },
      { value: 1, label: "Close/Close" },
    ],
    q,
    w,
    p,
    n,
    x,
    C,
    O,
    I,
    G,
    F,
    y,
    M,
    D,
    L,
    B,
    Q,
    N = (a.Gd.Oca = function (a) {
      N.G.constructor.apply(this, arguments);
      this.Zf("period_%k period_%d slowing price");
      this.dh = 2;
      a = this.data;
      a.min = 0;
      a.max = 100;
      void 0 === a["period_%k"] && (a["period_%k"] = 5);
      void 0 === a["period_%d"] && (a["period_%d"] = 3);
      void 0 === a.slowing && (a.slowing = 3);
      void 0 === a.price && (a.price = 0);
      void 0 === a.method && (a.method = g.method.Zh);
    });
  a.cc(N);
  a.Ch(N, a.Pa.JM);
  N.re = a.types.Jf;
  N.prototype.cd = function () {
    var a = ["Stoch"],
      b = this.data;
    b && a.push("(", [b["period_%k"], b["period_%d"], b.slowing].join(), ")");
    return a.join("");
  };
  N.prototype.tc = function () {
    return "Stochastic Oscillator";
  };
  N.prototype.Lf = function () {
    var a = this.Ub;
    this.ue = this.Jd = null;
    a && a.Oa();
    return this;
  };
  N.prototype.kb = function (a) {
    var b = this.data;
    if (!w) {
      var c = {
          position: "absolute",
          top: "16px",
          width: "84px",
          left: "107px",
        },
        e = {
          position: "absolute",
          top: "21px",
          width: "99px",
          "text-align": "right",
        };
      w = d(l.input.Number).o("stoch_k_period").Fa(1).mc(4e3).Y(1).T(0).b(c);
      q = d(l.page.I, "stoch_k_period")
        .Text(f.VT + ":")
        .b(e);
      c.top = "50px";
      n = d(l.input.Number).o("stoch_d_period").Fa(1).mc(4e3).Y(1).T(0).b(c);
      e.top = "55px";
      p = d(l.page.I, "stoch_d_period")
        .Text(f.TT + ":")
        .b(e);
      c.top = "16px";
      c.left = "314px";
      C = d(l.input.Number).o("stoch_slow").Fa(1).mc(4e3).Y(1).T(0).b(c);
      e.top = "21px";
      e.left = "207px";
      x = d(l.page.I, "stoch_slow")
        .Text(f.$T + ":")
        .b(e);
      c.top = "50px";
      O = d(l.input.of).o("stoch-price").de(u).b(c);
      e.top = "55px";
      I = d(l.page.I, "stoch-price")
        .Text(f.YT + ":")
        .b(e);
      c.top = "84px";
      c.left = "107px";
      c.width = "291px";
      F = d(l.input.of).o("stoch-method").de(g.Gw).b(c);
      e.top = "89px";
      e.left = "0px";
      G = d(l.page.I, "stoch-method")
        .Text(f.ks + ":")
        .b(e);
    }
    w.f(b["period_%k"]);
    n.f(b["period_%d"]);
    C.f(b.slowing);
    O.f(b.price);
    F.f(b.method);
    a.c(q).c(w).c(n).c(p).c(C).c(x).c(O).c(I).c(F).c(G);
    if (!y) {
      var c = Math.pow(0.1, this.S()),
        e = {
          position: "absolute",
          top: "123px",
          width: "260px",
          "text-align": "right",
          "white-space": "nowrap",
          left: "34px",
        },
        h = { position: "absolute", top: "124px", left: "298px" },
        m = {
          position: "absolute",
          top: "118px",
          left: "318px",
          width: "80px",
        };
      D = d(l.input.Number).o("stoch-min-value").Y(c).T(this.S()).b(m);
      M = d(l.input.pa).o("stoch-min").b(h).i("change", v);
      y = d(l.page.I, "stoch-min")
        .Text(f.hg + ":")
        .b(e);
      e.top = "157px";
      h.top = "159px";
      m.top = "152px";
      Q = d(l.input.Number).o("stoch-max-value").Y(c).T(this.S()).b(m);
      B = d(l.input.pa).o("stoch-max").b(h).i("change", r);
      L = d(l.page.I, "stoch-max")
        .Text(f.gg + ":")
        .b(e);
    }
    D.T(this.S());
    Q.T(this.S());
    void 0 !== b.min
      ? (M.s(!0), D.g(!1).f(b.min))
      : (M.s(!1), D.g(!0).f(this.ob));
    void 0 !== b.max
      ? (B.s(!0), Q.g(!1).f(b.max))
      : (B.s(!1), Q.g(!0).f(this.ib));
    a.c(D).c(M).c(y).c(Q).c(B).c(L);
    return 302;
  };
  N.prototype.lb = N.prototype.ye = function () {
    var a = this.data;
    a &&
      ((a["period_%k"] = parseFloat(w.f())),
      (a["period_%d"] = parseFloat(n.f())),
      (a.slowing = parseFloat(C.f())),
      (a.price = parseFloat(O.f())),
      (a.method = parseFloat(F.f())),
      Q &&
        D &&
        (Q.g() || D.g() || (Q.f() <= D.f() && Q.f(D.Fa() + 1)),
        Q.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(Q.f())),
        D.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(D.f()))));
    this.Sf();
    return this;
  };
  N.prototype.S = function () {
    return 2;
  };
  N.prototype.Bu = function () {
    return 0;
  };
  N.prototype.ug = function (a) {
    var b = this.data,
      c = this.Jd,
      d = this.ue,
      f = this.qa,
      e = this.J,
      n = this.v.Lb,
      p = b["period_%k"],
      h = b["period_%d"],
      x = b.slowing,
      m = b.method,
      q = b.price;
    if (!n || !n.length || 1 > p || 1 > h) this.ue = this.Jd = null;
    else if (a || !c || c.length != n.length || c.ea != n.ea || c.fa != n.fa) {
      (a && c && d) ||
        ((c = this.Jd = k.Vc(n.length)),
        (c.ea = n.ea),
        (c.fa = n.fa),
        (d = this.ue = k.Vc(n.length)),
        (f = this.qa = k.Vc(n.length)),
        (e = this.J = k.Vc(n.length)));
      var b = p,
        u = n.length,
        w,
        l,
        z;
      a && (b = u - 2);
      1 == q ? (l = z = 4) : ((l = 3), (z = 2));
      for (; b < u; ) {
        for (
          var y = Number.MAX_VALUE, C = Number.MIN_VALUE, q = b - p + 1;
          q <= b;

        )
          y > (w = n[q][l]) && (y = w), C < (w = n[q][z]) && (C = w), q++;
        f[b] = y;
        e[b] = C;
        b++;
      }
      b = p + x;
      for (a && (b = u - 2); b < u; ) {
        w = p = 0;
        q = b - x + 1;
        for (0 > q && (q = 0); q <= b; q++)
          (p += n[q][4] - f[q]), (w += e[q] - f[q]);
        c[b] = 0 === w ? 100 : (p / w) * 100;
        b++;
      }
      g.Hf(c, d, a, h, m);
    }
  };
  N.prototype.wn = function () {
    var a = {};
    a.target = this.element;
    a.nb = this.nb;
    a.ib = this.ib;
    a.ob = this.ob;
    a.Sa = this.Sa;
    a.type = 2;
    a.j = this.S();
    a.vr = [20, 80];
    this.M("draw", a);
  };
  N.prototype.wi = function (a) {
    var d = this.Jd,
      f = this.ue;
    if (d && d.length) {
      var g = this.v,
        n = g.Aa,
        p = this.canvas,
        x = this.Ub,
        q = g.cb,
        u = g.Lb,
        w = g.se,
        l = g.ta,
        y = g.le,
        C = g.wd,
        r = b.sc,
        B = Math.pow(10, this.S()),
        v = this.nb,
        O = this.Sa;
      if (u && u.length && q) {
        var G = q.from,
          q = Math.min(G + C, u.length - 1);
        if (
          !(
            (a && G + C < u.length - 1) ||
            (this.Ik(),
            parseInt(p.style.width, 10) != w &&
              (e.sa
                ? p.setAttribute("width", w * e.devicePixelRatio)
                : p.setAttribute("width", w),
              c(p, "width", w + "px")),
            parseInt(p.style.height, 10) != l &&
              (e.sa
                ? p.setAttribute("height", l * e.devicePixelRatio)
                : p.setAttribute("height", l),
              c(p, "height", l + "px")),
            x || (x = this.Ub = new h(p)),
            x.Oa(),
            1 > C)
          )
        ) {
          this.G.sh.call(this);
          var I, F, Q, N;
          e.yd || ((N = !0), (Q = x.vi()));
          N
            ? (Q.setLineDash && Q.setLineDash([3]),
              (Q.strokeStyle = g.xd),
              Q.beginPath(),
              Q.moveTo(0, (v - 20 * B * O) * e.devicePixelRatio + 0.5),
              Q.lineTo(
                n * e.devicePixelRatio + 0.5,
                (v - 20 * B * O) * e.devicePixelRatio + 0.5
              ),
              Q.moveTo(0, (v - 80 * B * O) * e.devicePixelRatio + 0.5),
              Q.lineTo(
                n * e.devicePixelRatio + 0.5,
                (v + 0.5 - 80 * B * O) * e.devicePixelRatio + 0.5
              ),
              Q.stroke())
            : ((a = Math.floor(v - 20 * B * O)),
              x.ud(new Float32Array([0, a, n, a]), k.be(g.xd), 3),
              (a = Math.floor(v - 80 * B * O)),
              x.ud(new Float32Array([0, a, n, a]), k.be(g.xd), 3));
          g = this.qb;
          n = this.bc;
          r ||
            ((I = []),
            (F = []),
            g.setAttribute("points", ""),
            n.setAttribute("points", ""));
          p = [];
          u = [];
          for (l = w = 0; G <= q; G++, l++) {
            if ((a = d[G]))
              (a = Math.floor(v - a * B * O)),
                r || (I[I.length] = [w, a].join()),
                (p[p.length] = w),
                (p[p.length] = a);
            if ((a = f[G]))
              (a = Math.floor(v - a * B * O)),
                r || (F[F.length] = [w, a].join()),
                (u[u.length] = w),
                (u[u.length] = a);
            w += y;
          }
          r ||
            (g.setAttribute("points", I.join(" ")),
            n.setAttribute("points", F.join(" ")));
          if (N) {
            Q.strokeStyle = z(A);
            Q.beginPath();
            Q.setLineDash && Q.setLineDash([]);
            G = 0;
            for (q = p.length; G < q; G += 2)
              (w = p[G]),
                (a = p[G + 1]),
                0 === G
                  ? Q.moveTo(
                      w * e.devicePixelRatio + 0.5,
                      a * e.devicePixelRatio + 0.5
                    )
                  : Q.lineTo(
                      w * e.devicePixelRatio + 0.5,
                      a * e.devicePixelRatio + 0.5
                    );
            Q.stroke();
            Q.strokeStyle = z(m);
            Q.beginPath();
            Q.setLineDash && Q.setLineDash([3]);
            G = 0;
            for (q = u.length; G < q; G += 2)
              (w = u[G]),
                (a = u[G + 1]),
                0 === G
                  ? Q.moveTo(
                      w * e.devicePixelRatio + 0.5,
                      a * e.devicePixelRatio + 0.5
                    )
                  : Q.lineTo(
                      w * e.devicePixelRatio + 0.5,
                      a * e.devicePixelRatio + 0.5
                    );
            Q.stroke();
          } else x.Ue(p, A), x.Ue(u, m, 3);
        }
      }
    }
  };
  N.prototype.Kh = function (b, c) {
    var d = "",
      f = this.Jd,
      e = this.ue,
      g = this.data,
      n = this.v.pb(b),
      p = c.getAttribute("data-type"),
      d =
        d +
        (this.tc() +
          [" (", [g["period_%k"], g["period_%d"], g.slowing].join(), ")"].join(
            ""
          )),
      d = d + ("\nTime: " + a.Cc.eg(b));
    "value" == p
      ? ((f = f[n]), (d += "\nValue: " + f.toFixed(this.S())))
      : ((f = e[n]), (d += "\nSignal: " + f.toFixed(this.S())));
    return d;
  };
})();
(function () {
  function v() {
    z.g(!c.s());
    z.g() ||
      setTimeout(function () {
        z.jb().Gb();
      }, 0);
  }
  function r() {
    u.g(!m.s());
    u.g() ||
      setTimeout(function () {
        u.jb().Gb();
      }, 0);
  }
  var l = E.controls,
    e = E.ma,
    k = l.L.Nc,
    h = k.Cc,
    b = k.af.Dh,
    a = b.method,
    g = E.Ma,
    d = E.ba.xa,
    f,
    c,
    z,
    A,
    m,
    u,
    q = (k.Gd.uea = function (a) {
      q.G.constructor.apply(this, arguments);
      this.Zf("period applyto");
      a = this.data;
      this.dh = 3;
      this.Hi = [1, 0, 0];
      void 0 === a.period && (a.period = 14);
      void 0 === a.applyto && (a.applyto = h.ng.OPEN);
    });
  k.cc(q);
  k.Ch(q, k.Pa.Gd);
  q.re = k.types.Jf;
  q.prototype.cd = function () {
    var a = ["TRIX"],
      b = this.data;
    b && a.push("(", b.period, ")");
    return a.join("");
  };
  q.prototype.tc = function () {
    return "Triple Exponential Average";
  };
  q.prototype.kb = function (a) {
    var b = h.xh;
    q.G.kb.call(this, a, b.oh | b.Oi);
    b = this.data;
    if (!f) {
      var e = Math.pow(0.1, this.S()),
        x = {
          position: "absolute",
          top: "89px",
          width: "260px",
          "text-align": "right",
          "white-space": "nowrap",
        },
        k = { position: "absolute", top: "91px", left: "264px" },
        O = { position: "absolute", top: "84px", left: "284px", width: "80px" };
      z = g(l.input.Number).o("trix--min-value").Y(e).T(this.S()).b(O);
      c = g(l.input.pa).o("trix--min").b(k).i("change", v);
      f = g(l.page.I, "trix--min")
        .Text(d.hg + ":")
        .b(x);
      x.top = "123px";
      k.top = "125px";
      O.top = "118px";
      u = g(l.input.Number).o("trix--max-value").Y(e).T(this.S()).b(O);
      m = g(l.input.pa).o("trix--max").b(k).i("change", r);
      A = g(l.page.I, "trix--max")
        .Text(d.gg + ":")
        .b(x);
    }
    z.T(this.S());
    u.T(this.S());
    void 0 !== b.min
      ? (c.s(!0), z.g(!1).f(b.min))
      : (c.s(!1), z.g(!0).f(this.ob));
    void 0 !== b.max
      ? (m.s(!0), u.g(!1).f(b.max))
      : (m.s(!1), u.g(!0).f(this.ib));
    a.c(z).c(c).c(f).c(u).c(m).c(A);
    return 274;
  };
  q.prototype.lb = q.prototype.ye = function () {
    var a = this.data;
    a &&
      u &&
      z &&
      (u.g() || z.g() || (u.f() <= z.f() && u.f(z.Fa() + 1)),
      u.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(u.f())),
      z.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(z.f())));
    q.G.lb.apply(this, arguments);
    this.Sf();
    return this;
  };
  q.prototype.S = function () {
    return 5;
  };
  q.prototype.ug = function (c) {
    var d = this.result,
      f = this.J,
      g = this.qa,
      h = this.Yb,
      m = this.v.Lb,
      k = this.data.period;
    if (!m || !m.length || 1 > k) this.result = null;
    else if (c || !d || d.length != m.length || d.ea != m.ea || d.fa != m.fa) {
      (c && d) ||
        ((d = this.result = e.Vc(m.length)),
        (d.ea = m.ea),
        (d.fa = m.fa),
        (f = this.J = e.Vc(m.length)),
        (g = this.qa = e.Vc(m.length)),
        (h = this.Yb = e.Vc(m.length)));
      var q = this.Fi();
      b.Hf(q, f, c, k, a.Si);
      b.Hf(f, g, c, k, a.Si);
      b.Hf(g, h, c, k, a.Si);
      f = 3 * (k - 1);
      c && (f = m.length - 2);
      c = f;
      for (m = m.length; c < m; c++)
        d[c] = 0 !== h[c - 1] ? (h[c] - h[c - 1]) / h[c - 1] : 0;
    }
  };
})();
(function () {
  function v() {
    u.g(!m.s());
    u.g() ||
      setTimeout(function () {
        u.jb().Gb();
      }, 0);
  }
  function r() {
    p.g(!w.s());
    p.g() ||
      setTimeout(function () {
        p.jb().Gb();
      }, 0);
  }
  var l = E.controls,
    e = E.Qa,
    k = E.ma,
    h = E.Bh,
    b = l.L.Zb,
    a = l.L.Nc,
    g = a.Cc,
    d = E.Ma,
    f = E.ba.xa,
    c = E.va.$a,
    z = k.xk,
    A,
    m,
    u,
    q,
    w,
    p,
    n = (a.Gd.Fea = function (a) {
      n.G.constructor.apply(this, arguments);
      this.Zf("period");
      this.dh = 2;
      this.Hi = [0, 1, 1];
      a = this.data;
      a.min = -100;
      a.max = 0;
      void 0 === a.period && (a.period = 14);
    });
  a.cc(n);
  a.Ch(n, a.Pa.Gd);
  n.re = a.types.Jf;
  n.prototype.cd = function () {
    var a = ["%R"],
      b = this.data;
    b && a.push("(", b.period, ")");
    return a.join("");
  };
  n.prototype.tc = function () {
    return "Williams\u2019 Percent Range";
  };
  n.prototype.Lf = function () {
    var a = this.Ub;
    this.result = null;
    a && a.Oa();
    return this;
  };
  n.prototype.kb = function (a) {
    n.G.kb.call(this, a, g.xh.oh);
    var b = this.data;
    if (!A) {
      var c = Math.pow(1.1, this.S()),
        e = {
          position: "absolute",
          top: "55px",
          width: "260px",
          "text-align": "right",
          "white-space": "nowrap",
        },
        h = { position: "absolute", top: "57px", left: "264px" },
        k = {
          position: "absolute",
          top: "50px",
          left: "284px",
          width: "80px",
        };
      u = d(l.input.Number).o("williams--min-value").Y(c).T(this.S()).b(k);
      m = d(l.input.pa).o("williams--min").b(h).i("change", v);
      A = d(l.page.I, "williams--min")
        .Text(f.hg + ":")
        .b(e);
      e.top = "89px";
      h.top = "91px";
      k.top = "84px";
      p = d(l.input.Number).o("williams--max-value").Y(c).T(this.S()).b(k);
      w = d(l.input.pa).o("williams--max").b(h).i("change", r);
      q = d(l.page.I, "williams--max")
        .Text(f.gg + ":")
        .b(e);
    }
    void 0 !== b.min
      ? (m.s(!0), u.g(!1).f(b.min))
      : (m.s(!1), u.g(!0).f(this.ob));
    void 0 !== b.max
      ? (w.s(!0), p.g(!1).f(b.max))
      : (w.s(!1), p.g(!0).f(this.ib));
    a.c(u).c(m).c(A).c(p).c(w).c(q);
    return 240;
  };
  n.prototype.lb = n.prototype.ye = function () {
    var a = this.data;
    a &&
      p &&
      u &&
      (p.g() || u.g() || (p.f() <= u.f() && p.f(u.Fa() + 1)),
      p.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(p.f())),
      u.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(u.f())));
    n.G.lb.apply(this, arguments);
    this.Sf();
    return this;
  };
  n.prototype.S = function () {
    return 2;
  };
  n.prototype.ug = function (a) {
    var b = this.result,
      c = this.v.Lb,
      d = this.data.period;
    if (!c || !c.length || 1 > d) this.result = null;
    else if (a || !b || b.length != c.length || b.ea != c.ea || b.fa != c.fa) {
      (a && b) ||
        ((b = this.result = k.Vc(c.length)), (b.ea = c.ea), (b.fa = c.fa));
      var f = d,
        e = c.length;
      for (a && (f = c.length - 1); f < e; f++) {
        a = Number.MIN_VALUE;
        for (var g = Number.MAX_VALUE, n, p = f - d + 1; p <= f; )
          g > (n = c[p][3]) && (g = n), a < (n = c[p][2]) && (a = n), p++;
        b[f] = (-100 * (a - c[f][4])) / (a - g);
      }
    }
  };
  n.prototype.wi = function (a) {
    var d = this.result;
    if (d && d.length) {
      var f = this.v,
        g = f.Aa,
        n = this.canvas,
        p = this.Ub,
        m = f.cb,
        q = f.Lb,
        u = f.se,
        w = f.ta,
        l = f.le,
        A = f.wd,
        r = b.sc,
        K = Math.pow(10, this.S()),
        v = this.nb,
        T = this.Sa,
        R = this.Hi;
      if (q && q.length && m) {
        var H = m.from,
          m = Math.min(H + A, q.length - 1);
        if (
          !(
            (a && H + A < q.length - 1) ||
            (this.Ik(),
            parseInt(n.style.width, 10) != u &&
              (e.sa
                ? n.setAttribute("width", u * e.devicePixelRatio)
                : n.setAttribute("width", u),
              c(n, "width", u + "px")),
            parseInt(n.style.height, 10) != w &&
              (e.sa
                ? n.setAttribute("height", w * e.devicePixelRatio)
                : n.setAttribute("height", w),
              c(n, "height", w + "px")),
            p || (p = this.Ub = new h(n)),
            p.Oa(),
            1 > A)
          )
        ) {
          this.G.sh.call(this);
          var S, Z, W;
          e.yd || ((W = !0), (Z = p.vi()));
          W
            ? (Z.setLineDash && Z.setLineDash([3]),
              (Z.strokeStyle = f.xd),
              Z.beginPath(),
              (a = Math.floor(v + 20 * K * T) * e.devicePixelRatio + 0.5),
              Z.moveTo(0, a),
              Z.lineTo(g * e.devicePixelRatio + 0.5, a),
              (a = Math.floor(v + 80 * K * T) * e.devicePixelRatio + 0.5),
              Z.moveTo(0, a),
              Z.lineTo(g * e.devicePixelRatio + 0.5, a),
              Z.stroke())
            : ((a = Math.floor(v + 20 * K * T)),
              p.ud(new Float32Array([0, a, g, a]), k.be(f.xd), 3),
              (a = Math.floor(v + 80 * K * T)),
              p.ud(new Float32Array([0, a, g, a]), k.be(f.xd), 3));
          g = this.qb;
          r || ((S = []), g.setAttribute("points", ""));
          f = [];
          W &&
            (Z.beginPath(),
            (Z.strokeStyle = z(R)),
            Z.setLineDash && Z.setLineDash([]));
          for (q = n = 0; H <= m; H++, q++) {
            if ((a = d[H]))
              (a = Math.floor(v - a * K * T)),
                r || (S[S.length] = [n, a].join()),
                W
                  ? 0 === q
                    ? Z.moveTo(
                        n * e.devicePixelRatio + 0.5,
                        a * e.devicePixelRatio + 0.5
                      )
                    : Z.lineTo(
                        n * e.devicePixelRatio + 0.5,
                        a * e.devicePixelRatio + 0.5
                      )
                  : ((f[f.length] = n), (f[f.length] = a));
            n += l;
          }
          r || g.setAttribute("points", S.join(" "));
          W ? Z.stroke() : p.Ue(f, R);
        }
      }
    }
  };
  n.prototype.wn = function () {
    var a = {};
    a.target = this.element;
    a.nb = this.nb;
    a.ib = this.ib;
    a.ob = this.ob;
    a.Sa = this.Sa;
    a.type = 2;
    a.j = this.S();
    a.vr = [-20, -80];
    this.M("draw", a);
  };
})();
(function () {
  function v() {
    var a = this.result,
      b = this.S(),
      c;
    c = "" + this.cd(this);
    a && a.length && (c += " " + a[a.length - 1].toFixed(b));
    return c;
  }
  function r() {
    var a = this,
      b = a.v;
    if (!a.Ob && (b = b.cb)) {
      var c = g.L.Af;
      c &&
        c.Vb(
          b.symbol,
          (a.Ob = function () {
            L.G.Qd.call(a) &&
              (l.call(a, !0),
              e.call(a),
              k.call(a, !0),
              L.G.di.call(a, v.call(a)));
          }),
          void 0,
          !1
        );
    }
  }
  function l(a) {
    var b = this.result,
      c = this.v.Lb;
    if (!c || !c.length) this.result = null;
    else if (a || !b || b.length != c.length || b.ea != c.ea || b.fa != c.fa)
      (a && b) ||
        ((b = this.result = []),
        (b.ea = c.ea),
        (b.fa = c.fa),
        this.Yb && this.Yb(a)),
        this.$g(a);
  }
  function e() {
    var a = this.result;
    if (a && a.length) {
      var b = this.v,
        c = this.data,
        d = b.wd,
        f = b.cb.from,
        e = Math.pow(10, this.S()),
        b = b.ta - 20,
        g = c.min,
        c = c.max,
        n,
        p,
        h = isNaN(parseFloat(g)),
        m = isNaN(parseFloat(c));
      if (h || m) {
        h && ((g = Number.MAX_VALUE), (n = !0));
        m && ((c = Number.MIN_VALUE), (p = !0));
        for (var k = f, d = f + d; k <= d; k++)
          if ((f = a[k])) h && f < g && (g = f), m && f > c && (c = f);
      }
      this.Sa = b / (c * e - g * e);
      n && (g -= ((c - g) / b) * 10);
      p && (c += ((c - g) / b) * 10);
      this.nb = Math.round(b + this.Sa * g * e + 20);
      this.ob = g;
      this.ib = c;
    }
  }
  function k(a) {
    var b = this.result;
    if (b && b.length) {
      var c = this.v,
        e = this.canvas,
        g = this.Ub,
        h = c.cb,
        m = c.Lb,
        k = c.se,
        x = c.Aa,
        l = c.ta,
        z = c.le,
        y = c.Dm,
        r = c.wd,
        v = A.sc,
        G = h.from,
        I = Math.pow(10, this.S()),
        F = this.nb,
        D = this.Sa,
        M = !(5 > h.scale && d.yd);
      if (
        m &&
        m.length &&
        h &&
        !(a && G + r < m.length - 1) &&
        ((h = this.Hd),
        (a = this.Nb),
        h ||
          ((h = w("title", "http://www.w3.org/2000/svg")),
          p(a, h),
          (h = this.Hd = w("polygon", "http://www.w3.org/2000/svg")),
          h.setAttribute("style", "fill:black;fill-opacity:0;"),
          (h.w = this),
          f.Pa.Fd.Cg(h),
          p(a, h)),
        parseInt(e.style.width, 10) != k &&
          (d.sa
            ? e.setAttribute("width", k * d.devicePixelRatio)
            : e.setAttribute("width", k),
          n(e, "width", k + "px")),
        parseInt(e.style.height, 10) != l &&
          (d.sa
            ? e.setAttribute("height", l * d.devicePixelRatio)
            : e.setAttribute("height", l),
          n(e, "height", l + "px")),
        g || (g = this.Ub = new q(e)),
        g.Oa(),
        !(1 > r))
      ) {
        e = g.vi();
        d.yd
          ? g.ud(new Float32Array([0, F, x, F]), u.be(c.xd), 3)
          : (e.setLineDash && e.setLineDash([3]),
            (e.strokeStyle = c.xd),
            e.beginPath(),
            e.moveTo(0, F * d.devicePixelRatio + 0.5),
            e.lineTo(
              x * d.devicePixelRatio + 0.5,
              F * d.devicePixelRatio + 0.5
            ),
            e.stroke());
        L.G.sh.call(this);
        var U,
          c = G,
          x = Math.min(G + r, m.length - 1);
        if (c <= x) {
          e = m = 0;
          v ||
            ((U = []),
            (U[U.length] = [m, F].join()),
            this.Hd.setAttribute("points", ""));
          r = [];
          for (G = []; c <= x; c++, e++)
            (l = b[c]),
              (k = b[c - 1] || 0),
              (k = l > k ? r : G),
              l &&
                (0 < l
                  ? ((a = Math.round(l * I * D)),
                    (l = F - a),
                    v || (U[U.length] = [m, l].join()),
                    M ||
                      ((h = k.length),
                      (k[h] = m),
                      (k[h + 1] = l),
                      (k[h + 2] = m),
                      (k[h + 3] = F)))
                  : ((a = Math.round(Math.abs(l) * I * D)),
                    (l = F),
                    v || (U[U.length] = [m, l + a].join()),
                    M ||
                      ((h = k.length),
                      (k[h] = m),
                      (k[h + 1] = F),
                      (k[h + 2] = m),
                      (k[h + 3] = l + a))),
                M && (k[k.length] = [m - Math.floor(0.5 * y) - 1, l, y, a])),
              (m += z);
          if (M) {
            g.Dg(O);
            for (c = 0; c < r.length; c++)
              (b = r[c]), g.Gg(b[0], b[1], b[2], b[3]);
            g.Fg();
            g.Dg(C);
            for (c = 0; c < G.length; c++)
              (b = G[c]), g.Gg(b[0], b[1], b[2], b[3]);
            g.Fg();
          } else g.ud(r, O), g.ud(G, C);
          v ||
            ((U[U.length] = [m, F].join()),
            this.Hd.setAttribute("points", U.join(" ")));
        }
      }
    }
  }
  function h() {
    I.g(!G.s());
    I.g() ||
      setTimeout(function () {
        I.jb().Gb();
      }, 0);
  }
  function b() {
    D.g(!M.s());
    D.g() ||
      setTimeout(function () {
        D.jb().Gb();
      }, 0);
  }
  var a = E.va,
    g = E.controls,
    d = E.Qa,
    f = g.L.Nc,
    c = f.af.Dh,
    z = E.Ma,
    A = g.L.Zb,
    m = E.ba.xa,
    u = E.ma,
    q = E.Bh,
    w = a.sb,
    p = a.tb,
    n = a.$a,
    x = c.method,
    C = [255, 0, 0],
    O = [0, 128 / 255, 0],
    I,
    G,
    F,
    y,
    M,
    D,
    L = (f.ik.BN = function (a) {
      L.G.constructor.apply(this, arguments);
      a = this.data;
      a.applyto = f.Cc.ng.ss;
    });
  f.cc(L);
  L.re = f.types.Jf;
  L.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    r.call(this);
    if (!L.G.Qd.call(this)) return this;
    L.G.hk.call(this);
    l.call(this);
    e.call(this);
    k.call(this);
    L.G.di.call(this, v.call(this));
    a = {};
    a.target = this.element;
    a.nb = this.nb;
    a.ib = this.ib;
    a.ob = this.ob;
    a.Sa = this.Sa;
    a.type = 3;
    a.j = this.S();
    this.M("draw", a);
    return this;
  };
  L.prototype.gb = function () {
    var a = this.v;
    this.J = this.qa = this.nb = this.Sa = this.ib = this.ob = null;
    var b = this.Hd;
    b && ((b.w = null), f.Pa.Fd.Hh(b), (this.Hd = null));
    this.Ob &&
      ((a = a.cb), (b = g.L.Af) && b.Ng(a.symbol, this.Ob), (this.Ob = null));
    L.G.gb.apply(this, arguments);
    return this;
  };
  L.prototype.cd = function () {
    return "AO";
  };
  L.prototype.tc = function () {
    return "Awesome Oscillator";
  };
  L.prototype.kb = function (a) {
    var c = this.data;
    if (!I) {
      var d = this.S() || 7,
        f = Math.pow(0.1, d),
        e = { position: "absolute" },
        n = { position: "absolute", width: "80px" },
        p = { position: "absolute", "white-space": "nowrap" };
      I = z(g.input.Number)
        .o("ao-min-value")
        .Y(f)
        .T(d)
        .b(n)
        .b({ top: "16px", left: "284px" });
      G = z(g.input.pa)
        .o("ao-min")
        .b(e)
        .b({ top: "23px", left: "264px" })
        .i("change", h);
      F = z(g.page.I, "ao-min")
        .Text(m.hg + ":")
        .b(p)
        .b({ top: "21px", right: "-260px" });
      D = z(g.input.Number)
        .o("ao-max-value")
        .Y(f)
        .T(d)
        .b(n)
        .b({ top: "52px", left: "284px" });
      M = z(g.input.pa)
        .o("ao-max")
        .b(e)
        .b({ top: "57px", left: "264px" })
        .i("change", b);
      y = z(g.page.I, "ao-max")
        .Text(m.gg + ":")
        .b(p)
        .b({ top: "55px", right: "-260px" });
    }
    void 0 !== c.min
      ? (G.s(!0), I.g(!1).f(c.min))
      : (G.s(!1), I.g(!0).f(void 0 === this.ob ? 0 : this.ob));
    void 0 !== c.max
      ? (M.s(!0), D.g(!1).f(c.max))
      : (M.s(!1), D.g(!0).f(void 0 === this.ib ? 0 : this.ib));
    a.c(I).c(G).c(F).c(D).c(M).c(y);
    return 0;
  };
  L.prototype.ye = function () {};
  L.prototype.lb = function () {
    var a = this.data;
    a &&
      (D.g() || I.g() || (D.f() <= I.f() && D.f(I.Fa() + 1)),
      D.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(D.f())),
      I.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(I.f())));
    return this;
  };
  L.prototype.S = function () {
    return L.G.S.apply(this, arguments) + 1;
  };
  L.prototype.$g = function (a) {
    var b = this.result,
      d = this.v.Lb,
      f = this.qa,
      e = this.J,
      g = this.Fi();
    f || ((f = this.qa = []), (f.ea = d.ea), (f.fa = d.fa));
    e || ((e = this.J = []), (e.ea = d.ea), (e.fa = d.fa));
    c.Hf(g, f, a, 34, x.Zh);
    e = this.J || [];
    c.Hf(g, e, a, 5, x.Zh);
    d = 33;
    g = f.length;
    for (a && (d = g - 34); d < g; ) (b[d] = e[d] - f[d] || 0), d++;
  };
  L.prototype.Yb = function () {
    this.J = this.qa = null;
  };
  L.prototype.Kh = function (a) {
    var b = "",
      c = this.result,
      d = this.v.pb(a),
      c = c[d],
      b = b + this.tc(),
      b = b + ("\nTime: " + f.Cc.eg(a));
    return (b += "\nValue: " + c.toFixed(this.S()));
  };
})();
(function () {
  var v = E.controls.L.Nc,
    r = v.af.Dh,
    l = r.method,
    e = (v.ik.i5 = function (k) {
      e.G.constructor.apply(this, arguments);
    });
  v.cc(e, v.ik.BN);
  e.re = v.types.Jf;
  e.prototype.cd = function () {
    return "AC";
  };
  e.prototype.tc = function () {
    return "Accelerator Oscillator";
  };
  e.prototype.S = function () {
    return e.G.S.apply(this, arguments) + 1;
  };
  e.prototype.$g = function (e) {
    var h = this.result,
      b = this.Fi(),
      a = (this.qa = this.qa || []);
    r.Hf(b, a, e, 34, l.Zh);
    var g = (this.J = this.J || []);
    r.Hf(b, g, e, 5, l.Zh);
    var b = 37,
      d = a.length;
    e && (b = d - 38);
    for (var f = []; b < d; ) (f[b] = g[b] - (a[b] || 0)), b++;
    g = this.te = this.te || [];
    r.Hf(f, g, e, 5, l.Zh);
    b = 38;
    d = a.length;
    for (e && (b = d - 2); b < d; ) (h[b] = f[b] - g[b] || 0), b++;
  };
  e.prototype.Yb = function () {
    this.J = this.te = this.qa = null;
  };
})();
(function () {
  function v() {
    var d = 0;
    if (0 < Object.getOwnPropertyNames(p).length) return p;
    for (var e in c) {
      var g = c[e],
        h = {
          position: "absolute",
          top: 21 + 35 * d + "px",
          width: "110px",
          "text-align": "right",
        },
        m = {
          position: "absolute",
          top: 16 + 35 * d + "px",
          left: "120px",
          width: "80px",
        },
        q = b(k.input.Number)
          .o("alligator-" + e + "-period")
          .Fa(1)
          .mc(a.Xh)
          .T(0)
          .Y(1)
          .b(m),
        g = b(k.page.I, q.o())
          .Text(g + ":")
          .b(h),
        m = b(k.input.Number)
          .o("alligator-" + e + "-shift")
          .Fa(1)
          .mc(a.zk)
          .T(0)
          .Y(1)
          .b(m)
          .b({ left: "300px" }),
        h = b(k.page.I, m.o())
          .Text(f.dH + ":")
          .b(h)
          .b({
            left: "223px",
            width: "68px",
          });
      d++;
      p[e] = {
        period: { control: q, label: g },
        shift: { control: m, label: h },
      };
    }
    return p;
  }
  function r(a) {
    switch (a) {
      case "jaws":
        return this.Yn;
      case "teeth":
        return this.Zn;
      case "lips":
        return this.Gp;
    }
    return null;
  }
  function l(a) {
    var b = this.data,
      c = this.Yn,
      d = this.Zn,
      f = this.Gp,
      e = void 0 !== b.method ? parseInt(b.method, 10) : g.method.Ns,
      h = parseInt(b.period_jaws, 10),
      p = parseInt(b.period_teeth, 10),
      b = parseInt(b.period_lips, 10),
      m = this.v.Lb;
    if (!(!m || !m.length || 1 > h || 1 > p || 1 > b)) {
      var k = this.Fi();
      if (a || !c || c.length != m.length || c.ea != m.ea || c.fa != m.fa)
        a || ((c = this.Yn = []), (c.ea = m.ea), (c.fa = m.fa)),
          g.Hf(k, c, a, h, e);
      if (a || !d || d.length != m.length || d.ea != m.ea || d.fa != m.fa)
        a || ((d = this.Zn = []), (d.ea = m.ea), (d.fa = m.fa)),
          g.Hf(k, d, a, p, e);
      if (a || !f || f.length != m.length || f.ea != m.ea || f.fa != m.fa)
        a || ((f = this.Gp = []), (f.ea = m.ea), (f.fa = m.fa)),
          g.Hf(k, f, a, b, e);
    }
  }
  var e = E.va,
    k = E.controls,
    h = k.L.Nc,
    b = E.Ma,
    a = h.Cc,
    g = h.af.Dh,
    d = k.L.Zb,
    f = E.ba.xa,
    c = { jaws: f.UT, teeth: f.XT, lips: f.WT },
    z = { jaws: [0, 0, 1], teeth: [1, 0, 0], lips: [0, 1, 0] },
    A = (h.ik.wN = function (b) {
      A.G.constructor.apply(this, arguments);
      this.Zf(
        "period_jaws shift_jaws period_teeth shift_teeth period_lips shift_lips method applyto"
      );
      b = this.data;
      void 0 === b.period_jaws && (b.period_jaws = 13);
      void 0 === b.shift_jaws && (b.shift_jaws = 8);
      void 0 === b.period_teeth && (b.period_teeth = 8);
      void 0 === b.shift_teeth && (b.shift_teeth = 5);
      void 0 === b.period_lips && (b.period_lips = 5);
      void 0 === b.shift_lips && (b.shift_lips = 3);
      void 0 === b.method && (b.method = g.method.Ns);
      void 0 === b.applyto && (b.applyto = a.ng.ss);
    });
  h.cc(A);
  A.re = h.types.jn;
  A.Hf = l;
  A.prototype.Ha = function (b) {
    if (!b) return this;
    this.v = b;
    if (!A.G.Qd.call(this)) return this;
    A.G.hk.call(this);
    this.vm();
    l.call(this);
    b = this.v;
    var f = this.data,
      g,
      p = b.Ub,
      m = b.cb;
    if (p && m) {
      var k = b.le,
        q = d.sc,
        u = b.nb,
        w = b.Sa,
        m = m.from,
        v = Math.pow(10, this.S()),
        L = this.Nb,
        B = (this.vh = this.vh || {}),
        Q = h.Pa.Fd.Cg,
        N;
      for (N in c) {
        var K = B[N];
        K ||
          ((K = e.sb("title", "http://www.w3.org/2000/svg")),
          e.tb(L, K),
          (K = this.qb = e.sb("polyline", "http://www.w3.org/2000/svg")),
          K.setAttribute(
            "style",
            "fill:none;stroke:black;stroke-width:10;stroke-opacity:0;"
          ),
          K.setAttribute("data-type", N),
          (K.w = this),
          Q(K),
          e.tb(L, K),
          (B[N] = K));
      }
      for (var P in c) {
        var T;
        if ((L = r.call(this, P)) && L.length) {
          var B = m,
            Q = Math.min(f["shift_" + P] || 0, a.zk),
            K = Math.min(m + b.wd, L.length - 1),
            R = 0,
            H = 0,
            S = this.vh[P];
          q || ((T = []), S.setAttribute("points", ""));
          for (N = new Float32Array(2 * (K - B + 1)); B <= K + Q; B++, H++) {
            if ((g = L[B - Q]))
              (g = Math.floor(u - g * v * w)),
                (N[2 * H] = R),
                (N[2 * H + 1] = g),
                q || (T[T.length] = [R, g].join());
            R += k;
          }
          p.Ue(N, z[P]);
          q || S.setAttribute("points", T.join(" "));
        }
      }
    }
    return this;
  };
  A.prototype.gb = function () {
    this.Gp = this.Zn = this.Yn = null;
    var a = this.vh,
      b;
    for (b in a) a.hasOwnProperty(b) && b && h.Pa.Fd.Hh(b);
    this.vh = null;
    this.Ob &&
      ((a = this.v.cb) && (b = k.L.Af) && b.Ng(a.symbol, this.Ob),
      (this.Ob = null));
    A.G.gb.apply(this, arguments);
    return this;
  };
  A.prototype.cd = function () {
    var a = "Alligator",
      b = this.data;
    b &&
      (a +=
        "(" + b.period_jaws + "," + b.period_teeth + "," + b.period_lips + ")");
    return a;
  };
  A.prototype.tc = function () {
    return "Alligator";
  };
  var m, u, q, w;
  A.prototype.kb = function (a) {
    var c = this.data,
      d = v.call(this),
      e = this.data,
      p;
    for (p in d) {
      var l = d[p].period.control,
        z = d[p].period.label,
        y = d[p].shift.control,
        A = d[p].shift.label;
      a.c(l).c(z);
      a.c(y).c(A);
      l.f(parseInt(e["period_" + p], 10));
      y.f(parseInt(e["shift_" + p], 10));
    }
    d = {
      position: "absolute",
      top: "119px",
      width: "110px",
      "text-align": "right",
    };
    e = { position: "absolute", left: "120px", top: "116px", width: "261px" };
    (m && u) ||
      ((m = b(k.input.of).o("alligator-method").de(g.Gw).b(e)),
      (u = b(k.page.I, "alligator-method")
        .Text(f.ks + ":")
        .b(d)));
    a.c(m).c(u);
    (q && w) ||
      ((q = b(k.input.of)
        .o("alligator-apply")
        .de(h.Cc.TL)
        .b(e)
        .b({ top: "147px" })),
      (w = b(k.page.I, "alligator-apply")
        .Text(f.$G + ":")
        .b(d)
        .b({ top: "151px" })));
    a.c(q).c(w);
    m.h() && m.f(parseInt(c.method, 10));
    q.h() && q.f(parseInt(c.applyto, 10));
    return 300;
  };
  A.prototype.ye = function () {
    var a = this.data;
    a &&
      ((a.method = m.f()),
      (a.applyto = q.f()),
      (a.period_jaws = (void 0).f()),
      (a.shift_jaws = (void 0).f()),
      (a.period_teeth = (void 0).f()),
      (a.shift_teeth = (void 0).f()),
      (a.period_lips = (void 0).f()),
      (a.shift_lips = (void 0).f()));
    this.Sf();
    return this;
  };
  A.prototype.lb = function () {
    var a = this.data;
    if (a) {
      a.method = parseInt(m.f(), 10);
      a.applyto = parseInt(q.f(), 10);
      var b = v.call(this),
        c;
      for (c in b) {
        var d = b[c].shift.control;
        a["period_" + c] = b[c].period.control.f();
        a["shift_" + c] = d.f();
      }
    }
    this.Sf();
    return this;
  };
  A.prototype.Lf = function () {
    this.Gp = this.Zn = this.Yn = null;
    return this;
  };
  A.prototype.wm = function () {
    return !1;
  };
  A.prototype.vm = function () {
    var a = this,
      b = a.v.cb;
    if (!a.Ob) {
      var c = k.L.Af;
      c &&
        c.Vb(
          b.symbol,
          (a.Ob = function () {
            l.call(a, !0);
          }),
          void 0,
          !1
        );
    }
  };
  var p = {};
  A.prototype.Kh = function (b, c) {
    var d = "",
      f,
      e,
      g;
    f = this.data;
    g = this.v.pb(b);
    e = c.getAttribute("data-type");
    d +=
      "Alligator (" +
      f.period_jaws +
      "," +
      f.period_teeth +
      "," +
      f.period_lips +
      ")";
    d += "\nTime: " + a.eg(b);
    switch (e) {
      case "jaws":
        f = parseInt(f.shift_jaws, 10) || 0;
        e = this.Yn;
        g = e[g - f];
        d += "\nGator Jax: " + (g || 0).toFixed(this.S());
        break;
      case "teeth":
        f = parseInt(f.shift_teeth, 10) || 0;
        e = this.Zn;
        g = e[g - f];
        d += "\nGator Teeth: " + (g || 0).toFixed(this.S());
        break;
      case "lips":
        (f = parseInt(f.shift_lips, 10) || 0),
          (e = this.Gp),
          (g = e[g - f]),
          (d += "\nGator Lips: " + (g || 0).toFixed(this.S()));
    }
    return d;
  };
})();
(function () {
  function v() {
    var b = this,
      c = b.v;
    if (!b.Ob && (c = c.cb)) {
      var d = a.L.Af;
      d &&
        d.Vb(
          c.symbol,
          (b.Ob = function () {
            L.G.Qd.call(b) &&
              (e.call(b, !0),
              l.call(b),
              k.call(b, !0),
              L.G.di.call(b, r.call(b)));
          }),
          void 0,
          !1
        );
    }
  }
  function r() {
    var a = this.Pj,
      b = this.Oj,
      c = this.S(),
      d;
    d = "" + this.cd(this);
    a && a.length && (d += " " + a[a.length - 1].toFixed(c));
    b && b.length && (d += " " + b[b.length - 1].toFixed(c));
    return d;
  }
  function l() {
    var a = this.Pj,
      b = this.Oj;
    if (a && a.length) {
      var c = this.v,
        d = this.data,
        f = c.cb,
        e = c.wd,
        g = f.from,
        f = Math.pow(10, f.digits),
        c = c.ta - 20,
        n = d.min,
        d = d.max,
        p,
        h,
        m = isNaN(parseFloat(n)),
        k = isNaN(parseFloat(d));
      if (m || k) {
        m && ((n = Number.MAX_VALUE), (p = !0));
        k && ((d = Number.MIN_VALUE), (h = !0));
        for (var q = g, e = g + e; q <= e; q++)
          (g = a[q]) && k && g > d && (d = g),
            (g = b[q]) && m && g < n && (n = g);
      }
      this.Sa = c / (d * f - n * f);
      p && (n -= ((d - n) / c) * 10);
      h && (d += ((d - n) / c) * 10);
      this.nb = Math.round(c + this.Sa * n * f + 20);
      this.ob = n;
      this.ib = d;
    }
  }
  function e(a) {
    var b = this.data,
      c = this.v,
      d = parseInt(b.period_jaws, 10),
      f = parseInt(b.period_teeth, 10),
      e = parseInt(b.period_lips, 10),
      g = Math.min(b.shift_jaws || 0, A.zk),
      n = Math.min(b.shift_teeth || 0, A.zk),
      b = Math.min(b.shift_lips || 0, A.zk),
      p = c.Lb;
    if (p && p.length) {
      var c = this.Pj,
        h = this.Oj;
      a ||
        !c ||
        (c.length == p.length && c.ea == p.ea && c.fa == p.fa) ||
        (h = this.Oj = c = this.Pj = null);
      c || ((c = this.Pj = []), (c.ea = p.ea), (c.fa = p.fa));
      h || ((h = this.Oj = []), (h.ea = p.ea), (h.fa = p.fa));
      m.Hf.call(this, a);
      for (
        var p = this.Yn,
          k = this.Zn,
          q = this.Gp,
          d = a ? this.Yn.length - Math.max(d, f) : 0,
          x = p.length;
        d < x;
        d++
      )
        c[d] = Math.abs(p[d - g] - k[d - n]);
      d = a ? this.Zn.length - Math.max(e, f) : 0;
      for (x = k.length; d < x; d++) h[d] = -Math.abs(k[d - n] - q[d - b]);
    }
  }
  function k(a) {
    var b = this.Pj;
    if (b && b.length) {
      var f = this.Oj;
      if (f && f.length) {
        var e = this.v,
          h = this.canvas,
          m = this.Ub,
          k = e.cb,
          q = e.Lb,
          w = e.se,
          l = e.Aa,
          y = e.ta,
          A = e.le,
          r = e.Dm,
          v = e.wd,
          G = u.sc,
          I = k.from,
          F = Math.pow(10, k.digits),
          D = this.nb,
          M = this.Sa,
          U = !(5 > k.scale && g.yd);
        if (
          q &&
          q.length &&
          k &&
          !(a && I + v < q.length - 1) &&
          ((k = this.Hd),
          (a = this.Nb),
          k ||
            ((k = p("title", "http://www.w3.org/2000/svg")),
            n(a, k),
            (k = this.Hd = p("polygon", "http://www.w3.org/2000/svg")),
            k.setAttribute("style", "fill:black;fill-opacity:0;"),
            k.setAttribute("data-type", "Down"),
            (k.w = this),
            z.Pa.Fd.Cg(k),
            n(a, k),
            (k = this.Jw = p("polygon", "http://www.w3.org/2000/svg")),
            k.setAttribute("style", "fill:black;fill-opacity:0;"),
            k.setAttribute("data-type", "Up"),
            (k.w = this),
            z.Pa.Fd.Cg(k),
            n(a, k)),
          parseInt(h.style.width, 10) != w &&
            (g.sa
              ? h.setAttribute("width", w * g.devicePixelRatio)
              : h.setAttribute("width", w),
            x(h, "width", w + "px")),
          parseInt(h.style.height, 10) != y &&
            (g.sa
              ? h.setAttribute("height", y * g.devicePixelRatio)
              : h.setAttribute("height", y),
            x(h, "height", y + "px")),
          m || (m = this.Ub = new c(h)),
          m.Oa(),
          !(1 > v))
        ) {
          h = m.vi();
          g.yd
            ? m.ud(new Float32Array([0, D, l, D]), d.be(e.xd), 3)
            : (h.setLineDash && h.setLineDash([3]),
              (h.strokeStyle = e.xd),
              h.beginPath(),
              h.moveTo(0, D * g.devicePixelRatio + 0.5),
              h.lineTo(
                l * g.devicePixelRatio + 0.5,
                D * g.devicePixelRatio + 0.5
              ),
              h.stroke());
          L.G.sh.call(this);
          var ba,
            da,
            e = I,
            l = Math.min(I + v, q.length - 1);
          if (e <= l) {
            h = q = 0;
            G ||
              ((ba = []),
              (da = []),
              (ba[ba.length] = [q, D].join()),
              (da[da.length] = [q, D].join()),
              this.Hd.setAttribute("points", ""),
              this.Jw.setAttribute("points", ""));
            v = [];
            for (I = []; e <= l; e++, h++)
              (y = f[e]),
                (w = f[e - 1] || 0),
                (w = y < w ? v : I),
                y &&
                  (0 < y
                    ? ((a = Math.round(y * F * M)),
                      (y = D - a),
                      G || (ba[ba.length] = [q, y].join()),
                      U ||
                        ((k = w.length),
                        (w[k] = q),
                        (w[k + 1] = y),
                        (w[k + 2] = q),
                        (w[k + 3] = D)))
                    : ((a = Math.round(Math.abs(y) * F * M)),
                      (y = D),
                      G || (ba[ba.length] = [q, y + a].join()),
                      U ||
                        ((k = w.length),
                        (w[k] = q),
                        (w[k + 1] = D),
                        (w[k + 2] = q),
                        (w[k + 3] = y + a))),
                  U && (w[w.length] = [q - Math.floor(0.5 * r) - 1, y, r, a])),
                (y = b[e]),
                (w = b[e - 1] || 0),
                (w = y > w ? v : I),
                y &&
                  (0 < y
                    ? ((a = Math.round(y * F * M)),
                      (y = D - a),
                      G || (da[da.length] = [q, y].join()),
                      U ||
                        ((k = w.length),
                        (w[k] = q),
                        (w[k + 1] = y),
                        (w[k + 2] = q),
                        (w[k + 3] = D)))
                    : ((a = Math.round(Math.abs(y) * F * M)),
                      (y = D),
                      G || (da[da.length] = [q, y + a].join()),
                      U ||
                        ((k = w.length),
                        (w[k] = q),
                        (w[k + 1] = D),
                        (w[k + 2] = q),
                        (w[k + 3] = y + a))),
                  U && (w[w.length] = [q - Math.floor(0.5 * r) - 1, y, r, a])),
                (q += A);
            if (U) {
              m.Dg(O);
              f = v.length;
              for (e = 0; e < f; e++) (b = v[e]), m.Gg(b[0], b[1], b[2], b[3]);
              m.Fg();
              m.Dg(C);
              f = I.length;
              for (e = 0; e < f; e++) (b = I[e]), m.Gg(b[0], b[1], b[2], b[3]);
              m.Fg();
            } else m.ud(v, O), m.ud(I, C);
            G ||
              ((ba[ba.length] = [q, D].join()),
              (da[da.length] = [q, D].join()),
              this.Hd.setAttribute("points", ba.join(" ")),
              this.Jw.setAttribute("points", da.join(" ")));
          }
        }
      }
    }
  }
  function h() {
    I.g(!G.s());
    I.g() ||
      setTimeout(function () {
        I.jb().Gb();
      }, 0);
  }
  function b() {
    D.g(!M.s());
    D.g() ||
      setTimeout(function () {
        D.jb().Gb();
      }, 0);
  }
  var a = E.controls,
    g = E.Qa,
    d = E.ma,
    f = E.va,
    c = E.Bh,
    z = a.L.Nc,
    A = z.Cc,
    m = z.ik.wN,
    u = a.L.Zb,
    q = E.ba.xa,
    w = E.Ma,
    p = f.sb,
    n = f.tb,
    x = f.$a,
    C = [1, 0, 0],
    O = [0, 128 / 255, 0],
    I,
    G,
    F,
    y,
    M,
    D,
    L = (z.ik.a9 = function (a) {
      L.G.constructor.apply(this, arguments);
    });
  z.cc(L, m);
  L.re = z.types.Jf;
  L.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    v.call(this);
    if (!L.G.Qd.call(this)) return this;
    L.G.hk.call(this);
    e.call(this);
    l.call(this);
    k.call(this);
    L.G.di.call(this, r.call(this));
    a = {};
    a.target = this.element;
    a.nb = this.nb;
    a.ib = this.ib;
    a.ob = this.ob;
    a.Sa = this.Sa;
    a.type = 3;
    a.j = this.S();
    this.M("draw", a);
    return this;
  };
  L.prototype.gb = function () {
    var b = this.v;
    this.Oj =
      this.Pj =
      this.Gp =
      this.Zn =
      this.Yn =
      this.nb =
      this.Sa =
      this.ib =
      this.ob =
        null;
    var c = this.Hd;
    c &&
      ((c.w = null),
      z.Pa.Fd.Hh(c),
      (this.Hd = null),
      z.Pa.Fd.Hh(this.Jw),
      (this.Jw = null));
    this.Ob &&
      ((b = b.cb), (c = a.L.Af) && c.Ng(b.symbol, this.Ob), (this.Ob = null));
    L.G.gb.apply(this, arguments);
    return this;
  };
  L.prototype.cd = function () {
    var a = "Gator",
      b = this.data;
    b &&
      (a +=
        "(" + b.period_jaws + "," + b.period_teeth + "," + b.period_lips + ")");
    return a;
  };
  L.prototype.tc = function () {
    return "Gator Oscillator";
  };
  L.prototype.wm = function () {
    return !0;
  };
  L.prototype.S = function () {
    return (L.G.S.apply(this, arguments) || 5) + 1;
  };
  L.prototype.kb = function (c) {
    var d = this.data,
      f = L.G.kb.apply(this, arguments);
    if (!I) {
      var e = Math.pow(0.1, this.S()),
        g = { position: "absolute" },
        n = { position: "absolute", width: "97px" },
        p = { position: "absolute", "white-space": "nowrap" };
      I = w(a.input.Number)
        .o("ao-min-value")
        .Y(e)
        .T(this.S())
        .b(n)
        .b({ top: "178px", left: "284px" });
      G = w(a.input.pa)
        .o("ao-min")
        .b(g)
        .b({
          top: "185px",
          left: "264px",
        })
        .i("change", h);
      F = w(a.page.I, "ao-min")
        .Text(q.hg + ":")
        .b(p)
        .b({ top: "183px", right: "-260px" });
      D = w(a.input.Number)
        .o("ao-max-value")
        .Y(e)
        .T(this.S())
        .b(n)
        .b({ top: "214px", left: "284px" });
      M = w(a.input.pa)
        .o("ao-max")
        .b(g)
        .b({ top: "219px", left: "264px" })
        .i("change", b);
      y = w(a.page.I, "ao-max")
        .Text(q.gg + ":")
        .b(p)
        .b({ top: "217px", right: "-260px" });
    }
    void 0 !== d.min
      ? (G.s(!0), I.g(!1).f(d.min))
      : (G.s(!1), I.g(!0).f(void 0 === this.ob ? 0 : this.ob));
    void 0 !== d.max
      ? (M.s(!0), D.g(!1).f(d.max))
      : (M.s(!1), D.g(!0).f(void 0 === this.ib ? 0 : this.ib));
    c.c(I).c(G).c(F).c(D).c(M).c(y);
    return f + 60;
  };
  L.prototype.lb = function () {
    var a = this.data;
    a &&
      (D.g() || I.g() || (D.f() <= I.f() && D.f(I.Fa() + 1)),
      D.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(D.f())),
      I.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(I.f())));
    L.G.lb.apply(this, arguments);
  };
  L.prototype.Kh = function (a, b) {
    var c = b.getAttribute("data-type"),
      d = "",
      f = this.data,
      e = this.Pj,
      g = this.Oj,
      n = this.v.pb(a),
      e = "Up" == c ? e[n] : g[n],
      d =
        d +
        ("Gator Oscillator (" +
          f.period_jaws +
          "," +
          f.period_teeth +
          "," +
          f.period_lips +
          ")"),
      d = d + ("\nTime: " + z.Cc.eg(a));
    return (d += "\n" + c + ": " + e.toFixed(this.S()));
  };
})();
(function () {
  function v() {
    var a = this.result,
      b = this.S(),
      c;
    c = "" + this.cd(this);
    a && a.length && (c += " " + a[a.length - 1].toFixed(b));
    return c;
  }
  function r() {
    var a = this,
      b = a.v;
    if (!a.Ob && (b = b.cb)) {
      var c = g.L.Af;
      c &&
        c.Vb(
          b.symbol,
          (a.Ob = function () {
            D.G.Qd.call(a) &&
              (l.call(a, !0),
              e.call(a),
              k.call(a, !0),
              D.G.di.call(a, v.call(a)));
          }),
          void 0,
          !1
        );
    }
  }
  function l(a) {
    var b = this.v.Lb,
      c = this.result;
    if (!b || !b.length) this.result = null;
    else if (a || !c || c.length != b.length || c.ea != b.ea || c.fa != b.fa) {
      (a && c) || ((c = this.result = []), (c.ea = b.ea), (c.fa = b.fa));
      var d = 0,
        f = b.length;
      a && (d = b.length - 1);
      for (a = Math.pow(10, D.G.S.call(this)); d < f; ) {
        var e = b[d];
        c[d] = ((e[2] - e[3]) * a) / e[5];
        d++;
      }
    }
  }
  function e() {
    var a = this.result;
    if (a && a.length) {
      var b = this.v,
        c = this.data,
        d = b.cb,
        f = b.wd,
        e = d.from,
        d = Math.pow(10, d.digits),
        b = b.ta - 20,
        g = c.min,
        c = c.max,
        n,
        h,
        p = isNaN(parseFloat(g)),
        m = isNaN(parseFloat(c));
      if (p || m) {
        p && ((g = Number.MAX_VALUE), (n = !0));
        m && ((c = Number.MIN_VALUE), (h = !0));
        for (var k = e, f = e + f; k <= f; k++)
          if ((e = a[k])) p && e < g && (g = e), m && e > c && (c = e);
      }
      this.Sa = b / (c * d - g * d);
      n && (g -= ((c - g) / b) * 10);
      h && (c += ((c - g) / b) * 10);
      this.nb = Math.round(b + this.Sa * g * d + 20);
      this.ob = g;
      this.ib = c;
    }
  }
  function k(a) {
    var b = this.result;
    if (b && b.length) {
      var e = this.v,
        g = this.canvas,
        h = this.Ub,
        m = e.cb,
        k = e.Lb,
        l = e.se,
        z = e.ta,
        y = e.le,
        r = e.Dm,
        v = e.wd,
        e = A.sc,
        G = m.from,
        I = Math.pow(10, m.digits),
        F = this.nb,
        O = this.Sa,
        M = !(5 > m.scale && d.yd);
      if (
        k &&
        k.length &&
        m &&
        !(a && G + v < k.length - 1) &&
        (parseInt(g.style.width, 10) != l &&
          (d.sa
            ? g.setAttribute("width", l * d.devicePixelRatio)
            : g.setAttribute("width", l),
          w(g, "width", l + "px")),
        parseInt(g.style.height, 10) != z &&
          (d.sa
            ? g.setAttribute("height", z * d.devicePixelRatio)
            : g.setAttribute("height", z),
          w(g, "height", z + "px")),
        (m = this.Hd),
        (a = this.Nb),
        m ||
          ((m = u("title", "http://www.w3.org/2000/svg")),
          q(a, m),
          (m = this.Hd = u("polygon", "http://www.w3.org/2000/svg")),
          m.setAttribute("style", "fill:black;fill-opacity:0;"),
          (m.w = this),
          c.Pa.Fd.Cg(m),
          q(a, m)),
        h || (h = this.Ub = new f(g)),
        h.Oa(),
        !(1 > v))
      ) {
        D.G.sh.call(this);
        var aa, X, ga, U, ba, da;
        a = [];
        m = [];
        l = [];
        z = [];
        g = G;
        G = Math.min(G + v, k.length - 1);
        if (g <= G) {
          X = v = 0;
          e ||
            ((da = []),
            (da[da.length] = [v, F].join()),
            this.Hd.setAttribute("points", ""));
          for (; g <= G; g++, X++)
            (aa = b[g]),
              (ga = b[g] > b[g - 1]),
              (U = k[g - 1] ? k[g][5] > k[g - 1][5] : !1),
              ga && U && (ba = a),
              ga || U || (ba = m),
              ga && !U && (ba = l),
              !ga && U && (ba = z),
              aa &&
                ((ga = Math.round(aa * I * O)),
                (aa = F - ga),
                e || (da[da.length] = [v, aa].join()),
                M ||
                  ((U = ba.length),
                  (ba[U] = v),
                  (ba[U + 1] = aa),
                  (ba[U + 2] = v),
                  (ba[U + 3] = F)),
                M &&
                  (ba[ba.length] = [v - Math.floor(0.5 * r) - 1, aa, r, ga])),
              (v += y);
          if (M) {
            h.Dg(p);
            for (g = 0; g < a.length; g++)
              (b = a[g]), h.Gg(b[0], b[1], b[2], b[3]);
            h.Fg();
            h.Dg(n);
            for (g = 0; g < m.length; g++)
              (b = m[g]), h.Gg(b[0], b[1], b[2], b[3]);
            h.Fg();
            h.Dg(x);
            for (g = 0; g < l.length; g++)
              (b = l[g]), h.Gg(b[0], b[1], b[2], b[3]);
            h.Fg();
            h.Dg(C);
            for (g = 0; g < z.length; g++)
              (b = z[g]), h.Gg(b[0], b[1], b[2], b[3]);
            h.Fg();
          } else h.ud(a, p), h.ud(m, n), h.ud(l, x), h.ud(z, C);
          e ||
            ((da[da.length] = [v, F].join()),
            this.Hd.setAttribute("points", da.join(" ")));
        }
      }
    }
  }
  function h() {
    O.g(!I.s());
    O.g() ||
      setTimeout(function () {
        O.jb().Gb();
      }, 0);
  }
  function b() {
    M.g(!y.s());
    M.g() ||
      setTimeout(function () {
        M.jb().Gb();
      }, 0);
  }
  var a = E.va,
    g = E.controls,
    d = E.Qa,
    f = E.Bh,
    c = g.L.Nc,
    z = E.Ma,
    A = g.L.Zb,
    m = E.ba.xa,
    u = a.sb,
    q = a.tb,
    w = a.$a,
    p = [0, 255, 0],
    n = [139 / 255, 69 / 255, 0],
    x = [0, 0, 1],
    C = [1, 192 / 255, 203 / 255],
    O,
    I,
    G,
    F,
    y,
    M,
    D = (c.ik.mW = function (a) {
      D.G.constructor.apply(this, arguments);
      a = this.data;
      a.min = 0;
    });
  c.cc(D);
  D.re = c.types.Jf;
  D.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    r.call(this);
    if (!D.G.Qd.call(this)) return this;
    D.G.hk.call(this);
    l.call(this);
    e.call(this);
    k.call(this);
    D.G.di.call(this, v.call(this));
    a = {};
    a.target = this.element;
    a.nb = this.nb;
    a.ib = this.ib;
    a.ob = this.ob;
    a.Sa = this.Sa;
    a.type = 2;
    a.j = this.S();
    this.M("draw", a);
    return this;
  };
  D.prototype.gb = function () {
    var a = this.v;
    this.result = this.nb = this.Sa = this.ib = this.ob = null;
    var b = this.Hd;
    b && ((b.w = null), c.Pa.Fd.Hh(b), (this.Hd = null));
    this.Ob &&
      ((a = a.cb), (b = g.L.Af) && b.Ng(a.symbol, this.Ob), (this.Ob = null));
    D.G.gb.apply(this, arguments);
    return this;
  };
  D.prototype.cd = function () {
    return "BW MFI";
  };
  D.prototype.tc = function () {
    return "Market Facilitation Index";
  };
  D.prototype.kb = function (a) {
    var c = this.data,
      d = Math.pow(0.1, this.S());
    if (!O) {
      var f = { position: "absolute" },
        e = { position: "absolute", width: "80px" },
        n = { position: "absolute", "white-space": "nowrap" };
      O = z(g.input.Number).o("ao-min-value").Y(d).T(this.S()).b(e).b({
        top: "16px",
        left: "284px",
      });
      I = z(g.input.pa)
        .o("ao-min")
        .b(f)
        .b({ top: "23px", left: "264px" })
        .i("change", h);
      G = z(g.page.I, "ao-min")
        .Text(m.hg + ":")
        .b(n)
        .b({ top: "21px", right: "-260px" });
      M = z(g.input.Number)
        .o("ao-max-value")
        .Y(d)
        .T(this.S())
        .b(e)
        .b({ top: "52px", left: "284px" });
      y = z(g.input.pa)
        .o("ao-max")
        .b(f)
        .b({ top: "57px", left: "264px" })
        .i("change", b);
      F = z(g.page.I, "ao-max")
        .Text(m.gg + ":")
        .b(n)
        .b({ top: "55px", right: "-260px" });
    }
    void 0 !== c.min
      ? (I.s(!0), O.g(!1).f(c.min))
      : (I.s(!1), O.g(!0).f(void 0 === this.ob ? 0 : this.ob));
    void 0 !== c.max
      ? (y.s(!0), M.g(!1).f(c.max))
      : (y.s(!1), M.g(!0).f(void 0 === this.ib ? 0 : this.ib));
    a.c(O).c(I).c(G).c(M).c(y).c(F);
    return 0;
  };
  D.prototype.ye = function () {
    c.Pa.Sj.ye.call(this);
    return this;
  };
  D.prototype.lb = function () {
    var a = this.data;
    a &&
      (M.g() || O.g() || (M.f() <= O.f() && M.f(O.Fa() + 1)),
      M.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(M.f())),
      O.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(O.f())));
    return this;
  };
  D.prototype.S = function () {
    return D.G.S.apply(this, arguments) || 5;
  };
  D.prototype.Kh = function (a) {
    var b = "",
      d = this.v,
      f = this.result,
      e = d.Lb,
      d = d.pb(a),
      g = f[d],
      b = b + this.tc(),
      b = b + ("\nTime: " + c.Cc.eg(a)),
      b = b + ("\nValue: " + g.toFixed(this.S()));
    a = f[d - 1];
    b += "\n(" + (0 < g - a ? "+" : "") + (g - a).toFixed(this.S()) + " ";
    return (b += e[d][5] - e[d - 1][5] + " )");
  };
})();
(function () {
  var v = E.va,
    r = E.ma,
    l = E.controls,
    e = l.L.Nc,
    k = l.L.Zb,
    h = e.Cc,
    b = v.sb,
    a = v.tb,
    g = [128 / 255, 128 / 255, 128 / 255],
    d = (e.ik.W8 = function (a) {
      d.G.constructor.apply(this, arguments);
    });
  e.cc(d);
  d.re = e.types.jn;
  d.oY = !0;
  d.prototype.Ha = function (a) {
    if (!a) return this;
    this.v = a;
    if (!d.G.Qd.call(this)) return this;
    d.G.hk.call(this);
    this.vm();
    this.$g();
    this.ic();
    return this;
  };
  d.prototype.gb = function () {
    this.Pj = this.Oj = null;
    var a = this.group;
    a && ((a.w = null), (a.wb = null), e.Pa.Fd.Hh(a), (this.group = null));
    if (this.Ob) {
      if ((a = this.v.cb)) {
        var b = l.L.Af;
        b && b.Ng(a.symbol, this.Ob);
      }
      this.Ob = null;
    }
    d.G.gb.apply(this, arguments);
    return this;
  };
  d.prototype.cd = function () {
    return "Fractals";
  };
  d.prototype.tc = function () {
    return "Fractals";
  };
  d.prototype.kb = function () {
    return 0;
  };
  d.prototype.lb = function () {
    return this;
  };
  d.prototype.ye = function () {};
  d.prototype.Lf = function () {
    this.Oj = this.Pj = null;
    return this;
  };
  d.prototype.wm = function () {
    return !1;
  };
  d.prototype.vm = function () {
    var a = this,
      b = a.v.cb;
    if (!a.Ob) {
      var d = l.L.Af;
      d &&
        d.Vb(
          b.symbol,
          (a.Ob = function () {
            a.$g(!0);
          }),
          void 0,
          !1
        );
    }
  };
  d.prototype.$g = function (a) {
    var b = this.Pj,
      d = this.Oj,
      e = this.v.Lb,
      g = e.length;
    if (
      !(5 > g) &&
      e &&
      e.length &&
      (a || !b || b.p3 != g || b.ea != e.ea || b.fa != e.fa)
    )
      for (
        a ||
          ((b = this.Pj = []),
          (b.ea = e.ea),
          (b.fa = e.fa),
          (b.p3 = g),
          (d = this.Oj = [])),
          a = a ? g - 5 : 2;
        a < g - 2;
        a++
      ) {
        var h = e[a],
          k = e[a + 1],
          w = e[a + 2],
          p = e[a - 1],
          n = e[a - 2];
        h[2] > k[2] &&
          h[2] > w[2] &&
          h[2] >= p[2] &&
          h[2] >= n[2] &&
          (b[a] = h[2]);
        h[3] < k[3] &&
          h[3] < w[3] &&
          h[3] <= p[3] &&
          h[3] <= n[3] &&
          (d[a] = h[3]);
      }
  };
  d.prototype.ic = function () {
    var d = this.v,
      c = d.Lb,
      h = this.Pj,
      l = this.Oj,
      m,
      u = d.Ub,
      q = d.cb;
    if (u && h && h.length && q) {
      var w = d.le,
        p = k.sc,
        n = d.nb,
        x = d.Sa,
        C = q.from,
        O = Math.pow(10, this.S()),
        q = C,
        I = Math.min(C + d.wd, c.length - 1),
        G = 0,
        c = [],
        C = [],
        F = 0;
      m = this.Nb;
      var y = this.group;
      y ||
        ((y = b("title", "http://www.w3.org/2000/svg")),
        a(m, y),
        (y = this.group = b("g", "http://www.w3.org/2000/svg")),
        (y.w = this),
        e.Pa.Fd.Cg(y),
        a(m, y));
      for (u.dF(g); q <= I; q++, F++) {
        if ((m = h[q]))
          (m = Math.floor(n - m * O * x)),
            (m -= 16),
            u.$r(G, m, G, m - 10, G - 8, m + 4),
            u.$r(G, m, G, m - 10, G + 8, m + 4),
            (c[c.length] = [G, m - 2, G, m - 10 + 2, G + 7, m + 3]),
            p || (C[C.length] = [G, m, 10]);
        if ((m = l[q]))
          (m = Math.floor(n - m * O * x)),
            (m += 16),
            u.$r(G, m, G, m + 10, G - 8, m - 4),
            u.$r(G, m, G, m + 10, G + 8, m - 4),
            (c[c.length] = [G, m + 2, G, m + 10 - 2, G + 7, m - 3]),
            p || (C[C.length] = [G, m, 10]);
        G += w;
      }
      u.eG();
      if (!p && ((h = this.group), !h.wb || h.wb.toString() != C.toString())) {
        v.Uj(h);
        for (l = 0; l < C.length; l++)
          (w = b("circle", "http://www.w3.org/2000/svg")),
            w.setAttribute("style", "opacity:0"),
            w.setAttribute("cx", C[l][0]),
            w.setAttribute("cy", C[l][1]),
            w.setAttribute("r", C[l][2]),
            a(h, w);
        h.wb = C;
      }
      u.dF(r.be(d.dj));
      for (q = 0; q < c.length; q++)
        (d = c[q]), u.$r(d[0], d[1], d[2], d[3], d[4], d[5]);
      u.eG();
    }
    return this;
  };
  d.prototype.Kh = function (a) {
    var b = "",
      d;
    d = this.Pj;
    var e = this.Oj,
      g = this.v.pb(a);
    if ((d = d[g]))
      (b = b + "Fractals" + ("\nTime: " + h.eg(a))),
        (b += "\nUp: " + (d || 0).toFixed(this.S()));
    if ((d = e[g]))
      (b += "Fractals"),
        (b += "\nTime: " + h.eg(a)),
        (b += "\nDown: " + (d || 0).toFixed(this.S()));
    return b;
  };
})();
(function () {
  function v() {
    c.g(!f.s());
    c.g() ||
      setTimeout(function () {
        c.jb().Gb();
      }, 0);
  }
  function r() {
    m.g(!A.s());
    m.g() ||
      setTimeout(function () {
        m.jb().Gb();
      }, 0);
  }
  var l = E.controls,
    e = E.ma,
    k = l.L.Nc,
    h = k.Cc,
    b = h.ng,
    a = E.Ma,
    g = E.ba.xa,
    d,
    f,
    c,
    z,
    A,
    m,
    u = (k.Sj.e5 = function (a) {
      u.G.constructor.apply(this, arguments);
      this.Hi = [32 / 255, 178 / 255, 170 / 255];
    });
  k.cc(u);
  k.Ch(u, k.Pa.Gd);
  u.re = k.types.Jf;
  u.prototype.cd = function () {
    return "A/D";
  };
  u.prototype.tc = function () {
    return "Accumulation/Distribution";
  };
  u.prototype.kb = function (b) {
    var e = this.data;
    if (!d) {
      var h = {
          position: "absolute",
          top: "21px",
          width: "260px",
          "text-align": "right",
          "white-space": "nowrap",
        },
        n = { position: "absolute", top: "23px", left: "264px" },
        k = { position: "absolute", top: "16px", left: "284px", width: "80px" };
      c = a(l.input.Number).o("ad--min-value").Y(1).T(this.S()).b(k);
      f = a(l.input.pa).o("ad--min").b(n).i("change", v);
      d = a(l.page.I, "ad--min")
        .Text(g.hg + ":")
        .b(h);
      h.top = "55px";
      n.top = "57px";
      k.top = "50px";
      m = a(l.input.Number).o("ad--max-value").Y(1).T(this.S()).b(k);
      A = a(l.input.pa).o("ad--max").b(n).i("change", r);
      z = a(l.page.I, "ad--max")
        .Text(g.gg + ":")
        .b(h);
    }
    c.T(this.S());
    m.T(this.S());
    void 0 !== e.min
      ? (f.s(!0), c.g(!1).f(e.min))
      : (f.s(!1), c.g(!0).f(this.ob));
    void 0 !== e.max
      ? (A.s(!0), m.g(!1).f(e.max))
      : (A.s(!1), m.g(!0).f(this.ib));
    b.c(c).c(f).c(d).c(m).c(A).c(z);
    return 240;
  };
  u.prototype.ye = function () {
    k.Pa.Sj.ye.call(this);
    this.Sf();
    return this;
  };
  u.prototype.lb = function () {
    var a = this.data;
    a &&
      (m.g() || c.g() || (m.f() <= c.f() && m.f(c.Fa() + 1)),
      m.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(m.f())),
      c.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(c.f())));
    this.Sf();
    return this;
  };
  u.prototype.S = function () {
    return 0;
  };
  u.prototype.ug = function (a) {
    var c = this.result,
      d = this.v.Lb;
    if (!d || !d.length) this.result = null;
    else if (a || !c || c.length != d.length || c.ea != d.ea || c.fa != d.fa) {
      (a && c) ||
        ((c = this.result = e.Vc(d.length)), (c.ea = d.ea), (c.fa = d.fa));
      var f = 0,
        g = d.length;
      a && (f = d.length - 1);
      for (a = this.data.volumes ? 6 : 5; f < g; ) {
        var m = d[f],
          k = h.Wh(m, b.Pi),
          u = h.Wh(m, b.zq),
          l = h.Wh(m, b.Ku),
          k = k - u - (l - k),
          k = l == u ? 0 : (k / (l - u)) * (m[a] || 0);
        0 < f && (k += c[f - 1] || 0);
        c[f] = k || 0;
        f++;
      }
    }
  };
  u.prototype.Kh = function (a) {
    var b = "",
      c = this.result,
      d = this.v.pb(a),
      c = c[d],
      b = b + this.tc(),
      b = b + ("\nTime: " + k.Cc.eg(a));
    return (b += "\nValue: " + c.toFixed(this.S()));
  };
})();
(function () {
  function v() {
    m.g(!A.s());
    m.g() ||
      setTimeout(function () {
        m.jb().Gb();
      }, 0);
  }
  function r() {
    w.g(!q.s());
    w.g() ||
      setTimeout(function () {
        w.jb().Gb();
      }, 0);
  }
  var l = E.controls,
    e = E.ma,
    k = E.Bh,
    h = E.Qa,
    b = l.L.Nc,
    a = l.L.Zb,
    g = b.Cc,
    d = E.Ma,
    f = E.ba.xa,
    c = E.va.$a,
    z,
    A,
    m,
    u,
    q,
    w,
    p = (b.Sj.mW = function (a) {
      p.G.constructor.apply(this, arguments);
      this.Zf("period");
      this.Hi = [30 / 255, 144 / 255, 1];
      this.dh = 2;
      a = this.data;
      void 0 === a.period && (a.period = 14);
    });
  b.cc(p);
  b.Ch(p, b.Pa.Gd);
  p.re = b.types.Jf;
  p.prototype.cd = function () {
    var a = ["MFI"],
      b = this.data;
    b && a.push("(", b.period, ")");
    return a.join("");
  };
  p.prototype.tc = function () {
    return "Money Flow Index";
  };
  p.prototype.kb = function (a) {
    p.G.kb.call(this, a, g.xh.oh);
    var b = this.data;
    if (!z) {
      var c = Math.pow(0.1, this.S()),
        e = {
          position: "absolute",
          top: "55px",
          width: "260px",
          "text-align": "right",
          "white-space": "nowrap",
        },
        h = { position: "absolute", top: "57px", left: "264px" },
        k = { position: "absolute", top: "50px", left: "284px", width: "80px" };
      m = d(l.input.Number).o("mfi--min-value").Y(c).T(this.S()).b(k);
      A = d(l.input.pa).o("mfi--min").b(h).i("change", v);
      z = d(l.page.I, "mfi--min")
        .Text(f.hg + ":")
        .b(e);
      e.top = "89px";
      h.top = "91px";
      k.top = "84px";
      w = d(l.input.Number).o("mfi--max-value").Y(c).T(this.S()).b(k);
      q = d(l.input.pa).o("mfi--max").b(h).i("change", r);
      u = d(l.page.I, "mfi--max")
        .Text(f.gg + ":")
        .b(e);
    }
    void 0 !== b.min
      ? (A.s(!0), m.g(!1).f(b.min))
      : (A.s(!1), m.g(!0).f(this.ob));
    void 0 !== b.max
      ? (q.s(!0), w.g(!1).f(b.max))
      : (q.s(!1), w.g(!0).f(this.ib));
    a.c(m).c(A).c(z).c(w).c(q).c(u);
    return 238;
  };
  p.prototype.ye = function () {
    b.Pa.Sj.ye.call(this);
    p.G.lb.apply(this, arguments);
    return this;
  };
  p.prototype.lb = function () {
    var a = this.data;
    a &&
      (w.g() || m.g() || (w.f() <= m.f() && w.f(m.Fa() + 1)),
      w.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(w.f())),
      m.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(m.f())));
    p.G.lb.apply(this, arguments);
    return this;
  };
  p.prototype.S = function () {
    return p.G.S.apply(this, arguments) || 5;
  };
  p.prototype.wn = function () {
    var a = {};
    a.target = this.element;
    a.nb = this.nb;
    a.ib = this.ib;
    a.ob = this.ob;
    a.Sa = this.Sa;
    a.type = this.dh || 2;
    a.j = this.S();
    a.vr = [20, 80];
    this.M("draw", a);
  };
  p.prototype.ug = function (a) {
    var b = this.result,
      c = this.v.Lb,
      d = c.length,
      f = this.data.period;
    if (!c || !d || 1 > f) this.result = null;
    else if (
      !(
        d < f ||
        (!a && b && b.length == c.length && b.ea == c.ea && b.fa == c.fa)
      )
    ) {
      (a && b) ||
        ((b = this.result = e.Vc(c.length)), (b.ea = c.ea), (b.fa = c.fa));
      var h = f,
        p = this.data.volumes ? 6 : 5;
      for (a && (h = d - 1); h < d; h++) {
        for (var m = (a = 0), k = g.Wh(c[h], g.ng.Iv), q = 1; q <= f; q++) {
          var u = h - q,
            l = g.Wh(c[u], g.ng.Iv);
          k > l && (a += c[u + 1][p] * k);
          k < l && (m += c[u + 1][p] * k);
          k = l;
        }
        b[h] = 0 !== m ? 100 - 100 / (1 + a / m) : 100;
      }
    }
  };
  p.prototype.wi = function (b) {
    var d = this.result;
    if (d && d.length) {
      var f = this.v,
        g = f.Aa,
        p = this.canvas,
        m = this.Ub,
        q = f.cb,
        u = f.Lb,
        l = f.se,
        w = f.ta,
        z = f.le,
        A = f.wd,
        r = a.sc,
        v = Math.pow(10, this.S()),
        K = this.nb,
        P = this.Sa,
        T = this.Hi;
      if (u && u.length && q) {
        var R = q.from,
          q = Math.min(R + A, u.length - 1);
        if (
          !(
            (b && R + A < u.length - 1) ||
            (this.Ik(),
            parseInt(p.style.width, 10) != l &&
              (h.sa
                ? p.setAttribute("width", l * h.devicePixelRatio)
                : p.setAttribute("width", l),
              c(p, "width", l + "px")),
            parseInt(p.style.height, 10) != w &&
              (h.sa
                ? p.setAttribute("height", w * h.devicePixelRatio)
                : p.setAttribute("height", w),
              c(p, "height", w + "px")),
            m || (m = this.Ub = new k(p)),
            m.Oa(),
            1 > A)
          )
        ) {
          this.G.sh.call(this);
          var H, S, Z;
          h.yd || ((Z = !0), (S = m.vi()));
          Z
            ? (S.setLineDash && S.setLineDash([3]),
              (S.strokeStyle = f.xd),
              S.beginPath(),
              (b = Math.floor(K - 20 * v * P) * h.devicePixelRatio + 0.5),
              S.moveTo(0, b),
              S.lineTo(g * h.devicePixelRatio + 0.5, b),
              (b = Math.floor(K - 80 * v * P) * h.devicePixelRatio + 0.5),
              S.moveTo(0, b),
              S.lineTo(g * h.devicePixelRatio + 0.5, b),
              S.stroke())
            : (m.ud(new Float32Array([0, K, g, K]), e.be(f.xd), 3),
              (b = Math.floor(K - 20 * v * P)),
              m.ud(new Float32Array([0, b, g, b]), e.be(f.xd), 3),
              (b = Math.floor(K - 80 * v * P)),
              m.ud(new Float32Array([0, b, g, b]), e.be(f.xd), 3));
          g = this.qb;
          r || ((H = []), g.setAttribute("points", ""));
          f = [];
          Z &&
            (S.beginPath(),
            S.setLineDash && S.setLineDash([]),
            (S.strokeStyle = e.xk(T)));
          for (u = p = 0; R <= q; R++, u++) {
            if ((b = d[R]))
              (b = Math.floor(K - b * v * P)),
                r || (H[H.length] = [p, b].join()),
                Z
                  ? 0 === u
                    ? S.moveTo(
                        p * h.devicePixelRatio + 0.5,
                        b * h.devicePixelRatio + 0.5
                      )
                    : S.lineTo(
                        p * h.devicePixelRatio + 0.5,
                        b * h.devicePixelRatio + 0.5
                      )
                  : ((f[f.length] = p), (f[f.length] = b));
            p += z;
          }
          r || g.setAttribute("points", H.join(" "));
          Z ? S.stroke() : m.Ue(f, T);
        }
      }
    }
  };
})();
(function () {
  function v() {
    f.g(!d.s());
    f.g() ||
      setTimeout(function () {
        f.jb().Gb();
      }, 0);
  }
  function r() {
    A.g(!z.s());
    A.g() ||
      setTimeout(function () {
        A.jb().Gb();
      }, 0);
  }
  var l = E.controls,
    e = E.ma,
    k = l.L.Nc,
    h = k.Cc,
    b = E.Ma,
    a = E.ba.xa,
    g,
    d,
    f,
    c,
    z,
    A,
    m = (k.Sj.yaa = function (a) {
      m.G.constructor.apply(this, arguments);
      this.Zf("applyto");
      this.Hi = [32 / 255, 178 / 255, 170 / 255];
      this.dh = 3;
      a = this.data;
      void 0 === a.applyto && (a.applyto = h.ng.Pi);
    });
  k.cc(m);
  k.Ch(m, k.Pa.Gd);
  m.re = k.types.Jf;
  m.prototype.cd = function () {
    return "OBV";
  };
  m.prototype.tc = function () {
    return "On Balance Volume";
  };
  m.prototype.kb = function (e) {
    m.G.kb.call(this, e, h.xh.Oi);
    var k = this.data;
    if (!g) {
      var w = {
          position: "absolute",
          top: "55px",
          width: "260px",
          "text-align": "right",
          "white-space": "nowrap",
        },
        p = { position: "absolute", top: "57px", left: "264px" },
        n = { position: "absolute", top: "50px", left: "284px", width: "80px" };
      f = b(l.input.Number).o("atr--min-value").Y(1).T(this.S()).b(n);
      d = b(l.input.pa).o("atr--min").b(p).i("change", v);
      g = b(l.page.I, "atr--min")
        .Text(a.hg + ":")
        .b(w);
      w.top = "89px";
      p.top = "91px";
      n.top = "84px";
      A = b(l.input.Number).o("atr--max-value").Y(1).T(this.S()).b(n);
      z = b(l.input.pa).o("atr--max").b(p).i("change", r);
      c = b(l.page.I, "atr--max")
        .Text(a.gg + ":")
        .b(w);
    }
    f.T(this.S());
    A.T(this.S());
    void 0 !== k.min
      ? (d.s(!0), f.g(!1).f(k.min))
      : (d.s(!1), f.g(!0).f(this.ob));
    void 0 !== k.max
      ? (z.s(!0), A.g(!1).f(k.max))
      : (z.s(!1), A.g(!0).f(this.ib));
    e.c(f).c(d).c(g).c(A).c(z).c(c);
    return 240;
  };
  m.prototype.ye = function () {
    k.Pa.Sj.ye.call(this);
    this.Sf();
    return this;
  };
  m.prototype.lb = function () {
    var a = this.data;
    a &&
      (A.g() || f.g() || (A.f() <= f.f() && A.f(f.Fa() + 1)),
      A.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(A.f())),
      f.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(f.f())));
    m.G.lb.apply(this, arguments);
    return this;
  };
  m.prototype.S = function () {
    return 0;
  };
  m.prototype.ug = function (a) {
    var b = this.result,
      c = this.v.Lb,
      d = c.length;
    if (!c || !d) this.result = null;
    else if (
      !(
        2 > d ||
        (!a && b && b.length == c.length && b.ea == c.ea && b.fa == c.fa)
      )
    ) {
      (a && b) ||
        ((b = this.result = e.Vc(c.length)), (b.ea = c.ea), (b.fa = c.fa));
      var f = this.data.volumes ? 6 : 5;
      a ? (a = c.length - 1) : ((a = 1), (b[0] = c[0][f]));
      for (var g = this.Fi(); a < d; a++) {
        var h = c[a][f] || 0,
          m = g[a - 1] || 0,
          k = g[a] || 0;
        b[a] = k < m ? b[a - 1] - h : k > m ? b[a - 1] + h : b[a - 1];
      }
    }
  };
  m.prototype.Kh = function (a) {
    var b = "",
      c = this.result,
      d = this.v.pb(a),
      c = c[d],
      b = b + this.tc(),
      b = b + ("\nTime: " + k.Cc.eg(a));
    return (b += "\nValue: " + c.toFixed(this.S()));
  };
})();
(function () {
  function v() {
    u.g(!q.s());
    u.g() ||
      setTimeout(function () {
        u.jb().Gb();
      }, 0);
  }
  function r() {
    x.g(!n.s());
    x.g() ||
      setTimeout(function () {
        x.jb().Gb();
      }, 0);
  }
  var l = E.va,
    e = E.controls,
    k = E.Qa,
    h = E.Bh,
    b = e.L.Nc,
    a = E.Ma,
    g = e.L.Zb,
    d = E.ba.xa,
    f = l.sb,
    c = l.tb,
    z = l.$a,
    A = [0, 128 / 255, 0],
    m = [1, 0, 0],
    u,
    q,
    w,
    p,
    n,
    x,
    C = (b.Sj.Eea = function (a) {
      C.G.constructor.apply(this, arguments);
      a.min = 0;
    });
  b.cc(C);
  b.Ch(C, b.Pa.Gd);
  C.re = b.types.Jf;
  C.prototype.cd = function () {
    return "Volumes";
  };
  C.prototype.tc = function () {
    return "Volumes";
  };
  C.prototype.kb = function (b) {
    var c = this.data;
    if (!u) {
      var f = { position: "absolute" },
        g = { position: "absolute", width: "80px" },
        h = { position: "absolute", "white-space": "nowrap" };
      u = a(e.input.Number)
        .o("ao-min-value")
        .Y(1)
        .T(this.S())
        .b(g)
        .b({ top: "16px", left: "284px" });
      q = a(e.input.pa)
        .o("ao-min")
        .b(f)
        .b({ top: "23px", left: "264px" })
        .i("change", v);
      w = a(e.page.I, "ao-min")
        .Text(d.hg + ":")
        .b(h)
        .b({ top: "21px", right: "-260px" });
      x = a(e.input.Number)
        .o("ao-max-value")
        .Y(1)
        .T(this.S())
        .b(g)
        .b({ top: "52px", left: "284px" });
      n = a(e.input.pa)
        .o("ao-max")
        .b(f)
        .b({
          top: "57px",
          left: "264px",
        })
        .i("change", r);
      p = a(e.page.I, "ao-max")
        .Text(d.gg + ":")
        .b(h)
        .b({ top: "55px", right: "-260px" });
    }
    u.T(this.S());
    x.T(this.S());
    void 0 !== c.min
      ? (q.s(!0), u.g(!1).f(c.min))
      : (q.s(!1), u.g(!0).f(void 0 === this.ob ? 0 : this.ob));
    void 0 !== c.max
      ? (n.s(!0), x.g(!1).f(c.max))
      : (n.s(!1), x.g(!0).f(void 0 === this.ib ? 0 : this.ib));
    b.c(u).c(q).c(w).c(x).c(n).c(p);
    return 0;
  };
  C.prototype.ye = function () {
    b.Pa.Sj.ye.call(this);
    this.Sf();
    return this;
  };
  C.prototype.lb = function () {
    var a = this.data;
    a &&
      (x.g() || u.g() || (x.f() <= u.f() && x.f(u.Fa() + 1)),
      x.g() ? ((a.max = null), delete a.max) : (a.max = parseFloat(x.f())),
      u.g() ? ((a.min = null), delete a.min) : (a.min = parseFloat(u.f())));
    return this;
  };
  C.prototype.S = function () {
    return 0;
  };
  C.prototype.ug = function (a) {
    var b = this.v.Lb,
      c = this.result;
    if (!b || !b.length) this.result = null;
    else if (a || !c || c.length != b.length || c.ea != b.ea || c.fa != b.fa) {
      (a && c) || ((c = this.result = []), (c.ea = b.ea), (c.fa = b.fa));
      var d = 0,
        f = b.length,
        e = this.data.volumes ? 6 : 5;
      for (a && (d = b.length - 1); d < f; ) (c[d] = b[d][e]), d++;
    }
  };
  C.prototype.wi = function (a) {
    var d = this.result;
    if (d && d.length) {
      var e = this.v,
        n = this.canvas,
        p = this.Ub,
        q = e.cb,
        x = e.Lb,
        l = e.se,
        u = e.ta,
        w = e.le,
        r = e.Dm,
        v = e.wd,
        e = g.sc,
        P = q.from,
        T = Math.pow(10, this.S()),
        R = this.nb,
        H = this.Sa,
        S = !(5 > q.scale && k.yd);
      if (
        x &&
        x.length &&
        q &&
        !(a && P + v < x.length - 1) &&
        (parseInt(n.style.width, 10) != l &&
          (k.sa
            ? n.setAttribute("width", l * k.devicePixelRatio)
            : n.setAttribute("width", l),
          z(n, "width", l + "px")),
        parseInt(n.style.height, 10) != u &&
          (k.sa
            ? n.setAttribute("height", u * k.devicePixelRatio)
            : n.setAttribute("height", u),
          z(n, "height", u + "px")),
        (q = this.Hd),
        (a = this.Nb),
        q ||
          ((q = f("title", "http://www.w3.org/2000/svg")),
          c(a, q),
          (q = this.Hd = f("polygon", "http://www.w3.org/2000/svg")),
          q.setAttribute("style", "fill:black;fill-opacity:0;"),
          (q.w = this),
          b.Pa.Fd.Cg(q),
          c(a, q)),
        p || (p = this.Ub = new h(n)),
        p.Oa(),
        !(1 > v))
      ) {
        C.G.sh.call(this);
        var Z, W, Y;
        a = [];
        q = [];
        n = P;
        v = Math.min(P + v, x.length - 1);
        if (n <= v) {
          P = x = 0;
          e ||
            ((Y = []),
            (Y[Y.length] = [x, R].join()),
            this.Hd.setAttribute("points", ""));
          for (; n <= v; n++, P++)
            (u = d[n]),
              (l = u >= d[n - 1] ? a : q),
              u &&
                ((Z = Math.round(u * T * H)),
                (u = R - Z),
                e || (Y[Y.length] = [x, u].join()),
                S ||
                  ((W = l.length),
                  (l[W] = x),
                  (l[W + 1] = u),
                  (l[W + 2] = x),
                  (l[W + 3] = R)),
                S && (l[l.length] = [x - Math.floor(0.5 * r) - 1, u, r, Z])),
              (x += w);
          if (S) {
            p.Dg(A);
            for (n = 0; n < a.length; n++)
              (d = a[n]), p.Gg(d[0], d[1], d[2], d[3]);
            p.Fg();
            p.Dg(m);
            for (n = 0; n < q.length; n++)
              (d = q[n]), p.Gg(d[0], d[1], d[2], d[3]);
            p.Fg();
          } else p.ud(a, A), p.ud(q, m);
          e ||
            ((Y[Y.length] = [x, R].join()),
            this.Hd.setAttribute("points", Y.join(" ")));
        }
      }
    }
  };
  C.prototype.Kh = function (a) {
    var c = "",
      d = this.result,
      f = this.v.pb(a),
      d = d[f],
      c = c + this.cd(),
      c = c + ("\nTime: " + b.Cc.eg(a));
    return (c += "\nValue: " + d.toFixed(this.S()));
  };
})();
window.J.V.Rg.Bb = {
  kL: function (v) {
    if (!v) return null;
    var r,
      l = 0,
      e;
    r = 68;
    r += 128;
    r += 16;
    r += 64;
    r += 64;
    r += 8;
    r += 128;
    r += 4;
    r += 256;
    e = new ArrayBuffer(r);
    r = new Uint8Array(e);
    e = new DataView(e);
    e.setUint32(l, v.version || 0, !0);
    e.Yb((l += 4), (v.mf || "").substr(0, 32));
    e.Yb((l += 64), (v.Li || "").substr(0, 64));
    r.set(new Uint8Array(v.ZL), (l += 128));
    e.Yb((l += 16), (v.bx || "").substr(0, 32));
    e.Yb((l += 64), (v.cx || "").substr(0, 32));
    e.Kj((l += 64), Long.ec(v.m4 || "0"));
    e.Yb((l += 8), (v.l4 || "").substr(0, 64));
    e.setUint32((l += 128), Math.min((v.url || "").length, 128), !0);
    e.Yb(l + 4, (v.url || "").substr(0, 128));
    return r.buffer;
  },
  J: function (v) {
    if (!v) return null;
    var r = new ArrayBuffer(64);
    new DataView(r).te(0, v);
    return r;
  },
  P2: function (v, r) {
    var l = new ArrayBuffer(65),
      e = new DataView(l);
    e.setInt8(0, r ? 1 : 0);
    e.Yb(1, (v || "").substr(0, 32));
    return l;
  },
};
(function () {
  function v(k, h) {
    var b, a;
    h || (h = 0);
    b = new DataView(k);
    a = new e.data.ig();
    a.X = b.qa(h).toString();
    a.Mm = b.J((h += 8), 64);
    a.l = b.J((h += 64), 64);
    a.ij = 1e3 * b.getUint32((h += 64), !0);
    a.$b = 1e3 * b.getUint32((h += 4), !0);
    a.Xw = 1e3 * b.getUint32((h += 4), !0);
    a.yb = b.getUint32((h += 4), !0);
    a.fe = b.getUint32((h += 4), !0);
    a.sd = b.getUint32((h += 4), !0);
    a.ho = b.getUint32((h += 4), !0);
    a.N = b.getFloat64((h += 4), !0);
    a.Na = b.getFloat64((h += 8), !0);
    a.ed = b.getFloat64((h += 8), !0);
    a.C = b.getFloat64((h += 8), !0);
    a.D = b.getFloat64((h += 8), !0);
    a.Ff = b.qa((h += 8));
    a.wc = b.qa((h += 8));
    a.qk = b.getUint32((h += 8), !0);
    a.ii = b.qa((h += 4)).toString();
    a.ka = b.qa((h += 8)).toString();
    a.Eb = b.J((h += 8), 64);
    a.Ae = b.getFloat64((h += 64), !0);
    a.j = b.getUint32((h += 8), !0);
    a.Hc = b.getUint32((h += 4), !0);
    a.pg = b.getFloat64((h += 4), !0);
    a.qg = b.getFloat64((h += 8), !0);
    a.rc = b.getFloat64((h += 8), !0);
    a.vl = b.getUint32((h += 8), !0);
    a.ij += b.getInt32((h += 4), !0);
    a.Xw += b.getInt32(h + 4, !0);
    "0" === a.X && (a.X = "");
    "0" === a.ii && (a.ii = "");
    "0" === a.ka && (a.ka = "");
    return a;
  }
  function r(k, h) {
    var b, a;
    h || (h = 0);
    b = new DataView(k);
    a = new e.data.Tg();
    a.Od = b.qa(h).toString();
    a.uw = b.J((h += 8), 64);
    a.X = b.qa((h += 64)).toString();
    a.Te = 1e3 * b.getUint32((h += 8), !0);
    a.Fr = 1e3 * b.getUint32((h += 4), !0);
    a.l = b.J((h += 4), 64);
    a.aa = b.getUint32((h += 64), !0);
    a.Nk = b.getUint32((h += 4), !0);
    a.Jc = b.getFloat64((h += 4), !0);
    a.Oc = b.getFloat64((h += 8), !0);
    a.Mb = b.getFloat64((h += 8), !0);
    a.Qb = b.getFloat64((h += 8), !0);
    a.m = b.qa((h += 8));
    a.ya = b.getFloat64((h += 8), !0);
    a.Xn = b.getFloat64((h += 8), !0);
    a.Fp = b.getFloat64((h += 8), !0);
    a.Xd = b.getFloat64((h += 8), !0);
    a.pc = b.getFloat64((h += 8), !0);
    a.ii = b.qa((h += 8)).toString();
    a.ka = b.qa((h += 8)).toString();
    a.Eb = b.J((h += 8), 64);
    a.Ae = b.getFloat64((h += 64), !0);
    a.j = b.getUint32((h += 8), !0);
    a.Hc = b.getUint32((h += 4), !0);
    a.Sm = b.getUint32((h += 4), !0);
    a.Te += b.getInt32((h += 4), !0);
    a.Fr += b.getInt32((h += 4), !0);
    a.uf = b.getFloat64(h + 4, !0);
    "0" === a.Od && (a.Od = "");
    "0" === a.X && (a.X = "");
    "0" === a.ii && (a.ii = "");
    "0" === a.ka && (a.ka = "");
    return a;
  }
  function l(k, h) {
    var b, a;
    h || (h = 0);
    b = new DataView(k);
    a = new e.data.Tg();
    a.ka = b.qa(h).toString();
    a.X = b.qa((h += 8)).toString();
    a.Te = 1e3 * b.getUint32((h += 8), !0);
    a.Fr = 1e3 * b.getUint32((h += 4), !0);
    a.l = b.J((h += 4), 64);
    a.aa = b.getUint32((h += 64), !0);
    a.Jc = b.getFloat64((h += 4), !0);
    a.Oc = b.getFloat64((h += 8), !0);
    a.Mb = b.getFloat64((h += 8), !0);
    a.Qb = b.getFloat64((h += 8), !0);
    a.m = b.qa((h += 8));
    a.ya = b.getFloat64((h += 8), !0);
    a.Xn = b.getFloat64((h += 8), !0);
    a.Fp = b.getFloat64((h += 8), !0);
    a.Xd = b.getFloat64((h += 8), !0);
    a.pc = b.getFloat64((h += 8), !0);
    a.ii = b.qa((h += 8)).toString();
    a.gM = b.qa((h += 8)).toString();
    a.Eb = b.J((h += 8), 64);
    a.Ae = b.getFloat64((h += 64), !0);
    a.j = b.getUint32((h += 8), !0);
    a.Hc = b.getUint32((h += 4), !0);
    a.Sm = b.getUint32((h += 4), !0);
    a.hM = b.J((h += 4), 64);
    a.Te += b.getInt32((h += 64), !0);
    a.Fr += b.getInt32(h + 4, !0);
    "0" === a.ka && (a.ka = "");
    "0" === a.X && (a.X = "");
    "0" === a.ii && (a.ii = "");
    "0" === a.gM && (a.gM = "");
    return a;
  }
  var e = window.J.V;
  e.Rg.P = {
    cJ: function (k) {
      var h = new DataView(k),
        b = 0,
        a,
        g;
      g = {
        cj: h.getUint8(b),
        Rw: h.getInt32((b += 1), !0),
        Nm: h.getInt32((b += 4), !0),
        Wd: h.getFloat64((b += 4), !0),
        Qg: h.getFloat64((b += 8), !0),
        hf: h.J((b += 8), 64),
        yc: h.getUint32((b += 64), !0),
        wh: h.getUint32((b += 4), !0),
        ul: h.J((b += 4), 256),
        IE: h.getUint16((b += 256), !0),
        oe: h.J((b += 2), 128),
        pr: h.J((b += 128), 256),
        Yw: h.getInt32((b += 256), !0),
        tw: h.getInt8((b += 4)),
        xp: h.getUint32((b += 1), !0),
        AE: h.getUint32((b += 4), !0),
        Bt: h.getFloat64((b += 4), !0),
        Dt: h.getFloat64((b += 8), !0),
        Ct: h.getUint32((b += 8), !0),
        EM: h.getFloat64((b += 4), !0),
        vp: h.getUint32((b += 8), !0),
        hi: h.getFloat64((b += 4), !0),
        pg: h.getFloat64((b += 8), !0),
        qg: h.getFloat64((b += 8), !0),
      };
      b += 8;
      k.byteLength > b && ((g.st = h.getUint32(b, !0)), (b += 4));
      g.Jr = [];
      if (k.byteLength > b && ((a = h.getUint32(b, !0)), (b += 4), a))
        for (var d = 0; d < a; d++) g.Jr.push(e.Rg.O.gJ(k, b)), (b += 572);
      k.byteLength > b && (g.Gl = h.getInt32(b, !0));
      g.Nd = (g.pg + g.qg).normalize(g.yc);
      return g;
    },
    eJ: function (e, h) {
      var b, a, g, d;
      if (!e) return [];
      h || (h = 0);
      b = [];
      g = new DataView(e).getUint32(h, !0);
      d = h + 4;
      for (var f = 0; f < g; f++) (a = v(e, 356 * f + d)) && (b[b.length] = a);
      return b;
    },
    TX: function (e, h) {
      var b, a, g, d;
      if (!e) return [];
      h || (h = 0);
      b = [];
      g = new DataView(e).getUint32(h, !0);
      d = h + 4;
      for (var f = 0; f < g; f++) (a = r(e, 356 * f + d)) && (b[b.length] = a);
      return b;
    },
    VX: function (e, h) {
      var b, a, g, d;
      if (!e) return [];
      h || (h = 0);
      b = [];
      g = new DataView(e).getUint32(h, !0);
      d = h + 4;
      for (var f = 0; f < g; f++) (a = l(e, 344 * f + d)) && (b[b.length] = a);
      return b;
    },
    bY: function (e) {
      var h, b, a, g;
      if (!e) return [];
      h = [];
      a = new DataView(e).getUint32(0, !0);
      for (g = { offset: 0 }; g.offset < e.byteLength; ) {
        if (2 === a) {
          b = e;
          for (
            var d = g,
              f = void 0,
              c = void 0,
              z = void 0,
              A = void 0,
              m = void 0,
              u = void 0,
              f = new DataView(b),
              c = d.offset,
              z = 344,
              A = 356,
              m = {
                Ze: f.getUint32(c, !0),
                O4: f.getUint32((c += 4), !0),
                dN: f.getUint32((c += 4), !0),
                Od: r(b, (c += 4)),
                Ya: l(b, (c += A)),
                Wd: f.getFloat64((c += z), !0),
                Qg: f.getFloat64((c += 8), !0),
                pg: f.getFloat64((c += 8), !0),
                qg: f.getFloat64((c += 8), !0),
                hi: f.getFloat64((c += 8), !0),
                fh: [],
                ee: [],
              },
              u = f.getUint32((c += 8), !0),
              q = 0;
            q < u;
            q++
          )
            m.fh.push(r(b, c + A * q + 4));
          u = f.getUint32((c += 4 + A * u), !0);
          for (f = 0; f < u; f++) m.ee.push(l(b, c + z * f + 4));
          d.offset = c + 4 + z * u;
          b = m;
        } else
          (b = e),
            (d = g),
            (z = c = z = void 0),
            (z = new DataView(b)),
            (c = d.offset),
            (z = {
              Ze: z.getUint32(c, !0),
              O4: z.getUint32((c += 4), !0),
              dN: z.getUint32((c += 4), !0),
              X: v(b, (c += 4)),
            }),
            (d.offset = c + 356),
            (b = z);
        b && h.push(b);
      }
      return h;
    },
    aY: function (k, h) {
      h || (h = 0);
      var b = new DataView(k).getUint32(h, !0),
        a = (h += 4),
        g,
        d;
      a || (a = 0);
      g = new DataView(k);
      d = new e.data.bi();
      d.He = g.getUint32(a, !0);
      d.aa = g.getUint32((a += 4), !0);
      d.l = g.J((a += 4), 64);
      d.m = g.qa((a += 64), !0);
      d.j = g.getUint32((a += 8), !0);
      d.X = g.qa((a += 4)).toString();
      d.da = g.getUint32((a += 8), !0);
      d.fe = g.getUint32((a += 4), !0);
      d.sd = g.getUint32((a += 4), !0);
      d.Ef = g.getUint32((a += 4), !0);
      d.ho = g.getUint32((a += 4), !0);
      d.N = g.getFloat64((a += 4), !0);
      d.Na = g.getFloat64((a += 8), !0);
      d.C = g.getFloat64((a += 8), !0);
      d.D = g.getFloat64((a += 8), !0);
      d.Qh = g.getUint32((a += 8), !0);
      d.PM = g.getFloat64((a += 4), !0);
      d.OM = g.getFloat64((a += 8), !0);
      d.Eb = g.J((a += 8), 64);
      d.Ya = g.qa((a += 64)).toString();
      d.Nj = g.qa(a + 8).toString();
      "0" === d.X && (d.X = "");
      "0" === d.Ya && (d.Ya = "");
      "0" === d.Nj && (d.Nj = "");
      var a = h + 248,
        f;
      a || (a = 0);
      g = new DataView(k);
      f = new e.data.ar();
      f.Ca = g.getUint32(a, !0);
      f.Od = g.qa((a += 4)).toString();
      f.X = g.qa((a += 8)).toString();
      f.m = g.qa((a += 8));
      f.ia = g.getFloat64((a += 8), !0);
      f.time = g.getUint32((a += 8), !0);
      f.vb = g.getFloat64((a += 4), !0);
      f.dc = g.getFloat64((a += 8), !0);
      f.Lm = g.getFloat64((a += 8), !0);
      f.Eb = g.J(a + 8, 64);
      "0" === f.Od && (f.Od = "");
      "0" === f.X && (f.X = "");
      return { zfa: b, jj: d, Op: f };
    },
    R2: function (e) {
      var h, b, a;
      if (!e) return null;
      h = new ArrayBuffer(248);
      b = 0;
      a = new DataView(h);
      a.setUint32(b, e.He || 0, !0);
      a.setUint32((b += 4), e.aa || 0, !0);
      a.Yb((b += 4), e.l);
      a.Kj((b += 64), e.m || 0, !0);
      a.setUint32((b += 8), e.j || 0, !0);
      a.Kj((b += 4), Long.ec(e.X || "0"));
      a.setUint32((b += 8), e.da || 0, !0);
      a.setUint32((b += 4), e.fe || 0, !0);
      a.setUint32((b += 4), e.sd || 0, !0);
      a.setUint32((b += 4), e.Ef || 0, !0);
      a.setUint32((b += 4), e.ho || 0, !0);
      a.setFloat64((b += 4), e.N || 0, !0);
      a.setFloat64((b += 8), e.Na || 0, !0);
      a.setFloat64((b += 8), e.C || 0, !0);
      a.setFloat64((b += 8), e.D || 0, !0);
      a.setUint32((b += 8), e.Qh || 0, !0);
      a.setFloat64((b += 4), e.PM || 0, !0);
      a.setFloat64((b += 8), e.OM || 0, !0);
      a.Yb((b += 8), (e.Eb || "").substr(0, 32));
      a.Kj((b += 64), Long.ec(e.Ya || "0"));
      a.Kj((b += 8), Long.ec(e.Nj || "0"));
      a.setUint32(b + 8, e.$b / 1e3, !0);
      return h;
    },
    jL: function (e) {
      var h, b;
      if (!e) return null;
      h = new ArrayBuffer(8);
      b = new DataView(h);
      b.setInt32(0, Math.floor((e.lp || 0) / 1e3), !0);
      b.setInt32(4, Math.floor((e.G4 || 0) / 1e3), !0);
      return h;
    },
    qa: function () {
      return 344;
    },
    J: function () {
      return 356;
    },
  };
})();
(function () {
  function v(b, a) {
    a || (a = 0);
    var g = new DataView(b),
      d = new e.data.Symbol();
    d.l = g.J(a, 64);
    d.yM = g.J((a += 64), 32);
    d.yf = g.J((a += 32), 128);
    d.rM = g.J((a += 128), 128);
    d.tt = g.J((a += 128), 64);
    d.vfa = g.J((a += 64), 64);
    d.YM = g.J((a += 64), 512);
    d.jE = g.J((a += 512), 128);
    d.pE = g.J((a += 128), 128);
    d.Nea = g.J((a += 128), 16);
    d.HE = g.getUint16((a += 16), !0);
    d.qM = g.getUint16((a += 2), !0);
    d.qr = g.J((a += 2), 8);
    d.dM = g.J((a += 8), 32);
    d.vt = g.J((a += 32), 32);
    d.sw = g.J((a += 32), 32);
    d.kk = g.getUint32((a += 32), !0);
    d.Fm = g.getUint32((a += 4), !0);
    d.Pea = g.getUint32((a += 4), !0);
    d.ufa = g.sp((a += 4));
    d.bM = g.sp((a += 4));
    d.j = g.getUint32((a += 4), !0);
    d.Fb = g.getFloat64((a += 4), !0);
    d.Xk = g.getFloat64((a += 8), !0);
    d.zf = g.getUint32((a += 8), !0);
    d.D4 = g.getUint32((a += 4), !0);
    d.Yk = g.getUint32((a += 4), !0);
    d.bo = g.getUint32((a += 4), !0);
    d.Gl = g.getUint32((a += 4), !0);
    d.cN = g.getInt32((a += 4), !0);
    d.yfa = g.getInt32((a += 4), !0);
    d.Qf = g.getFloat64((a += 4), !0);
    d.Ta = g.getFloat64((a += 8), !0);
    d.Bc = g.getFloat64((a += 8), !0);
    d.L4 = g.getUint32((a += 8), !0);
    d.Zd = g.getUint32((a += 4), !0);
    d.zh = g.getFloat64((a += 4), !0);
    d.fo = g.getFloat64((a += 8), !0);
    d.eo = g.getFloat64((a += 8), !0);
    d.M4 = g.getFloat64((a += 8), !0);
    d.bN = g.getUint32((a += 8), !0);
    d.Mi = g.getFloat64((a += 4), !0);
    d.Zk = g.getFloat64((a += 8), !0);
    d.wfa = g.getUint32((a += 8), !0);
    d.aN = 1e3 * g.getInt32((a += 4), !0);
    d.$b = 1e3 * g.getInt32((a += 4), !0);
    d.A = h.gJ(b, (a += 4));
    (g = a + 572) || (g = 0);
    var f, c, k;
    k = { EE: [] };
    g -= 4;
    for (f = 0; 7 > f; f++)
      for (k.EE[f] = [], c = 0; 16 > c; c++) k.EE[f][c] = r(b, (g += 4));
    k.VE = [];
    for (f = 0; 7 > f; f++)
      for (k.VE[f] = [], c = 0; 16 > c; c++) k.VE[f][c] = r(b, (g += 4));
    d.RM = k;
    d.Cache();
    return d;
  }
  function r(b, a) {
    a || (a = 0);
    var e = new DataView(b);
    return { open: e.getUint16(a, !0), close: e.getUint16(a + 2, !0) };
  }
  var l = window.J,
    e = l.V,
    k = l.ba,
    h = (e.Rg.O = {
      OC: function (b) {
        if (!b) return [];
        var a = [],
          e,
          d;
        d = new DataView(b).getUint32(0, !0);
        for (var f = 0; f < d; f++) (e = v(b, 3004 * f + 4)) && a.push(e);
        return a;
      },
      gJ: function (b, a) {
        a || (a = 0);
        var e = new DataView(b);
        return {
          tk: e.J(a, 256),
          cg: e.getInt32((a += 256), !0),
          gj: e.getInt32((a += 4), !0),
          Rh: e.getUint32((a += 4), !0),
          Ah: e.getInt32((a += 4), !0),
          NE: e.getInt32((a += 4), !0),
          $d: e.getUint32((a += 4), !0),
          oi: e.getUint32((a += 4), !0),
          Ni: e.getUint32((a += 4), !0),
          ad: e.getUint32((a += 4), !0),
          TE: e.getUint32((a += 4), !0),
          UE: e.getUint32((a += 4), !0),
          PE: e.getUint32((a += 4), !0),
          Vt: e.getUint32((a += 4), !0),
          RE: e.getUint32((a += 4), !0),
          QE: e.getUint32((a += 4), !0),
          yh: e.qa((a += 4), !0),
          OE: e.getUint32((a += 8), !0),
          SE: e.getUint32((a += 4), !0),
          ME: e.getUint32((a += 4), !0),
          mj: e.qa((a += 4)),
          lj: e.qa((a += 8)),
          sg: e.qa((a += 8)),
          Lr: e.qa((a += 8)),
          At: e.getUint32((a += 8), !0),
          bb: e.getFloat64((a += 4), !0),
          ub: e.getFloat64((a += 8), !0),
          me: [
            e.getFloat64((a += 8), !0),
            e.getFloat64((a += 8), !0),
            e.getFloat64((a += 8), !0),
            e.getFloat64((a += 8), !0),
            e.getFloat64((a += 8), !0),
            e.getFloat64((a += 8), !0),
            e.getFloat64((a += 8), !0),
            e.getFloat64((a += 8), !0),
          ],
          ne: [
            e.getFloat64((a += 8), !0),
            e.getFloat64((a += 8), !0),
            e.getFloat64((a += 8), !0),
            e.getFloat64((a += 8), !0),
            e.getFloat64((a += 8), !0),
            e.getFloat64((a += 8), !0),
            e.getFloat64((a += 8), !0),
            e.getFloat64((a += 8), !0),
          ],
          Ji: e.getFloat64((a += 8), !0),
          wp: e.getFloat64((a += 8), !0),
          hh: e.getFloat64((a += 8), !0),
          Ip: e.getUint32((a += 8), !0),
          Uw: e.getFloat64((a += 4), !0),
          Vw: e.getFloat64((a += 8), !0),
          tfa: e.getInt32((a += 8), !0),
          Nm: e.getUint32((a += 4), !0),
          Iw: e.getUint32(a + 4, !0),
        };
      },
      YX: function (b) {
        if (!b) return [];
        var a = [],
          e,
          d;
        d = Math.floor(b.byteLength / 3004);
        for (var f = 0; f < d; f++) (e = v(b, 3004 * f)) && a.push(e);
        return a;
      },
      XX: function (b) {
        if (!b) return [];
        var a = [],
          g,
          d,
          f;
        f = 2982 <= k.rb.Pm ? 526 : 524;
        d = new DataView(b).getUint32(0, !0);
        for (var c = 0; c < d; c++) {
          (g = c * f + 4) || (g = 0);
          var h = new DataView(b),
            l = new e.data.Symbol();
          l.l = h.J(g, 64);
          l.yf = h.J((g += 64), 128);
          l.j = h.getUint32((g += 128), !0);
          l.zf = h.getUint32((g += 4), !0);
          l.tk = h.J((g += 4), 256);
          l.$b = 1e3 * h.getUint32((g += 256), !0);
          l.tt = h.J((g += 4), 64);
          2982 <= k.rb.Pm && (l.HE = h.getUint16(g + 64, !0));
          (g = l) && a.push(g);
        }
        return a;
      },
      $X: function (b) {
        if (!b) return [];
        var a = [],
          e,
          d,
          f = 2796 < k.rb.Pm ? 50 : 48;
        d = Math.floor(b.byteLength / f);
        for (var c = 0; c < d; c++) {
          (e = c * f) || (e = 0);
          var h = new DataView(b),
            l = {
              zf: h.getUint32(e, !0),
              time: 1e3 * h.getInt32((e += 4), !0),
              rd: h.getUint32((e += 4), !0),
              vb: h.getFloat64((e += 4), !0),
              dc: h.getFloat64((e += 8), !0),
              Lm: h.getFloat64((e += 8), !0),
              C4: h.qa((e += 8), !0),
              F4: h.getUint32((e += 8), !0),
              Ze: 0,
            };
          l.hj = l.time + l.F4;
          2796 < k.rb.Pm && (l.Ze = h.getUint16(e + 4, !0));
          (e = l) && a.push(e);
        }
        return a;
      },
      ZX: function (b) {
        if (!b) return [];
        var a = [],
          e,
          d,
          f = 2796 < k.rb.Pm ? 274 : 272;
        d = Math.floor(b.byteLength / f);
        for (var c = 0; c < d; c++) {
          (e = c * f) || (e = 0);
          var h = new DataView(b),
            l = {
              zf: h.getUint32(e, !0),
              rd: h.qa((e += 4), !0),
              zM: 1e3 * h.getInt32((e += 8), !0),
              j: h.getUint32((e += 4), !0),
              Ye: h.getFloat64((e += 4), !0),
              xl: h.getFloat64((e += 8), !0),
              yl: h.getFloat64((e += 8), !0),
              Xe: h.getFloat64((e += 8), !0),
              zm: h.getFloat64((e += 8), !0),
              Am: h.getFloat64((e += 8), !0),
              Nf: h.getFloat64((e += 8), !0),
              tr: h.getFloat64((e += 8), !0),
              ur: h.getFloat64((e += 8), !0),
              kj: h.qa((e += 8), !0),
              Rp: h.qa((e += 8), !0),
              Sp: h.qa((e += 8), !0),
              Zw: h.getUint32((e += 8), !0),
              m: h.qa((e += 4)),
              ax: h.getUint32((e += 8), !0),
              $w: h.getUint32((e += 4), !0),
              Hr: h.getUint32((e += 4), !0),
              Lp: h.qa((e += 4)),
              Ir: h.getUint32((e += 8), !0),
              Mp: h.qa((e += 4)),
              Jc: h.getFloat64((e += 8), !0),
              Oc: h.getFloat64((e += 8), !0),
              Jt: h.getFloat64((e += 8), !0),
              Dr: h.getFloat64((e += 8), !0),
              St: h.getFloat64((e += 8), !0),
              Rt: h.getFloat64((e += 8), !0),
              cfa: h.qa((e += 8), !1),
              Kt: h.qa((e += 8), !1),
              Ot: h.qa((e += 8), !1),
              Lt: h.qa((e += 8), !1),
              Pt: h.qa((e += 8), !1),
              Nt: h.qa((e += 8), !1),
              Mt: h.qa((e += 8), !1),
              Qt: h.qa((e += 8), !1),
              Ze: 0,
            };
          2796 < k.rb.Pm && (l.Ze = h.getUint16(e + 8, !0));
          (e = l) && a.push(e);
        }
        return a;
      },
      UX: function (b) {
        if (!b) return [];
        var a = [],
          e,
          d;
        e = new DataView(b);
        d = e.getUint32(0, !0);
        for (var f = 0; f < d; f++)
          (b = {}), (b.vf = e.J(4 + 256 * f, 256)), (a[a.length] = b);
        return a;
      },
      cr: function (b) {
        if (!b) return null;
        var a = b.length,
          e,
          d,
          f;
        e = new ArrayBuffer(4 * a + 4);
        d = new DataView(e);
        f = 0;
        d.setUint32(f, a, !0);
        for (var a = 0, c = b.length; a < c; a++)
          d.setUint32((f += 4), b[a], !0);
        return e;
      },
      J: function () {
        return 572;
      },
    });
})();
E.V.Rg.xc = {
  Q2: function (v) {
    if (!v) return null;
    var r = new ArrayBuffer(74),
      l = 0,
      e = new DataView(r);
    e.Yb(l, (v.l || "").substr(0, 32));
    e.setUint16((l += 64), v.t4, !0);
    e.setInt32((l += 2), v.Ar / 1e3, !0);
    e.setInt32(l + 4, v.Hw ? v.Hw / 1e3 : 2147483647, !0);
    return r;
  },
  fJ: function (v) {
    if (!v) return [];
    for (var r = [], l, e = Math.floor(v.byteLength / 48), k = 0; k < e; k++) {
      (l = 48 * k) || (l = 0);
      var h = new DataView(v),
        b = [];
      b[0] = 1e3 * h.getInt32(l, !0);
      b[1] = h.getFloat64((l += 4), !0);
      b[2] = h.getFloat64((l += 8), !0);
      b[3] = h.getFloat64((l += 8), !0);
      b[4] = h.getFloat64((l += 8), !0);
      b[5] = h.getUint32((l += 8), !0);
      b[6] = h.getFloat64(l + 4, !0);
      (l = b) && r.push(l);
    }
    return r;
  },
  OC: function (v) {
    if (!v) return [];
    var r = [],
      l = v.byteLength / 4;
    v = new DataView(v);
    for (var e = 0; e < l; e++) r.push(v.getUint32(4 * e, !0));
    return r;
  },
};
(function () {
  function v(l, e) {
    var k, h;
    e || (e = 0);
    k = new DataView(l);
    h = new r.data.xn();
    h.JE = k.getUint32(e, !0);
    h.Ze = 1e3 * k.getUint32((e += 4), !0);
    h.l = k.J((e += 4), 64);
    h.Jp = 1e3 * k.getUint32((e += 64), !0);
    h.Kp = 1e3 * k.getUint32((e += 4), !0);
    h.Rm = k.getFloat64(e + 4, !0);
    return h;
  }
  var r = window.J.V;
  r.Rg.pm = {
    WX: function (l) {
      for (var e = [], k = { offset: 0 }, h = l.byteLength, b; k.offset < h; ) {
        b = l;
        var a = k,
          g = void 0,
          d = void 0,
          f = void 0;
        if (b) {
          g = [];
          f = new DataView(b).getUint32((a.offset += 4), !0);
          a.offset += 4;
          if (0 < f)
            for (var c = 0; c < f; c++) {
              var d = b,
                z = a,
                A = z.offset || 0,
                m = void 0,
                u = void 0,
                q = void 0,
                m = void 0,
                m = new DataView(d),
                u = new r.data.M_();
              u.Hp = m.getUint32(A, !0);
              u.Ze = m.getUint32((A += 4), !0);
              u.bb = m.getFloat64((A += 4), !0);
              u.ub = m.getFloat64((A += 8), !0);
              u.Cw = m.getUint32((A += 8), !0);
              u.qp = [];
              u.rp = [];
              for (
                var q = m.getUint32((A += 4), !0), A = A + -84, w = 0;
                w < q;
                w++
              )
                u.qp[u.qp.length] = v(d, (A += 88));
              m = m.getUint32((A += 88), !0);
              A += -84;
              for (q = 0; q < m; q++) u.rp[u.rp.length] = v(d, (A += 88));
              A += 88;
              z.offset = A;
              (d = u) && (g[g.length] = d);
            }
          b = g;
        } else b = [];
        b.length && (e = e.concat(b));
      }
      return e;
    },
  };
})();
(function () {
  function v(l, e) {
    var k = new DataView(l),
      h = e.offset,
      b = {
        l: k.getUint32(h, !0),
        time: 1e3 * k.getInt32((h += 4), !0),
        xfa: k.getInt32((h += 4), !0),
        Ze: k.getUint32((h += 4), !0),
        XL: k.getUint32((h += 4), !0),
        On: [],
      };
    if ((k = k.getUint16((h += 4), !0))) {
      for (var h = h + 2, a = 0; a < k; a++) b.On.push(r(l, h + 21 * a));
      e.offset = h + 21 * k;
    } else e.offset = h + 2;
    return b;
  }
  function r(l, e) {
    var k = new DataView(l);
    return {
      Ze: k.getUint32(e, !0),
      Rb: k.getUint8((e += 4), !0),
      ia: k.getUint32((e += 1), !0),
      m: k.qa((e += 4), !1),
      afa: k.getUint32(e + 8, !0),
    };
  }
  window.J.V.Rg.fd = {
    SX: function (l) {
      var e = [],
        k = { offset: 4 },
        h = new DataView(l).getUint32(0, !0);
      if (h) for (var b = 0; b < h; b++) e.push(v(l, k));
      return e;
    },
    cr: function (l) {
      if (!l) return null;
      var e = l.length,
        k = new ArrayBuffer(4 * e + 4),
        h = new DataView(k),
        b = 0;
      h.setUint32(b, e, !0);
      for (var e = 0, a = l.length; e < a; e++) h.setUint32((b += 4), l[e], !0);
      return k;
    },
  };
})();
(function () {
  function v(b, c, d) {
    a.iv = new Uint8Array(16);
    if (h.wf)
      (b = h.eh.decrypt(a, d, b)),
        (b.oncomplete = function (a) {
          c(a.target.result);
        }),
        (b.onerror = function (a) {
          a instanceof DOMException && c(null);
        });
    else
      h.eh
        .decrypt(a, d, b)
        .then(c)
        ["catch"](function (a) {
          a instanceof DOMException && c(null);
        });
  }
  function r(b, c, d) {
    a.iv = new Uint8Array(16);
    if (h.wf)
      (b = h.eh.encrypt(a, d, b)),
        (b.oncomplete = function (a) {
          c(a.target.result);
        }),
        (b.onerror = function (a) {
          a instanceof DOMException && c(null);
        });
    else
      h.eh
        .encrypt(a, d, b)
        .then(c)
        ["catch"](function (a) {
          a instanceof DOMException && c(null);
        });
  }
  function l(a) {
    d = a;
    f && (f(), (f = null));
  }
  function e(a) {
    g = a;
    c && (c(), (c = null));
  }
  var k = window.J,
    h = k.Qa,
    b = k.ba,
    a = { name: "AES-CBC" },
    g,
    d,
    f,
    c;
  b.vg = {
    methods: { bu: 1 },
    cU: function (a) {
      f = a;
      if (!h.eh) return a({ crypto: !1 }), this;
      this.rj(b.nm.m0.El(), l);
      return this;
    },
    dU: function (a, b) {
      c = b;
      if (!h.eh) return b({ crypto: !1 }), this;
      this.rj(a, e);
      return this;
    },
    rj: function (b, c) {
      if (!h.eh) return c(null), this;
      var d = b.Bf();
      if (h.wf)
        h.eh.importKey("raw", d, a, !0, ["encrypt", "decrypt"]).oncomplete =
          function (a) {
            c(a.target.result);
          };
      else
        h.eh
          .importKey("raw", d, a, !0, ["encrypt", "decrypt"])
          .then(c)
          ["catch"](function (a) {
            window.console.error(a);
          });
    },
    kh: function (a, b, c, f) {
      if (!a || !c) return this;
      b || c(a);
      if (!h.eh) return c(null), this;
      var e = f;
      !0 === f && (e = d);
      if (!1 === f || void 0 === f) e = g || d;
      b === this.methods.bu && r(a, c, e);
      return this;
    },
    Pl: function (a, b, c, f) {
      if (!a || !c) return this;
      b || c(a);
      if (!h.eh) return c(null), this;
      var e = f;
      !0 === f && (e = d);
      if (!1 === f || void 0 === f) e = g || d;
      b === this.methods.bu && v(a, c, e);
      return this;
    },
    bG: function (a, b) {
      h.wf ? b(h.eh.digest("SHA-256", a)) : h.eh.digest("SHA-256", a).then(b);
    },
    IH: function (a) {
      return window.md5(a).Bf();
    },
  };
})();
(function () {
  function v() {
    N.DB && N.DB.apply(N, arguments);
  }
  function r(a, b, c) {
    F &&
      !window.te &&
      (a = F[a]) &&
      a.forEach(function (a) {
        a.call(N, b, c);
      });
  }
  function l(a) {
    var b = new DataView(a),
      c = b.Bl(0, a.byteLength);
    a = ["__", String.fromCharCode(Math.ceil(25 * Math.random()) + 65)].join(
      ""
    );
    eval(["window.", a, " = ", c, ";"].join(""));
    c = String(window[a]);
    window[a] = null;
    delete window[a];
    a = new ArrayBuffer(c.length);
    b = new DataView(a);
    b.te(0, c);
    N.Bd(n.av, a);
  }
  function e(a) {
    a = new DataView(a).getUint32(0, !0);
    k(C, a) &&
      (a === C.lx &&
        (v(!0, !1, "connection to trade server established", !0),
        (L === C.OF || L === C.NF) && N.GB && N.GB()),
      (L = a),
      L === C.OF &&
        (v(!1, !1, "connection to trade server lost", !0, !0), p.je.Ql()),
      L === C.NF &&
        (v(!1, !1, "authentication to trade server failed", !0, !0),
        p.je.Ql()));
  }
  function k(a, b) {
    for (var c in a) if (a.hasOwnProperty(c) && a[c] === b) return !0;
    return !1;
  }
  function h(a) {
    for (var b in n) if (n[b] === a) return !0;
    return !1;
  }
  function b(a) {
    var b = (a && a.byteLength) || 0,
      c = new Uint8Array(8 + b);
    a && c.set(new Uint8Array(a), 8);
    c = c.buffer;
    a = new DataView(c);
    a.setUint32(0, b, !0);
    a.setUint32(4, 1, !0);
    O.CE++;
    O.send(a.buffer);
    Q.Ht || (Q.Ht = 0);
    Q.Ht += a.buffer.byteLength;
  }
  function a(a) {
    if (a) {
      var b = new DataView(a),
        c = b.getUint16(2, !0),
        d = b.getUint8(4, !0),
        f = a.slice(5);
      O.J = c;
      window.qa &&
        c !== n.pW &&
        c !== n.UH &&
        c !== n.NH &&
        c !== n.SH &&
        v(
          !0,
          !0,
          [
            "Receive command: ",
            c,
            " (size: ",
            a.byteLength,
            " bytes, header: ",
            b.getUint8(0, !0).toString(16),
            b.getUint8(1, !0).toString(16),
            ")",
          ].join("")
        );
      if (c === n.ev)
        f && f.byteLength && (N.Pm = new DataView(f).getUint16(0, !0));
      else if (c === n.av) l(f);
      else if (c === n.nW) e(f);
      else {
        c === n.KH && d === x.Za && p.Wg && p.Wg.dG(O.Rn);
        if (0 < d) {
          a = "";
          switch (d) {
            case 1:
              a = "websocket returned internal error.";
              break;
            case 2:
              a = "websocket returned error: trade server is not available.";
              break;
            case 3:
              a =
                "websocket returned error: authorization error on the trading server.";
          }
          v(!1, !0, a, !0);
        }
        r(c, d, f.byteLength ? f : null);
        h(c) ||
          ((O.CE = 0),
          setTimeout(function () {
            O.close();
          }, 1e3));
      }
    }
  }
  function g(b) {
    if (b.data instanceof ArrayBuffer) {
      var c = b.data;
      (c = c.slice(8)) && p.vg.Pl(c, 1, a);
    }
    Q.zt || (Q.zt = 0);
    Q.zt += b.data.byteLength;
  }
  function d() {
    v(!0, !0, "websocket connection is successfully established on", !0);
    O.removeEventListener("open", d);
    G && N.Bd(n.ev, G);
    if (window.Yb) {
      document.body.style.background = "green";
      try {
        window.parent &&
          window.parent.postMessage &&
          window.parent.postMessage(
            JSON.stringify({ status: "open" }),
            "http://localhost/"
          );
      } catch (a) {}
    }
  }
  function f(a) {
    if (window.Yb) {
      document.body.style.background = "red";
      try {
        window.parent &&
          window.parent.postMessage &&
          window.parent.postMessage(
            JSON.stringify({ status: "close" }),
            "http://localhost/"
          );
      } catch (b) {}
    } else
      p.je.Ql(),
        O.J !== n.oW &&
          O.J !== n.nn &&
          O.J !== n.KH &&
          O.J !== n.tB &&
          (v(
            a.Q4 ? !0 : !1,
            !0,
            a.Q4
              ? "websocket connection was closed on the server side"
              : "websocket connection was suddenly closed",
            !0
          ),
          v(!1, !1, "connection failed!", !0),
          window.te ||
            (M
              ? (p.Wg && p.Wg.Mf(),
                D ? (D *= 2) : (D = 1e3),
                (D = Math.min(D, 6e4)),
                N.EB &&
                  setTimeout(function () {
                    N.EB(O);
                  }, D))
              : N.FB &&
                setTimeout(function () {
                  N.FB(O);
                }, 500)));
  }
  function c() {
    if (window.Yb) {
      document.body.style.background = "red";
      try {
        window.parent &&
          window.parent.postMessage &&
          window.parent.postMessage(
            JSON.stringify({ status: "error" }),
            "http://localhost/"
          );
      } catch (a) {}
    } else v(!1, !0, "websocket connection reported an error!", !0), p.je.Ql();
  }
  function z() {
    if (u.Pd) {
      var a,
        b = window.localStorage.debug;
      b && b.indexOf && -1 !== b.indexOf("{") && (a = window.JSON.parse(b));
      a || (a = {});
      a.socket || (a.socket = {});
      a.socket["in"] = Q.zt;
      a.socket.out = Q.Ht;
      window.localStorage.debug = window.JSON.stringify(a);
    }
  }
  function A() {
    N.Bd(n.nn);
  }
  var m = window.J,
    u = m.Qa,
    q = m.va,
    w = m.oc,
    p = m.ba,
    n = {
      ev: 0,
      KH: 1,
      oW: 2,
      U$: 3,
      Y$: 4,
      X$: 5,
      baa: 6,
      aaa: 7,
      pW: 8,
      $$: 9,
      eaa: 10,
      Z$: 11,
      daa: 12,
      caa: 13,
      V$: 14,
      nW: 15,
      dv: 16,
      W$: 21,
      LH: 26,
      VH: 0,
      nn: 2,
      MH: 3,
      uB: 4,
      ts: 5,
      vB: 6,
      gv: 18,
      hv: 9,
      uW: 7,
      UH: 8,
      XH: 10,
      QH: 11,
      WH: 12,
      TH: 13,
      sW: 14,
      OH: 15,
      SH: 17,
      wW: 19,
      RH: 20,
      rB: 21,
      vW: 22,
      NH: 23,
      us: 24,
      tW: 25,
      sB: 27,
      fv: 30,
      tB: 28,
      PH: 29,
      gaa: 32,
      faa: 33,
      av: 50,
      PING: 51,
    },
    x = { Za: 0, F8: 1, TR: 2, SR: 3, G8: 4, UR: 5, VR: 6, WR: 7, XR: 8 },
    C = { lx: 0, OF: 1, NF: 2 },
    O,
    I,
    G,
    F,
    y,
    M = !0,
    D = 0,
    L = C.lx,
    B,
    Q = {},
    N = (p.rb = {
      GG: 8,
      mb: n,
      Je: x,
      J: C,
      Pm: null,
      GB: null,
      EB: null,
      FB: null,
      DB: null,
      ha: function (a) {
        I = a;
        window.qa && (clearInterval(B), (B = setInterval(z, 1e4)));
        w.i(q.window, "beforeunload", A);
        return N;
      },
      Bd: function (a, c) {
        if (O && 1 === O.readyState && k(n, a)) {
          var d = (c && c.byteLength) || 0,
            f = new Uint8Array(4 + d);
          c && f.set(new Uint8Array(c), 4);
          f = f.buffer;
          f = new DataView(f);
          f.setUint8(0, Math.floor(255 * Math.random()), !0);
          f.setUint8(1, Math.floor(255 * Math.random()), !0);
          f.setUint16(2, a, !0);
          p.vg.kh(f.buffer, 1, b, a === n.ev || a === n.PING);
          window.qa &&
            v(!0, !0, ["Send command: ", a, " (", d, " bytes)"].join(""));
          return this;
        }
      },
      D2: function (a) {
        a && ((G = new ArrayBuffer(64)), new DataView(G).te(0, a));
        return this;
      },
      pY: function (a) {
        y = a;
        return this;
      },
      hJ: function () {
        O &&
          (2 > O.readyState && O.close(),
          O.removeEventListener("close", f),
          O.removeEventListener("message", g),
          O.removeEventListener("error", c));
        O = new WebSocket([!1 === y ? "ws://" : "wss://", I, "/"].join(""));
        O.binaryType = "arraybuffer";
        O.addEventListener("open", d);
        O.addEventListener("close", f);
        O.addEventListener("message", g);
        O.addEventListener("error", c);
        O.CE = 0;
        O.Rn = I.split(".")[0];
        Q.zt = 0;
        Q.Ht = 0;
        return O;
      },
      eK: function () {
        M = !1;
        return this;
      },
      Lf: function () {
        M = !0;
        D = 0;
        return this;
      },
      WG: function () {
        return O && 1 === O.readyState;
      },
      ey: function () {
        return L === C.lx;
      },
      Ke: function (a, b, c) {
        F || (F = {});
        F[a] || (F[a] = []);
        b.Se = (1e5 * Math.random()).toString();
        c = parseInt(c, 10);
        isNaN(c) ? F[a].push(b) : F[a].splice(c, 0, b);
      },
      vn: function (a, b) {
        var c = b.Se;
        if (!c || !F || !F[a]) return !1;
        var d = F[a],
          f = d.Hm(function (a) {
            return a.Se === c;
          });
        return -1 < f ? (d.splice(f, 1), !0) : !1;
      },
    });
})();
(function () {
  function v(f) {
    if (!this.fb) return this;
    r(h, f);
    r(b, f);
    r(a, f);
    r(g, f);
    r(d, f);
    try {
      f && f.play();
    } catch (c) {}
    return this;
  }
  function r(a, b) {
    if (a !== b)
      try {
        a && ((a.currentTime = 0), a.pause());
      } catch (d) {}
  }
  function l(a) {
    var b = k.sb("audio");
    b.src = a;
    b.NM = "auto";
    b.type = "audio/mpeg";
    return b;
  }
  var e = window.J,
    k = e.va,
    h,
    b,
    a,
    g,
    d;
  e.ba.je = {
    fb: !1,
    ha: function () {
      if (window.Yb) return this;
      try {
        (h = l("/trade/res/sounds/connect.mp3")),
          (b = l("/trade/res/sounds/disconnect.mp3")),
          (a = l("/trade/res/sounds/ok.mp3")),
          (g = l("/trade/res/sounds/alert.mp3")),
          (d = l("/trade/res/sounds/timeout.mp3"));
      } catch (f) {}
      this.fb = !0;
      return this;
    },
    Vr: function () {
      return v.call(this, h);
    },
    Ql: function () {
      return v.call(this, b);
    },
    Za: function () {
      return v.call(this, a);
    },
    lJ: function () {
      return v.call(this, g);
    },
    Error: function () {
      return v.call(this, d);
    },
  };
})();
(function () {
  function v(a) {
    m = 0;
    A = a;
    u = {
      time: new Date().getTime(),
      gwt: q.reduce(function (a, b) {
        a["gwt" + b] = {};
        return a;
      }, {}),
    };
    l();
    r();
  }
  function r() {
    m = 0;
    q.forEach(function (c) {
      var d = new WebSocket(["wss://gwt", c, ".mql5.com/"].join(""));
      d.addEventListener("open", b);
      d.addEventListener("message", a);
      d.addEventListener("error", g);
      d.binaryType = "arraybuffer";
      d.index = c;
    });
  }
  function l() {
    c.Pd && (window.localStorage.ping = JSON.stringify(u));
  }
  function e(a) {
    if (u) {
      var b = u.gwt;
      if (b) return b[a] || null;
    }
    return null;
  }
  function k() {
    var a = u.gwt,
      b,
      c;
    if (a) {
      b = !0;
      for (c in a)
        a.hasOwnProperty(c) && a[c] && "ok" === a[c].status && (b = !1);
      return b;
    }
    return !1;
  }
  function h() {
    var a, b, c, d;
    if (w.restore && (a = w.restore))
      for (c = 0, d = a.length; c < d; c++)
        (b = a[c]) && b.call(this, "restore", void 0);
  }
  function b() {
    var a = this;
    a.removeEventListener("open", b);
    var c = new DataView(new Uint8Array(4).buffer);
    c.setUint8(0, Math.floor(255 * Math.random()), !0);
    c.setUint8(1, Math.floor(255 * Math.random()), !0);
    c.setUint16(2, 51, !0);
    z.vg.kh(
      c.buffer,
      1,
      function (b) {
        var c = (b && b.byteLength) || 0,
          f = new Uint8Array(8 + c);
        f.set(new Uint8Array(b), 8);
        f = f.buffer;
        b = new DataView(f);
        b.setUint32(0, c, !0);
        b.setUint32(4, 1, !0);
        a.timeout = setTimeout(function () {
          var b = e("gwt" + a.index);
          b && ((b.status = "timeout"), l());
          d(a);
        }, 1e4);
        a.time = new Date().getTime();
        a.send(b.buffer);
      },
      !0
    );
  }
  function a(a) {
    var b = new Date().getTime() - this.time,
      c = e("gwt" + this.index);
    a = a.data;
    var f = k();
    c.status = "error";
    l();
    (a = a.slice(8)) &&
      z.vg.Pl(
        a,
        1,
        function (a) {
          var d = new DataView(a);
          a = d.getUint16(2, !0);
          d = d.getUint8(4, !0);
          51 === a &&
            0 === d &&
            c &&
            ((c.time = b), (c.status = "ok"), l(), f && h());
        },
        !0
      );
    d(this);
  }
  function g() {
    var a = e("gwt" + this.index);
    a && ((a.status = "error"), l());
    d(this);
  }
  function d(b) {
    clearTimeout(b.timeout);
    b.removeEventListener("message", a);
    b.removeEventListener("error", g);
    1 === b.readyState && b.close();
    m++;
    m === q.length && A && A();
  }
  var f = window.J,
    c = f.Qa,
    z = f.ba,
    A,
    m,
    u,
    q,
    w,
    p = 0;
  z.Wg = {
    ha: function (a) {
      q = a || [];
      w = {};
      u = {};
      c.Pd &&
        (a = window.localStorage.ping) &&
        0 === a.indexOf("{") &&
        (u = window.JSON.parse(a));
      return this;
    },
    Mf: function (a) {
      var b;
      if (!(b = !q || !q.length)) {
        b = new Date().getTime();
        var c = 0;
        u && u.time && (c = u.time);
        b = !(864e5 >= b - c ? k() && 3e5 <= b - c : 1);
      }
      if (b) return this;
      v(a);
      return this;
    },
    eF: function () {
      if (k()) {
        var a = u && u.gwt,
          b;
        if (a)
          return (
            (a = Object.keys(a)), p >= a.length && (p = 0), (b = a[p]), p++, b
          );
      }
      if (u && (a = u.gwt)) {
        var c,
          d = Number.MAX_VALUE,
          f = "";
        for (b in a)
          a.hasOwnProperty(b) &&
            a[b] &&
            "ok" === a[b].status &&
            ((c = a[b].time), c < d && ((f = b), (d = c)));
        return f;
      }
      return null;
    },
    ux: function (a) {
      if ((a = e(a))) (a.status = "disabled"), l();
      return this;
    },
    dG: function (a) {
      var b = k();
      if ((a = e(a))) (a.status = "ok"), (a.time = a.time || 0), l();
      b && (v(), h());
      return this;
    },
    QR: function () {
      return k();
    },
    sN: function (a, b, c) {
      var d;
      if (!b || !a) return this;
      b.lt = b.lt || (1e5 * Math.random()).toString();
      a = a.trim();
      (d = w[a]) || (d = w[a] = []);
      for (var f in d) if (d.hasOwnProperty(f) && d[f].lt === b.lt) return this;
      c = parseInt(c, 10);
      isNaN(c) ? d.push(b) : d.splice(c, 0, b);
      return this;
    },
    hY: function (a, b) {
      var c = b.lt;
      if (!c || !w[a]) return this;
      for (var d = w[a], f, e = 0, g = d.length; e < g; e++)
        (f = d[e]) && f.lt === c && d.splice(e, 1);
      0 === d.length && ((w[a] = null), delete w[a]);
      return this;
    },
  };
})();
(function () {
  var v = window.J.ba;
  v.Tl = {
    ha: function () {
      if (!v.bd.pH() || window.fcoreobj) return this;
      var r = (window.fcoreobj = {});
      r.act = r.act || [];
      (function () {
        var l, e;
        l = document.createElement("script");
        l.async = !0;
        l.defer = !0;
        l.type = "text/javascript";
        l.src = "https://content.mql5.com/core.js";
        (e = document.getElementsByTagName("script")[0]) &&
          e.parentNode &&
          e.parentNode.insertBefore(l, e);
      })();
      r.act.push(function () {
        r.lead("kibyjlbfgrgskpfxoibtktkdkjiwohnyow");
      });
      return this;
    },
    PushEvent: function (r) {
      if (!v.bd.pH()) return this;
      window.fcoreobj || this.ha();
      -1 !== !r.indexOf(" ") && (r = r.split(" ").join("+"));
      window.fcoreobj.act.push(function () {
        window.fcoreobj.lead("kibyjlbfgrgskpfxoibtktkdkjiwohnyow", r);
      });
      return this;
    },
  };
})();
(function () {
  function v(l) {
    return r.find(function (e) {
      return e[2] === l;
    });
  }
  var r = [
    ["Afghanistan", "93", "AF", "AFN"],
    ["Aland Islands", "358", "AX", "EUR"],
    ["Albania", "355", "AL", "ALL"],
    ["Algeria", "213", "DZ", "DZD"],
    ["Andorra", "376", "AD", "EUR"],
    ["Angola", "244", "AO", "AOA"],
    ["Anguilla", "1-264", "AI", "XCD"],
    ["Antarctica", "62", "AQ", "USD"],
    ["Antigua and Barbuda", "1-268", "AG", "XCD"],
    ["Argentina", "54", "AR", "ARS"],
    ["Armenia", "374", "AM", "AMD"],
    ["Aruba", "297", "AW", "AWG"],
    ["Australia", "61", "AU", "AUD"],
    ["Austria", "43", "AT", "EUR"],
    ["Azerbaijan", "994", "AZ", "AZN"],
    ["Bahamas", "1-242", "BS", "BSD"],
    ["Bahrain", "973", "BH", "BHD"],
    ["Bangladesh", "880", "BD", "BDT"],
    ["Barbados", "1-246", "BB", "BBD"],
    ["Belarus", "375", "BY", "BYR"],
    ["Belgium", "32", "BE", "EUR"],
    ["Belize", "501", "BZ", "BZD"],
    ["Benin", "229", "BJ", "XOF"],
    ["Bermuda", "1-441", "BM", "BMD"],
    ["Bhutan", "975", "BT", "BTN"],
    ["Bolivia", "591", "BO", "BOB"],
    ["Bosnia and Herzegovina", "387", "BA", "BAM"],
    ["Botswana", "267", "BW", "BWP"],
    ["Bouvet Island", "47", "BV", "NOK"],
    ["Brazil", "55", "BR", "BRL"],
    ["British Indian Ocean Territory", "1-284", "IO", "USD"],
    ["Brunei Darussalam", "673", "BN", "BND"],
    ["Bulgaria", "359", "BG", "BGN"],
    ["Burkina Faso", "226", "BF", "XOF"],
    ["Burundi", "257", "BI", "BIF"],
    ["Cambodia", "855", "KH", "KHR"],
    ["Cameroon", "237", "CM", "XAF"],
    ["Canada", "1", "CA", "CAD"],
    ["Cape Verde", "238", "CV", "CVE"],
    ["Cayman Islands", "1-345", "KY", "KYD"],
    ["Central African Republic", "236", "CF", "XAF"],
    ["Chad", "235", "TD", "XAF"],
    ["Chile", "56", "CL", "CLP"],
    ["China", "86", "CN", "CNY"],
    ["Christmas Island", "61", "CX", "AUD"],
    ["Cocos Islands", "61", "CC", "AUD"],
    ["Colombia", "57", "CO", "COP"],
    ["Comoros", "269", "KM", "KMF"],
    ["Congo", "242", "CG", "XAF"],
    ["Cook Islands", "682", "CK", "NZD"],
    ["Costa Rica", "506", "CK", "CRC"],
    ["Cote D'ivoire", "225", "CI", "XOF"],
    ["Croatia", "385", "HR", "HRK"],
    ["Cuba", "53", "CU", "CUP"],
    ["Cyprus", "357", "CY", "EUR"],
    ["Czech Republic", "420", "CZ", "CZK"],
    ["Denmark", "45", "DK", "DKK"],
    ["Djibouti", "253", "DJ", "DJF"],
    ["Dominica", "1-767", "DM", "XCD"],
    ["Dominican Republic", "1-809", "DO", "DOP"],
    ["Ecuador", "593", "EC", "USD"],
    ["Egypt", "20", "EG", "EGP"],
    ["El Salvador", "503", "SV", "USD"],
    ["Equatorial Guinea", "240", "GQ", "XAF"],
    ["Eritrea", "291", "ER", "ERN"],
    ["Estonia", "372", "EE", "EUR"],
    ["Ethiopia", "251", "ET", "ETB"],
    ["Falkland Islands", "500", "FK", "FKP"],
    ["Faroe Islands", "298", "FO", "DKK"],
    ["Fiji", "679", "FJ", "FJD"],
    ["Finland", "358", "FI", "EUR"],
    ["France", "33", "FR", "EUR"],
    ["Gabon", "241", "GA", "XAF"],
    ["Gambia", "220", "GM", "GMD"],
    ["Georgia", "995", "GE", "GEL"],
    ["Germany", "49", "DE", "EUR"],
    ["Ghana", "233", "GH", "GHS"],
    ["Gibraltar", "350", "GI", "GIP"],
    ["Greece", "30", "GR", "EUR"],
    ["Greenland", "299", "GL", "DKK"],
    ["Grenada", "1-473", "GD", "XCD"],
    ["Guadeloupe", "33", "GP", "EUR"],
    ["Guam", "1-671", "GU", "USD"],
    ["Guatemala", "502", "GT", "GTQ"],
    ["Guernsey", "44-1481", "GG", "GGP"],
    ["Guinea", "224", "GN", "GNF"],
    ["Guinea-Bissau", "245", "GW", "GWP"],
    ["Guyana", "592", "GY", "GYD"],
    ["Haiti", "509", "HT", "HTG"],
    ["Heard Island and Mcdonald Islands", "672", "HM", "AUD"],
    ["Honduras", "504", "HN", "HNL"],
    ["Hong Kong S.A.R.", "852", "HK", "HKD"],
    ["Hungary", "36", "HU", "HUF"],
    ["Iceland", "354", "IS", "ISK"],
    ["India", "91", "IN", "INR"],
    ["Indonesia", "62", "ID", "IDR"],
    ["Iran", "98", "IR", "IRR"],
    ["Iraq", "964", "IQ", "IQD"],
    ["Ireland", "353", "IE", "EUR"],
    ["Islamic Republic of Pakistan", "92", "PK", "PKR"],
    ["Isle Of Man", "44", "IM", "IMP"],
    ["Israel", "972", "IL", "ILS"],
    ["Italy", "39", "IT", "EUR"],
    ["Jamaica", "1-876", "JM", "JMD"],
    ["Japan", "81", "JP", "JPY"],
    ["Jersey", "44-1534", "JE", "JEP"],
    ["Jordan", "962", "JO", "JOD"],
    ["Kazakhstan", "7", "KZ", "KZT"],
    ["Kenya", "254", "KE", "KES"],
    ["Kiribati", "686", "KI", "AUD"],
    ["Korea", "82", "KR", "KRW"],
    ["Kuwait", "965", "KW", "KWD"],
    ["Kyrgyzstan", "996", "KG", "KGS"],
    ["Laos", "856", "LA", "LAK"],
    ["Latvia", "371", "LV", "EUR"],
    ["Lebanon", "961", "LB", "LBP"],
    ["Lesotho", "266", "LS", "LSL"],
    ["Liberia", "231", "LR", "LRD"],
    ["Libya", "218", "LY", "LYD"],
    ["Liechtenstein", "423", "LI", "CHF"],
    ["Lithuania", "370", "LT", "EUR"],
    ["Luxembourg", "352", "LU", "EUR"],
    ["Macao S.A.R.", "853", "MO", "MOP"],
    ["Macedonia", "389", "MK", "MKD"],
    ["Madagascar", "261", "MG", "MGA"],
    ["Malawi", "265", "MW", "MWK"],
    ["Malaysia", "60", "MY", "MYR"],
    ["Maldives", "960", "MV", "MVR"],
    ["Mali", "223", "ML", "XOF"],
    ["Malta", "356", "MT", "EUR"],
    ["Marshall Islands", "692", "MH", "USD"],
    ["Martinique", "596", "MQ", "EUR"],
    ["Mauritania", "222", "MR", "MRO"],
    ["Mauritius", "230", "MU", "MUR"],
    ["Mayotte", "262", "YT", "EUR"],
    ["Mexico", "52", "MX", "MXN"],
    ["Micronesia", "691", "FM", "USD"],
    ["Moldova", "373", "MD", "MDL"],
    ["Monaco", "377", "MC", "EUR"],
    ["Mongolia", "976", "MN", "MNT"],
    ["Montenegro", "382", "ME", "EUR"],
    ["Montserrat", "1-664", "MS", "XCD"],
    ["Morocco", "212", "MA", "MAD"],
    ["Mozambique", "258", "MZ", "MZN"],
    ["Myanmar", "95", "MM", "MMK"],
    ["Namibia", "264", "NA", "NAD"],
    ["Nauru", "674", "NR", "AUD"],
    ["Nepal", "977", "NP", "NPR"],
    ["Netherlands", "31", "NL", "EUR"],
    ["New Caledonia", "687", "NC", "XPF"],
    ["New Zealand", "64", "NZ", "NZD"],
    ["Nicaragua", "505", "NI", "NIO"],
    ["Niger", "227", "NE", "XOF"],
    ["Nigeria", "234", "NG", "NGN"],
    ["Niue", "683", "NU", "NZD"],
    ["Norfolk Island", "672", "NF", "AUD"],
    ["Northern Mariana Islands", "1-670", "MP", "USD"],
    ["Norway", "47", "NO", "NOK"],
    ["Oman", "968", "OM", "OMR"],
    ["Pakistan", "92", "PK", "PKR"],
    ["Palau", "680", "PW", "USD"],
    ["Palestinian Authority", "970", "PS", "ILS"],
    ["Panama", "507", "PA", "USD"],
    ["Papua New Guinea", "675", "PG", "PGK"],
    ["Paraguay", "595", "PY", "PYG"],
    ["Peru", "51", "PE", "PEN"],
    ["Philippines", "63", "PH", "PHP"],
    ["Pitcairn", "64", "PN", "NZD"],
    ["Poland", "48", "PL", "PLN"],
    ["Portugal", "351", "PT", "EUR"],
    ["Puerto Rico", "1-787", "PR", "USD"],
    ["Qatar", "974", "QA", "QAR"],
    ["Romania", "40", "RO", "RON"],
    ["Russia", "7", "RU", "RUR"],
    ["Rwanda", "250", "RW", "RWF"],
    ["Saint Barthelemy", "590", "BL", "EUR"],
    ["Saint Helena", "290", "SH", "SHP"],
    ["Saint Kitts and Nevis", "1-869", "KN", "XCD"],
    ["Saint Lucia", "1-758", "LC", "XCD"],
    ["Saint Martin", "590", "MF", "EUR"],
    ["Saint Pierre and Miquelon", "508", "PM", "EUR"],
    ["Saint Vincent and The Grenadines", "1-784", "VC", "XCD"],
    ["Samoa", "685", "WS", "WST"],
    ["San Marino", "378", "SM", "EUR"],
    ["Sao Tome and Principe", "239", "ST", "STD"],
    ["Saudi Arabia", "966", "SA", "SAR"],
    ["Senegal", "221", "SN", "XOF"],
    ["Serbia", "381", "RS", "RSD"],
    ["Seychelles", "248", "SC", "SCR"],
    ["Sierra Leone", "232", "SL", "SLL"],
    ["Singapore", "65", "SG", "SGD"],
    ["Slovakia", "421", "SK", "EUR"],
    ["Slovenia", "386", "SI", "EUR"],
    ["Solomon Islands", "677", "SB", "SBD"],
    ["Somalia", "252", "SO", "SOS"],
    ["South Africa", "27", "ZA", "ZAR"],
    ["South Georgia", "500", "GS", "GBP"],
    ["Spain", "34", "ES", "EUR"],
    ["Sri Lanka", "94", "LK", "LKR"],
    ["Sudan", "249", "SD", "SDG"],
    ["Suriname", "597", "SR", "SRD"],
    ["Svalbard and Jan Mayen", "47", "SJ", "NOK"],
    ["Swaziland", "268", "SZ", "SZL"],
    ["Sweden", "46", "SE", "SEK"],
    ["Switzerland", "41", "CH", "CHF"],
    ["Syrian Arab Republic", "963", "SY", "SYP"],
    ["Taiwan", "886", "TW", "TWD"],
    ["Tajikistan", "992", "TJ", "TJS"],
    ["Tanzania", "255", "TZ", "TZS"],
    ["Thailand", "66", "TH", "THB"],
    ["Timor-Leste", "670", "TL", "USD"],
    ["Togo", "228", "TG", "XOF"],
    ["Tokelau", "690", "TK", "NZD"],
    ["Tonga", "676", "TO", "TOP"],
    ["Trinidad and Tobago", "1-868", "TT", "TTD"],
    ["Tunisia", "216", "TN", "TND"],
    ["Turkey", "90", "TR", "TRY"],
    ["Turkmenistan", "993", "TM", "TMT"],
    ["Turks and Caicos Islands", "1-649", "TC", "USD"],
    ["Tuvalu", "688", "TV", "AUD"],
    ["Uganda", "256", "UG", "UGX"],
    ["Ukraine", "380", "UA", "UAH"],
    ["United Arab Emirates", "971", "AE", "AED"],
    ["U.A.E.", "971", "AE", "AED"],
    ["United Kingdom", "44", "GB", "GBP"],
    ["United States", "1", "US", "USD"],
    ["Uruguay", "598", "UY", "UYU"],
    ["Uzbekistan", "998", "UZ", "UZS"],
    ["Vanuatu", "678", "VU", "VUV"],
    ["Vatican City State", "379", "VA", "EUR"],
    ["Venezuela", "58", "VE", "VEF"],
    ["Vietnam", "84", "VN", "VND"],
    ["Virgin Islands", "1-340", "VG", "USD"],
    ["Wallis and Futuna", "681", "WF", "XPF"],
    ["Western Sahara", "212", "EH", "MAD"],
    ["Yemen", "967", "YE", "YER"],
    ["Zambia", "260", "ZM", "ZMW"],
    ["Zimbabwe", "263", "ZW", "ZWD"],
  ];
  window.J.ba.zu = {
    nS: function (l) {
      return (l = v(l)) ? l[0] : "";
    },
    mS: function (l) {
      return (l = v(l)) ? l[3] : "";
    },
    oS: function (l) {
      return (l = v(l)) ? "+" + l[1] : "";
    },
    pS: function () {
      var l = {};
      return r
        .reduce(function (e, k) {
          var h = k[1];
          l[h] || ((l[h] = 1), e.push("+" + h));
          return e;
        }, [])
        .sort(function (e, k) {
          return e - k;
        });
    },
  };
})();
(function () {
  function v(a) {
    var b = a.stat || {};
    return {
      line: a.qb || a.src.line,
      login: a.ga,
      server_name: a.Pf,
      server_type: 5,
      account_name: a.v,
      account_type: a.yr,
      account_flags: a.KM,
      last_time: a.pp || 0,
      stat_equity: b.equity || 0,
      stat_profit: b.profit || 0,
      stat_load: b.load || 0,
      stat_currency: b.currency || "",
    };
  }
  function r(e) {
    var d;
    e.origin === b &&
      (e = JSON.parse(e.data)) &&
      (d = e.command) &&
      (d = a[d]) &&
      d(e.data);
  }
  var l = window.J,
    e = l.V,
    k = e.la,
    h = l.ba.bd,
    b = "https://www.mql5.com",
    a = {
      add_encrypted_line: function (a) {
        e.la.$c.rN(a.line, function (a, b) {
          e.view.Bb.Vj({ ga: a, nf: b }).na().Um();
        });
      },
      add_line: function (a) {
        e.la.$c.tN(a.login, a.server, a.type, function (a, f) {
          h.yv("add_line_complete", null, b);
          e.view.Bb.ua && e.view.Bb.Vj({ ga: a, nf: f }).na();
        });
      },
      remove_line: function (a) {
        e.la.$c.iJ(a.login, a.server);
      },
    };
  l.ba.xo = {
    ha: function (a) {
      a && (b = "https://www.mql5.dev");
    },
    XU: function () {
      window.addEventListener("message", r);
    },
    ZJ: function (a) {
      h.yv("records", a.map(v), b);
    },
    C_: function (a) {
      h.yv("record", v(a), b);
    },
    $J: function (a, d) {
      h.yv(a, d, b);
    },
    D_: function () {
      this.C_({
        qb: k.$c.hq("line"),
        ga: k.H.ga,
        Pf: k.H.oe,
        v: k.H.ul,
        yr: k.H.cj,
        KM: k.$c.hq("author_flags"),
      });
    },
  };
})();
(function () {
  var v = E.Qa,
    r = (E.V.Im.aS = {});
  r.Oo = function () {
    var l = {};
    if (v.Pd) {
      var e = window.localStorage.fixes;
      if (
        e &&
        e.indexOf &&
        0 === e.indexOf("{") &&
        (e = window.JSON.parse(e)) &&
        ((l = e), l[111])
      )
        return r;
    }
    if (v.Pd) {
      var k = window.localStorage.records5;
      if (
        k &&
        k.indexOf &&
        0 === k.indexOf("[") &&
        (e = window.JSON.parse(k)) &&
        e.length
      ) {
        var h = [];
        (k = window.localStorage.records) &&
          "[" == k.charAt(0) &&
          (h = window.JSON.parse(k));
        for (var b = 0, a = h.length; b < a; b++)
          (k = h[b]) && void 0 === k.server_type && (k.server_type = 4);
        b = 0;
        for (a = e.length; b < a; b++)
          if ((k = e[b])) (k.server_type = 5), h.push(k);
        window.localStorage.records = window.JSON.stringify(h);
        window.localStorage.removeItem("records5");
      }
    }
    l[111] = 1;
    v.Pd && (window.localStorage.fixes = window.JSON.stringify(l));
    return r;
  };
})();
(function () {
  var v = E.Qa,
    r = (E.V.Im.bS = {});
  r.Oo = function () {
    var l = {};
    if (v.Pd) {
      var e = window.localStorage.fixes;
      if (
        e &&
        e.indexOf &&
        0 === e.indexOf("{") &&
        (e = window.JSON.parse(e)) &&
        ((l = e), l[117])
      )
        return r;
    }
    if (
      v.Pd &&
      (e = window.localStorage.market_watch5) &&
      e.indexOf &&
      0 === e.indexOf("{") &&
      (e = window.JSON.parse(e))
    ) {
      for (var k in e)
        e[k] instanceof Array && (e[k] = { symbols: e[k], tab: "symbols" });
      window.localStorage.market_watch5 = window.JSON.stringify(e);
    }
    v.Pd &&
      (k = window.localStorage.settings5) &&
      k.indexOf &&
      0 === k.indexOf("{") &&
      (k = window.JSON.parse(k)) &&
      (void 0 === k.market_watch_config && (k.market_watch_config = 1),
      (window.localStorage.settings5 = window.JSON.stringify(k)));
    l[117] = 1;
    v.Pd && (window.localStorage.fixes = window.JSON.stringify(l));
    return r;
  };
})();
(function () {
  var v = E.Qa,
    r = (E.V.Im.cS = {});
  r.Oo = function () {
    var l = {};
    if (v.Pd) {
      var e = window.localStorage.fixes;
      if (
        e &&
        e.indexOf &&
        0 === e.indexOf("{") &&
        (e = window.JSON.parse(e)) &&
        ((l = e), l[209])
      )
        return r;
    }
    if (
      v.Pd &&
      (e = window.localStorage.settings5) &&
      e.indexOf &&
      0 === e.indexOf("{") &&
      (e = window.JSON.parse(e))
    ) {
      var k = e.trade_lots_last;
      k && "number" === typeof k
        ? (e.trade_lots_last = k.toString())
        : ((e.trade_lots_last = null), delete e.trade_lots_last);
      e.trade_lots_default &&
        ((e.trade_lots_default = null), delete e.trade_lots_default);
      window.localStorage.settings5 = window.JSON.stringify(e);
    }
    l[209] = 1;
    v.Pd && (window.localStorage.fixes = window.JSON.stringify(l));
    return r;
  };
})();
(function () {
  function v() {
    if (m && u)
      for (var a = 0, b = z.length; a < b; a++) {
        var d = z[a];
        d && d.line && c.Pl(d.line.Bf(), 1, l.bind(this, a), u);
      }
  }
  function r() {
    var a = window.name,
      b;
    if ((b = a)) {
      a: {
        b = 0;
        for (var c = a.length; b < c; b++)
          if (isNaN(parseInt(a.charAt(b), 10))) {
            b = !1;
            break a;
          }
        b = !0;
      }
      b = !b;
    }
    return b ? a.substr(0, 12) : null;
  }
  function l(a, b) {
    if (b && (b = String.fromCharCode.apply(null, new Uint8Array(b)))) {
      c.kh(b.Df().Bf(), 1, e.bind(this, a), m);
      return;
    }
    e(a);
  }
  function e(a, b) {
    b && (b = b.Df()) && (z[a].line = b);
    a === z.length - 1 &&
      ((localStorage.records = JSON.stringify(z)),
      (fixes = JSON.parse(localStorage.fixes || "{}")),
      (fixes[236] = 1),
      (localStorage.fixes = JSON.stringify(fixes)),
      A && A(),
      (A = u = m = z = null));
  }
  function k(a) {
    c.kh([d.Rj, f.nm.fD.El()].join("").Bf(), 1, h, a);
    c.kh([r(), f.nm.fD.El()].join("").Bf(), 1, b, a);
  }
  function h(b) {
    c.rj(b.Df(), a);
  }
  function b(a) {
    c.rj(a.Df(), g);
  }
  function a(a) {
    m = a;
    v();
  }
  function g(a) {
    u = a;
    v();
  }
  var d = E.Qa,
    f = E.ba,
    c = f.vg,
    z,
    A,
    m,
    u;
  E.V.Im.dS = {
    Oo: function (a) {
      A = a;
      if ((a = r()))
        if ((a = d.Pd))
          (fixes = JSON.parse(localStorage.fixes || "{}")),
            (a = !(fixes && fixes[236]));
      if (a && ((z = JSON.parse(localStorage.records || "[]")), z.length)) {
        c.rj(f.nm.qJ.El(), k);
        return;
      }
      A && A();
      A = u = m = z = null;
    },
  };
})();
(function () {
  function v() {
    var a = A.rb,
      b,
      c,
      d;
    d = {
      version: 268,
      mf: O && O.mf,
      Li: O && O.Li,
      ZL: A.bd.kx(),
      bx: p.fc.bx,
      cx: p.fc.cx,
      l4: A.bd.so("utm_affiliate_site") || "",
      m4: A.bd.JS() || "",
      url: A.bd.Uh(),
    };
    c = a.hJ();
    c.addEventListener(
      "open",
      (b = function () {
        a.Bd(a.mb.tB, n.Bb.kL(d));
        p.Wi && p.Wi.na();
        c.removeEventListener("open", b);
        b = null;
      })
    );
  }
  function r() {
    q.H.Oa();
    q.O.Oa();
    q.P.Oa();
    q.ff.Oa();
    q.fd && q.fd.Oa();
    q.xc && q.xc.Oa();
    w.ra.M("change");
    p.rf && p.rf.Dd();
    p.O && p.O.Dd();
    p.nj && p.nj.Dd();
    p.B && p.B.Dd();
  }
  function l(a) {
    var b = A.rb.Je;
    p.Wi && p.Wi.oa();
    p.Bb.Ym(!1);
    if (a === b.VR)
      (a =
        "authorization on " +
        w.H.oe +
        " failed (Secret key for one-time password is required)"),
        p.U.Wb(
          p.U.Ab.ERROR,
          p.U.types.Ak,
          a,
          !0,
          !0,
          a +
            ', <a target="_blank" style="font-size: 11px;" href="http://www.metatrader5.com/en/terminal/help/start_advanced/otp">see more</a>'
        ),
        p.Bb.Ym(!1).oa();
    else if (a === b.UR) {
      w.$c.om("otp", 1).as();
      if ((a = w.$c.Cu(w.H.ga, w.H.oe))) a.Li = 1;
      p.Bb.Vj().na(!0);
      p.U.Wb(
        p.U.Ab.Za,
        p.U.types.Ak,
        "authorization on " + w.H.oe + " failed (Invalid one-time password)",
        !0
      );
    } else if (a === b.Za) {
      w.$c.om("otp", Number(!(!O || !O.Li))).as();
      if ((a = w.$c.Cu(w.H.ga, w.H.oe))) a.Li = Number(!(!O || !O.Li));
      p.U.Wb(
        p.U.Ab.Za,
        p.U.types.Ak,
        ["'", w.H.ga, "': authorized on ", w.H.oe].join("")
      );
      a = w.H.ga;
      b = w.H.oe;
      q.H.Oa();
      q.O.Oa();
      q.P.Oa();
      q.ff.Oa();
      q.fd && q.fd.Oa();
      q.xc && q.xc.Oa();
      q.H.ha().sj();
      A.rb.Lf();
      A.bd.J2();
      if (A.bd.Uh()) {
        var c = A.bd.wx(),
          d = w.$c.hq("last_frames") || "";
        -1 === d.indexOf(c) && (d.length && (d += ","), (d += c));
        w.$c.om("last_frames", d);
      }
      w.$c.om("last_time", new Date().getTime());
      w.$c.om("last_connect", new Date().getTime());
      w.$c.qD(p.Bb.eY() ? O.mf || "" : "");
      w.H.ga = a;
      w.H.oe = b;
      A.vg.bG(O.mf.Bf(), function (a) {
        w.H.LM = a;
      });
      A.je.Vr();
      p.Bb.Ym(!1).oa();
      p.rf && p.rf.Dd();
      p.B && p.B.Dd();
      p.Navigator && p.Navigator.Gb("symbols");
    } else
      p.U.Wb(p.U.Ab.ERROR, p.U.types.Ak, "authorization failed", !0, !0),
        q.Bb.Ho()
          ? A.xo.$J("authError", { login: w.H.ga, server: w.H.oe })
          : ((a !== b.TR && a !== b.SR) || e(b.Za),
            ("open_demo" === q.Bb.$n || "create_demo" === q.Bb.$n) &&
              O &&
              O.D3 &&
              (a = w.$c.Cu(w.H.ga, w.H.oe)) &&
              5 === a.version &&
              a.yr === w.qN.XE &&
              a.ga &&
              a.Pf &&
              a.mf &&
              a.k4 &&
              a.vf &&
              !a.v4 &&
              ((a.v4 = !0),
              p.fc.bF(5, w.H.oe, a.v, a.Fw, a.vf, a.Wd, a.Dl, a.vw, a.ga)));
  }
  function e(a) {
    var b = A.rb;
    a === b.Je.Za && (b.eK(), m.Km || p.Bb.Lf().na());
  }
  function k(a) {
    p.Wi && p.Wi.oa();
    var c = this.ga;
    if ((a = x.json(a))) {
      p.U.Wb(
        p.U.Ab.Za,
        p.U.types.ae,
        [
          "'",
          c,
          "': token for authorization received (server: ",
          a.signal_server,
          ")",
        ].join("")
      );
      I = a;
      if (!I.enabled) {
        p.U.Wb(
          p.U.Ab.ERROR,
          p.U.types.Ak,
          [
            "'",
            c,
            "': Web Terminal is not supported by this MetaTrader Server. Please contact your broker to update server.",
          ].join(""),
          !1,
          !0
        );
        p.Bb.Ym(!1);
        A.je.Error();
        return;
      }
      O && ((O.ga === this.ga && O.nf === this.nf) || r());
      O = { ga: this.ga, nf: this.nf, mf: this.mf, Li: this.Li, D3: this.lr };
      A.rb.ha(I.signal_server);
      A.vg.dU(I.key, b);
      C = 3e3;
    }
    A.Wg.Mf();
  }
  function h() {
    p.Wi && p.Wi.oa();
    var a = this.ga,
      b = this.nf,
      c = this.mf;
    I = null;
    p.U.Wb(
      p.U.Ab.ERROR,
      p.U.types.ae,
      ["'", a, "': request for authorization token failed"].join(""),
      !1,
      !0
    );
    p.Bb.Ym(!1);
    q.Bb.Ho()
      ? (A.xo.$J("connectionError", { login: a, server: b }), p.Bb.Oa().na())
      : (3e3 === C && A.je.Error(),
        A.Wg.Mf(),
        setTimeout(function () {
          q.Bb.Vr(a, c, b);
          C += 3e3;
          15e3 < C && (C = 15e3);
        }, C));
  }
  function b() {
    A.rb.D2(I.token).pY(I.ssl);
    w.H.ga = I.login;
    w.H.oe = I.trade_server;
    w.$c.fH(w.H.ga, w.H.oe, a);
  }
  function a() {
    v();
  }
  function g() {
    var a = w.H.ga,
      b = w.H.oe;
    q.H.Oa();
    q.O.Oa();
    q.P.Oa();
    q.ff.Oa();
    q.xc && q.xc.Oa();
    q.fd && q.fd.Oa();
    q.H.ha().sj();
    w.H.ga = a;
    w.H.oe = b;
    A.je.Vr();
  }
  function d(a) {
    m.Km && (p.Eq && p.Eq.oa(), u.q4.Window.T9());
    if (a.CE) {
      var b = G[a.Rn];
      if (b) {
        var c = new Date().getTime();
        3e5 > c - b.time
          ? ((b.time = c), b.count++, 2 < b.count && A.Wg.ux(a.Rn))
          : ((b.time = c), (b.count = 1));
      } else
        G[a.Rn] = {
          time: new Date().getTime(),
          count: 1,
        };
    } else A.Wg.ux(a.Rn);
    p.Bb.Ym(!1).Vj().Um();
  }
  function f() {
    p.Bb.Ym(!1).Vj().na();
  }
  function c(a, b, c, d, f) {
    p.U.Wb(
      a ? p.U.Ab.Za : p.U.Ab.ERROR,
      b ? p.U.types.ae : p.U.types.Ak,
      c,
      d,
      f
    );
  }
  var z = window.J,
    A = z.ba,
    m = z.Qa,
    u = z.controls,
    z = z.V,
    q = z.control,
    w = z.la,
    p = z.view,
    n = z.Rg,
    x = A.du,
    C = 3e3,
    O = null,
    I = null,
    G = null;
  q.Bb = {
    fb: !1,
    ha: function () {
      if (this.fb) return this;
      var a = A.rb;
      a.Ke(a.mb.tB, l);
      a.Ke(a.mb.nn, e);
      a.GB = g;
      a.EB = d;
      a.FB = f;
      a.DB = c;
      G = {};
      this.fb = !0;
      return this;
    },
    Vr: function (a, b, c, d, f) {
      I = null;
      var e = {};
      e.login = a;
      e.trade_server = c;
      e.version = 5;
      b = { ga: a, nf: c, mf: b, Li: d, lr: !0 === f, Ew: k, onerror: h };
      if ((c = A.bd.so("gwt"))) (c = parseInt(c, 10)), 0 < c && (e.gwt = c);
      if ((c = A.Wg.eF())) (e.gwt = c.substr(3)), (b.Lea = c);
      x.MM("https://trade.mql5.com/trade/json", e, !1, b);
      p.Bb.Ym(!0);
      p.U.Wb(
        p.U.Ab.Za,
        p.U.types.ae,
        ["'", a, "': request for authorization token"].join("")
      );
      p.Wi && p.Wi.na();
      return this;
    },
    hJ: function () {
      v();
      return this;
    },
    Ql: function (a) {
      var b = p.U;
      b.Wb(
        b.Ab.Za,
        b.types.Ak,
        [
          "'",
          w.H.ga,
          "': disconnected from ",
          w.H.oe,
          a ? " and delete account information" : "",
        ].join("")
      );
      !0 === a ? w.$c.WP() : w.$c.qD("");
      r();
      p.Bb.Oa(a);
      a = A.rb;
      a.Bd(a.mb.nn);
      return this;
    },
    iu: function (a, b) {
      if (!a) return this;
      var c = A.rb;
      c.Bd(c.mb.us, n.Bb.P2(a, b));
      return this;
    },
    Ho: function () {
      return "only_login" === q.Bb.$n;
    },
  };
})();
(function () {
  function v(d, c) {
    if (d === e.rb.Je.Za) {
      var k = a.H.oe,
        l = a.H.ga;
      a.H.zN(g.P.cJ(c));
      e.Tl.PushEvent("MetaTrader+5+Web+Login+" + (a.H.rH() ? "Real" : "Demo"));
      a.$c.hq(a.H.ga) || e.Tl.PushEvent("MetaTrader+5+Web+Account+Add");
      a.So.Oa();
      a.So.L2();
      a.H.oe || (a.H.oe = k);
      a.$c.om("author_type", a.H.cj);
      var m = a.$c.hq("author_flags") || 0,
        m = m.Mh(1, a.H.Zu()),
        m = m.Mh(2, a.H.Kg()),
        m = m.Mh(4, a.H.yN()),
        m = m.Mh(8, a.H.xN());
      a.$c.om("author_flags", m);
      a.$c.om("author_name", a.H.ul || "");
      a.$c.as();
      window.qa &&
        h.U.Wb(
          h.U.Ab.Za,
          h.U.types.ae,
          [
            "'",
            a.H.ga,
            "': account information was successfully loaded (login: ",
            a.H.ga,
            ", server name: ",
            a.H.oe,
            ", currency: ",
            a.H.hf,
            ")",
          ].join("")
        );
      b.Bb.Ho()
        ? e.xo.D_()
        : a.H.rU() && !a.H.Zu()
        ? (h.mY.na(l, k), h.Wi.oa())
        : ((k = ""),
          a.H.Zu()
            ? (k = "trading has been disabled - investor mode")
            : a.H.tH() ||
              a.H.qH() ||
              (k =
                "trading has been enabled - " +
                (b.Wc.Kg(a.H) ? "hedging mode" : "netting mode")),
          k && h.U.Wb(h.U.Ab.Za, h.U.types.Ak, k, !0),
          a.qv.ha(a.H.oe),
          a.Ib.ha(),
          h.History && h.History.ha().na(),
          h.P && h.P.ha().na().W(),
          h.fd && h.fd.ha(),
          b.fd && b.fd.ha(),
          b.O.ha().ZU(),
          h.xc && h.xc.Dd(),
          h.B && h.B.Dd());
    }
  }
  function r(d, c) {
    if (d === e.rb.Je.Za) {
      var l = g.P.cJ(c);
      a.H.Kv(l);
      a.So.Kv(l.Jr) &&
        (a.pm.vk(),
        k.control.ci.Qq(),
        b.Wc.ti(a.H),
        b.Wc.ui(a.H),
        h.P && h.P.W(),
        h.O && h.O.LD().Dd(),
        h.nj && h.nj.Dd(),
        h.xc && h.xc.Dd());
      window.qa &&
        h.U.Wb(
          h.U.Ab.Za,
          h.U.types.ae,
          [
            "'",
            a.H.ga,
            "': account information was successfully updated (groups count: ",
            (l.Jr && l.Jr.length) || 0,
            ")",
          ].join("")
        );
    }
  }
  var l = window.J,
    e = l.ba,
    k = l.V,
    h = k.view,
    b = k.control,
    a = k.la,
    g = k.Rg;
  k.control.j5 = { EH: 0, bv: 1, qs: 2 };
  k.control.cu = { au: 0, Nr: 1, Or: 2 };
  var d = 0;
  k.control.H = {
    fb: !1,
    ha: function () {
      if (this.fb) return this;
      var a = e.rb;
      a.Ke(a.mb.MH, v);
      a.Ke(a.mb.sW, r);
      this.fb = !0;
      return this;
    },
    sj: function () {
      h.Wi && h.Wi.na();
      var a = e.rb;
      a.Bd(a.mb.MH);
      return this;
    },
    Oa: function () {
      if (!this.fb) return this;
      d = 0;
      a.H.Oa();
      h.P.W();
      h.Go && (h.Go.reject = !1);
      return this;
    },
    cB: function () {
      return !!(d & 64);
    },
    kn: function () {
      return !!(d & 16);
    },
    mJ: function (b) {
      d = b ? d | 64 : d & -65;
      if (!a.H.bB()) {
        var c = h.U;
        c.Wb(
          c.Ab.Za,
          c.types.Dv,
          [
            "'",
            a.H.ga,
            "': ",
            b
              ? "high risk investment warning has been accepted"
              : "high risk investment warning has been rejected",
          ].join("")
        );
      }
      return this;
    },
    HB: function (b) {
      d = b ? d | 16 : d & -17;
      var c = h.U;
      c.Wb(
        c.Ab.Za,
        c.types.Dv,
        [
          "'",
          a.H.ga,
          "': ",
          b
            ? "one click trading has been enabled"
            : "one click trading has been disabled",
        ].join("")
      );
      return this;
    },
  };
})();
(function () {
  function v(a) {
    var b = {};
    if (a < A.Kd) {
      var c = new Date();
      c.setUTCMilliseconds(0);
      c.setUTCSeconds(0);
      c.setUTCMinutes(0);
      c.setUTCHours(0);
      a === A.eB && c.setUTCDate(c.getUTCDate() - 29);
      a === A.vH && c.setUTCDate(c.getUTCDate() - 89);
      b.lp = c.getTime();
    } else b.lp = 0;
    b.G4 = 0;
    return b;
  }
  function r(e, g) {
    c.P.fE = !0;
    d.Wi && d.Wi.oa();
    var h = b.rb;
    h.vn(h.mb.uB, r);
    if (e === b.rb.Je.Za) {
      f.P.Oa();
      (h = z.P.VX(g)) &&
        h.map(function (a) {
          f.P.$k(a);
        });
      var l = z.P.eJ(g, 4 + 344 * h.length);
      l &&
        l.map(function (a) {
          f.P.Sh(a);
        });
      f.P.yg();
      c.ci.Qq();
      c.Wc.ti(f.H);
      c.Wc.ui(f.H);
      d.P && d.P.W();
      window.qa &&
        d.U.Wb(
          d.U.Ab.Za,
          d.U.types.ae,
          [
            "'",
            f.H.ga,
            "': the list of open positions and orders successfully loaded (",
            l.length,
            " orders, ",
            h.length,
            " positions)",
          ].join("")
        );
    }
    c.xc && (c.xc.ha(), a.Km || c.xc.Mf());
    d.Navigator && d.Navigator.Gb && d.Navigator.Gb("symbols");
    !c.H.cB() && f.H.nY() && (f.H.bB() ? (c.H.mJ(!0), k()) : d.AT.na(k));
  }
  function l(a, e) {
    var g = b.rb;
    g.vn(g.mb.ts, l);
    a === g.Je.Za &&
      ((f.History.fh = z.P.TX(e)),
      (f.History.Yd = z.P.eJ(e, 4 + 356 * f.History.fh.length)),
      f.History.yg(),
      f.History.eu(d.History.sk || ""),
      d.History && d.History.W(),
      window.qa &&
        d.U.Wb(
          d.U.Ab.Za,
          d.U.types.ae,
          [
            "'",
            f.H.ga,
            "': the list of history successfully loaded (",
            f.History.Yd.length,
            " orders, ",
            f.History.fh.length,
            " deals)",
          ].join("")
        ));
    c.P.fE || g.Bd(g.mb.uB);
  }
  function e(a) {
    a === b.rb.Je.Za && (c.Wc.ti(f.H), c.Wc.ui(f.H));
  }
  function k() {
    d.P && d.P.W();
    d.O && d.O.Dd();
    d.nj && d.nj.Dd();
    d.xc && d.xc.Dd();
    d.rf && d.rf.Dd();
    d.fd && d.fd.Dd && d.fd.Dd();
  }
  var h = window.J,
    b = h.ba,
    a = h.Qa,
    g = h.V,
    d = g.view,
    f = g.la,
    c = g.control,
    z = g.Rg,
    A = (g.control.BT = { eB: 0, vH: 1, Kd: 2 });
  g.control.P = {
    fE: !1,
    fb: !1,
    ha: function () {
      if (this.fb) return this;
      c.I2.ha();
      c.$f.ha();
      c.Wc.ti(f.H);
      c.Wc.ui(f.H);
      var a = b.rb;
      a.Ke(a.mb.OH, e);
      this.fb = !0;
      return this;
    },
    sj: function () {
      if (!this.fb) return this;
      var a = b.rb;
      a.Ke(a.mb.uB, r);
      a.Ke(a.mb.ts, l);
      a.Bd(a.mb.ts, z.P.jL(v(A.eB)));
      return this;
    },
    hB: function (a) {
      if (!this.fb) return this;
      var c = b.rb;
      c.Ke(c.mb.ts, l);
      c.Bd(c.mb.ts, z.P.jL(v(a)));
      return this;
    },
    Oa: function () {
      if (!this.fb) return this;
      f.P.Oa();
      f.History.Oa();
      d.P.W();
      d.History.sk = "";
      d.History.W();
      c.P.fE = !1;
      return this;
    },
    Il: function (a) {
      return this.ih()
        ? (a = f.O.Ka(a)) && a.A && a.A.Rh !== g.data.Yi.$q && !a.Td()
          ? !0
          : !1
        : !1;
    },
    ih: function () {
      var a = f.H;
      return !a.Zu() && !a.tH() && !a.qH() && (!(a.Nm & f.$E.JB) || c.H.cB());
    },
    G2: function () {
      return c.Wc.Kg(f.H);
    },
    $K: function (a) {
      return a.gl(g.data.dd.lI) || 1613 >= f.H.IE;
    },
  };
})();
(function () {
  function v(a) {
    var f = b.data.aq;
    switch (a) {
      case f.Zp:
        return "buy";
      case f.$p:
        return "sell";
    }
    return "unknown";
  }
  function r(a) {
    var f = b.data.eb,
      c = "unknown";
    a == f.Ja && (c = "buy");
    a == f.Va && (c = "sell");
    a == f.Lc && (c = "buy limit");
    a == f.Zc && (c = "sell limit");
    a == f.we && (c = "buy stop");
    a == f.Ee && (c = "sell stop");
    a == f.hd && (c = "buy stop limit");
    a == f.jd && (c = "sell stop limit");
    return c;
  }
  function l(b, f, c, e) {
    void 0 === e && (e = 0);
    if (f) {
      var g = [];
      g.push(a.F.Z(b, c, e));
      g.push(" (", a.F.Z(f, c), ")");
      return g.join("");
    }
    return b ? a.F.Z(b, c) : "market";
  }
  function e(b) {
    return b.wc && 0 === b.Ff.compare(b.wc) ? a.F.Ea(b.Ff) : a.F.eS(b.Ff, b.wc);
  }
  function k(d, f, c, g) {
    var h = b.data.Fc,
      m = [];
    switch (d.aa) {
      case h.ck:
        m.push("prices for");
        m.push(" ", d.l);
        m.push(" ", a.F.Ea(d.m));
        break;
      case h.Yg:
        m.push("request");
        m.push(" ", r(d.da));
        m.push(" ", a.F.Ea(d.m));
        m.push(" ", d.l);
        m.push(" at ", a.F.Z(d.N, d.j));
        d.C && m.push(" sl: ", a.F.Z(d.C, d.j));
        d.D && m.push(" tp: ", a.F.Z(d.D, d.j));
        break;
      case h.zg:
        m.push("instant");
        m.push(" ", r(d.da));
        m.push(" ", a.F.Ea(d.m));
        m.push(" ", d.l);
        m.push(" at ", a.F.Z(d.N, d.j));
        d.C && m.push(" sl: ", a.F.Z(d.C, d.j));
        d.D && m.push(" tp: ", a.F.Z(d.D, d.j));
        break;
      case h.Ih:
        m.push("market");
        m.push(" ", r(d.da));
        m.push(" ", a.F.Ea(d.m));
        m.push(" ", d.l);
        d.C && m.push(" sl: ", a.F.Z(d.C, d.j));
        d.D && m.push(" tp: ", a.F.Z(d.D, d.j));
        break;
      case h.qh:
        m.push("exchange");
        m.push(" ", r(d.da));
        m.push(" ", a.F.Ea(d.m));
        m.push(" ", d.l);
        m.push(" at ", d.N ? a.F.Z(d.N, d.j) : "market");
        d.C && m.push(" sl: ", a.F.Z(d.C, d.j));
        d.D && m.push(" tp: ", a.F.Z(d.D, d.j));
        break;
      case h.Pg:
        m.push(" ", r(d.da));
        m.push(" ", a.F.Ea(d.m));
        m.push(" ", d.l);
        m.push(" at ", l(d.N, d.Na, d.j));
        d.C && m.push(" sl: ", a.F.Z(d.C, d.j));
        d.D && m.push(" tp: ", a.F.Z(d.D, d.j));
        break;
      case h.yj:
        m.push("modify #", f.ka);
        m.push(" ", v(f.aa));
        m.push(" ", a.F.Ea(f.m));
        m.push(" ", f.l);
        m.push(" sl: ", a.F.Z(f.Mb, d.j));
        m.push(", tp: ", a.F.Z(f.Qb, d.j));
        m.push(" -> sl: ", a.F.Z(d.C, d.j));
        m.push(", tp: ", a.F.Z(d.D, d.j));
        break;
      case h.Di:
        m.push("modify order #", c.Xf());
        m.push(" ", r(c.yb));
        m.push(" ", e(c));
        m.push(" ", c.l);
        m.push(" at ", l(c.N, c.Na, d.j));
        m.push(" sl: ", a.F.Z(c.C, d.j));
        m.push(", tp: ", a.F.Z(c.D, d.j));
        m.push(" -> ", l(d.N, d.Na, d.j));
        m.push(", sl: ", a.F.Z(d.C, d.j));
        m.push(", tp: ", a.F.Z(d.D, d.j));
        break;
      case h.dk:
        m.push("cancel order #", c.Xf());
        m.push(" ", r(c.yb));
        m.push(" ", e(c));
        m.push(" ", c.l);
        m.push(" at ", l(c.N, c.Na, d.j));
        c.C && m.push(" sl: ", a.F.Z(c.C, d.j));
        c.D && m.push(" tp: ", a.F.Z(c.D, d.j));
        break;
      case h.Zi:
        g
          ? (m.push("close position #", f.ka),
            m.push(" ", v(f.aa)),
            m.push(" ", a.F.Ea(f.m)),
            m.push(" ", f.l),
            m.push(" by position #", g.ka),
            m.push(" ", v(g.aa)),
            m.push(" ", a.F.Ea(g.m)),
            m.push(" ", g.l))
          : (m.push("close position #", f.ka),
            m.push(" ", v(f.aa)),
            m.push(" ", a.F.Ea(f.m)),
            m.push(" ", f.l),
            m.push(" by position #", d.Nj));
        break;
      case h.sK:
        m.push("transfer");
        m.push(d.N.gc(2));
        m.push(" to ");
        m.push(d.toSource);
        m.push(" ", d.Eb);
        break;
      case h.hK:
        m.push("activate order #", c.Xf());
        m.push(" ", r(c.yb));
        m.push(" ", e(c));
        m.push(" ", c.l);
        m.push(" at ", l(c.N, c.Na, d.j));
        c.C && m.push(" sl: ", a.F.Z(c.C, d.j));
        c.D && m.push(" tp: ", a.F.Z(c.D, d.j));
        break;
      case h.wD:
        m.push("activate #", f.ka);
        m.push(" stop loss,");
        m.push(" ", r(d.da));
        m.push(" ", e(d));
        m.push(" ", d.l);
        m.push(" at ", l(d.N, 0, d.j));
        break;
      case h.xD:
        m.push("activate #", f.ka);
        m.push(" take profit,");
        m.push(" ", r(d.da));
        m.push(" ", e(d));
        m.push(" ", d.l);
        m.push(" at ", l(d.N, 0, d.j));
        break;
      case h.iK:
        m.push("activate stop-limit order #", c.Xf());
        m.push(" ", r(c.yb));
        m.push(" ", e(c));
        m.push(" ", d.l);
        m.push(" at ", l(c.N, c.Na, d.j));
        c.C && m.push(" sl: ", a.F.Z(c.C, d.j));
        c.D && m.push(" tp: ", a.F.Z(c.D, d.j));
        break;
      case h.qK:
        m.push("activate stop-out order #", c.Xf());
        m.push(" ", r(c.yb));
        m.push(" ", e(c));
        m.push(" ", d.l);
        m.push(" at ", l(c.N, c.Na, d.j));
        c.C && m.push(" sl: ", a.F.Z(c.C, d.j));
        c.D && m.push(" tp: ", a.F.Z(c.D, d.j));
        break;
      case h.rK:
        m.push("activate stop-out position #", f.ka);
        m.push(" ", v(f.aa));
        m.push(" ", a.F.Ea(f.m));
        m.push(" ", f.l);
        m.push(" at ", l(f.N, 0, d.j));
        f.Mb && m.push(" sl: ", a.F.Z(f.Mb, d.j));
        f.Qb && m.push(" tp: ", a.F.Z(f.Qb, d.j));
        break;
      case h.AD:
        m.push("expire order #", c.Xf());
        m.push(" ", r(c.yb));
        m.push(" ", e(c));
        m.push(" ", c.l);
        m.push(" at ", l(c.N, c.Na, d.j));
        c.C && m.push(" sl: ", a.F.Z(c.C, d.j));
        c.D && m.push(" tp: ", a.F.Z(c.D, d.j));
        break;
      case h.zD:
        m.push("for ", d.ga);
        m.push(" ", r(d.da));
        m.push(" ", a.F.Ea(d.m));
        m.push(" ", d.l);
        m.push(" at ", l(f.N, 0, d.j));
        d.C && m.push(" sl: ", a.F.Z(d.C, d.j));
        d.D && m.push(" tp: ", a.F.Z(d.D, d.j));
        break;
      case h.Uq:
        m.push("for ", d.ga);
        m.push(" ", r(d.da));
        m.push(" ", a.F.Ea(d.m));
        m.push(" ", d.l);
        m.push(" at ", l(f.N, d.Na, d.j));
        d.C && m.push(" sl: ", a.F.Z(d.C, d.j));
        d.D && m.push(" tp: ", a.F.Z(d.D, d.j));
        break;
      case h.nK:
        m.push("for ", d.ga);
        m.push(" modify #", f.ka);
        m.push(" ", v(f.aa));
        m.push(" ", a.F.Ea(f.m));
        m.push(" ", f.l);
        m.push(" ", l(f.Jc, d.j, 3));
        m.push(" sl: ", a.F.Z(f.Mb, d.j));
        m.push(" tp: ", a.F.Z(f.Qb, d.j));
        m.push(" -> ", l(d.N, d.j, 3));
        m.push(" sl: ", a.F.Z(d.C, d.j));
        m.push(" tp: ", a.F.Z(d.D, d.j));
        break;
      case h.kK:
        m.push("for ", d.ga);
        m.push(" modify order #", c.Xf());
        m.push(" ", r(c.yb));
        m.push(" ", e(c));
        m.push(" ", d.l);
        m.push(" at ", l(c.N, c.Na, d.j));
        m.push(" sl: ", a.F.Z(c.C, d.j));
        m.push(" tp: ", a.F.Z(c.D, d.j));
        m.push(" -> ", l(d.N, d.Na, d.j));
        m.push(" sl: ", a.F.Z(d.C, d.j));
        m.push(" tp: ", a.F.Z(d.D, d.j));
        break;
      case h.lK:
        m.push("for ", d.ga);
        m.push(" cancel order #", c.Xf());
        m.push(" ", r(c.yb));
        m.push(" ", e(c));
        m.push(" ", c.l);
        m.push(" at ", l(c.N, c.Na, d.j));
        c.C && m.push(" sl: ", a.F.Z(c.C, d.j));
        c.D && m.push(" tp: ", a.F.Z(c.D, d.j));
        break;
      case h.jK:
        m.push("for ", d.ga);
        m.push(" activate order #", c.Xf());
        m.push(" ", r(c.yb));
        m.push(" ", e(c));
        m.push(" ", d.l);
        m.push(" as ", a.F.Ea(d.m));
        m.push(" at ", a.F.Z(c.N, d.j));
        break;
      case h.mK:
        m.push("for ", d.ga);
        m.push(" activate stop-limit order #", c.Xf());
        m.push(" ", r(c.yb));
        m.push(" ", e(c));
        m.push(" ", d.l);
        m.push(" at ", a.F.Z(c.N, d.j));
        break;
      case h.Vs:
        g
          ? (m.push(" for ", d.ga),
            m.push(" close position #", f.ka),
            m.push(" ", v(f.aa)),
            m.push(" ", a.F.Ea(f.m)),
            m.push(" ", f.l),
            m.push(" by position #", g.ka),
            m.push(" ", v(g.aa)),
            m.push(" ", a.F.Ea(g.m)),
            m.push(" ", g.l))
          : (m.push(" for ", d.ga),
            m.push(" close position #", f.ka),
            m.push(" ", v(f.aa)),
            m.push(" ", a.F.Ea(f.m)),
            m.push(" ", f.l),
            m.push(" by position #", d.Nj));
        break;
      case h.yD:
        m.push("balance"),
          m.push(" ", d.N.gc(2)),
          m.push(" ", d.Eb),
          m.push(" for ", d.ga);
    }
    return m.join("");
  }
  function h(d) {
    var f = b.data.Fc,
      c = "";
    switch (d.aa) {
      case f.ck:
        c += "prices for " + d.l + " " + a.F.Ea(d.m);
        break;
      case f.Yg:
        c = c + "request" + (" " + r(d.da));
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " at";
        c += a.F.Z(d.N, d.j);
        d.Ya
          ? (c += ", close #" + d.Ya)
          : (d.C && (c += " sl: " + a.F.Z(d.C, d.j)),
            d.D && (c += " tp: " + a.F.Z(d.D, d.j)));
        break;
      case f.zg:
        c += "instant";
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " at";
        c += " " + a.F.Z(d.N, d.j);
        d.Ya
          ? (c += ", close #" + d.Ya)
          : (d.C && (c += " sl: " + a.F.Z(d.C, d.j)),
            d.D && (c += " tp: " + a.F.Z(d.D, d.j)));
        break;
      case f.Ih:
        c += "market";
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        d.Ya
          ? (c += ", close #" + d.Ya)
          : (d.C && (c += " sl: " + a.F.Z(d.C, d.j)),
            d.D && (c += " tp: " + a.F.Z(d.D, d.j)));
        break;
      case f.qh:
        c += "exchange";
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " at";
        c += " " + (d.N ? a.F.Z(d.N, d.j) : "market");
        d.Ya
          ? (c += ", close #" + d.Ya)
          : (d.C && (c += " sl: " + a.F.Z(d.C, d.j)),
            d.D && (c += " tp: " + a.F.Z(d.D, d.j)));
        break;
      case f.Pg:
        c += r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " at";
        c += " " + l(d.N, d.Na, d.j);
        d.C && (c += " sl: " + a.F.Z(d.C, d.j));
        d.D && (c += " tp: " + a.F.Z(d.D, d.j));
        break;
      case f.yj:
        c += "modify";
        d.Ya && (c += " #" + d.Ya);
        c += " " + v(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " ->";
        c += " sl: " + a.F.Z(d.C, d.j);
        c += ", tp: " + a.F.Z(d.D, d.j);
        break;
      case f.Di:
        c += "modify";
        c += " #" + d.X;
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " ->";
        c += " price: " + l(d.N, d.Na, d.j);
        c += ", sl: " + a.F.Z(d.C, d.j);
        c += ", tp: " + a.F.Z(d.D, d.j);
        break;
      case f.dk:
        c += "cancel";
        c += " #" + d.X;
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " at " + l(d.N, d.Na, d.j);
        break;
      case f.sK:
        c += "transfer";
        c += " " + d.N.gc(2);
        c += " to ''";
        c += "" + d.Eb;
        break;
      case f.Zi:
        c += "close position";
        c += " #" + d.Ya;
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " by position";
        c += " #" + d.Nj;
        break;
      case f.hK:
        c += "activate ";
        c += " #" + d.X;
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " at " + l(d.N, d.Na, d.j);
        break;
      case f.wD:
        c += "activate";
        d.Ya && (c += " #" + d.Ya);
        c += " stop loss,";
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " at " + l(d.N, 0, d.j);
        break;
      case f.xD:
        c += "activate";
        d.Ya && (c += " #" + d.Ya);
        c += " take profit,";
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " at " + l(d.N, 0, d.j);
        break;
      case f.iK:
        c += "activate stop-limit order";
        c += " #" + d.X;
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " at " + l(d.N, d.Na, d.j);
        break;
      case f.qK:
        c += "delete stop-out order";
        c += " #" + d.X;
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " at " + l(d.N, d.Na, d.j);
        break;
      case f.rK:
        c += "close stop-out position";
        d.Ya && (c += " #" + d.Ya);
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " at " + l(d.N, 0, d.j);
        break;
      case f.AD:
        c += "expire";
        c += " #" + d.X;
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " at " + l(d.N, 0, d.j);
        break;
      case f.zD:
        c += "for";
        c += " '" + b.la.H.ga + "'";
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " at " + l(d.N, 0, d.j);
        d.Ya
          ? (c += ", close #" + d.Ya)
          : (d.C && (c += " sl: " + a.F.Z(d.C, d.j)),
            d.D && (c += " tp: " + a.F.Z(d.D, d.j)));
        break;
      case f.Uq:
        c += "for";
        c += " '" + b.la.H.ga + "'";
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " at " + l(d.N, d.Na, d.j);
        d.C && (c += " sl: " + a.F.Z(d.C, d.j));
        d.D && (c += " tp: " + a.F.Z(d.D, d.j));
        break;
      case f.nK:
        c += "for";
        c += " '" + b.la.H.ga + "'";
        c += " modify position";
        d.Ya && (c += " #" + d.Ya);
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " -> price: " + l(d.N, d.j, 3);
        c += " sl: " + a.F.Z(d.C, d.j);
        c += " tp: " + a.F.Z(d.D, d.j);
        break;
      case f.kK:
        c += "for";
        c += " '" + b.la.H.ga + "'";
        c += " modify order";
        c += " #" + d.X;
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " -> price: " + l(d.N, d.Na, d.j);
        c += " sl: " + a.F.Z(d.C, d.j);
        c += " tp: " + a.F.Z(d.D, d.j);
        break;
      case f.lK:
        c += "for";
        c += " '" + b.la.H.ga + "'";
        c += " cancel order";
        c += " #" + d.X;
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        break;
      case f.jK:
        c += "for";
        c += " '" + b.la.H.ga + "'";
        c += " activate order";
        c += " #" + d.X;
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        break;
      case f.mK:
        c += "for";
        c += " '" + b.la.H.ga + "'";
        c += " activate stop-limit order";
        c += " #" + d.X;
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        break;
      case f.Vs:
        c += "for";
        c += " '" + b.la.H.ga + "'";
        c += " close position";
        c += " #" + d.Ya;
        c += " " + r(d.da);
        c += " " + a.F.Ea(d.m);
        c += " " + d.l;
        c += " by position #" + d.Nj;
        break;
      case f.yD:
        (c += "for"),
          (c += " '" + b.la.H.ga + "'"),
          (c += " balance"),
          (c += " " + d.N.gc(2)),
          (c += " " + d.Eb);
    }
    return c;
  }
  var b = E.V,
    a = b.view,
    g = (E.V.control.Re = {});
  g.DX = function (a) {
    var f = b.data.aq;
    switch (a) {
      case f.Zp:
        return "buy";
      case f.$p:
        return "sell";
      case f.Xm:
        return "balance";
      case f.Xr:
        return "credit";
      case f.ou:
        return "charge";
      case f.qu:
        return "correction";
      case f.Wr:
        return "bonus";
      case f.pu:
        return "commission";
      case f.qx:
        return "daily commission";
      case f.rx:
        return "monthly commission";
      case f.ox:
        return "daily agent commission";
      case f.px:
        return "monthly agent commission";
      case f.sx:
        return "interest rate";
      case f.nu:
        return "canceled buy";
      case f.tu:
        return "canceled sell";
      case f.ru:
        return "dividend";
      case f.su:
        return "franked dividend";
      case f.uu:
        return "tax";
    }
    return "unknown";
  };
  g.Ls = v;
  g.Ko = function (b, f) {
    var c = [];
    c.push("#", b.ka);
    c.push(" ", v(b.aa));
    c.push(" ", a.F.Ea(b.m));
    c.push(" ", b.l);
    c.push(" ", a.F.Z(b.Jc, b.j, 3));
    !1 !== f &&
      (b.Mb && c.push(" sl: ", a.F.Z(b.Mb, b.j)),
      b.Qb && c.push(" tp: ", a.F.Z(b.Qb, b.j)));
    return c.join("");
  };
  g.Iba = function (b) {
    var f = [];
    f.push("#", b.ka);
    f.push(" ", v(b.aa));
    f.push(" ", a.F.Ea(b.m));
    return f.join("");
  };
  g.Jo = r;
  g.Bba = function (a) {
    var f = b.data.Io,
      c = "unknown";
    a == f.sI && (c = "started");
    a == f.Hq && (c = "placed");
    a == f.zs && (c = "canceled");
    a == f.rn && (c = "partial");
    a == f.Eo && (c = "filled");
    a == f.lv && (c = "rejected");
    a == f.oI && (c = "expired");
    a == f.pI && (c = "request adding");
    a == f.rI && (c = "request modifying");
    a == f.qI && (c = "request cancelling");
    return c;
  };
  g.Dba = function (a) {
    var f = b.data.yi,
      c = "unknown";
    a == f.Eh && (c = "fill or kill");
    a == f.fm && (c = "immediate or cancel");
    a == f.Fh && (c = "return");
    return c;
  };
  g.Cba = function (a) {
    var f = b.data.tj,
      c = "unknown";
    a == f.il && (c = "gtc");
    a == f.sn && (c = "day");
    a == f.Bk && (c = "specified");
    a == f.Ck && (c = "specified day");
    return c;
  };
  g.Eba = function (a) {
    var f = b.data.un,
      c = "";
    a == f.kv && (c = "Client");
    a == f.AB && (c = "Expert");
    a == f.zB && (c = "Dealer");
    a == f.xs && (c = "Stop loss");
    a == f.ys && (c = "Take profit");
    a == f.CB && (c = "Stop out");
    a == f.BB && (c = "Rollover");
    a == f.iX && (c = "External Client");
    a == f.rX && (c = "Variation margin");
    a == f.kX && (c = "Gateway");
    a == f.oX && (c = "Signal");
    a == f.nX && (c = "Settlement");
    a == f.qX && (c = "Transfer");
    a == f.pX && (c = "Synchronization");
    a == f.jX && (c = "External Service");
    a == f.lX && (c = "Migration");
    a == f.mX && (c = "Mobile");
    a == f.sX && (c = "Web");
    return c;
  };
  g.AI = function (a) {
    var b = [];
    b.push("#", a.Xf());
    b.push(" ", r(a.yb));
    b.push(" ", e(a));
    b.push(" ", a.l);
    a = l(a.N, a.ofa, a.j);
    a.length && b.push(" at ", a);
    return b.join("");
  };
  g.Aba = function (b, f) {
    void 0 === f && (f = 0);
    return b.nU() ? "market" : a.F.Z(b.N, b.j, f);
  };
  g.PB = l;
  g.Fba = e;
  g.OB = k;
  g.CX = h;
  g.Gba = function (a, b, c) {
    return k(a.jj, b, c);
  };
  g.Hba = function (a) {
    return h(a.jj);
  };
})();
var hb = (E.V.control.Jv = {});
hb.vu = 0;
hb.tx = 1;
var jb = (E.V.control.bL = {});
jb.SJ = 0;
jb.t_ = 1;
jb.s_ = 2;
var kb = (E.V.control.lg = {});
kb.tv = 0;
kb.kg = 1;
var lb = (E.V.control.xea = {});
lb.y$ = 0;
lb.x$ = 1;
(function () {
  function v(b) {
    g.History.Eu(b.Od) ||
      (g.History.fh.push(b),
      g.History.yg(),
      g.History.fL(b),
      a.History && a.History.W());
  }
  function r(c) {
    var d = g.History.Eu(c.Od);
    if (d) {
      d.Om || (d.Om = new b.data.Tg());
      for (var f in d) d.hasOwnProperty(f) && (d.Om[f] = d[f]);
      for (var e in c)
        c.hasOwnProperty(e) && (c[e] instanceof b.data.Tg || (d[e] = c[e]));
      a.History && a.History.W();
    }
  }
  function l(b) {
    g.History.fY(b.Od);
    a.History && a.History.W();
  }
  function e(b) {
    var c;
    c = b.ka ? g.P.fg(b.ka, !0) : g.P.Ul(b.l, !0);
    if (-1 < c) {
      var d = g.P.ee[c];
      d.op && d.op.gb && d.op.gb();
      b.Om = d;
      g.P.ee[c] = b;
      b.m.ab() && g.P.kY(b);
    } else {
      if (b.m.ab()) return !1;
      g.P.$k(b);
    }
    g.P.yg();
    a.P.W();
    return !0;
  }
  function k(k, u) {
    var q = a.U;
    if (k == h.rb.Je.Za) {
      var w = f.P.bY(u),
        p,
        n,
        x;
      if (w) {
        for (var C = 0, A = w.length; C < A; C++)
          if ((p = w[C]))
            if (((n = p.dN), (x = p.Ze), x == z.KW))
              switch (n) {
                case c.at:
                case c.Hv:
                  n = p.X;
                  p = g.P.df(n.X, !0);
                  -1 < p
                    ? ((x = g.P.Yd[p]),
                      x.op && x.op.gb && x.op.gb(),
                      (n.Om = x),
                      (g.P.Yd[p] = n))
                    : g.P.Sh(n);
                  g.P.yg();
                  a.P.W();
                  break;
                case c.Gv:
                  g.P.iY(p.X) && (g.P.yg(), a.P.W());
              }
            else if (x == z.IP)
              switch (n) {
                case c.at:
                  n = p.X;
                  g.History.df(n.X) ||
                    (g.History.Yd.push(n),
                    g.History.yg(),
                    a.History && a.History.W());
                  break;
                case c.Hv:
                  n = p.X;
                  if ((p = g.History.df(n.X))) {
                    p.Om || (p.Om = new b.data.ig());
                    x = void 0;
                    for (x in p) p.hasOwnProperty(x) && (p.Om[x] = p[x]);
                    x = void 0;
                    for (x in n)
                      n.hasOwnProperty(x) &&
                        (n[x] instanceof b.data.ig || (p[x] = n[x]));
                    a.History && a.History.W();
                  }
                  break;
                case c.Gv:
                  g.History.jY(p.X.X), a.History && a.History.W();
              }
            else if (x == z.bQ) {
              n == c.at &&
                ((g.H.Wd = p.Wd),
                (g.H.Qg = p.Qg),
                (g.H.hi = p.hi),
                (g.H.pg = p.pg),
                (g.H.qg = p.qg),
                (g.H.Nd = (p.pg + p.qg).normalize(g.H.yc)));
              if (p.Ya.l || p.Od.l) {
                if (!e(p.Ya)) continue;
                x = p.ee;
                for (var I, G = 0, F = x.length; G < F; G++) (I = x[G]) && e(I);
                d.O.Xi(p.Od.l);
              }
              if (p.Od.Od) {
                switch (n) {
                  case c.at:
                    v(p.Od);
                    break;
                  case c.Hv:
                    r(p.Od);
                    break;
                  case c.Gv:
                    l(p.Od);
                }
                p.Od.$u() &&
                  q.Wb(
                    q.Ab.Za,
                    q.types.Dv,
                    [
                      "'",
                      g.H.ga,
                      "': deal ",
                      p.Od.gk(),
                      " done (based on order #",
                      p.Od.Xf(),
                      ")",
                    ].join("")
                  );
              }
              if ((p = p.fh))
                for (I = 0, G = p.length; I < G; I++)
                  if ((x = p[I]))
                    switch (n) {
                      case c.at:
                        v(x);
                        break;
                      case c.Hv:
                        r(x);
                        break;
                      case c.Gv:
                        l(x);
                    }
            }
        b.control.ci.Qq();
        b.control.Wc.ti(g.H);
        b.control.Wc.ui(g.H);
        a.P.hL();
        g.$c.as();
        g.ra.M("change");
      }
    }
  }
  var h = E.ba,
    b = E.V,
    a = b.view,
    g = b.la,
    d = b.control,
    f = b.Rg,
    c = { at: 0, Hv: 1, Gv: 2, tea: 3, rea: 4, sea: 5 },
    z = { KW: 0, IP: 1, bQ: 2 },
    A = (b.control.I2 = {});
  A.ha = function () {
    if (A.ua) return A;
    var a = h.rb;
    a.Ke(a.mb.XH, k, 0);
    A.ua = !0;
    return A;
  };
  A.types = c;
  A.Ze = z;
})();
(function () {
  function v(e) {
    var k = r.data.Pc,
      h = !1;
    switch (e.Zd) {
      case k.nl:
      case k.Bn:
      case k.Gk:
      case k.Hk:
      case k.Cn:
      case k.ek:
      case k.ol:
      case k.fk:
        h = !0;
    }
    return h;
  }
  var r = E.V,
    l = (E.V.control.pd = {});
  l.yI = function (e, k) {
    var h = {};
    v(e) ? ((h.vb = k.Nf), (h.dc = k.Nf)) : ((h.vb = k.vb), (h.dc = k.dc));
    return h;
  };
  l.We = function (e, k, h) {
    var b = e;
    k && (b = (e / k).normalize(0) * k);
    return b.normalize(h);
  };
  l.zI = function (e, k, h, b, a, g) {
    if (!e) return { result: !0 };
    if (!a || !g) return { result: !0 };
    g = ((g - a) / h + e).normalize(0);
    a =
      0 < e
        ? Number(a - h * (e - Math.trunc(e / 2) - k)).normalize(b)
        : Number(a - h * (e - Math.trunc(e / 2) + k)).normalize(b);
    g = (a + h * g).normalize(b);
    return { vb: a, dc: g, result: a <= g };
  };
  l.NB = function (e, k, h, b, a) {
    return e && a
      ? (a =
          0 < e
            ? Number(a - h * (e - Math.trunc(e / 2) - k)).normalize(b)
            : Number(a - h * (e - Math.trunc(e / 2) + k)).normalize(b))
      : !0;
  };
  l.MB = function (e, k, h, b, a) {
    return e && a
      ? (a =
          0 < e
            ? Number(a + h * (Math.trunc(e / 2) + k)).normalize(b)
            : Number(a + h * (Math.trunc(e / 2) - k)).normalize(b))
      : !0;
  };
  l.BX = v;
})();
(function () {
  function v(a, c, d, e) {
    var h = f.data.vD,
      k = g(a, c, d),
      m = k.ao,
      k = k.Qn;
    if (d && e && d.mh() && !(d.Gl & h.Ws) && m == d.l) return e;
    m = b(m, "ask", k);
    if (0 < m) return m;
    k = g(c, a, d);
    m = k.ao;
    k = k.Qn;
    if (d && e && d.mh() && !(d.Gl & h.Ws) && m == d.l) return 1 / e;
    a = b(m, "bid", k);
    return 0 < a ? 1 / a : 0;
  }
  function r(a, c, d, e) {
    var h = f.data.vD,
      k = g(a, c, d),
      m = k.ao,
      k = k.Qn;
    if (d && e && d.mh() && !(d.Gl & h.Ws) && m == d.l) return e;
    m = b(m, "bid", k);
    if (0 < m) return m;
    k = g(c, a, d);
    m = k.ao;
    k = k.Qn;
    if (d && e && d.mh() && !(d.Gl & h.Ws) && m == d.l) return 1 / e;
    a = b(m, "ask", k);
    return 0 < a ? 1 / a : 0;
  }
  function l(a, c, d, f) {
    var e,
      h = g(a, c, d);
    e = h.ao;
    h = h.Qn;
    if (f && d.mh() && e == d.l) return f;
    e = b(e, "ask", h);
    if (0 < e) return e;
    h = g(c, a, d);
    e = h.ao;
    h = h.Qn;
    if (f && d.mh() && e == d.l) return 1 / f;
    a = b(e, "bid", h);
    return 0 < a ? 1 / a : 0;
  }
  function e(a, c, d, f) {
    var e,
      h = g(a, c, d);
    e = h.ao;
    h = h.Qn;
    if (f && d.mh() && e == d.l) return f;
    e = b(e, "bid", h);
    if (0 < e) return e;
    h = g(c, a, d);
    e = h.ao;
    h = h.Qn;
    if (f && d.mh() && e == d.l) return 1 / f;
    a = b(e, "ask", h);
    return 0 < a ? 1 / a : 0;
  }
  function k(a) {
    var b = m[a];
    if (b) return b;
    if (u[a]) return null;
    if ((b = c.O.jw.slice().filter(d.bind(this, a))) && b.length)
      return (b = b[0].l), (m[a] = b);
    u[a] = !0;
    return null;
  }
  function h(a, b) {
    if (a === b) return !0;
    for (var c = [["RUB", "RUR"]], d = 0, e = c.length, f; d < e; d++)
      if ((f = c[d]) && -1 !== f.indexOf(a) && -1 !== f.indexOf(b)) return !0;
    return !1;
  }
  function b(b, c, d) {
    return d && ((d = a(b, c)), 0 < d) ? d : (b = k(b)) ? a(b, c) : 0;
  }
  function a(a, b) {
    var d = c.O.Ka(a);
    if (!d) return 0;
    if (d.mh() && (d = c.wa.u(a))) {
      if ("ask" == b) return d.dc;
      if ("bid" == b) return d.vb;
    }
    z.O.Xi(a, !1);
    return 0;
  }
  function g(a, b, c) {
    var d = [],
      f = !1;
    a &&
      b &&
      c &&
      (d.push(a.substr(0, 3)),
      d.push(b.substr(0, 3)),
      c && c.mh() && ((f = !0), 6 < c.l.length && d.push(c.l.substr(6))));
    return { ao: d.join(""), Qn: f };
  }
  function d(a, b) {
    return 0 === b.l.indexOf(a.substr(0, 6));
  }
  var f = E.V,
    c = f.la,
    z = f.control,
    A = (E.V.control.ff = {});
  A.km = function (a, b, c) {
    var d = a.vt;
    if (!d || !b) return 0;
    if (h(d, b)) return 1;
    var f = v(d, b, a, c);
    if (f) return f;
    d = v(d, "USD", a, c);
    a = v("USD", b, a, c);
    return d && a ? a * d : 0;
  };
  A.lm = function (a, b, c) {
    var d = a.vt;
    if (!d || !b) return 0;
    if (h(d, b)) return 1;
    var f = r(d, b, a, c);
    if (f) return f;
    d = r(d, "USD", a, c);
    a = r("USD", b, a, c);
    return d && a ? a * d : 0;
  };
  A.MC = function (a, b, c) {
    var d = a.sw;
    if (!d || !b) return 0;
    if (h(d, b)) return 1;
    var f = l(d, b, a, c);
    if (f) return f;
    d = l(d, "USD", a, c);
    a = l("USD", b, a, c);
    return d && a ? a * d : 0;
  };
  A.NC = function (a, b, c) {
    var d = a.sw;
    if (!d || !b) return 0;
    if (h(d, b)) return 1;
    var f = e(d, b, a, c);
    if (f) return f;
    d = e(d, "USD", a, c);
    a = e("USD", b, a, c);
    return d && a ? a * d : 0;
  };
  A.Oa = function () {
    m = {};
    u = {};
  };
  var m = {},
    u = {};
})();
window.J.V.control.Wa = {
  rl: 8,
  od: function (v) {
    v = v.toString();
    if (v.length <= this.rl)
      return parseFloat("0." + v.padStart(this.rl, "0")).normalize(this.rl);
    var r = v.length - this.rl;
    return parseFloat(v.substr(0, r) + "." + v.substr(r)).normalize(this.rl);
  },
  Uf: function (v, r) {
    return (this.od(v) * r).normalize(this.rl);
  },
  zj: function (v) {
    return Long.ec(v.normalize(this.rl).toFixed(this.rl).split(".").join(""));
  },
  En: function (v) {
    v = this.od(v);
    return this.YK(v);
  },
  YK: function (v) {
    v = v.normalize(this.rl).toFixed(this.rl);
    var r = v.indexOf(".");
    if (-1 != r) {
      for (
        v = v
          .substr(r + 1)
          .split("")
          .reverse();
        v.length && "0" === v[0];

      )
        v.splice(0, 1);
      return v.length;
    }
    return 0;
  },
  wea: function (v, r) {
    void 0 === r && (r = !0);
    return Long.S3(v, r).Ki(Long.ec("100000000", r));
  },
};
(function () {
  function v(b, a, e, d, f) {
    var c = r.data.Pc,
      h = r.data.vD;
    if (
      !l.H.lH() ||
      (b.Zd != c.nl && b.Zd != c.ek && b.Zd != c.ol && b.Zd != c.fk)
    ) {
      var c = a.zb(),
        A = a.m,
        m = a.Ae,
        u = a.Jc,
        q = a.Oc,
        w = r.data.Pc,
        p = 0,
        p = 0,
        n,
        x = b.Fm,
        C = b.Qf;
      n = b.Ta;
      var v = b.Mi;
      switch (b.Zd) {
        case w.Ei:
        case w.Wo:
          p = k.Wa.Uf(A, m);
          p = c
            ? (q * p).normalize(x) - (u * p).normalize(x)
            : (u * p).normalize(x) - (q * p).normalize(x);
          break;
        case w.Xo:
        case w.Bn:
        case w.Hk:
        case w.Cn:
          p = k.Wa.od(A);
          p = c ? (q - u) * p * C : (u - q) * p * C;
          n && (p /= n);
          break;
        case w.Gk:
          p = k.Wa.od(A);
          n
            ? ((f = ((u * C) / n).normalize(x)),
              (n = ((q * C) / n).normalize(x)))
            : ((f = (u * C).normalize(x)), (n = (q * C).normalize(x)));
          p = c ? (n - f) * p : (f - n) * p;
          break;
        case w.ek:
        case w.fk:
          p = k.Wa.Uf(A, m);
          p = c
            ? ((p * q * v) / 100).normalize(x) -
              ((p * u * v) / 100).normalize(x)
            : ((p * u * v) / 100).normalize(x) -
              ((p * q * v) / 100).normalize(x);
          break;
        case w.Dn:
          f
            ? ((p = k.Wa.Uf(A, m)), (p = c ? q * p - u * p : u * p - q * p))
            : (p = 0);
          break;
        default:
          (p = k.Wa.Uf(A, m)), (p = c ? q * p - u * p : u * p - q * p);
      }
      if (1e11 < p || -1e11 > p) p = 0;
      if (0 > q || (!b.Td() && !q)) p = 0;
      c = p.normalize(x);
      a.ya = c;
      b.mh() && 0 == (b.Gl & h.Ws)
        ? a.zb()
          ? ((a.ya *= e), (a.Xn = e))
          : ((a.ya *= d), (a.Xn = d))
        : 0 < a.ya
        ? ((a.ya *= d), (a.Xn = d))
        : ((a.ya *= e), (a.Xn = e));
      a.ya = a.ya.normalize(l.H.yc);
    } else
      (h = (a.Jc * k.Wa.Uf(a.m, a.Ae) * a.Fp).normalize(b.Fm)),
        (c = 0),
        a.zb()
          ? ((a.Xn = d),
            (c = (a.Oc * k.Wa.Uf(a.m, a.Ae) * d).normalize(b.Fm)),
            (a.ya = (c - h).normalize(l.H.yc)))
          : ((a.Xn = e),
            (c = (a.Oc * k.Wa.Uf(a.m, a.Ae) * e).normalize(b.Fm)),
            (a.ya = (h - c).normalize(l.H.yc)));
  }
  var r = E.V,
    l = r.la,
    e = r.view,
    k = r.control,
    h = (E.V.control.ci = {});
  h.QB = function (b, a, e, d, f, c) {
    var h = r.data.Oq,
      A = r.data.eb;
    if (!a || 0 > d || 0 > f || (b != A.Ja && b != A.Va)) return !1;
    a = l.O.Ka(a);
    if (!a) return !1;
    var m = new r.data.Tg();
    m.aa = b == A.Ja ? h.Lq : h.mv;
    m.Jc = d;
    m.Oc = f;
    m.m = e.La();
    m.ya = 0;
    m.pc = 0;
    m.Ae = a.Bc;
    m.j = a.j;
    m.Hc = l.H.yc;
    e = k.ff.km(a, l.H.hf, m.Oc);
    h = k.ff.lm(a, l.H.hf, m.Oc);
    v(a, m, e, h);
    m = m.ya;
    b = b == A.Ja ? (f - d).normalize(a.j) : (d - f).normalize(a.j);
    b = Math.floor(b * a.Xk).normalize(0);
    c && ((c.ya = m), (c.DE = b));
    return !0;
  };
  h.Qq = function () {
    var b = l.P.ee,
      a;
    if (b)
      for (var g, d, f, c = 0, h = b.length; c < h; c++)
        if ((a = b[c]))
          if ((g = l.O.Ka(a.l)))
            (d = k.ff.km(g, l.H.hf)),
              (f = k.ff.lm(g, l.H.hf)),
              0 !== d && 0 !== f && (v(g, a, d, f), e.P.gL(a));
  };
  h.EX = v;
  h.Rq = function (b, a, e, d, f) {
    var c = 0;
    b.Td()
      ? l.H.lH()
        ? (c = a.Lm)
        : a.Lm
        ? (c = a.Lm)
        : (e.zb() && (c = a.vb), e.uc() && (c = a.dc))
      : ((a = k.pd.yI(b, a)), e.zb() && (c = a.vb), e.uc() && (c = a.dc));
    c && ((e.Oc = c), v(b, e, d, f));
  };
})();
(function () {
  function v(c, d, e) {
    var f = k.data.Fc,
      h = k.data.za,
      m = [],
      l,
      u,
      z,
      A = a.O.Ka(c.l);
    if (A) {
      if (d.jU() && (c.dm() || c.ps()))
        (z = new k.data.ig()),
          (z.X = d.X),
          (z.yb = c.da),
          (z.j = c.j),
          (z.N = d.ia),
          (z.C = c.C),
          (z.D = c.D),
          (z.l = c.l),
          (z.Ff = d.m.La()),
          (l = g.Re.AI(z)),
          0 === c.m.compare(d.m)
            ? m.push("'", c.ga, "': order ", l, " done")
            : m.push("'", c.ga, "': order ", l, " done partially");
      else {
        if (c.ps() || c.oU() || c.qU())
          (z = a.P.df(c.X)) || (z = a.History.df(c.X));
        if (c.dm() || c.aa == f.yj || c.aa == f.Zi)
          (l = a.P.Ui(c.l, c.Ya)) || (l = a.History.vG(c.l, c.Ya));
        u = g.Re.OB(c, l, z);
        c.aa == f.zg && c.Qh && (u += " (deviation: " + c.Qh + ")");
      }
      switch (d.Ca) {
        case h.qe:
          m.push("'", c.ga, "': ", u);
          c.aa == f.Zi &&
            ((d = a.P.fg(c.Nj)) || (d = a.History.Bx(c.Nj)),
            d &&
              (m.push(" ", g.Re.Ls(d.aa)),
              m.push(" ", b.F.Ea(d.m)),
              m.push(" ", d.l)));
          break;
        case h.uj:
          m.push("'", c.ga, "': accepted ", u);
          break;
        case h.vj:
          m.push("'", c.ga, "': processed ", u);
          break;
        case h.jm:
          m.push("'", c.ga, "': requote");
          m.push(" ", b.F.Z(d.vb, A.j));
          m.push(" / ", b.F.Z(d.dc, A.j));
          m.push(" (", u, ")");
          break;
        case h.Sq:
          m.push("'", c.ga, "': answer ", u);
          m.push(" ", b.F.Z(d.vb, A.j));
          m.push(" / ", b.F.Z(d.dc, A.j));
          e && m.push(" in ", e, " ms");
          break;
        case h.Ms:
          m.push("'", c.ga, "': rejected ", u);
          break;
        case h.jg:
          m.push("'", c.ga, "': ", u, " placed for execution");
          e && m.push(" in ", e, " ms");
          break;
        case h.Xc:
        case h.hm:
        case h.Dk:
          switch (c.aa) {
            case f.Yg:
            case f.zg:
            case f.Ih:
            case f.qh:
            case f.Pg:
              break;
            case f.yj:
            case f.Di:
            case f.dk:
            case f.Zi:
              m.push("'", c.ga, "': ", g.Re.CX(c) + " done");
              break;
            default:
              m.push("'", c.ga, "': ", u + " done");
          }
          e && m.push(" in ", e, " ms");
          break;
        case h.VB:
          m.push("'", c.ga, "': ", u, " skipped as it changes nothing");
          break;
        default:
          m.push("'", c.ga, "': failed ", u, " [", r(d.Ca), "]");
      }
      m && m.length && ((c = b.U), c.Wb(c.Ab.Za, c.types.Dv, m.join("")));
    }
  }
  function r(a) {
    var b = k.data.za,
      c = {};
    c[b.Cb] = "OK";
    c[b.jl] = "OK";
    c[b.gm] = "Common error";
    c[b.nv] = "Invalid parameters";
    c[b.CI] = "Invalid parameters";
    c[b.DI] = "Server technical problem";
    c[b.FI] = "Server technical problem";
    c[b.GI] = "Network problem";
    c[b.HI] = "Not enough permissions";
    c[b.II] = "Timeout";
    c[b.RB] = "No connection";
    c[b.EI] = "Too frequent requests";
    c[b.qe] = "On the way";
    c[b.uj] = "Accepted";
    c[b.vj] = "Processed";
    c[b.jm] = "Requoted";
    c[b.Sq] = "Prices";
    c[b.Ms] = "Rejected";
    c[b.ov] = "Canceled";
    c[b.jg] = "Placed";
    c[b.Xc] = "Done";
    c[b.hm] = "Done partially";
    c[b.Dk] = "Done partially";
    c[b.NI] = "Common Error";
    c[b.ZI] = "Timeout";
    c[b.Xg] = "Invalid parameters";
    c[b.im] = "Invalid volume";
    c[b.qf] = "Invalid prices";
    c[b.Qe] = "Invalid S/L or T/P";
    c[b.ml] = "Trade is disabled";
    c[b.UI] = "Market closed";
    c[b.VI] = "Not enough money";
    c[b.pv] = "Price changed";
    c[b.Mo] = "Off quotes";
    c[b.TB] = "Invalid expiration";
    c[b.WI] = "Order has been changed already";
    c[b.$I] = "Too many trade requests";
    c[b.KI] = "Automated Trading disabled on the server side";
    c[b.JI] = "Automated Trading disabled at the client terminal";
    c[b.OI] =
      "Modification failed due to order or position being close to market";
    c[b.Lo] = "Unsupported filling mode";
    c[b.MI] = "No connection";
    c[b.RI] = "Orders limit reached";
    c[b.TI] = "Volume limit reached";
    c[b.kl] = "Invalid order type";
    c[b.ll] = "Position already closed";
    c[b.NX] = "Demo allocation disabled";
    c[b.LI] = "Order to close this position already exists";
    c[b.SI] = "Positions limit reached";
    c[b.YI] = "Request rejected, order will be canceled";
    c[b.UB] = "Only long positions are allowed";
    c[b.WB] = "Only short positions are allowed";
    c[b.SB] = "Only positions closing is allowed";
    c[b.XI] = "Position close prohibited by FIFO rule";
    c[b.QI] = "Hedged positions are prohibited";
    return c[a] || c[b.gm];
  }
  function l(a, b) {
    a == h.rb.Je.Za && new DataView(b).getUint32(0, !0);
  }
  function e(a, c) {
    var f = k.data.aL,
      e = k.data.Fc,
      g = k.data.za;
    if (a == h.rb.Je.Za) {
      var l = new Date().getTime() - u;
      isNaN(l) && (l = 0);
      var r = d.P.aY(c);
      if (r) {
        var I = r.jj,
          r = r.Op;
        if ((I = z[I.He]))
          r.$R() && v(I, r, l),
            I.aa == e.zg &&
              r.Ca == g.jm &&
              (m.length >= f.IT && m.splice(0, 1),
              (e = {}),
              (e.jj = I),
              (e.vb = r.vb),
              (e.dc = r.dc),
              (e.time = new Date().getTime() + f.HT),
              m.push(e)),
            clearTimeout(A[I.He]),
            (A[I.He] = null),
            (I.complete = !0),
            I.Oh ? b.Jb.AX(r) : b.Jb.Qs(I, r);
      }
    }
  }
  var k = E.V,
    h = E.ba,
    b = k.view,
    a = k.la,
    g = k.control,
    d = k.Rg,
    f = (k.control.$f = {});
  f.ha = function () {
    if (f.ua) return f;
    var a = h.rb;
    a.Ke(a.mb.WH, l);
    a.Ke(a.mb.wW, e);
    f.Oa();
    f.ua = !0;
    return f;
  };
  f.Oa = function () {
    c = 1e3 * Math.round(100 * Math.random());
    z = {};
    A = {};
    m = [];
  };
  f.Bd = function (f) {
    var e = k.data.rm,
      p = k.data.za;
    f.ho = k.data.un.kv;
    f.Ef &= ~e.oK;
    f.Ef &= ~e.pK;
    f.ga = a.H.ga;
    f.He = c++;
    e = g.ct.Tr(f, !0);
    if (e !== p.Cb) return v(f, new k.data.ar(e)), e;
    var n = h.rb;
    if (!n.WG() || !n.ey()) return v(f, new k.data.ar(p.RB)), e;
    u = new Date().getTime();
    z[f.He] = f;
    A[f.He] = setTimeout(function () {
      var a = f.He,
        c = k.data.za;
      clearTimeout(A[a]);
      A[a] = null;
      if ((a = z[a]))
        a.Oh || b.Jb.Qs(a, new k.data.ar(c.QX)),
          v(a, new k.data.ar(c.QX)),
          h.je.Error();
    }, 18e4);
    n.Bd(n.mb.WH, d.P.R2(f));
    v(f, new k.data.ar(p.qe));
    h.Tl.PushEvent("MetaTrader+5+Web+Trade+" + (a.H.rH() ? "Real" : "Demo"));
    return p.Cb;
  };
  f.Ug = r;
  f.CG = function (a) {
    var b;
    if (z)
      for (var c in z)
        if (z.hasOwnProperty(c) && (b = z[c]) && b.ia == a) return b;
    return null;
  };
  f.RX = function () {
    return m;
  };
  var c, z, A, m, u;
})();
(function () {
  function v(c, e, h, k, l, w) {
    if (!b(v, arguments)) return null;
    var p = a.data.za,
      n = a.data.Fc,
      x = a.data.eb,
      r = new a.data.bi();
    r.Oh = !0;
    var O = {},
      I = {};
    I.jj = r;
    I.Op = O;
    if (void 0 === l && void 0 === w && !f.Wc.Kg(d.H)) {
      var G = d.P.Ul(c);
      G &&
        ((h == x.Ja && G.zb()) || (h == x.Va && G.uc())) &&
        ((l = G.Mb), (w = G.Qb));
    }
    l || (l = 0);
    w || (w = 0);
    var x = e,
      G = h,
      F = k,
      y = l,
      M = w,
      D = r,
      L = a.control.Jv,
      B = a.data.Tf,
      Q = a.data.yi,
      N = a.data.Ci,
      K = a.data.Fc,
      P = a.data.rm;
    if (c) {
      var T = d.O.Ka(c);
      if (T) {
        D.l = T.l;
        D.m = x.La();
        D.j = T.j;
        D.X = "";
        D.Ya = "";
        D.Ef = P.Uo;
        D.N = 0;
        D.Na = 0;
        D.C = f.pd.We(y, T.Ta, T.j);
        D.D = f.pd.We(M, T.Ta, T.j);
        D.sd = 0;
        D.$b = 0;
        D.da = G;
        switch (T.A.$d) {
          case B.bl:
            if (((D.fe = Q.Eh), T.A.yh.ab() || D.m.Cl(T.A.yh))) {
              D.aa = K.zg;
              D.N = F;
              switch (d.B.u("trade_deviation_mode")) {
                case L.tx:
                  D.Qh = d.B.u("trade_deviation_default");
                  break;
                case L.vu:
                  D.Qh = d.B.u("trade_deviation_last");
              }
              break;
            }
          case B.Sl:
            D.aa = K.ck;
            break;
          case B.wk:
            D.aa = K.Ih;
            D.fe = T.A.oi & N.dl ? Q.fm : T.A.oi & N.cl ? Q.Eh : Q.Fh;
            break;
          case B.Eg:
            (D.aa = K.qh), (D.fe = Q.Fh);
        }
        x = !0;
      } else x = !1;
    } else x = !1;
    if (!x) return (O.Ca = p.gm), I;
    if (r.aa == n.ck || !f.H.kn()) return g.Jb.G_(r), null;
    O.Ca = f.$f.Bd(r);
    d.B.u("trade_symbol_last", r.l);
    d.B.u("trade_lots_last", r.m.toString());
    return I;
  }
  function r(c, e, h) {
    if (!b(r, arguments)) return null;
    var k = a.data.za;
    if (!f.H.kn()) return g.Jb.Rs(c, e, h), null;
    var l = new a.data.bi();
    l.Oh = !0;
    var w = {},
      p = {};
    p.jj = l;
    p.Op = w;
    if (!c) return (w.Ca = k.nv), p;
    var n;
    n = c;
    var x = e,
      C = h,
      v = l,
      I = a.data.Fc,
      G = d.O.Ka(n.l);
    G
      ? ((v.l = G.l),
        (v.Ya = n.ka),
        (v.m = n.m.La()),
        (v.aa = I.yj),
        (v.j = G.j),
        (v.C = f.pd.We(x != Number.MAX_VALUE ? x : n.Mb, G.Ta, G.j)),
        (v.D = f.pd.We(C != Number.MAX_VALUE ? C : n.Qb, G.Ta, G.j)),
        (n = !0))
      : (n = !1);
    if (!n) return (w.Ca = k.gm), p;
    w.Ca = f.$f.Bd(l);
    return p;
  }
  function l(c) {
    if (!b(l, arguments)) return null;
    var e = a.data.za,
      h = a.data.Tf,
      k = a.data.Fc,
      q = d.O.Ka(c.l);
    if (q && q.A && q.A.$d == h.Sl) return g.Jb.zv(c), null;
    h = new a.data.bi();
    h.Oh = !0;
    var q = {},
      w = {};
    w.jj = h;
    w.Op = q;
    if (!c) return (q.Ca = e.nv), w;
    var p;
    p = c;
    var n = h,
      x = a.control.Jv,
      r = a.data.Tf,
      v = a.data.yi,
      I = a.data.Ci,
      G = a.data.Fc,
      F = a.data.rm,
      y = a.data.eb,
      M = d.O.Ka(p.l);
    if (M) {
      n.l = M.l;
      n.m = p.m.La();
      n.j = M.j;
      n.X = "0";
      n.Ef = F.Uo | F.To;
      n.Ya = p.ka;
      n.N = p.Oc;
      n.Na = 0;
      n.C = 0;
      n.D = 0;
      n.sd = 0;
      n.$b = 0;
      n.da = p.zb() ? y.Va : y.Ja;
      switch (M.A.$d) {
        case r.bl:
          if (((n.fe = v.Eh), M.A.yh.ab() || n.m.Cl(M.A.yh))) {
            n.aa = G.zg;
            switch (d.B.u("trade_deviation_mode")) {
              case x.tx:
                n.Qh = d.B.u("trade_deviation_default");
                break;
              case x.vu:
                n.Qh = d.B.u("trade_deviation_last");
            }
            break;
          }
        case r.Sl:
          n.aa = G.ck;
          break;
        case r.wk:
          n.aa = G.Ih;
          n.fe = M.A.oi & I.dl ? v.fm : M.A.oi & I.cl ? v.Eh : v.Fh;
          break;
        case r.Eg:
          (n.aa = G.qh), (n.fe = v.Fh);
      }
      p = !0;
    } else p = !1;
    if (!p) return (q.Ca = e.gm), w;
    if (h.aa == k.ck || !f.H.kn()) return g.Jb.zv(c), null;
    q.Ca = f.$f.Bd(h);
    return w;
  }
  function e(c, h, k, l, q, w, p) {
    if (!b(e, arguments)) return null;
    var n = a.data.za;
    if (!f.H.kn()) return g.Jb.I_(c, h, k, l, w, p), null;
    var x = new a.data.bi();
    x.Oh = !0;
    var r = {},
      v = {};
    v.jj = x;
    v.Op = r;
    var I;
    I = h;
    var G = k,
      F = l,
      y = q,
      M = w,
      D = p,
      L = x,
      B = a.data.yi,
      Q = a.data.tj,
      N = a.data.ai,
      K = a.data.Fc,
      P = a.data.rm,
      T = d.O.Ka(c);
    T
      ? ((L.l = T.l),
        (L.aa = K.Pg),
        (L.m = I.La()),
        (L.j = T.j),
        (L.X = "0"),
        (L.Ef = P.Uo),
        (L.N = f.pd.We(F, T.Ta, T.j)),
        (L.Na = f.pd.We(y, T.Ta, T.j)),
        (L.C = f.pd.We(M, T.Ta, T.j)),
        (L.D = f.pd.We(D, T.Ta, T.j)),
        (L.sd = 0),
        (L.$b = 0),
        (L.da = G),
        T.A.Ni & N.An ? (L.sd = Q.il) : T.A.Ni & N.zn && (L.sd = Q.sn),
        (L.fe = B.Fh),
        (I = !0))
      : (I = !1);
    if (!I) return (r.Ca = n.gm), v;
    r.Ca = f.$f.Bd(x);
    return v;
  }
  function k(c, e, h, l, q) {
    if (!b(k, arguments)) return null;
    var w = a.data.za;
    if (!f.H.kn()) return g.Jb.Tq(c.X, e, h, l, q), null;
    var p = new a.data.bi();
    p.Oh = !0;
    var n = {},
      x = {};
    x.jj = p;
    x.Op = n;
    var r;
    r = c;
    var v = e,
      I = h,
      G = l,
      F = q,
      y = p,
      M = a.data.eb,
      D = a.data.Fc,
      L = d.O.Ka(r.l);
    if (L) {
      var B = v ? v - r.N : 0;
      r.C && (r.C = (r.C + B).normalize(r.j));
      r.D && (r.D = (r.D + B).normalize(r.j));
      if (r.yb == M.hd || r.yb == M.jd)
        (r.Na = (r.Na + B).normalize(r.j)),
          I &&
            0 == B &&
            ((B = I - r.Na),
            r.C && (r.C = (r.C + B).normalize(r.j)),
            r.D && (r.D = (r.D + B).normalize(r.j)));
      y.l = r.l;
      y.aa = D.Di;
      y.m = r.Ff.La();
      y.X = r.X;
      y.N = f.pd.We(v ? v : r.N, L.Ta, L.j);
      y.Na = f.pd.We(I ? I : r.Na, L.Ta, L.j);
      y.C = f.pd.We(G != Number.MAX_VALUE ? G : r.C, L.Ta, L.j);
      y.D = f.pd.We(F != Number.MAX_VALUE ? F : r.D, L.Ta, L.j);
      y.sd = r.sd;
      y.$b = r.$b;
      y.da = r.yb;
      r = !0;
    } else r = !1;
    if (!r) return (n.Ca = w.gm), x;
    n.Ca = f.$f.Bd(p);
    return x;
  }
  function h(c) {
    if (!b(h, arguments)) return null;
    var e = a.data.za;
    if (!f.H.kn()) return g.Jb.Tq(c.X), null;
    var k = new a.data.bi();
    k.Oh = !0;
    var l = {},
      q = {};
    q.jj = k;
    q.Op = l;
    var w;
    w = c;
    var p = k,
      n = a.data.Fc,
      x = d.O.Ka(w.l);
    x
      ? ((p.l = w.l),
        (p.aa = n.dk),
        (p.m = w.Ff.La()),
        (p.X = w.X),
        (p.N = f.pd.We(w.N, x.Ta, x.j)),
        (p.Na = f.pd.We(w.Na, x.Ta, x.j)),
        (p.C = f.pd.We(w.C, x.Ta, x.j)),
        (p.D = f.pd.We(w.D, x.Ta, x.j)),
        (p.sd = w.sd),
        (p.$b = w.$b),
        (p.da = w.yb),
        (w = !0))
      : (w = !1);
    if (!w) return (l.Ca = e.gm), q;
    l.Ca = f.$f.Bd(k);
    return q;
  }
  function b(a, b) {
    return f.H.kn() || g.Go.reject
      ? !0
      : (g.Go.na(null, function () {
          a.apply(c, b);
        }),
        !1);
  }
  var a = E.V,
    g = a.view,
    d = a.la,
    f = a.control,
    c = (a.control.Ag = {});
  c.LB = v;
  c.Ks = r;
  c.zba = function (a, b, c) {
    return r(d.P.Ul(a), b, c);
  };
  c.KB = l;
  c.yba = function (a) {
    return l(d.P.Ul(a));
  };
  c.IB = e;
  c.Fs = k;
  c.vI = h;
})();
(function () {
  function v(e, k) {
    var h = r.data.bq;
    return (k.zb() && e.zb()) || (k.uc() && e.uc())
      ? h.xx
      : k.m.Jm(e.wc)
      ? h.Rl
      : h.Zr;
  }
  var r = E.V,
    l = r.control;
  l.kd = {
    Ll: function (e, k, h) {
      void 0 === h && (h = !0);
      return void 0 === k ||
        k.Cl(Long.Ga) ||
        (h && k.Pk(e.A.mj)) ||
        k.lf(e.A.lj) ||
        !k.GM(e.A.sg).ab()
        ? !1
        : !0;
    },
    VP: function (e, k, h, b) {
      return k.Cl(Long.Ga) ||
        (v(h, b) != r.data.bq.Rl && k.Pk(e.A.mj)) ||
        k.lf(e.A.lj) ||
        !k.GM(e.A.sg).ab()
        ? !1
        : !0;
    },
    Ur: function (e, k, h) {
      var b = r.data.Tf,
        a = r.data.Ci,
        g = r.data.yi,
        d = r.data.eb,
        f = r.data.tj,
        c = r.data.Fc;
      void 0 === h && (h = !1);
      if (e.A.$d == b.Sl || e.A.$d == b.bl) {
        if (k.aa == c.Pg || k.aa == c.Uq)
          return h && (k.fe = g.Fh), k.fe == g.Fh;
        h && (k.fe = g.Eh);
        return k.fe == g.Eh;
      }
      if (e.A.$d == b.wk)
        return k.aa == c.Pg || k.aa == c.Uq
          ? (h && (k.fe = g.Fh), k.fe == g.Fh)
          : k.fe == g.Eh
          ? !!(e.A.oi & a.cl)
          : k.fe == g.fm
          ? !!(e.A.oi & a.dl)
          : !1;
      switch (k.fe) {
        case g.Eh:
          if (
            (k.aa == c.Pg || k.aa == c.Uq) &&
            k.da != d.Lc &&
            k.da != d.Zc &&
            k.da != d.hd &&
            k.da != d.jd
          ) {
            if (h) return (k.sd = f.il), (k.fe = f.Fh), !0;
            break;
          }
          return !!(e.A.oi & a.cl);
        case g.fm:
          if (
            (k.aa == c.Pg || k.aa == c.Uq) &&
            k.da != d.Lc &&
            k.da != d.Zc &&
            k.da != d.hd &&
            k.da != d.jd
          ) {
            if (h) return (k.sd = f.il), (k.fe = f.Fh), !0;
            break;
          }
          return !!(e.A.oi & a.dl);
        case g.Fh:
          return !0;
      }
      return !1;
    },
    Wm: function (e, k) {
      var h = r.data.dd,
        b = r.data.eb;
      return (e.A.ad & h.Gq && (k == b.Ja || k == b.Va)) ||
        !(
          e.A.ad & h.zo ||
          (k != b.Lc && k != b.Zc && k != b.hd && k != b.jd)
        ) ||
        !(e.A.ad & h.Ao || (k != b.we && k != b.Ee)) ||
        !(e.A.ad & h.ws || (k != b.hd && k != b.jd))
        ? !1
        : !0;
    },
    Tj: function (e, k) {
      void 0 === e && (e = 0);
      if (0 > e || 1e9 < e) return !1;
      e = e.normalize(k.j);
      return this.SP(e, k);
    },
    SP: function (e, k) {
      if (!k.Ta || !e) return !0;
      var h = Math.pow(10, -(l.j + 1)),
        b = Math.P3(e, k.Ta).normalize(k.j);
      return b > h && b < k.Ta ? !1 : !0;
    },
    nx: function (e, k, h, b, a, g) {
      var d = r.data.za,
        f = r.data.Tf,
        c = r.data.eb,
        l;
      l = (k.Fb * k.A.Ah).normalize(k.j);
      switch (h.da) {
        case c.Ja:
          if (0 > h.N) return d.qf;
          if (0 > h.C || 0 > h.D) return d.Qe;
          if (!h.N) {
            if (k.A.$d == f.wk || k.A.$d == f.Eg) break;
            return d.qf;
          }
          b = e.vb;
          if (0 == b) break;
          e = (b - l).normalize(k.j);
          if (0 < h.C) {
            if (k.Td()) return d.ml;
            if (h.C != a && h.C > e) return d.Qe;
          }
          e = (b + l).normalize(k.j);
          if (0 < h.D) {
            if (k.Td()) return d.ml;
            if (h.D != g && h.D < e) return d.Qe;
          }
          break;
        case c.Va:
          if (0 > h.N) return d.qf;
          if (0 > h.C || 0 > h.D) return d.Qe;
          if (!h.N) {
            if (k.A.$d == f.wk || k.A.$d == f.Eg) break;
            return d.qf;
          }
          b = e.dc;
          if (0 == b) break;
          e = (b + l).normalize(k.j);
          if (0 < h.C) {
            if (k.Td()) return d.ml;
            if (h.C != a && h.C < e) return d.Qe;
          }
          e = (b - l).normalize(k.j);
          if (0 < h.D) {
            if (k.Td()) return d.ml;
            if (h.D != g && h.D > e) return d.Qe;
          }
          break;
        case c.Lc:
          c = e.dc;
          if (0 >= h.N) return d.qf;
          if (0 > h.C || 0 > h.D) return d.Qe;
          if (
            k.A.$d != f.Eg &&
            ((e = (c - l).normalize(k.j)), 0 != c && h.N != b && h.N > e)
          )
            return d.qf;
          e = (h.N - l).normalize(k.j);
          if (0 < h.C && (h.C != a || b != h.N) && h.C > e) return d.Qe;
          e = (h.N + l).normalize(k.j);
          if (0 < h.D && (h.D != g || b != h.N) && h.D < e) return d.Qe;
          break;
        case c.Zc:
          c = e.vb;
          if (0 >= h.N) return d.qf;
          if (0 > h.C || 0 > h.D) return d.Qe;
          if (
            k.A.$d != f.Eg &&
            ((e = (c + l).normalize(k.j)), 0 != c && h.N != b && h.N < e)
          )
            return d.qf;
          e = (h.N + l).normalize(k.j);
          if (0 < h.C && (h.C != a || b != h.N) && h.C < e) return d.Qe;
          e = (h.N - l).normalize(k.j);
          if (0 < h.D && (h.D != g || b != h.N) && h.D > e) return d.Qe;
          break;
        case c.we:
          c = e.dc;
          if (0 >= h.N) return d.qf;
          if (0 > h.C || 0 > h.D) return d.Qe;
          e = (c + l).normalize(k.j);
          if (0 != c && h.N != b && h.N < e) return d.qf;
          e = (h.N - l).normalize(k.j);
          if (0 < h.C && (h.C != a || b != h.N) && h.C > e) return d.Qe;
          e = (h.N + l).normalize(k.j);
          if (0 < h.D && (h.D != g || b != h.N) && h.D < e) return d.Qe;
          break;
        case c.Ee:
          c = e.vb;
          if (0 >= h.N) return d.qf;
          if (0 > h.C || 0 > h.D) return d.Qe;
          e = (c - l).normalize(k.j);
          if (0 != c && h.N != b && h.N > e) return d.qf;
          e = (h.N + l).normalize(k.j);
          if (0 < h.C && (h.C != a || b != h.N) && h.C < e) return d.Qe;
          e = (h.N - l).normalize(k.j);
          if (0 < h.D && (h.D != g || b != h.N) && h.D > e) return d.Qe;
          break;
        case c.hd:
          c = e.dc;
          if (0 >= h.N || 0 >= h.Na) return d.qf;
          if (0 > h.C || 0 > h.D) return d.Qe;
          e = (c + l).normalize(k.j);
          if (
            (0 != c && h.N != b && h.N < e) ||
            (k.A.$d != f.Eg && ((e = (h.N - l).normalize(k.j)), h.Na > e))
          )
            return d.qf;
          e = (h.Na - l).normalize(k.j);
          if (0 < h.C && h.C > e) return d.Qe;
          e = (h.Na + l).normalize(k.j);
          if (0 < h.D && h.D < e) return d.Qe;
          break;
        case c.jd:
          c = e.vb;
          if (0 >= h.N || 0 >= h.Na) return d.qf;
          if (0 > h.C || 0 > h.D) return d.Qe;
          e = (c - l).normalize(k.j);
          if (
            (0 != c && h.N != b && h.N > e) ||
            (k.A.$d != f.Eg && ((e = (h.N + l).normalize(k.j)), h.Na < e))
          )
            return d.qf;
          e = (h.Na + l).normalize(k.j);
          if (0 < h.C && h.C < e) return d.Qe;
          e = (h.Na - l).normalize(k.j);
          if (0 < h.D && h.D > e) return d.Qe;
      }
      return d.Cb;
    },
    UP: function (e, k, h) {
      var b = r.data.Yi,
        a = r.data.bq,
        g = r.data.za;
      switch (e.A.Rh) {
        case b.OK:
          if (e.Td()) break;
          return k.zb() || (k.uc() && v(k, h) == a.Rl) ? g.Cb : g.UB;
        case b.Fv:
          if (e.Td()) break;
          return k.uc() || (k.zb() && v(k, h) == a.Rl) ? g.Cb : g.WB;
        case b.CD:
          return v(k, h) == a.Rl ? g.Cb : g.SB;
        case b.Ev:
          if (e.Td()) break;
          return g.Cb;
      }
      return g.ml;
    },
    TP: function (e, k) {
      var h = r.data.tj,
        b = r.data.ai;
      switch (k.sd) {
        case h.il:
          return e.A.Ni & b.An;
        case h.sn:
          return e.A.Ni & b.zn;
        case h.Bk:
          return e.A.Ni & b.Wq;
        case h.Ck:
          return e.A.Ni & b.Xq;
      }
      return !1;
    },
  };
})();
(function () {
  function v(a) {
    var b = w.data.za,
      c = w.data.Fc,
      d = w.data.Tf;
    if (p.H.Nm & p.$E.JB && !n.H.cB()) return b.ml;
    if (a.aa != c.Yg && a.aa != c.zg && a.aa != c.Ih && a.aa != c.qh)
      return b.Cb;
    var e = p.O.Ka(a.l);
    if (!e) return b.Xg;
    switch (e.A.$d) {
      case d.Sl:
        a.aa != c.Yg && (a.aa = c.Yg);
        break;
      case d.bl:
        !e.A.yh.ab() && a.m.lf(e.A.yh) ? (a.aa = c.Yg) : (a.aa = c.zg);
        break;
      case d.wk:
        a.aa != c.Ih && (a.aa = c.Ih);
        break;
      case d.Eg:
        a.aa != c.qh && (a.aa = c.qh);
    }
    return b.Cb;
  }
  function r(a) {
    var b = w.data.za,
      c = w.data.yi,
      d,
      e = {};
    d = f(a, e);
    if (d != b.Cb) return d;
    var g = e.Ya,
      e = e.ac;
    if (!n.kd.Ur(e, a, !0)) return b.Lo;
    if (!q(a, e, g)) return b.im;
    d = z(a, e, g);
    if (d != b.Cb) return d;
    d = A(a, e, g);
    if (d != b.Cb) return d;
    if (!n.kd.Wm(e, a)) return b.kl;
    a.fe = c.Eh;
    return b.Cb;
  }
  function l(a, b) {
    var c = w.data.za,
      d = w.data.Tf,
      e = w.data.yi,
      g = {},
      h = f(a, g);
    if (h != c.Cb) return h;
    var p = g.ac,
      g = g.Ya;
    if (!n.kd.Tj(a.N, p)) return c.qf;
    if (p.A.$d != d.bl) return c.Xg;
    if (!n.kd.Ur(p, a, !0)) return c.Lo;
    if (!q(a, p, g)) return c.im;
    h = z(a, p, g);
    if (h != c.Cb) return h;
    h = A(a, p, g);
    if (h != c.Cb) return h;
    if (2147483647 < a.Qh) return c.ml;
    if (!n.kd.Wm(p, a)) return c.kl;
    h = m(a, p, b);
    if (h != c.Cb) return h;
    a.fe = e.Eh;
    return c.Cb;
  }
  function e(a) {
    var b = w.data.za,
      c = w.data.Tf,
      d = {},
      e;
    e = f(a, d);
    if (e != b.Cb) return e;
    var g = d.ac,
      d = d.Ya;
    if (!n.kd.Tj(a.N, g)) return b.qf;
    if (g.A.$d != c.wk) return b.Xg;
    if (!n.kd.Ur(g, a, !0)) return b.Lo;
    if (!q(a, g, d)) return b.im;
    e = z(a, g, d);
    if (e != b.Cb) return e;
    e = A(a, g, d);
    return e != b.Cb ? e : n.kd.Wm(g, a) ? b.Cb : b.kl;
  }
  function k(a) {
    var b = w.data.za,
      c = w.data.Tf,
      d = w.data.Fc,
      e = {},
      g;
    g = f(a, e);
    if (g != b.Cb) return g;
    var h = e.ac,
      e = e.Ya;
    if (!n.kd.Tj(a.N, h)) return b.qf;
    if (h.A.$d != c.Eg) return b.Xg;
    if (!n.kd.Ur(h, a, !0)) return b.Lo;
    if (!q(a, h, e)) return b.im;
    g = z(a, h, e);
    if (g != b.Cb) return g;
    g = A(a, h, e);
    if (g != b.Cb) return g;
    if (!n.kd.Wm(h, a)) return b.kl;
    a.Ef |= d.Uo;
    a.N = 0;
    return b.Cb;
  }
  function h(a) {
    var b = w.data.za,
      c = w.data.Tf,
      d = w.data.tj,
      e = w.data.yi,
      g = {},
      h;
    h = f(a, g);
    if (h != b.Cb) return h;
    var p = g.ac,
      g = g.Ya;
    if (!n.kd.TP(p, a) || ((a.sd == d.Bk || a.sd == d.Ck) && !a.$b))
      return b.TB;
    if (!q(a, p, g)) return b.im;
    h = u(a, p, new w.data.ig());
    if (h != b.Cb) return h;
    if (
      a.ns() &&
      ((p.fo && 0 > a.N.kp(p.fo, p.j)) || (p.eo && 0 < a.N.kp(p.eo, p.j)))
    )
      return b.qf;
    h = A(a, p, g);
    if (h != b.Cb) return h;
    if (!n.kd.Ur(p, a, !0)) return b.Lo;
    if (!n.kd.Wm(p, a)) return b.kl;
    p.A.$d != c.wk && p.A.$d != c.Eg && (a.fe = e.Fh);
    return b.Cb;
  }
  function b(a) {
    var b = w.data.za,
      c = w.data.eb,
      d = {},
      e = f(a, d);
    if (e != b.Cb) return e;
    var g = d.ac,
      d = d.Ya;
    if (d.m.ab()) return b.ll;
    if (!n.kd.Tj(a.C, g) || !n.kd.Tj(a.D, g)) return b.Qe;
    a.N = d.Oc;
    a.da = d.zb() ? c.Ja : c.Va;
    c = p.wa.u(g.l);
    if (!c) return b.Mo;
    e = n.kd.nx(c, g, a, d.Oc, d.Mb, d.Qb);
    return e != b.Cb
      ? e
      : d.Mb == a.C && d.Qb == a.D
      ? b.VB
      : n.kd.Wm(g, a)
      ? b.Cb
      : b.kl;
  }
  function a(a) {
    var b = w.data.za,
      c = w.data.Io,
      d = w.data.eb,
      e = p.P.df(a.X);
    if (!e) return b.Xg;
    var f = p.O.Ka(e.l);
    if (!f) return b.Xg;
    a.da = e.yb;
    if (e.yb == d.Ja || e.yb == d.Va || (e.qk != c.Hq && e.qk != c.rn))
      return b.Xg;
    c = u(a, f, e);
    if (c != b.Cb) return c;
    if (
      e.N == a.N &&
      e.Na == a.Na &&
      e.C == a.C &&
      e.D == a.D &&
      e.sd == a.sd &&
      e.$b == a.$b
    )
      return b.VB;
    if (!n.kd.Wm(f, a)) return b.kl;
    a.l = e.l;
    a.da = e.yb;
    a.j = f.j;
    return b.Cb;
  }
  function g(a) {
    var b = w.data.za,
      d = w.data.Tf,
      e = w.data.Io,
      f = w.data.eb,
      g = p.P.df(a.X);
    if (!g) return b.Xg;
    var h = p.O.Ka(g.l);
    if (!h) return b.Xg;
    var n = c(h);
    if (n != b.Cb) return n;
    if (
      ((g.yb == f.Ja || g.yb == f.Va) && h.A.$d != d.Eg) ||
      (g.qk != e.Hq && g.qk != e.rn)
    )
      return b.Xg;
    a.l = g.l;
    a.da = g.yb;
    a.j = h.j;
    return b.Cb;
  }
  function d(a) {
    var b = w.data.za;
    if (!n.Wc.Kg(p.H)) return b.Xg;
    var d = p.P.fg(a.Ya),
      e = p.P.fg(a.Nj);
    if (!d || !e || d.l != e.l || d.aa == e.aa) return b.Xg;
    e = p.O.Ka(d.l);
    if (!e) return b.Xg;
    var f = c(e);
    if (f != b.Cb) return f;
    if (!n.P.$K(e)) return b.kl;
    a.l = e.l;
    a.j = e.j;
    a.da = d.aa;
    a.m = d.m.La();
    return b.Cb;
  }
  function f(a, b) {
    var d = w.data.za,
      e,
      f;
    if (n.Wc.Kg(p.H)) {
      if (a.Ya && ((f = p.P.fg(a.Ya)), !f)) return d.Xg;
      if (a.aB()) {
        if (a.m.lf(f.m)) return d.im;
        if ((a.zb() && f.zb()) || (a.uc() && f.uc())) return d.Xg;
      }
    } else f = p.P.Ul(a.l);
    f || (f = new w.data.Tg());
    var g = p.O.Ka(f && !f.m.ab() ? f.l : a.l);
    if (!g) return d.Xg;
    e = c(g);
    if (e != d.Cb) return e;
    a.l = g.l;
    a.j = g.j;
    b && ((b.Ya = f), (b.ac = g));
    return d.Cb;
  }
  function c(a) {
    var b = w.data.za;
    return a.A.Rh == w.data.Yi.$q ? b.ml : b.Cb;
  }
  function z(a, b, c) {
    var d = w.data.za,
      e = w.data.eb,
      f = c.Mb,
      g = c.Qb;
    if (!n.kd.Tj(a.N, b)) return d.qf;
    if (!n.kd.Tj(a.C, b) || !n.kd.Tj(a.D, b)) return d.Qe;
    ((a.da == e.Ja && c.uc()) || (a.da == e.Va && c.zb())) &&
      a.m.Jm(c.m) &&
      (g = f = 0);
    return (e = p.wa.u(b.l)) ? n.kd.nx(e, b, a, c.Oc, f, g) : d.Mo;
  }
  function A(a, b, c) {
    var d = new w.data.ig();
    d.yb = a.da;
    d.Ff = a.m.La();
    d.wc = a.m.La();
    return n.kd.UP(b, d, c);
  }
  function m(a, b, c) {
    var d = w.data.za,
      e = w.data.aL,
      f = w.data.eb,
      g = w.data.wo,
      h = p.H,
      k;
    if (!(k = a.aa != w.data.Fc.zg) && (k = c)) {
      var m = w.data.eb,
        l = new Date().getTime(),
        u;
      k = n.$f.RX();
      var q;
      if (k)
        for (var z = 0; z < k.length; z++)
          (q = k[z]),
            l > q.time
              ? (k.splice(z, 1), z--)
              : a.aa == q.jj.aa &&
                a.da == q.jj.da &&
                0 === a.m.compare(q.jj.m) &&
                a.l == q.jj.l &&
                (u = q);
      if (u) {
        m = a.da == m.Ja ? u.dc : u.vb;
        l = 0;
        for (q = k.length; l < q; l++) k[l] && k[l] == u && k.splice(l, 1);
        0 < Math.pow(10, b.j) * Math.abs(a.N - m) && (u = null);
      }
      k = !!u;
    }
    if (k) return d.Cb;
    b = p.wa.u(b.l);
    if (!b) return d.Mo;
    if (
      (a.da == f.Ja && b.rd & g.gn && a.N == b.Xe) ||
      (a.da == f.Va && b.rd & g.hn && a.N == b.Ye)
    )
      return d.Cb;
    u = p.wa.aF(a.l);
    if (!u || !u.length) return d.Cb;
    u = u.slice();
    u.length > e.XG && (u.length = e.XG);
    var r, v;
    k = 0;
    for (var A, m = u.length - 1; 0 <= m; m--)
      if ((b = u[m])) {
        if (a.da == f.Ja)
          if (b.rd & g.gn)
            (A = b.dc),
              (v = Math.floor(b.time / 1e3)),
              k++,
              k || (r = v - e.YG);
          else continue;
        if (a.da == f.Va)
          if (b.rd & g.hn)
            (A = b.vb),
              (v = Math.floor(b.time / 1e3)),
              k++,
              k || (r = v - e.YG);
          else continue;
        if (v < r) {
          c && (h.wl += e.Wu);
          break;
        }
        if (k > e.GT) {
          c && (h.wl += e.Wu);
          break;
        }
        if (A == a.N) {
          if (1 < k) {
            if (c && ((h.wl += e.Wu), h.wl >= e.FT)) break;
          } else c && (h.wl -= e.ET);
          return d.Cb;
        }
      }
    if (!k) return d.Cb;
    0 > m && c && (h.wl += e.Wu);
    return d.Mo;
  }
  function u(a, b, c) {
    var d = w.data.za;
    if (!n.kd.Tj(a.N, b) || !n.kd.Tj(a.Na, b)) return d.qf;
    if (!n.kd.Tj(a.C, b) || !n.kd.Tj(a.D, b)) return d.Qe;
    var e = p.wa.u(b.l);
    return e ? n.kd.nx(e, b, a, c.N, c.C, c.D) : d.Mo;
  }
  function q(a, b, c) {
    var d = new w.data.ig();
    d.yb = a.da;
    d.Ff = a.m.La();
    d.wc = a.m.La();
    return n.kd.VP(b, a.m, d, c);
  }
  var w = E.V,
    p = w.la,
    n = w.control;
  (w.control.ct = {}).Tr = function (c, m) {
    var u = w.data.za,
      q = w.data.Fc,
      z;
    c.ga = p.H.ga;
    c.j = 5;
    z = v(c);
    if (z != u.Cb) return z;
    switch (c.aa) {
      case q.ck:
        var u = w.data.za,
          q = w.data.Tf,
          A = {};
        z = f(c, A);
        z == u.Cb &&
          ((z = A.ac),
          (z =
            z.A.$d != q.Sl && (z.A.$d != q.bl || z.A.yh.ab() || z.A.yh.Jm(c.m))
              ? u.Xg
              : n.kd.Ll(z, c.m, !1)
              ? u.Cb
              : u.im));
        break;
      case q.Yg:
        z = r(c);
        break;
      case q.zg:
        z = l(c, m);
        break;
      case q.Ih:
        z = e(c);
        break;
      case q.qh:
        z = k(c);
        break;
      case q.Pg:
        z = h(c);
        break;
      case q.yj:
        z = b(c);
        break;
      case q.Di:
        z = a(c);
        break;
      case q.dk:
        z = g(c);
        break;
      case q.Zi:
        z = d(c);
    }
    return z;
  };
})();
(function () {
  var v = window.J.V,
    r = v.control,
    l = v.la;
  v.control.Wc = {
    ti: function (e) {
      var k = l.H.xp;
      k === v.data.on.bv
        ? v.control.YH.ti(e)
        : k === v.data.on.qs
        ? v.control.ZH.ti(e)
        : v.control.$H.ti(e);
    },
    ui: function (e) {
      var k = l.H.xp;
      k === v.data.on.bv
        ? v.control.YH.ui(e)
        : k === v.data.on.qs
        ? v.control.ZH.ui(e)
        : v.control.$H.ui(e);
    },
    Kg: function (e) {
      return e.xp === v.data.on.qs;
    },
    Vp: function (e, k, h, b, a) {
      var g = v.data.Pc,
        d = v.data.eb,
        f = 0,
        c = 0,
        c = 0;
      switch (e.Zd) {
        case g.Ei:
        case g.Wo:
          f = b;
          break;
        case g.Xo:
        case g.Bn:
        case g.Gk:
          e.Ta &&
            e.Qf &&
            ((f = r.Wa.od(h)), (f = ((f * a * e.Qf) / e.Ta).normalize(e.kk)));
          break;
        case g.Xs:
        case g.Ys:
        case g.Zs:
        case g.nl:
        case g.ol:
        case g.Hk:
        case g.Cn:
          f = (b * a).normalize(e.Fm);
          break;
        case g.ek:
        case g.fk:
          f = ((b * e.Mi * a) / 100).normalize(e.kk);
          c = k === d.Ja ? r.ff.km(e, e.dM, e.vt) : r.ff.lm(e, e.dM, e.vt);
          f = (f * c).normalize(e.Fm);
          c = (b * e.Zk).normalize(e.Fm);
          f = f.ca(c, e.Fm);
          break;
        case g.Dn:
          f = (b * a).normalize(e.Fm);
          break;
        default:
          f = 0;
      }
      return f;
    },
  };
})();
(function () {
  function v(a, c) {
    var d = a.yc,
      e = {},
      f,
      k = {},
      l,
      u = 0,
      w = 0,
      z,
      v;
    z = c.value = 0;
    for (v = q.length; z < v; z++)
      if ((u = q[z])) {
        f = g.data.eb;
        l = void 0;
        p = [];
        n = [];
        for (var A = 0, G = m.length; A < G; A++)
          if ((l = m[A]))
            l.xn(null), l.tD(0), l.m && (l.uk == f.Ja ? p.push(l) : n.push(l));
        if (!p.length && !n.length) break;
        f = h(u, p, u.qp, e);
        l = h(u, n, u.rp, k);
        if (f && l && ((f = Math.min(e.Mr, k.Mr)), 0 < f)) {
          u = r(a, u, f, p, n);
          0 < u.kp(0, d) && u > w && ((w = u), b(p, x), b(n, C));
          continue;
        }
        f = h(u, n, u.qp, e);
        l = h(u, p, u.rp, k);
        f &&
          l &&
          ((f = Math.min(e.Mr, k.Mr)),
          0 < f &&
            ((u = r(a, u, f, p, n)),
            0 < u.kp(0, d) && u > w && ((w = u), b(p, x), b(n, C))));
      }
    c.value = Math.min(a.margin, w);
    if (0 < c.value) {
      if (x.length == p.length)
        for (z = 0, v = x.length; z < v; z++) p[z].ND(x[z]);
      if (C.n4 == n.length)
        for (z = 0, v = m_spreads_volumes_sell.n4; z < v; z++) n[z].ND(C[z]);
      return !0;
    }
    return !1;
  }
  function r(a, b, c, d, f) {
    var h = g.data.dK,
      n,
      p;
    switch (b.Cw) {
      case h.HH:
        return (
          (p = {}),
          (h = e(a, d, c, p)),
          (n = e(a, f, c, p)),
          (c = (b.bb * c) / A),
          (h + n).ca(-c, a.yc)
        );
      case h.qB:
        return (
          (p = {}),
          (h = l(a, d, p)),
          (n = l(a, f, p)),
          h >= n ? k(f) : k(d),
          Math.min(h, n)
        );
      case h.FH:
        return (
          (p = {}),
          (h = e(a, d, c, p)),
          (n = e(a, f, c, p)),
          (b = !p.Mj && b.ub ? b.ub : b.bb),
          ((h * b) / 100 + (n * b) / 100).normalize(a.yc)
        );
      case h.GH:
        return (
          (p = {}),
          (h = e(a, d, c, p)),
          (n = e(a, f, c, p)),
          (b = !p.Mj && b.ub ? b.ub : b.bb),
          (c = Math.abs(h - n) + (b * c) / A),
          (h + n).ca(-c, a.yc)
        );
    }
    return 0;
  }
  function l(a, b, c) {
    for (var d = 0, e, f, g, h = 0, n = b.length; h < n; h++)
      if ((e = b[h]))
        (f = e.xn()),
          (g = e.m),
          f && ((d = d.ca(e.Tm * g, a.j)), c && (c.Mj |= e.Gt));
    return d;
  }
  function e(a, b, c, d) {
    for (var e, f, g = a.yc, h = 0, n = (e = 0), p = b.length; n < p; n++)
      if ((a = b[n]))
        (e = a.xn()),
          (f = a.m),
          e &&
            ((e = Math.floor((e.Rm * c).normalize(0))),
            (e = Math.min(f, e)),
            (h = h.ca(a.Tm * e, g)),
            a.tD(e),
            (d.Mj |= a.Gt));
    return h;
  }
  function k(a) {
    for (var b = 0, c = a.length; b < c; b++) {
      var d = a[b];
      d.xn() && d.ND(d.m);
    }
  }
  function h(a, b, c, d) {
    var e = g.data.cK,
      f,
      h,
      n,
      p,
      k,
      m,
      l;
    d.Mr = Number.MAX_VALUE;
    if (!b.length && !c.length) return !0;
    f = 0;
    for (n = c.length; f < n; f++)
      if ((k = c[f])) {
        l = !1;
        h = 0;
        for (
          p = b.length;
          h < p &&
          (!(m = b[h]) ||
            !k.SF(m.JW(), m.MN(), m.YR()) ||
            (m.xn(k),
            k.Rm && (d.Mr = Math.min(d.Mr, Math.floor(m.m / k.Rm))),
            (l = !0),
            a.Cw === e.qB && k.JE === e.wH));
          h++
        );
        if (!l) break;
      }
    if (f < c.length) {
      h = 0;
      for (p = b.length; h < p; h++) (m = b[h]) && m.xn(null);
      return !1;
    }
    return !0;
  }
  function b(a, b) {
    for (var c = (b.length = 0), d = a.length; c < d; c++) b[c] = a[c].tD();
  }
  function a(a) {
    var b, c, d;
    if (!a) return null;
    if (m)
      for (c = 0, d = m.length; c < d; c++)
        if ((b = m[c]) && b.ac && b.ac.l == a) return b;
    if (u)
      for (c = 0, d = u.length; c < d; c++)
        if ((b = u[c]) && b.ac && b.ac.l == a)
          return u.splice(c, 1), m.push(b), b;
    b = new g.data.EW(a);
    m.push(b);
    return b;
  }
  var g = E.V,
    d = g.la,
    f = g.data.Tg,
    c = g.data.ig,
    z = (g.control.$H = {});
  z.ti = function (b) {
    if (b) {
      b.ya = 0;
      b.Xd = 0;
      b.pc = 0;
      b.margin = 0;
      b.bb = 0;
      b.ub = 0;
      b.Ie = 0;
      b.Sb = 0;
      b.Gc = 0;
      b.Qc = 0;
      b.jf = 0;
      m = [];
      I = G = I = O = 0;
      var c = b.yc,
        e = d.P.ee,
        f,
        h;
      if (e)
        for (var n = 0, p = e.length; n < p; n++)
          (f = e[n]) &&
            (h = a(f.l)) &&
            h.$k(f) &&
            !h.Td() &&
            ((b.ya = b.ya.ca(f.ya, c)), (b.pc = b.pc.ca(f.pc, c)));
      b.Ie = b.Ie.ca(b.ya, c);
      b.Ie = b.Ie.ca(b.pc, c);
      c = void 0;
      e = b.yc;
      f = void 0 !== c;
      h = d.P.Yd;
      var k;
      if (h) {
        for (var p = 0, l = h.length; p < l; p++)
          if ((k = h[p]))
            if ((n = a(k.l)))
              c && c.X == k.X
                ? (n.Sh(c, f),
                  k.pg.kp(c.pg) && (b.Nd = b.Nd.ca(c.pg - k.pg, e)),
                  k.qg.kp(c.qg) && (b.Nd = b.Nd.ca(c.qg - k.qg, e)),
                  (O = c.yb),
                  (I = c.m),
                  (c = null))
                : n.Sh(k, f);
        c &&
          (n = a(k.l)) &&
          (n.Sh(c, f),
          (b.Nd = b.Nd.ca(c.pg, e)),
          (b.Nd = b.Nd.ca(c.qg, e)),
          (O = c.yb),
          (I = c.m));
      }
      b.margin = 0;
      b.Gc = 0;
      b.Qc = 0;
      b.jf = 0;
      if (m) for (c = 0, e = m.length; c < e; c++) (k = m[c]) && k.vk();
      k = b.yc;
      var c = {},
        e = 0,
        u;
      if (d.pm.F2()) {
        q = [];
        w = [];
        f = 0;
        for (h = m.length; f < h; f++)
          if ((n = m[f]))
            if ((n = n.o()))
              for (n = d.pm.DG(n), l = 0, u = n.length; l < u; l++)
                (p = n[l]) &&
                  -1 === w.indexOf(p.Hp) &&
                  (q.push(p), w.push(p.Hp));
        for (; v(b, c); ) 0 < c.value.kp(0, k) && (e = e.ca(c.value, k));
        e = Math.min(b.margin, e);
        b.margin = b.margin.ca(-e, k);
      }
      k = g.data.Cq;
      c = b.yc;
      b.Sb = b.Wd;
      b.Sb = b.Sb.ca(b.Ie, c);
      b.Sb = b.Sb.ca(b.Qg, c);
      b.Sb = b.Sb.ca(b.Gc, c);
      b.Sb = b.Sb.ca(b.Qc, c);
      b.Sb = b.Sb.ca(b.Nd, c);
      switch (b.vp) {
        case k.eq:
          0 < b.hi && (b.Sb = b.Sb.ca(-b.hi, c));
      }
      k = g.data.mG;
      c = g.data.Cq;
      e = b.yc;
      b.Rc = b.Wd;
      b.Rc = b.Rc.ca(-b.margin, e);
      b.Rc = b.Rc.ca(b.Qg, e);
      b.Rc = b.Rc.ca(b.Gc, e);
      b.Rc = b.Rc.ca(b.Qc, e);
      b.Rc = b.Rc.ca(b.Nd, e);
      switch (b.AE) {
        case k.kG:
          b.Rc = b.Rc.ca(b.Ie, e);
          break;
        case k.jG:
          0 < b.Ie && (b.Rc = b.Rc.ca(b.Ie, e));
          break;
        case k.iG:
          0 > b.Ie && (b.Rc = b.Rc.ca(b.Ie, e));
      }
      switch (b.vp) {
        case c.eq:
          0 < b.hi && (b.Rc = b.Rc.ca(-b.hi, e));
      }
      b.Tn = 0 < b.margin ? (b.Sb / b.margin) * 100 : 0;
    }
  };
  z.ui = function (a) {
    var b = g.control.cu,
      c = g.data.fK;
    if (!a) return !1;
    a.Qj = b.au;
    return a.Ct == c.pJ
      ? a.margin && a.Tn < a.Bt && ((a.Qj = b.Nr), a.Tn < a.Dt)
        ? ((a.Qj = b.Or), !0)
        : !1
      : a.Ct == c.oJ && a.margin && a.Sb < a.Bt && ((a.Qj = b.Nr), a.Sb < a.Dt)
      ? ((a.Qj = b.Or), !0)
      : !1;
  };
  z.lu = function (a, b, d) {
    if (0 <= b.Rc + a.EM) return !0;
    if (((f.zb(G) && c.uc(O)) || (f.uc(G) && c.zb(O))) && !F.ab() && !I.ab()) {
      var e = this.Vn.m.sub(this.Mj.wc);
      if ((e.Jm(Long.ZERO) || e.co().Pk(this.Vn.m)) && b.margin <= a.margin)
        return !0;
    }
    if (0 >= b.margin) return !0;
    d &&
      ((e = []),
      e.push("Balance: ", a.Wd.toFixed(2)),
      e.push("  Credit: ", a.Qg.toFixed(2)),
      e.push("  Commission: ", a.Nd.toFixed(2)),
      e.push(
        "  Accumulated: ",
        a.vp == g.data.Cq.eq && 0 < a.hi ? a.hi.toFixed(2) : "0.00"
      ),
      e.push("  Assets: ", a.Gc.toFixed(2)),
      e.push("  Liabilities: ", a.Qc.toFixed(2)),
      e.push("  Equity: ", a.Sb.toFixed(2)),
      e.push("  Margin: ", a.margin.toFixed(2)),
      e.push("  FreeMargin: ", a.Rc.toFixed(2)),
      (d.L3 = e.join("")),
      (e = []),
      e.push("Assets: ", b.Gc.toFixed(2)),
      e.push("  Liabilities: ", b.Qc.toFixed(2)),
      e.push("  Equity: ", b.Sb.toFixed(2)),
      e.push("  Margin: ", b.margin.toFixed(2)),
      e.push("  FreeMargin: ", b.Rc.toFixed(2)),
      (d.M3 = e.join("")));
    return !1;
  };
  var A = 1e8,
    m = [],
    u = [],
    q = [],
    w = [],
    p = [],
    n = [],
    x = [],
    C = [],
    O = 0,
    I = 0,
    G = 0,
    F = 0;
})();
(function () {
  function v(b, a) {
    var g = this,
      d = b.yc,
      f = e.P.ee;
    f &&
      f.forEach(function (c) {
        var f;
        c &&
          (f = e.O.Ka(c.l)) &&
          !c.m.ab() &&
          (f = r(c.l)) &&
          f.$k(c) &&
          !f.Td() &&
          (a && a.l === c.l && (g.Vn = c),
          (b.ya = b.ya.ca(c.ya, d)),
          c.pc && (b.pc = b.pc.ca(c.pc, d)),
          f.pU() &&
            ((g.wt = g.wt.ca(c.ya, d)), c.pc && (g.wt = g.wt.ca(c.pc, d))));
      });
    b.Ie = b.Ie.ca(b.ya, d);
    b.pc && (b.Ie = b.Ie.ca(b.pc, d));
  }
  function r(b) {
    var a = l.data.Pc,
      g,
      d,
      f;
    if (!b) return null;
    if (k)
      for (d = 0, f = k.length; d < f; d++)
        if ((g = k[d]) && g.ac && g.ac.l === b) return g;
    if (h)
      for (d = 0, f = h.length; d < f; d++)
        if ((g = h[d]) && g.ac && g.ac.l === b)
          return h.splice(d, 1), k.push(g), g;
    switch (e.O.Ka(b).Zd) {
      case a.nl:
      case a.Hk:
      case a.ek:
        g = new l.data.yW(b);
        break;
      case a.ol:
      case a.fk:
        g = new l.data.AW(b);
        break;
      default:
        (g = new l.data.BW(b)), g.eU(e.H);
    }
    k.push(g);
    return g;
  }
  var l = window.J.V,
    e = l.la,
    k = [],
    h = [];
  l.control.YH = {
    ti: function (b, a) {
      if (b) {
        b.ya = 0;
        b.Xd = 0;
        b.pc = 0;
        b.margin = 0;
        b.bb = 0;
        b.ub = 0;
        b.Ie = 0;
        b.Sb = 0;
        b.Gc = 0;
        b.Qc = 0;
        this.wt = b.jf = 0;
        k = [];
        v.call(this, b, a);
        a: {
          var g = a,
            d = b.yc,
            f = void 0 !== g,
            c = e.P.Yd,
            h,
            l,
            m,
            u;
          if (c) {
            m = 0;
            for (u = c.length; m < u; m++)
              if ((h = c[m])) {
                l = r(h.l);
                if (!l) break a;
                g && g.X === h.X
                  ? (l.Sh(g, f),
                    h.pg !== g.pg && (b.Nd = b.Nd.ca(g.pg - h.pg, d)),
                    h.qg !== g.qg && (b.Nd = b.Nd.ca(g.qg - h.qg, d)),
                    (this.Mj = g),
                    (g = null))
                  : l.Sh(h, f);
              }
            g &&
              (l = r(h.l)) &&
              (l.Sh(g, f),
              (b.Nd = b.Nd.ca(g.pg, d)),
              (b.Nd = b.Nd.ca(g.qg, d)),
              (this.Mj = g));
          }
        }
        b.margin = 0;
        b.bb = 0;
        b.ub = 0;
        b.Gc = 0;
        b.Qc = 0;
        b.jf = 0;
        if (k) for (d = 0, f = k.length; d < f; d++) (g = k[d]) && g.vk(b);
        g = b.yc;
        b.Sb = b.Wd;
        b.Sb = b.Sb.ca(this.wt, g);
        b.Sb = b.Sb.ca(b.Qg, g);
        b.Sb = b.Sb.ca(b.Gc, g);
        b.Sb = b.Sb.ca(b.Qc, g);
        b.Sb = b.Sb.ca(b.Nd, g);
        b.Rc = 0;
        b.Rc = b.Sb.ca(-b.margin, b.yc);
        b.Tn = b.ub ? (b.Sb / b.ub) * 100 : 0;
      }
    },
    ui: function (b) {
      var a = l.control.cu;
      if (!b) return !1;
      b.Qj = a.au;
      return 0 >= b.ub || 0 >= b.margin
        ? !1
        : b.Sb < b.bb && ((b.Qj = a.Nr), b.Sb < b.ub)
        ? ((b.Qj = a.Or), !0)
        : !1;
    },
    lu: function (b, a, e) {
      var d;
      if (
        a.Sb > a.margin ||
        (this.Vn &&
          this.Mj &&
          ((this.Vn.zb() && this.Mj.uc()) || (this.Vn.uc() && this.Mj.zb())) &&
          !this.Vn.m.ab() &&
          !this.Mj.wc.ab() &&
          ((d = this.Vn.m.sub(this.Mj.wc)),
          (d.Jm(window.Bl.ZERO) || d.co().Pk(this.Vn.m)) &&
            a.margin <= b.margin)) ||
        0 >= a.margin
      )
        return !0;
      e &&
        ((d = []),
        d.push("Balance: ", b.Wd.toFixed(2)),
        d.push("  Credit: ", b.Qg.toFixed(2)),
        d.push("  Commission: ", b.Nd.toFixed(2)),
        d.push("  Assets: ", b.Gc.toFixed(2)),
        d.push("  Liabilities: ", b.Qc.toFixed(2)),
        d.push("  Equity: ", b.Sb.toFixed(2)),
        d.push("  Margin: ", b.margin.toFixed(2)),
        d.push("  FreeMargin: ", b.Rc.toFixed(2)),
        (e.L3 = d.join("")),
        (d = []),
        d.push("Balance: ", b.Wd.toFixed(2)),
        d.push("  Credit: ", b.Qg.toFixed(2)),
        d.push("  Commission: ", a.Nd.toFixed(2)),
        d.push("  Assets: ", a.Gc.toFixed(2)),
        d.push("  Liabilities: ", a.Qc.toFixed(2)),
        d.push("  Equity: ", a.Sb.toFixed(2)),
        d.push("  Margin: ", a.margin.toFixed(2)),
        d.push("  FreeMargin: ", a.Rc.toFixed(2)),
        (e.M3 = d.join("")));
      return !1;
    },
  };
})();
(function () {
  function v(b) {
    var a, e, d;
    if (!b) return null;
    if (k)
      for (e = 0, d = k.length; e < d; e++)
        if ((a = k[e]) && a.ac && a.ac.l == b) return a;
    if (h)
      for (e = 0, d = h.length; e < d; e++)
        if ((a = h[e]) && a.ac && a.ac.l == b)
          return h.splice(e, 1), k.push(a), a;
    a = new r.data.DW(b);
    k.push(a);
    return a;
  }
  var r = E.V,
    l = r.la,
    e = (r.control.ZH = {});
  e.ti = function (b, a) {
    if (b) {
      b.ya = 0;
      b.Xd = 0;
      b.pc = 0;
      b.margin = 0;
      b.bb = 0;
      b.ub = 0;
      b.Ie = 0;
      b.Sb = 0;
      b.Gc = 0;
      b.Qc = 0;
      b.jf = 0;
      k = [];
      var e = b.yc,
        d = l.P.ee,
        f,
        c;
      if (d)
        for (var h = 0, A = d.length; h < A; h++)
          (f = d[h]) &&
            !f.m.ab() &&
            (c = v(f.l)) &&
            c.$k(f) &&
            !c.Td() &&
            ((b.ya = b.ya.ca(f.ya, e)), (b.pc = b.pc.ca(f.pc, e)));
      b.Ie = b.Ie.ca(b.ya, e);
      b.Ie = b.Ie.ca(b.pc, e);
      e = a;
      d = b.yc;
      f = void 0 !== e;
      c = l.P.Yd;
      var m;
      if (c) {
        for (var A = 0, u = c.length; A < u; A++)
          if ((m = c[A]))
            if ((h = v(m.l)))
              e && e.X == m.X
                ? (h.Sh(e, f),
                  m.pg != e.pg && (b.Nd = b.Nd.ca(e.pg - m.pg, d)),
                  m.qg != e.qg && (b.Nd = b.Nd.ca(e.qg - m.qg, d)),
                  (e = null))
                : h.Sh(m, f);
        e &&
          (h = v(m.l)) &&
          (h.Sh(e, f), (b.Nd = b.Nd.ca(e.pg, d)), (b.Nd = b.Nd.ca(e.qg, d)));
      }
      b.margin = 0;
      b.Gc = 0;
      b.Qc = 0;
      b.jf = 0;
      if (k) for (m = 0, e = k.length; m < e; m++) (d = k[m]) && d.vk();
      m = r.data.Cq;
      e = b.yc;
      b.Sb = b.Wd;
      b.Sb = b.Sb.ca(b.Ie, e);
      b.Sb = b.Sb.ca(b.Qg, e);
      b.Sb = b.Sb.ca(b.Gc, e);
      b.Sb = b.Sb.ca(b.Qc, e);
      b.Sb = b.Sb.ca(b.Nd, e);
      switch (b.vp) {
        case m.eq:
          0 < b.hi && (b.Sb = b.Sb.ca(-b.hi, e));
      }
      m = r.data.mG;
      e = r.data.Cq;
      d = b.yc;
      b.Rc = b.Wd;
      b.Rc = b.Rc.ca(-b.margin, d);
      b.Rc = b.Rc.ca(b.Qg, d);
      b.Rc = b.Rc.ca(b.Gc, d);
      b.Rc = b.Rc.ca(b.Qc, d);
      b.Rc = b.Rc.ca(b.Nd, d);
      switch (b.AE) {
        case m.kG:
          b.Rc = b.Rc.ca(b.Ie, d);
          break;
        case m.jG:
          0 < b.Ie && (b.Rc = b.Rc.ca(b.Ie, d));
          break;
        case m.iG:
          0 > b.Ie && (b.Rc = b.Rc.ca(b.Ie, d));
      }
      switch (b.vp) {
        case e.eq:
          0 < b.hi && (b.Rc = b.Rc.ca(-b.hi, d));
      }
      b.Tn = 0 < b.margin ? (b.Sb / b.margin) * 100 : 0;
    }
  };
  e.ui = function (b) {
    var a = r.control.cu,
      e = r.data.fK;
    if (!b) return !1;
    b.Qj = a.au;
    return b.Ct == e.pJ
      ? b.Tn && b.Tn < b.Bt && ((b.Qj = a.Nr), b.Tn < b.Dt)
        ? ((b.Qj = a.Or), !0)
        : !1
      : b.Ct == e.oJ && b.margin && b.Sb < b.Bt && ((b.Qj = a.Nr), b.Sb < b.Dt)
      ? ((b.Qj = a.Or), !0)
      : !1;
  };
  var k = [],
    h = [];
})();
(function () {
  function v() {
    var a = l(),
      b = a.map(function (a) {
        return a.zf;
      }),
      a = a
        .filter(function (a) {
          return !a.A;
        })
        .map(function (a) {
          return a.zf;
        }),
      c = d.rb;
    c.Bd(c.mb.uW, m.O.cr(b));
    a.length && c.Bd(c.mb.gv, m.O.cr(a));
    c.Bd(c.mb.RH, m.O.cr(b));
  }
  function r() {
    A.U.Wb(
      A.U.Ab.Fn,
      A.U.types.vJ,
      "Symbols no more than " + w.ak + " symbols can be selected"
    );
  }
  function l() {
    var a = [],
      b;
    if (q)
      for (var c in q)
        q.hasOwnProperty(c) && (b = u.O.Ka(c)) && (a[a.length] = b);
    return a;
  }
  function e(a, b) {
    var c = d.rb;
    c.vn(c.mb.hv, e);
    if (a === c.Je.Za) {
      for (var c = m.O.UX(b), f, g = 0, h = c.length; g < h; g++)
        u.Us.F_(g, c[g]);
      window.qa &&
        A.U.Wb(
          A.U.Ab.Za,
          A.U.types.ae,
          [
            "'",
            u.H.ga,
            "': list of groups successfully loaded (",
            c.length,
            " groups)",
          ].join("")
        );
      u.Ib.sj();
      (c = u.Ib.Vg()) && c.length
        ? (w.Bv(c), (f = c[0]))
        : (c = u.O.ri()) && c.length
        ? ((c = w.R_()), (f = c[0] && c[0].l))
        : z.P.ha().sj();
      A.rf.Dd();
      window.Yb
        ? z.P_ && z.P_.ha()
        : (A.rf.Dd(),
          u.ra.Kv().qo(),
          A.xc && A.xc.ha(),
          A.nj && A.nj.Gb(u.Ib.gr || f),
          A.Ib && A.Ib.xv(u.Ib.jr));
    }
  }
  function k(a, b) {
    var c = d.rb;
    c.vn(c.mb.vB, k);
    a === d.rb.Je.Za &&
      ((c = m.O.XX(b)),
      window.qa &&
        A.U.xu(
          A.U.Ab.Za,
          [
            " short list of symbols successfully loaded (",
            c.length,
            " symbols)",
          ].join("")
        ),
      c.forEach(function (a) {
        a && u.O.Rr(a);
      }),
      u.O.yg());
  }
  function h(a, b) {
    if (a === d.rb.Je.Za) {
      var e = m.O.OC(b);
      window.qa &&
        A.U.xu(
          A.U.Ab.Za,
          [
            " full list of symbols successfully loaded (",
            e.length,
            " symbols)",
          ].join("")
        );
      e.forEach(function (a) {
        u.So.MD(a);
        u.O.Dd(a);
      });
      c.control.ci.Qq();
      z.Wc.ti(u.H);
      z.Wc.ui(u.H);
      A.P && A.P.W();
      A.O && A.O.LD && A.O.LD().Dd();
      A.nj && A.nj.Dd();
      A.xc && A.xc.Dd();
    }
  }
  function b(a, b) {
    if (a === d.rb.Je.Za) {
      var e = m.O.YX(b),
        f = !1,
        g = !1;
      window.qa &&
        A.U.xu(
          A.U.Ab.Za,
          [
            " list of symbols successfully updated (",
            e.length,
            " symbols)",
          ].join("")
        );
      e.forEach(function (a) {
        u.So.MD(a);
        a.j === Number.J
          ? (z.O.bk(a.l) && z.O.pl(a.l, !0), u.O.rv(a), (f = !0))
          : ((g = !0), u.O.Dd(a) && (f = !0));
      });
      f && (u.O.yg(), A.O.Dd());
      g && ((e = d.rb), e.Bd(e.mb.hv));
      u.pm.vk();
      c.control.ci.Qq();
      z.Wc.ti(u.H);
      z.Wc.ui(u.H);
      A.P.W();
      A.xc && A.xc.Dd();
    }
  }
  function a(a, b) {
    if (a === d.rb.Je.Za) {
      var e = m.pm.WX(b);
      window.qa &&
        A.U.xu(
          A.U.Ab.Za,
          [
            " list of spreads successfully loaded (",
            e.length,
            " spreads)",
          ].join("")
        );
      e &&
        (e.forEach(function (a) {
          a && u.pm.vN(a);
        }),
        u.pm.vk(),
        c.control.ci.Qq(),
        z.Wc.ti(u.H),
        z.Wc.ui(u.H),
        A.P.W());
    }
    w.KE || ((w.KE = !0), z.P.ha().sj());
  }
  var g = window.J,
    d = g.ba,
    f = g.ma,
    c = g.V,
    z = c.control,
    A = c.view,
    m = c.Rg,
    u = c.la,
    q,
    w = (c.control.O = {
      ak: 300,
      KE: !1,
      fb: null,
      ha: function () {
        if (this.fb) return this;
        q = {};
        var c = d.rb;
        c.Ke(c.mb.TH, b, 0);
        c.Ke(c.mb.gv, h, 0);
        c.Ke(c.mb.RH, a, 0);
        this.fb = !0;
        return this;
      },
      ZU: function () {
        if (!this.fb) return this;
        var a = d.rb;
        a.Ke(a.mb.vB, k);
        a.Ke(a.mb.hv, e);
        a.Bd(a.mb.vB);
        a.Bd(a.mb.hv);
        return this;
      },
      YU: function (a) {
        var b = d.rb;
        b.Bd(b.mb.gv, m.O.cr(a));
        return this;
      },
      Xi: function (a, b) {
        !1 !== b && (b = !0);
        if (!this.fb || !a) return this;
        var c = u.O.Ka(a);
        if (!c || (q[a] && 1 === q[a] && !b) || (q[a] && q[a] & 2)) return this;
        if (b && u.Ib.Vg().length >= this.ak) {
          var d = u.Ib.Vg();
          d && d.length && (this.pl(d[d.length - 1]), r());
        }
        d = 1;
        b && (d |= 2);
        q[a] = d;
        d & 2 && (u.Ib.YJ(a), A.O.na(c));
        f.al(v, 500);
        return this;
      },
      Bv: function (a, b) {
        if (!this.fb || !a || !a.length) return this;
        a.length > this.ak && (a.length = this.ak);
        if (!0 === b) {
          var c = u.Ib.Vg();
          c &&
            c.length >= this.ak &&
            (r(), (c = c.slice().reverse()), (c.length = a.length), this.KD(c));
        }
        for (var d = 0, e = a.length; d < e; d++)
          if ((c = a[d])) {
            var g = u.O.Ka(c);
            !g ||
              (q[c] && q[c] & 2) ||
              ((q[c] = 2),
              u.Ib.YJ(c, !0),
              A.O.na(g, !0),
              !0 === b &&
                u.Ib.Vg().length >= this.ak &&
                (d < e - 1 && r(), (d = e)));
          }
        u.Ib.po();
        A.O.Dd();
        f.al(v, 500);
      },
      Q_: function (a) {
        if (!this.fb) return this;
        var b = {},
          c = [];
        u.Us.nG()
          .slice()
          .forEach(function (a) {
            a = a.vf;
            var d = a.substr(0, a.lastIndexOf("\\"));
            d
              ? (b[d] || ((b[d] = { id: d }), c.push(b[d])),
                b[d].items || (b[d].items = []),
                (b[a] = { id: a }),
                b[d].items.push(b[a]))
              : ((b[a] = { id: a }), c.push(b[a]));
          });
        var d = [],
          e = 0,
          f = u.O.ri().slice();
        (function F(b) {
          (a && e > a) ||
            b.forEach(function (b) {
              (a && e > a) ||
                (Array.isArray(b.items) && F(b.items),
                f.forEach(function (c) {
                  if (!(a && e > a)) {
                    var f = b.id + "\\" + c.l;
                    if (c.tk === f || c.tk === "\\" + f) d.push(c.l), e++;
                  }
                }));
            });
        })(c);
        this.Bv(d);
        return this;
      },
      R_: function () {
        if (!this.fb) return [];
        var a = [],
          b = u.O.ri();
        u.So.ri().forEach(function (c) {
          if (!(10 <= a.length)) {
            var d = c.tk;
            -1 === d.indexOf("*")
              ? ((c = d.lastIndexOf("\\")),
                -1 === c
                  ? -1 === a.indexOf(d) && a.push(d)
                  : ((c = d.substr(c + 1)), -1 === a.indexOf(c) && a.push(c)))
              : b.forEach(function (b) {
                  10 <= a.length ||
                    (u.So.PP(d, b.tk) && -1 === a.indexOf(b.l) && a.push(b.l));
                });
          }
        });
        10 > a.length &&
          b.forEach(function (b) {
            10 <= a.length || (-1 === a.indexOf(b.l) && a.push(b.l));
          });
        10 < a.length && (a.length = 10);
        this.Bv(a);
        return a;
      },
      pl: function (a, b) {
        if (!this.fb || !a || !q[a] || (!0 !== b && !this.fx(a))) return this;
        q[a] & 2 && (u.Ib.eL(a), A.O.oa(a));
        q[a] = null;
        delete q[a];
        f.al(v, 500);
        return this;
      },
      KD: function (a) {
        var b = this;
        if (!this.fb || !a || !a.length) return this;
        a.forEach(function (a) {
          a &&
            b.fx(a) &&
            ((q[a] = null), delete q[a], u.Ib.eL(a, !0), A.O.oa(a, !0));
        });
        u.Ib.po();
        A.O.Dd();
        f.al(v, 500);
      },
      K2: function () {
        if (!this.fb) return this;
        var a = u.O.ri();
        a &&
          a.length &&
          this.KD(
            a.map(function (a) {
              return a.l;
            })
          );
        return this;
      },
      bk: function (a) {
        return this.fb ? ((a = q[a]) ? !!(a & 2) : !1) : !1;
      },
      Oa: function () {
        if (!this.fb) return this;
        this.KE = !1;
        u.O.Oa();
        u.Us.Oa();
        u.wa.Oa();
        for (var a in q)
          q.hasOwnProperty(a) && (q[a] & 2 && A.O.oa(a), (q[a] = null));
        q = {};
        A.Ib && A.Ib.Oa();
        return this;
      },
      fx: function (a) {
        return u.P.N2(a) || u.ra.wT(a) ? !1 : !0;
      },
    });
})();
(function () {
  function v(a, b, c, d, e) {
    e ? h(a, b, c, d, null) : z.qv.sj(a, b, c, d, h);
  }
  function r(a) {
    return d.L.Ax(new Date().getTime() + 1e3 * (z.H.Yw + 3600 * z.H.tw), a);
  }
  function l(b) {
    var c = a.rb;
    c.Bd(c.mb.QH, m.xc.Q2(b));
  }
  function e() {
    var a = z.ra.nd();
    if (a)
      a: {
        var b = a.symbol,
          a = a.period;
        if (void 0 !== b && void 0 !== a) {
          var c = (A.xc && A.xc.fq()) || 0;
          c || (c = (A.Zb && A.Zb.fq()) || 0);
          var d = r(a),
            e = Math.max(Math.floor(d - 6e4 * a * c * w), 0),
            f = z.ef.u(b, a);
          if (f && f.length) {
            if (f[f.length - 1][0] == d && f.length > c) break a;
          } else z.ef.Lf(b, a);
          v(b, a, e, d);
        }
      }
  }
  function k(b, c) {
    var d = q.Lw;
    if (d) {
      if (b == a.rb.Je.Za) {
        var e = d[0];
        if (!e) return;
        var f = m.xc.fJ(c);
        if (!f.length || (1 == f.length && e.Ar != f[0][0])) {
          if (14400 > (e.Hw - e.Ar) / 1e3 / 60) {
            (d = (A.xc && A.xc.fq()) || 0) || (d = (A.Zb && A.Zb.fq()) || 0);
            e.Ar -= 6e4 * e.zr * d * w;
            l(e);
            return;
          }
          var g = z.ef.u(e.l, e.zr);
          g && (g.Gi = !0);
        }
        z.qv.qo(e.l, e.zr, e.Ar, e.Hw, m.xc.fJ(c));
        z.ef.c(e.l, e.zr, f);
      }
      d.splice(0, 1);
      d.length && l(d[0]);
    }
  }
  function h(a, b, c, e, f) {
    if (f && 1 < f.length) {
      z.ef.c(a, b, f);
      if (e !== r(b)) return;
      c = e;
    }
    f = q.Lw;
    f || (f = q.Lw = []);
    var g = {};
    g.l = a;
    g.zr = b;
    g.Ar = c;
    g.Hw = e;
    a = d.L.rg;
    g.t4 =
      b == a.Ve
        ? u.pT
        : b == a.Pe
        ? u.sT
        : b == a.Ne
        ? u.qT
        : b == a.Oe
        ? u.rT
        : b == a.Sd
        ? u.nT
        : b == a.pe
        ? u.oT
        : b == a.Ce
        ? u.mT
        : b == a.ze
        ? u.uT
        : b == a.nh
        ? u.tT
        : 0;
    g.Hea = 0;
    f.push(g);
    1 == f.length && l(g);
  }
  function b(b, c) {
    if (b === a.rb.Je.Za) {
      var d = m.xc.OC(c);
      if (d) {
        var e = z.ra.nd();
        d.forEach(function (a) {
          if ((a = z.O.qq(a))) {
            var b, c, d, f;
            e.symbol === a.l &&
              (b = z.ef.u(e.symbol, e.period)) &&
              b.length &&
              ((c = b[0][0]), (d = b[b.length - 1][0]), (f = !0));
            z.qv.Oa(a.l);
            z.ef.lY(a.l);
            f && v(e.symbol, e.period, c, d, !0);
          }
        });
      }
    }
  }
  var a = E.ba,
    g = E.V,
    d = E.controls,
    f = E.Qa,
    c = g.control,
    z = g.la,
    A = g.view,
    m = g.Rg,
    u = {
      pT: 1,
      K9: 2,
      M9: 3,
      N9: 4,
      sT: 5,
      O9: 6,
      I9: 10,
      J9: 12,
      qT: 15,
      L9: 20,
      rT: 30,
      nT: 16385,
      E9: 16386,
      F9: 16387,
      oT: 16388,
      G9: 16390,
      H9: 16392,
      D9: 16396,
      mT: 16408,
      uT: 32769,
      tT: 49153,
    },
    q = (c.xc = {});
  q.ha = function () {
    if (q.ua) return q;
    var c = a.rb;
    c.Ke(c.mb.QH, k);
    c.Ke(c.mb.tW, b);
    z.ra.i("select", e);
    q.ua = !0;
    return q;
  };
  q.Mf = function () {
    if (!this.LL) {
      this.LL = !0;
      var a = z.ra.ei,
        b;
      if (a && a.length) {
        for (var e = 0, g = a.length; e < g; e++)
          (b = a[e]) && c.O.Xi(b.symbol);
        z.ra.M("start");
        if ((b = z.ra.nd()) && z.O.Ka(b.symbol)) return z.ra.Ro(b.id), q;
        e = 0;
        for (g = a.length; e < g; e++)
          if ((b = a[e]) && z.O.Ka(b.symbol)) return z.ra.Ro(b.id), q;
      }
      (a = z.Ib.Vg()) && a.length && c.xc.tn(a[0], d.L.rg.Sd, f.Km);
      return q;
    }
  };
  q.tn = function (a, b, c) {
    if (a) {
      b || (b = d.L.rg.Sd);
      var e = z.ra.nd();
      if (c && e) {
        e.symbol = a;
        e.symbol_name = a;
        e.period = b;
        if ((a = z.O.Ka(a))) e.digits = a.j;
        z.ra.M("replace", e);
        z.ra.M("change");
        z.ra.Ro(e.id);
      } else (e = z.ra.iS(a, b)) || (e = z.ra.YP(a, b)), z.ra.Ro(e.id);
    }
  };
  q.Xp = function (a) {
    var b = z.ra.jS(a);
    z.ra.XP(a);
    (b = (a = z.ra.ei) && a[b]) || (b = a && a[a.length - 1]);
    z.ra.Ro((b && b.id) || null);
    return q;
  };
  q.GW = function (a, b) {
    var c = z.ef.u(a, b);
    if (c && c.length < z.ef.cV && !c.Gi) {
      var c = c[0],
        d;
      c &&
        ((d = (A.xc && A.xc.fq()) || 0) || (d = (A.Zb && A.Zb.fq()) || 0),
        (c = c[0]),
        (d = Math.max(c - Math.round(6e4 * b * d * w), 0)),
        v(a, b, d, c));
    }
  };
  q.Oa = function () {
    if (!q.ua) return q;
    var a = q.Lw;
    if (a) {
      for (var b = 0, c = a.length; b < c; b++) a[b] = null;
      q.Lw = null;
    }
    A.xc && A.xc.Oa();
    z.ef.Oa();
    this.LL = null;
    return q;
  };
  q.dY = function () {
    var a = z.ra.nd();
    if (a) {
      var b = z.ef.u(a.symbol, a.period);
      b && b.length && v(a.symbol, a.period, b[0][0], b[b.length - 1][0], !0);
    }
  };
  var w = E.Qa.Km ? 5 : 3;
})();
(function () {
  function v() {
    Q = B = null;
    R = !1;
    N &&
      (2 > N.readyState && N.close(),
      N.removeEventListener("close", z),
      N.removeEventListener("message", A),
      N.removeEventListener("error", m));
    N = null;
  }
  function r(a, b) {
    var c = { login: "0" };
    c.trade_server = a;
    c.version = b;
    var d = k("demo_type");
    d && (c.demo_type = d);
    (d = k("demo_leverage")) && (c.demo_leverage = d);
    (d = n.Wg.eF()) && (c.gwt = d.substr(3));
    p.MM("https://trade.mql5.com/trade/json", c, !1, {
      Np: a,
      Ew: g,
      onerror: f,
    });
    F.U.Wb(
      F.U.Ab.Za,
      F.U.types.ae,
      "request an authorization token (to create demo account)"
    );
    H = a;
    S = b;
  }
  function l(a, b) {
    var c = n.rb,
      d = new Uint8Array(4 + ((b && b.byteLength) || 0));
    b && d.set(new Uint8Array(b), 4);
    d = d.buffer;
    d = new DataView(d);
    d.setUint8(0, Math.floor(255 * Math.random()));
    d.setUint8(1, Math.floor(255 * Math.random()));
    d.setUint16(2, a, !0);
    n.vg.kh(d.buffer, 1, q, a === c.mb.VH ? !0 : K);
  }
  function e(a) {
    var b = new DataView(a);
    a = b.Bl(0, a.byteLength);
    var c = [
      "__",
      String.fromCharCode(Math.ceil(25 * Math.random()) + 65),
    ].join("");
    eval(["window.", c, " = ", a, ";"].join(""));
    var d = String(window[c]);
    a = new ArrayBuffer(d.length);
    b = new DataView(a);
    b.te(0, d);
    window[c] = null;
    delete window[c];
    l(n.rb.mb.av, a);
  }
  function k(a) {
    var b = window.location.search,
      c;
    if (b && 1 < b.length && (b = b.substr(1)))
      for (var b = b.split("&"), d = 0, e = b.length; d < e; d++)
        if ((c = b[d]))
          if (((c = c.split("=")), c.length && c[0] == a))
            return decodeURIComponent(c[1]);
    return "";
  }
  function h(a) {
    a = b(a);
    var c = new ArrayBuffer(18 + a.byteLength);
    new DataView(c).setInt16(0, 268, !0);
    c = new Uint8Array(c);
    c.set(new Uint8Array(n.bd.kx()), 2);
    c.set(new Uint8Array(a), 18);
    return c.buffer;
  }
  function b(a) {
    if (!a) return null;
    var b = 0,
      c,
      d,
      e = "";
    if ((d = n.bd.Uh())) if ((d = n.bd.xI("http://" + d))) e = d.hostname;
    var f = F.fc.bx,
      g = F.fc.cx,
      h = [a.qE || "", a.GE || ""].join(" ");
    4 == a.version &&
      (f || ("www." == e.substr(0, 4) && (e = e.substr(4)), (f = e)),
      (c = new ArrayBuffer(572)),
      (d = new DataView(c)),
      d.xr(b, (h || "").substr(0, 128)),
      d.te((b += 128), (a.vf || "").substr(0, 16)),
      d.te((b += 16), (a.qr || "").substr(0, 32)),
      d.te((b += 32), (a.kE || "").substr(0, 32)),
      d.te((b += 32), (a.XM || "").substr(0, 32)),
      d.te((b += 32), (a.iN || "").substr(0, 16)),
      d.te((b += 16), (a.RL || "").substr(0, 128)),
      d.te((b += 128), (a.It || "").substr(0, 32)),
      d.te((b += 32), (a.rr || "").substr(0, 48)),
      d.setInt32((b += 48), a.Dl, !0),
      d.setFloat64((b += 4), a.Mk, !0),
      d.te((b += 8), e.substr(0, 64)),
      d.te((b += 64), f.substr(0, 32)));
    5 == a.version &&
      ((c = new ArrayBuffer(1660)),
      (d = new DataView(c)),
      d.Yb(b, (h || "").substr(0, 128)),
      d.Yb((b += 256), (a.vf || "").substr(0, 64)),
      d.Yb((b += 128), (a.nfa || "").substr(0, 32)),
      d.Yb((b += 64), (a.qr || "").substr(0, 32)),
      d.Yb((b += 64), (a.kE || "").substr(0, 32)),
      d.Yb((b += 64), (a.XM || "").substr(0, 32)),
      d.Yb((b += 64), (a.iN || "").substr(0, 16)),
      d.Yb((b += 32), (a.RL || "").substr(0, 128)),
      d.Yb((b += 256), (a.It || "").substr(0, 32)),
      d.Yb((b += 64), (a.rr || "").substr(0, 64)),
      d.setFloat64((b += 128), a.Mk, !0),
      d.setUint32((b += 8), a.Dl, !0),
      d.setUint32((b += 4), a.bfa, !0),
      d.setUint32((b += 4), a.Ze, !0),
      d.Yb((b += 4), e.substr(0, 64)),
      d.Yb((b += 128), f.substr(0, 32)),
      d.Yb((b += 64), g.substr(0, 32)),
      d.setUint32((b += 64), a.N3 || 0, !0),
      d.setUint32((b += 4), a.u4 || 0, !0),
      d.Yb((b += 4), (a.qE || "").substr(0, 64)),
      d.Yb(b + 128, (a.GE || "").substr(0, 64)));
    return c;
  }
  function a(a) {
    a = new DataView(a);
    var b = {};
    b.rr = a.getUint8(0, !0);
    b.It = a.getUint8(1, !0);
    return b;
  }
  function g(a) {
    Q = p.json(a);
    F.U.Wb(
      F.U.Ab.Za,
      F.U.types.ae,
      "token for authorization received (to create demo account)"
    );
    Q &&
      (Q.enabled
        ? (("form" == F.fc.state || x.Km) &&
            F.fc.rD(
              this.Np,
              Q.demo_type || [],
              Q.demo_leverage || [],
              Q.company || "",
              Q.geo || {}
            ),
          n.vg.rj(Q.key, d))
        : (F.U.Wb(
            F.U.Ab.ERROR,
            F.U.types.Ak,
            "Web Terminal is not supported by specified MetaTrader Server. Please contact your broker to update server.",
            !1,
            !0
          ),
          n.je.Error(),
          F.fc.rD(this.Np, [], [], "", {}),
          F.fc.Ps(!1),
          F.fc.Error && F.fc.Error()));
  }
  function d(a) {
    K = a;
    a = Q.signal_server;
    N = new WebSocket([!1 === Q.ssl ? "ws://" : "wss://", a, "/"].join(""));
    N.binaryType = "arraybuffer";
    N.addEventListener("open", c);
    N.addEventListener("close", z);
    N.addEventListener("message", A);
    N.addEventListener("error", m);
    N.Rn = a.split(".")[0];
  }
  function f() {
    F.U.Wb(
      F.U.Ab.ERROR,
      F.U.types.ae,
      "request an authorization token failed (to create demo account)",
      !1,
      !0
    );
    F.fc.rD(this.Np, [], [], "", {});
    F.fc.Ps(!1);
    F.fc.Error && F.fc.Error();
    n.je.Error();
  }
  function c() {
    F.U.Wb(
      F.U.Ab.Za,
      F.U.types.ae,
      "websocket connection is successfully established on (to create demo account)"
    );
    N.removeEventListener("open", c);
    var a = Q.token;
    if (a) {
      var b = 5 == Q.version ? n.rb.mb.PH : n.rb.mb.LH,
        d = n.rb.mb.VH;
      if (a) {
        var e = new ArrayBuffer(64);
        new DataView(e).te(0, a);
        a = e;
      } else a = null;
      l(d, a);
      l(b, y.Bb.kL({ ZL: n.bd.kx() }));
    }
  }
  function z(a) {
    a = a.wasClean;
    F.U.Wb(
      a ? F.U.Ab.Za : F.U.Ab.Fn,
      F.U.types.ae,
      [
        a
          ? "websocket connection was closed by the server-side"
          : "websocket connection was suddenly closed",
        " (to create demo account)",
      ].join("")
    );
  }
  function A(a) {
    a = a.data;
    a instanceof ArrayBuffer && (a = a.slice(8)) && n.vg.Pl(a, 1, w, K);
  }
  function m() {
    F.U.Wb(
      F.U.Ab.ERROR,
      F.U.types.ae,
      "websocket connection reported an error (to create demo account)!"
    );
    n.Wg && n.Wg.Mf();
    P = P ? 2 * P : 1e3;
    P = Math.min(P, L);
    n.Wg.ux(N.Rn);
    n.Wg.QR() && n.Wg.sN("restore", u);
    Z = setTimeout(function () {
      clearTimeout(Z);
      r(H, S);
    }, P);
    F.Jh.Gb("journal");
  }
  function u() {
    n.Wg.hY("restore", u);
    clearTimeout(Z);
    r(H, S);
  }
  function q(a) {
    var b = n.rb,
      c = (a && a.byteLength) || 0,
      d = new Uint8Array(b.GG + c);
    a && d.set(new Uint8Array(a), b.GG);
    d = d.buffer;
    a = new DataView(d);
    a.setUint32(0, c, !0);
    a.setUint32(4, 1, !0);
    N.send(a.buffer);
  }
  function w(c) {
    var d = n.rb,
      f = new DataView(c),
      g = f.getUint16(2, !0),
      f = f.getUint8(4);
    c = c.slice(5);
    var k;
    0 < f &&
      ((k = ""),
      1 == f && (k = "websocket returned internal error"),
      2 == f && (k = "websocket returned error: trade server is not available"),
      3 == f &&
        (k =
          "websocket returned error: authorization error on the trading server"),
      7 == f && (k = "invalid email confirmation code"),
      8 == f && (k = "invalid phone confirmation code"),
      F.U.Wb(
        F.U.Ab.ERROR,
        F.U.types.ae,
        [k, " (to create demo account)."].join("")
      ),
      F.Jh && F.Jh.Gb("journal"));
    if (g == d.mb.ev)
      c && c.byteLength && (T = new DataView(c).getUint16(0, !0));
    else if (g == d.mb.av) e(c);
    else if (g == d.mb.LH || g == d.mb.PH) {
      if (f == d.Je.Za)
        if ((n.Wg && n.Wg.dG(N.Rn), (N.complete = !0), R))
          l(d.mb.sB, h(B)), (R = !1);
        else if (B && B.lr && B.mr)
          (d = 5 === parseInt(B.version, 10) ? d.mb.fv : d.mb.dv), l(d, b(B));
        else {
          if (!(c = Q.company))
            a: if (((c = Q.trade_server), "MetaQuotes-Demo" == c))
              c = "MetaQuotes Software Corp.";
            else {
              if ((g = F.Bb.fj)) {
                k = 0;
                for (var m = g.length; k < m; k++)
                  if ((f = g[k]) && f.name == c) {
                    c = f.company;
                    break a;
                  }
              }
              c = "";
            }
          g = c || "";
          5 == Q.version &&
            ((c = d.mb.rB),
            g || (g = ""),
            128 < g.length && (g = g.substr(0, 128)),
            (f = new ArrayBuffer(256)),
            new DataView(f).Yb(0, (g || "").substr(0, 128)),
            l(c, f));
          4 == Q.version && l(d.mb.rB);
        }
    } else if (g == d.mb.rB) {
      if (f == d.Je.Za) {
        var g = [],
          p,
          u,
          q,
          w,
          f = "";
        k = 0;
        m = new DataView(c);
        if (5 === Q.version) {
          u = m.getUint32(0, !0);
          k += 4;
          for (var z = 0; z < u; z++) {
            p = {};
            p.vf = m.J(k, 128);
            p.sE = m.J((k += 128), 128);
            p.pr = m.J((k += 128), 256);
            p.currency = m.J((k += 256), 64);
            p.yc = m.getUint32((k += 64), !0);
            p.cj = m.getUint32((k += 4), !0);
            p.fM = m.getUint32((k += 4), !0);
            p.eM = m.getFloat64((k += 4), !0);
            p.Ze = m.getUint32((k += 8), !0);
            p.SL = [];
            k += 256;
            if (1835 <= T) {
              w = m.getUint32(k, !0);
              k += 4;
              for (var x = 0; x < w; x++)
                (q = {}),
                  (q.kw = m.getUint32(k, !0)),
                  (q.H3 = m.J((k += 4), 512)),
                  (q.url = m.J((k += 512), 512)),
                  p.SL.push(q),
                  (k += 512),
                  (k += 256);
            }
            g.push(p);
          }
        }
        c.byteLength > k && (c = m.getUint32(k, !0)) && (f = m.J(k + 4, c));
        F.fc.J_(Q.trade_server, g || [], f || "");
        B
          ? N.SM ||
            ((d = 5 === parseInt(B.version, 10) ? d.mb.fv : d.mb.dv),
            l(d, b(B)),
            (N.SM = !0))
          : v();
      }
    } else if (g === d.mb.sB) F.fc.H_(f == d.Je.Za, a(c));
    else if (g == d.mb.dv || g == d.mb.fv)
      f == d.Je.WR || f == d.Je.XR
        ? (F.fc.Qs({ J3: !0 }, B), v())
        : f == d.Je.Za &&
          ((d = Q.version),
          (g = new DataView(c)),
          (c = {}),
          (f = 0),
          5 == d &&
            ((c.Ca = g.getUint32(f, !0)),
            (c.ga = g.qa((f += 4)).toString()),
            (c.mf = g.J((f += 8), 32)),
            (c.sM = g.J((f += 32), 32))),
          4 == d &&
            ((c.Ca = g.getInt32(f, !0)),
            (c.ga = g.getInt32((f += 4), !0)),
            (c.mf = g.Bl((f += 4), 16)),
            (c.sM = g.Bl(f + 16, 16))),
          0 == c.Ca
            ? ((k = []),
              B.lr && B.mr && k.push("'" + B.mr + "': "),
              k.push(
                "opened a demo account: login ",
                M(c.ga),
                ", trade server: ",
                M(B.nf)
              ),
              F.U.Wb(F.U.Ab.Za, F.U.types.Kd, k.join("")),
              n.Tl.PushEvent("MetaTrader+" + B.version + "+Web+Account+Demo"))
            : ((k = [
                "failed to open a demo account, check Internet connection or contact broker support service",
              ]),
              G.$f && G.$f.Ug && k.push(" - " + G.$f.Ug(c.Ca)),
              F.U.Wb(F.U.Ab.ERROR, F.U.types.Ak, k.join(""), !1, !0)),
          F.fc.Qs(c, B),
          v());
  }
  var p = E.ba.du,
    n = E.ba,
    x = E.Qa,
    C = E.V,
    O = E.Un,
    I = C.control.Wc ? 5 : 4,
    G = 5 == I ? C.control : O.control,
    F = 5 == I ? C.view : O.view,
    y = 5 == I ? C.Rg : O.Rg,
    M = E.ma.Kc,
    D = (G.fc = {});
  D.ha = function (a, b) {
    v();
    P = 0;
    r(a, b);
    return D;
  };
  D.TF = function (a) {
    var c = n.rb;
    B = a;
    var d = [];
    a.lr
      ? a.mr
        ? (d.push("'" + a.mr + "': "),
          d.push(
            "automatic opening of a new demo account having the parameters of the current account on the " +
              B.nf +
              " server"
          ))
        : d.push(
            "automatic opening of a new demo account on the " + B.nf + " server"
          )
      : d.push("opening of the new demo account at the " + B.nf + " server");
    F.U.Wb(F.U.Ab.Za, F.U.types.Kd, d.join(""));
    N
      ? N.complete &&
        (l(5 === parseInt(B.version, 10) ? c.mb.fv : c.mb.dv, b(B)),
        (N.SM = !0))
      : ((P = 0), r(B.nf, B.version));
  };
  D.Xp = function () {
    v();
    return D;
  };
  D.O2 = function (a) {
    var b = n.rb;
    N && N.complete
      ? ((B = a), l(b.mb.sB, h(a)))
      : ((B = a), (R = !0), (P = 0), r(B.nf, B.version));
  };
  var L = 3e5,
    B,
    Q,
    N,
    K,
    P = 0,
    T,
    R = !1,
    H,
    S,
    Z;
})();
(function () {
  function v() {
    var a = [],
      e;
    if (b)
      for (var d in b) b.hasOwnProperty(d) && (e = h.O.Ka(d)) && a.push(e.zf);
    return a;
  }
  function r() {
    var a = l.ba.rb;
    a.Bd(a.mb.vW, k.Rg.fd.cr(v()));
  }
  var l = window.J,
    e = l.ma,
    k = l.V,
    h = k.la,
    b;
  k.control.fd = {
    fb: !1,
    ha: function () {
      if (this.fb) return this;
      b = {};
      this.fb = !0;
      return this;
    },
    Xi: function (a) {
      if (!this.fb || !a || !h.O.Ka(a) || b[a]) return this;
      b[a] = 1;
      e.al(r, 500);
      return this;
    },
    pl: function (a) {
      if (!this.fb || !a || !b[a]) return this;
      b[a] = null;
      delete b[a];
      e.al(r, 500);
      h.fd.rv(a);
      return this;
    },
    bk: function (a) {
      return this.fb ? !!b[a] : !1;
    },
    Oa: function () {
      if (!this.fb) return this;
      for (var a in b) b.hasOwnProperty(a) && h.fd.rv(a);
      b = {};
      return this;
    },
  };
})();
(function () {
  function v(a) {
    if (!y) return W;
    if (a) return r(), W;
    if (P) return W;
    P = setTimeout(r, 3e3);
    return W;
  }
  function r() {
    if (!W.ua) return W;
    if (w.Pd) {
      var a = window.localStorage;
      a && a.setItem("records", JSON.stringify(k(F), b));
    }
    return W;
  }
  function l() {
    F = [];
    M = [];
    if (w.Pd) {
      var a = window.localStorage.records;
      if (
        a &&
        a.indexOf &&
        0 === a.indexOf("[") &&
        (a = window.JSON.parse(a))
      ) {
        F = a;
        K = 0;
        h();
        return;
      }
    }
    e();
  }
  function e() {
    F || (F = []);
    y || F.push((y = {}));
    M && M.length && M.sort(a);
    T &&
      setTimeout(function () {
        T();
      }, 10);
  }
  function k(a) {
    var b = [];
    if (a)
      for (var c, d = 0, e = a.length; d < e; d++)
        (c = a[d]) && c.line && b.push(c);
    return b;
  }
  function h() {
    if (!F || K >= F.length) e();
    else {
      var a = F[K];
      a &&
      a.line &&
      a.line.length &&
      a.line.length / 16 == Math.floor(a.line.length / 16)
        ? x.Pl(a.line.Bf(), 1, z, L)
        : (K++, h());
    }
  }
  function b(a, b) {
    return "inited" === a || ("instance" === a && "object" == typeof b)
      ? void 0
      : b;
  }
  function a(a, b) {
    return b.pp - a.pp;
  }
  function g(a) {
    x.kh([w.Rj, p.nm.fD.El()].join("").Bf(), 1, d, a);
  }
  function d(a) {
    null === a ? T && T() : x.rj(a.Df(), f);
  }
  function f(a) {
    L = a;
    x.rj(p.nm.rY.El(), c);
  }
  function c(a) {
    B = a;
    l();
  }
  function z(a) {
    if (a) {
      var b = String.fromCharCode.apply(null, new Uint8Array(a));
      if ((b = b.split("\t")))
        if ((a = F[K]))
          if ((Q == b[1] && N == b[2] && (y = a), !G || G[b[2]])) {
            var c = {};
            c.ga = b[1];
            c.Pf = b[2];
            c.mf = b[0];
            c.v = a.author_name;
            c.version = a.server_type;
            c.pp = a.last_time || 0;
            c.stat = a.stat;
            c.Li = a.otp;
            c.src = a;
            a.author_type && (c.yr = a.author_type);
            a.author_email && (c.Fw = a.author_email);
            a.author_flags && (c.KM = a.author_flags);
            a.balance && (c.Wd = a.balance);
            a.leverage && (c.Dl = a.leverage);
            a.group && (c.vf = a.group);
            a.group_flags && (c.vw = a.group_flags);
            a.last_connect && (c.k4 = a.last_connect);
            a.last_frames && (c.xE = a.last_frames);
            M.push(c);
            Q == b[1] && N == b[2] && (D = c);
          }
    } else if ((a = F[K]))
      O.U.Wb(O.U.Ab.ERROR, O.U.types.ae, "Account decryption failed!"),
        (a.line = null);
    K++;
    h();
  }
  function A(a) {
    var b = "";
    a && (b = a.Df());
    D && (D.mf = b);
    x.kh([b, Q, N].join("\t").Df().Bf(), 1, m, L);
  }
  function m(a) {
    a && y && ((y.line = a.Df()), (y.server_type = 5), v(!0));
  }
  function u(a) {
    if (a) {
      var b = M[M.length - 1];
      if (b) {
        var c = {};
        c.line = a.Df();
        F.push(c);
        b.src = c;
        b.v && (c.author_name = b.v);
        b.yr && (c.author_type = b.yr);
        b.Fw && (c.author_email = b.Fw);
        b.version && (c.server_type = b.version);
        b.pp && (c.last_time = b.pp);
        b.Wd && (c.balance = b.Wd);
        b.Dl && (c.leverage = b.Dl);
        b.vf && (c.group = b.vf);
        b.vw && (c.group_flags = b.vw);
        b.Li && (c.otp = b.Li);
        r();
        S && (S(b.ga, b.Pf), (S = null));
      }
    }
  }
  function q(a) {
    if (a) {
      var b = String.fromCharCode.apply(null, new Uint8Array(a));
      if (b && (b = b.split("\t")) && 3 == b.length) {
        a = b[1];
        for (var c = b[2], b = b[0], d, e, f = 0, g = M.length; f < g; f++)
          if (
            (d = M[f]) &&
            d.ga == a &&
            d.Pf == c &&
            ((d.mf = b), (e = d.src))
          ) {
            e.line = R;
            R = null;
            r();
            H && (H(a, c), (H = null));
            return;
          }
        e = {};
        e.line = R;
        e.last_time = new Date().getTime();
        e.server_type = 5;
        F.push(e);
        d = {};
        d.ga = a;
        d.Pf = c;
        d.mf = b;
        d.src = e;
        d.version = 5;
        M.push(d);
        r();
        H && (H(a, c), (H = null));
      }
    }
    R = null;
  }
  var w = E.Qa,
    p = E.ba,
    n = E.ma,
    x = p.vg,
    C = E.V,
    O = C.view,
    I = C.la,
    G,
    F,
    y,
    M,
    D,
    L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z = "8g5142g2db1b:::7884839:3e95bc2be".El(),
    W = (I.$c = {});
  W.fH = function (a, b, c) {
    T = c;
    Q = a;
    N = b;
    F = [];
    M = [];
    P = K = D = y = null;
    if (w.Pd)
      if (w.Rj) {
        W.ua = !0;
        if ((a = I.$c.fj) && a.length && !G) {
          G = {};
          c = 0;
          for (var d = a.length; c < d; c++)
            (b = a[c]) && b.name && (G[b.name] = !0);
        }
        B ? l() : x.rj(p.nm.qJ.El(), g);
      } else e();
    else e();
  };
  W.as = v;
  W.om = function (a, b) {
    y && (y[a] = b);
    return W;
  };
  W.hq = function (a) {
    if (y && y[a]) return y[a];
    if ("*" == a) return n.lo(y);
  };
  W.qD = function (a) {
    "" === a && (w.wf || w.gh)
      ? A(Z.Bf())
      : void 0 !== a && W.ua && y && x.kh(a.Df().Bf(), 1, A, B);
  };
  W.WP = function () {
    if (y) {
      p.Tl.PushEvent("MetaTrader+5+Web+Account+Remove");
      if (F)
        for (var a = 0, b = F.length, c; a < b; a++)
          (c = F[a]) && c == y && F.splice(a, 1);
      if (M)
        for (a = 0, b = M.length; a < b; a++)
          (c = M[a]) && c == D && M.splice(a, 1);
      v(!0);
    }
    N = Q = D = y = null;
  };
  W.bs = function (a) {
    return M
      ? void 0 === a
        ? M.slice()
        : M.filter(function (b) {
            return b.version == a;
          })
      : [];
  };
  W.Dx = function (a, b, c) {
    if (M)
      for (var d, e = 0, f = M.length; e < f; e++)
        if ((d = M[e]) && d.ga == a && d.Pf == b) {
          if (!d.mf) {
            c("");
            return;
          }
          x.Pl(
            d.mf.Bf(),
            1,
            function (a) {
              a ? c(String.fromCharCode.apply(null, new Uint8Array(a))) : c("");
            },
            B
          );
          return;
        }
    c("");
  };
  W.Cu = function (a, b) {
    if (M)
      for (var c, d = 0, e = M.length; d < e; d++)
        if ((c = M[d]) && c.ga == a && c.Pf == b) return c;
    return null;
  };
  W.tN = function (a, b, c, d) {
    S = d;
    if (M)
      for (var e = 0, f = M.length; e < f; e++)
        if ((d = M[e]) && d.ga == a && d.Pf == b && d.version == c) {
          S && (S(a, b), (S = null));
          return;
        }
    d = {};
    d.ga = a;
    d.Pf = b;
    d.version = c;
    d.pp = new Date().getTime();
    M || (M = []);
    M.push(d);
    x.kh(["", d.ga, d.Pf].join("\t").Df().Bf(), 1, u, L);
    p.Tl.PushEvent("MetaTrader+5+Web+Account+Add");
  };
  W.uN = function (a, b, c, d, e, f, g, h, n, k, m) {
    S = m;
    var p = {};
    p.ga = a;
    p.Pf = b;
    p.version = f;
    p.v = d;
    p.Fw = e;
    p.yr = 1;
    p.pp = new Date().getTime();
    p.Wd = g;
    p.Dl = h;
    p.vf = n;
    p.vw = k;
    M || (M = []);
    M.push(p);
    w.X3
      ? x.kh(
          c.Df().Bf(),
          1,
          function (a) {
            var b = "";
            a && (b = a.Df());
            p.mf = b;
            x.kh([p.mf, p.ga, p.Pf].join("\t").Df().Bf(), 1, u, L);
          },
          B
        )
      : m();
  };
  W.rN = function (a, b) {
    p.Tl.PushEvent("MetaTrader+5+Web+Account+Add");
    R = a;
    H = b;
    x.Pl(R.Bf(), 1, q, L);
  };
  W.iJ = function (a, b) {
    var c;
    p.Tl.PushEvent("MetaTrader+5+Web+Account+Remove");
    if (M)
      for (var d, e = 0, f = M.length; e < f; e++)
        if ((d = M[e]) && d.ga == a && d.Pf == b && d.src) {
          c = d.src.line;
          M.splice(e, 1);
          break;
        }
    if (c && F)
      for (e = 0, f = F.length; e < f; e++)
        if ((d = F[e]) && d.line == c) {
          F.splice(e, 1);
          r();
          break;
        }
  };
  W.IW = Z;
})();
(function () {
  function v(e, k, h, b) {
    if (!k || !e) return this;
    void 0 === b && (b = !0);
    e = e.trim();
    if (b && -1 !== e.indexOf(" ") && (b = e.split(" ")) && b.length) {
      e = 0;
      for (var a = b.length; e < a; e++) v.call(this, b[e], k, h);
      return this;
    }
    b = this.ep;
    b || (b = this.ep = []);
    b[e] || (b[e] = []);
    h = parseInt(h);
    isNaN(h) ? b[e].push(k) : b[e].splice(h, 0, k);
    k.Se = (1e5 * Math.random()).toString();
    return this;
  }
  function r(e, k) {
    var h = this.ep,
      b,
      a,
      g,
      d;
    if (!h || (!h[e] && !h["*"])) return !1;
    k || (k = this.u(e));
    if ((b = h[e]))
      for (g = 0, d = b.length; g < d; g++) (a = b[g]) && a.call(this, e, k);
    if ((b = h["*"]))
      for (g = 0, d = b.length; g < d; g++) (a = b[g]) && a.call(this, e, k);
    return this;
  }
  var l = (E.V.la.bf = function () {});
  l.prototype.Vb = v;
  l.prototype.Ng = function (e, k) {
    var h = this.ep,
      b = k.Se;
    if (!b || !h || !h[e]) return this;
    for (var a = h[e], g, d = 0, f = a.length; d < f; d++)
      (g = a[d]) && g.Se == b && a.splice(d, 1);
    0 === a.length && ((h[e] = null), delete h[e]);
    return this;
  };
  l.prototype.RG = function (e, k) {
    var h = this.ep,
      b = k.Se;
    if (!b || !h || !h[e]) return !1;
    for (var h = h[e], a, g = 0, d = h.length; g < d; g++)
      if ((a = h[g]) && a.Se == b) return !0;
    return !1;
  };
  l.prototype.oj = r;
  l.prototype.u = function (e, k, h) {
    var b = this.wb;
    if (!e) return this;
    if (void 0 === k) return b && b[e];
    b || (b = this.wb = {});
    b[e] = k;
    !1 !== h && r.call(this, e);
    return this;
  };
  l.prototype.rv = function (e) {
    var k = this.wb;
    if (!e || !k) return this;
    k[e] = null;
    delete k[e];
    r.call(this, e);
    return this;
  };
  l.prototype.ri = function () {
    return this.wb || {};
  };
  l.prototype.Oa = function () {
    var e = this.wb;
    if (e) for (var k in e) e.hasOwnProperty(k) && (e[k] = null);
    if ((e = this.ep)) for (var h in e) e.hasOwnProperty(h) && (e[h] = null);
    this.wb = {};
    this.ep = null;
    return this;
  };
})();
(function () {
  function v() {
    if (l.Pd && this.qc) {
      var b = this.qc || {};
      b[this.u("referrer")] = this.wb;
      window.localStorage.settings5 = window.JSON.stringify(b);
    }
  }
  var r = E.V,
    l = E.Qa,
    e = E.controls,
    k = E.ba,
    h = (E.V.la.B = function () {
      this.Vb("*", v);
    });
  h.prototype = {
    wb: null,
    sj: function () {
      var b, a;
      this.qc = {};
      a = this.wb || {};
      a.block = 3;
      a.journal_table_config = 3;
      a.trade_table_config = r.view.sm ? r.view.sm.Rf | r.view.sm.Xj : 0;
      a.trade_table_columns = r.view.cL ? r.view.cL.DEFAULT : 0;
      a.trade_table_volumes = r.view.$i ? r.view.$i.mn : 0;
      a.trade_profit_unit = 0;
      a.trade_symbol_mode = r.control.bL.SJ;
      a.trade_symbol_default = "EURUSD";
      a.trade_symbol_last = "";
      a.trade_lots_last = "0";
      a.trade_deviation_mode = r.control.Jv.vu;
      a.trade_deviation_default = 0;
      a.trade_deviation_last = 0;
      a.trade_stops_mode = 0;
      a.charts_one_click = 1;
      a.charts_color_scheme = 0;
      a.history_table_config = r.view.vo ? r.view.vo.Rf | r.view.vo.Xj : 0;
      a.history_table_columns = r.view.cm
        ? r.view.cm.Kd.Mh(r.view.cm.xi, !1)
        : 0;
      a.history_table_type = r.view.vq ? r.view.vq.Kq : 0;
      a.history_table_volumes = r.view.$i ? r.view.$i.mn : 0;
      a.symbols_table_config = r.view.gK ? r.view.gK.Xj : 0;
      a.symbols_table_columns = 0;
      a.symbols_mobile_config = r.view.T_ ? r.view.T_.f5 : 0;
      a.books_table_config = r.view.fF ? r.view.fF.Sr : 0;
      a.market_watch_config = 1;
      a.trade_table_sort = "open_time";
      a.history_deals_table_sort = "time";
      a.history_orders_table_sort = "open_time";
      a.history_positions_table_sort = "open_time";
      a = this.wb = a;
      var g = k.bd.so("color_scheme");
      g &&
        ("black_on_white" == g && (a.charts_color_scheme = e.L.jp.Vm),
        "yellow_on_black" == g && (a.charts_color_scheme = e.L.jp.tl),
        "green_on_black" == g && (a.charts_color_scheme = e.L.jp.el));
      if (
        l.Pd &&
        (a = window.localStorage.settings5) &&
        a.indexOf &&
        0 === a.indexOf("{") &&
        (a = window.JSON.parse(a))
      )
        for (b in (null == a.block &&
          ((this.qc = a),
          a[this.u("referrer")] ? (a = a[this.u("referrer")]) : (a = {})),
        a))
          this.wb.hasOwnProperty(b) && (this.wb[b] = a[b]);
      a = this.wb;
      for (b in a) a.hasOwnProperty(b) && this.oj(b, a[b]);
      return this;
    },
  };
  E.ma.he(h, r.la.bf);
  r.la.B = new h();
})();
(function () {
  function v() {
    var b = d.la.ra;
    if (a.Pd) {
      var c = b.YD,
        e = {};
      c[b.u("referrer")] = e;
      e.selected = b.ot || null;
      e.charts = b.ei || null;
      window.localStorage.profile5 = window.JSON.stringify(c, r);
    }
  }
  function r(a, b) {
    return "inited" === a ||
      ("instance" === a && "object" == typeof b) ||
      "temp" == a
      ? void 0
      : b;
  }
  function l() {
    clearTimeout(A);
    A = setTimeout(v, 3e3);
  }
  function e(a, c) {
    var d, e;
    !0 !== c && (a = b.call(this, a));
    if (-1 < a && (d = k.call(this))) {
      var f = d.windows;
      if (f) {
        var g = f[a];
        if (g) {
          var h = g.objects,
            m;
          if (h)
            for (d = 0, e = h.length; d < e; d++)
              (m = h[d]) && (m = m.instance) && m.gb && m.gb();
          if ((g = g.indicators))
            for (d = 0, e = g.length; d < e; d++)
              (h = g[d]) && (h = h.instance) && h.gb && h.gb();
        }
        f.splice(a, 1);
        this.M("change");
        this.M("remove_indicator_window", a);
      }
    }
    return this;
  }
  function k() {
    return f.H.ul ? this.nt : null;
  }
  function h(a) {
    var b = this.ei,
      c;
    if (b && b.length)
      for (var d = 0, e = b.length; d < e; d++)
        if ((c = b[d]) && c.id == a) return c;
    return null;
  }
  function b(a) {
    var b = g.L.rg,
      c = g.L.Fl,
      d = k.call(this);
    if (d) {
      var e = d.windows,
        f,
        h,
        m;
      if (e)
        for (var d = d.period, l = 0, z = e.length, r = -1; l < z; l++)
          if ((f = e[l]))
            if ((f = f.indicators))
              for (var y = 0, v = f.length; y < v; y++)
                if (
                  (h = f[y]) &&
                  !h.temp &&
                  ((m = h.period_flags),
                  "Main" == h.type ||
                    (d == b.Ve && m & c.Ve) ||
                    (d == b.Pe && m & c.Pe) ||
                    (d == b.Ne && m & c.Ne) ||
                    (d == b.Oe && m & c.Oe) ||
                    (d == b.Sd && m & c.Sd) ||
                    (d == b.pe && m & c.pe) ||
                    (d == b.Ce && m & c.Ce) ||
                    (d == b.ze && m & c.ze) ||
                    (d == b.nh && m & c.Zj))
                ) {
                  r++;
                  if (r == a) return l;
                  v = y;
                }
    }
    return -1;
  }
  var a = E.Qa,
    g = E.controls,
    d = E.V,
    f = d.la,
    c = d.view,
    z = E.ma.he,
    A,
    m = (d.la.ra = function () {
      this.YD = {};
      this.ei = [];
      this.nt = this.ot = null;
      this.i("*", l);
    });
  z(m, d.la.bf);
  m.prototype.sj = function () {
    this.YD = {};
    this.ei = [];
    this.nt = this.ot = null;
    if (a.Pd) {
      var b = window.localStorage.profile5;
      if (
        b &&
        b.indexOf &&
        0 === b.indexOf("{") &&
        (b = window.JSON.parse(b))
      ) {
        null == b.charts &&
          ((this.YD = b),
          b[this.u("referrer")] ? (b = b[this.u("referrer")]) : (b = {}));
        for (
          var c = b.charts || [], b = b.selected || null, d = 0, e = c.length;
          d < e;
          d++
        ) {
          var g = c[d];
          g &&
            (void 0 === g.color && (g.color = f.B.u("charts_color_scheme")),
            void 0 === g.foreground && (g.foreground = !1),
            void 0 === g.ohlc && (g.ohlc = !0),
            void 0 === g.ask && (g.ask = !1),
            void 0 === g.bid && (g.bid = !0),
            void 0 === g.last && (g.last = !0),
            void 0 === g.periods && (g.periods = !1),
            void 0 === g.volumes && (g.volumes = !0),
            void 0 === g.descriptions && (g.descriptions = !1),
            void 0 === g.orders && (g.orders = !0),
            !0 === g.volumes && (g.volumes = 2),
            this.ei.push(g));
        }
        this.ot = b;
        this.nt = h.call(this, b);
      }
    }
    return this;
  };
  m.prototype.qo = l;
  m.prototype.Kv = function () {
    var a = this.ei,
      b,
      c;
    if (a)
      for (var d = 0, e = a.length; d < e; d++)
        (b = a[d]) && b.symbol && (c = f.O.Ka(b.symbol)) && (b.digits = c.j);
    return this;
  };
  m.prototype.M = function (a) {
    this.oj.apply(this, arguments);
    return this;
  };
  m.prototype.i = function (a, b, c) {
    this.Vb.apply(this, arguments);
    return this;
  };
  m.prototype.hc = function (a, b) {
    this.Ng.apply(this, arguments);
    return this;
  };
  m.prototype.YP = function (a, b) {
    var c = this.ei,
      d = f.O.Ka(a) || {},
      e = {};
    e.id = new Date().getTime().toString();
    e.symbol = a;
    e.symbol_name = a;
    e.period = b;
    e.from = 0;
    e.scale = 4;
    e.digits = d.j || 0;
    e.type = "quote";
    e.mode = "cursor";
    e.windows = [];
    e.windows[0] = {};
    e.windows[0].indicators = [];
    e.windows[0].indicators[0] = {};
    e.windows[0].indicators[0].type = "Main";
    e.windows[0].indicators[0].period = g.L.Fl.Kd;
    e.windows[0].objects = [];
    e.color = f.B.u("charts_color_scheme") || g.L.jp.Vm;
    e.foreground = !1;
    e.shift = !0;
    e.scroll = !0;
    e.ohlc = !0;
    e.ask = !1;
    e.bid = !0;
    e.last = !0;
    e.periods = !1;
    e.grid = !0;
    e.volumes = 2;
    e.descriptions = !1;
    e.orders = !0;
    c || (c = this.ei = []);
    c.push(e);
    this.M("create", e);
    return e;
  };
  m.prototype.Ro = function (a) {
    var b = h.call(this, a);
    b
      ? ((this.ot = a), (this.nt = b), this.M("select", b))
      : ((this.nt = this.ot = null), this.M("select", null));
  };
  m.prototype.XP = function (a) {
    var b = this.ei,
      c,
      d,
      e,
      f;
    if (b) {
      var g = 0;
      for (d = b.length; g < d; g++)
        if ((c = b[g]) && c.id == a) {
          if ((a = c.windows))
            for (var h = 0, k = a.length; h < k; h++)
              if ((d = a[h])) {
                if ((e = d.indicators))
                  for (var m = 0, l = e.length; m < l; m++)
                    (f = e[m]) && (f = f.instance) && f.gb();
                d.indicators = [];
                if ((e = d.objects))
                  for (m = 0, l = e.length; m < l; m++)
                    (f = e[m]) && (f = f.instance) && f.gb();
                d.objects = [];
              }
          b.splice(g, 1);
          this.M("close", c);
          break;
        }
    }
  };
  m.prototype.ZP = function (a, d, e, f) {
    a = b.call(this, a);
    var h = this.nd();
    if (h && (h = h.windows)) {
      var k = h[a];
      if (k) {
        var m = g.L.Sc,
          l;
        (h = k.objects) || (h = k.objects = []);
        if (
          0 !== Number(a) &&
          ("regressionchannel" == d || "stddevchannel" == d)
        )
          return (
            c.U.Wb(
              c.U.Ab.ZE,
              c.U.types.Kd,
              "This object does not support work on sub-chart."
            ),
            c.Jh.Gb("journal")
          );
        if ((a = m.Kf.zG(d)))
          (l = a.Ec(e, f, h.length + 1)), (l.instance = new a(l)), h.push(l);
        this.M("change");
        return l && l.instance;
      }
    }
    return null;
  };
  m.prototype.jJ = function () {
    var a = k.call(this);
    if (a) {
      var a = a.windows,
        b,
        c,
        d;
      if (a)
        for (var e = 0, f = a.length; e < f; e++)
          if ((b = a[e])) {
            if ((c = b.objects))
              for (var g = 0, h = c.length; g < h; g++)
                (d = c[g]) && (d = d.instance) && d.gb();
            b.objects = [];
          }
    }
    this.M("clear_objects");
    this.M("change");
  };
  m.prototype.QC = function (a) {
    var b = k.call(this);
    if (b) {
      var b = b.windows,
        c,
        d;
      if (b)
        for (var e = 0, f = b.length; e < f; e++)
          if ((c = b[e]))
            if ((c = c.objects))
              for (var g = 0, h = c.length; g < h; g++)
                if ((d = c[g]) && d.id == a) {
                  (b = d.instance) && b.gb();
                  c.splice(g, 1);
                  this.M("remove_object", a);
                  this.M("change");
                  return;
                }
    }
  };
  m.prototype.UG = function () {
    var a = k.call(this);
    if (a) {
      var a = a.windows,
        b;
      if (a)
        for (var c = 0, d = a.length; c < d; c++)
          if ((b = a[c]) && b && b.objects && b.objects.length) return !0;
    }
    return !1;
  };
  m.prototype.qG = function () {
    var a = [],
      b = k.call(this);
    if (b) {
      var b = b.windows,
        c;
      if (b)
        for (var d = 0, e = b.length; d < e; d++)
          if ((c = b[d])) {
            c = c.objects;
            var f;
            if (c)
              for (var g = 0, h = c.length; g < h; g++) (f = c[g]) && a.push(f);
          }
    }
    return a;
  };
  m.prototype.ds = function (a) {
    var b = k.call(this);
    if (b) {
      var b = b.windows,
        c;
      if (b)
        for (var d = 0, e = b.length; d < e; d++)
          if ((c = b[d])) {
            c = c.objects;
            var f;
            if (c)
              for (var g = 0, h = c.length; g < h; g++)
                if ((f = c[g]) && f.id == a) return f;
          }
    }
    return null;
  };
  m.prototype.fU = function (b) {
    var d = g.L.Nc,
      e = k.call(this);
    if (e) {
      var e = e.windows,
        f = a.Km ? 3 : 5,
        h = {};
      h.id = new Date().getTime().toString();
      h.type = b;
      h.period_flags = g.L.Fl.Kd;
      h.temp = !0;
      if ((b = d.yG(b))) {
        if (b.re == d.types.Jf) {
          if (e.length >= f) {
            c.U.Wb(
              c.U.Ab.Fn,
              c.U.types.Kd,
              "The maximum number of indicator subwindows reached",
              !1,
              !0
            );
            c.Jh.Gb("journal");
            return;
          }
          h.instance = new b(h);
          d = { indicators: [] };
          d.indicators[0] = h;
          e.push(d);
        } else if (b.re == d.types.jn && (d = e[0]) && (d = d.indicators)) {
          if (
            b.oY &&
            d.filter(function (a) {
              return a.type === h.type;
            }).length
          ) {
            c.U.Wb(
              c.U.Ab.Fn,
              c.U.types.Kd,
              "The indicator Fractals added on chart yet.",
              !1,
              !0
            );
            c.Jh.Gb("journal");
            return;
          }
          d.push(h);
        }
        this.M("change");
        this.M("add_indicator", h.id);
      }
    }
  };
  m.prototype.PC = function (a) {
    var b = k.call(this);
    if (b) {
      var c = b.windows,
        d,
        f;
      if (c)
        for (var b = 0, g = c.length; b < g; b++)
          if ((d = c[b]))
            if ((d = d.indicators))
              for (var h = 0, m = d.length; h < m; h++)
                if ((f = d[h]) && f.id == a) {
                  (c = f.instance) && c.gb();
                  d.splice(h, 1);
                  this.M("remove_indicator", a);
                  this.M("change");
                  0 < b && !d.length && e.call(this, b, !0);
                  return;
                }
    }
  };
  m.prototype.gY = e;
  m.prototype.cs = function (a) {
    var b = k.call(this);
    if (b) {
      var b = b.windows,
        c;
      if (b)
        for (var d = 0, e = b.length; d < e; d++)
          if ((c = b[d])) {
            c = c.indicators;
            var f;
            if (c)
              for (var g = 0, h = c.length; g < h; g++)
                if ((f = c[g]) && f.id == a) return f;
          }
    }
    return null;
  };
  m.prototype.SG = function () {
    var a = k.call(this);
    if (a) {
      var a = a.windows,
        b,
        c;
      if (a)
        for (var d = 0, e = a.length; d < e; d++)
          if ((b = a[d]))
            if ((b = b.indicators))
              for (var f = 0, g = b.length; f < g; f++)
                if ((c = b[f]) && "Main" != c.type) return !0;
    }
    return !1;
  };
  m.prototype.nd = k;
  m.prototype.iS = function (a, b) {
    var c = this.ei,
      d;
    if (c && c.length)
      for (var e = 0, f = c.length; e < f; e++)
        if ((d = c[e]) && d.symbol == a && d.period == b) return d;
    return null;
  };
  m.prototype.jS = function (a) {
    var b = this.ei,
      c;
    if (b && b.length)
      for (var d = 0, e = b.length; d < e; d++)
        if ((c = b[d]) && c.symbol == a && void 0 == c.period) return d;
    return null;
  };
  m.prototype.wT = function (a) {
    var b = this.ei,
      c;
    if (b && b.length)
      for (var d = 0, e = b.length; d < e; d++)
        if ((c = b[d]) && c.symbol == a) return !0;
    return !1;
  };
  d.la.ra = new m();
})();
(function () {
  function v() {
    this.bg = [];
    this.qa = [];
    this.jw = [];
  }
  function r(e, b) {
    return e.zf > b.zf ? 1 : e.zf < b.zf ? -1 : 0;
  }
  function l(e, b) {
    return e.l > b.l ? 1 : e.l < b.l ? -1 : 0;
  }
  var e = window.J,
    k = e.V;
  v.prototype = {
    bg: null,
    qa: null,
    jw: null,
    Rr: function (e) {
      if (!e) return this;
      this.bg[this.bg.length] = e;
      this.oj(e.l, e);
      e.A && (e.tk = e.A.tk);
      return this;
    },
    Dd: function (e) {
      if (!e) return this;
      var b = e.l;
      if (b)
        if ((b = this.Ka(b))) {
          for (var a in e) e.hasOwnProperty(a) && (b[a] = e[a]);
          this.oj(b.l, b);
        } else return this.Rr(e), !0;
      return !1;
    },
    ri: function () {
      return this.bg;
    },
    yg: function () {
      this.qa = this.bg.slice().sort(r);
      this.jw = this.bg.slice().sort(l);
      return this;
    },
    Oa: function () {
      var e;
      if (this.bg)
        for (var b = 0, a = this.bg.length; b < a; b++)
          (e = this.bg[b]) && (this.bg[b] = null);
      this.bg = [];
      return this;
    },
    rv: function (e) {
      if (this.bg) {
        e = e.l;
        var b;
        if (e)
          for (var a = 0, g = this.bg.length; a < g; a++)
            if ((b = this.bg[a]) && b.l === e) return this.bg.splice(a, 1), !0;
      }
      return !1;
    },
    Ka: function (e) {
      var b = this.jw;
      if (b)
        for (var a, g, d = 0, f = b.length; d <= f; ) {
          a = Math.floor(d + (f - d) / 2);
          g = b[a] && b[a].l;
          if (g === e) return b[a];
          g > e ? (f = a - 1) : (d = a + 1);
        }
      return null;
    },
    qq: function (e) {
      var b = this.qa;
      if (b)
        for (var a, g, d = 0, f = b.length; d <= f; ) {
          a = Math.floor(d + (f - d) / 2);
          g = b[a] && b[a].zf;
          if (g === e) return b[a];
          g > e ? (f = a - 1) : (d = a + 1);
        }
      return null;
    },
    tg: function (e, b) {
      this.Vb.call(this, e, b, void 0, !1);
      return this;
    },
    xe: function () {
      this.Ng.apply(this, arguments);
      return this;
    },
  };
  e.ma.he(v, k.la.bf);
  k.la.O = new v();
})();
(function () {
  var v = (E.V.la.Us = {});
  v.F_ = function (l, e) {
    var k = r[l];
    k || (k = r[l] = {});
    for (var h in e) e.hasOwnProperty(h) && (k[h] = e[h]);
  };
  v.IS = function (l) {
    return r[l];
  };
  v.nG = function () {
    return r;
  };
  v.Oa = function () {
    r = [];
    return v;
  };
  var r = [];
})();
(function () {
  function v(e, b) {
    if (!e || !b) return !1;
    e = e.split(",");
    if (e.length)
      for (
        var a = 0, g = e.length, d;
        a < g && ((d = e[a]), "!" !== d.charAt(0) || !r(d, b));
        a++
      )
        if (r(d, b)) return !0;
    return !1;
  }
  function r(e, b) {
    if (!e || !b) return !1;
    e = e.trim();
    if (e === b) return !0;
    for (var a, g, d; "!" == e.charAt(0); ) e = e.substr(1);
    var f = 0,
      c = e.length;
    for (a = ""; f < c; f++) (d = e.charAt(f)), (a += d);
    e = a;
    if ("*" == e) return !0;
    a = e.charAt(0);
    if ("*" == a)
      if (1 < e.length) g = e.charAt(1);
      else return !0;
    for (var k = (f = 0), c = b.length; f < c; f++)
      if (((d = b.charAt(f)), "*" == a)) d == g && ((a = g), (g = null), f--);
      else {
        if (d != a) return !1;
        k++;
        if (e.length >= k) {
          if (((a = e.charAt(k)), "*" == a))
            if (e.length < k + 1) g = e.charAt(k + 1);
            else return !0;
        } else return !0;
      }
    return f >= b.length ? !1 : !0;
  }
  var l = E.V.la,
    e = (l.So = {});
  e.L2 = function () {
    var h = l.H.Jr;
    h &&
      h.length &&
      (h.forEach(function (b) {
        e.Rr(b);
      }),
      (l.H.Jr = null));
  };
  e.Oa = function () {
    k = [];
  };
  e.Rr = function (e) {
    k.push(e);
  };
  e.Kv = function (h) {
    if (!h && !h.length) return !1;
    e.Oa();
    h.forEach(function (b) {
      e.Rr(b);
    });
    l.O.ri().forEach(function (b) {
      b.Lf();
      e.MD(b);
    });
    return !0;
  };
  e.MD = function (e) {
    if (e.A && k && k.length)
      for (var b, a = 0, g = k.length; a < g; a++)
        if ((b = k[a]) && v(b.tk, e.A.tk)) {
          var d = Number.J,
            f = Number.Yb,
            c = Number.qa,
            l = e.A;
          l &&
            (b.cg != d && (l.cg = b.cg),
            b.gj != d && (l.gj = b.gj),
            b.Rh != f && (l.Rh = b.Rh),
            b.Ah != d && (l.Ah = b.Ah),
            b.NE != d && (l.NE = b.NE),
            b.$d != f && (l.$d = b.$d),
            b.oi != f && (l.oi = b.oi),
            b.Ni != f && (l.Ni = b.Ni),
            b.ad != f && (l.ad = b.ad),
            b.TE != f && (l.TE = b.TE),
            b.UE != f && (l.UE = b.UE),
            b.PE != f && (l.PE = b.PE),
            b.Vt != f && (l.Vt = b.Vt),
            b.RE != f && (l.RE = b.RE),
            b.QE != f && (l.QE = b.QE),
            b.yh && 0 !== b.yh.compare(Long.rs) && (l.yh = b.yh.La()),
            b.OE != f && (l.OE = b.OE),
            b.SE != f && (l.SE = b.SE),
            b.ME != f && (l.ME = b.ME),
            b.mj && 0 !== b.mj.compare(Long.rs) && (l.mj = b.mj.La()),
            b.lj && 0 !== b.lj.compare(Long.rs) && (l.lj = b.lj.La()),
            b.sg && 0 !== b.sg.compare(Long.rs) && (l.sg = b.sg.La()),
            b.Lr && 0 !== b.Lr.compare(Long.rs) && (l.Lr = b.Lr.La()),
            b.At != f && (l.At = b.At),
            b.bb != c && (l.bb = b.bb),
            b.ub != c && (l.ub = b.ub),
            b.me[0] != c && (l.me[0] = b.me[0]),
            b.me[1] != c && (l.me[1] = b.me[1]),
            b.me[2] != c && (l.me[2] = b.me[2]),
            b.me[3] != c && (l.me[3] = b.me[3]),
            b.me[4] != c && (l.me[4] = b.me[4]),
            b.me[5] != c && (l.me[5] = b.me[5]),
            b.me[6] != c && (l.me[6] = b.me[6]),
            b.me[7] != c && (l.me[7] = b.me[7]),
            b.ne[0] != c && (l.ne[0] = b.ne[0]),
            b.ne[1] != c && (l.ne[1] = b.ne[1]),
            b.ne[2] != c && (l.ne[2] = b.ne[2]),
            b.ne[3] != c && (l.ne[3] = b.ne[3]),
            b.ne[4] != c && (l.ne[4] = b.ne[4]),
            b.ne[5] != c && (l.ne[5] = b.ne[5]),
            b.ne[6] != c && (l.ne[6] = b.ne[6]),
            b.ne[7] != c && (l.ne[7] = b.ne[7]),
            b.Ji != c && (l.Ji = b.Ji),
            b.wp != c && (l.wp = b.wp),
            b.hh != c && (l.hh = b.hh),
            b.Ip != f && (l.Ip = b.Ip),
            b.Uw != c && (l.Uw = b.Uw),
            b.Vw != c && (l.Vw = b.Vw),
            b.Ut != d && (l.Ut = b.Ut),
            b.Nm != f && (l.Nm = b.Nm),
            b.Iw != f && (l.Iw = b.Iw));
        }
  };
  e.ri = function () {
    return (k && k.slice()) || [];
  };
  e.PP = v;
  var k;
})();
(function () {
  var v = window.J.V;
  v.la.pm = {
    bg: [],
    QL: [],
    Oa: function () {
      this.bg = [];
    },
    vN: function (r) {
      if (!r) return this;
      this.bg &&
        (this.bg.find(function (l) {
          return l.Hp === r.Hp;
        }) ||
          this.bg.push(r));
    },
    DG: function (r) {
      var l = this.QL.filter(function (e) {
        return e.zf === r;
      });
      return l
        ? l.map(function (e) {
            return e.VM;
          })
        : [];
    },
    F2: function () {
      return this.bg && this.bg.length;
    },
    vk: function () {
      var r, l, e;
      e = this.bg;
      l = this.QL = [];
      (r = v.la.O.ri()) &&
        r.length &&
        r.forEach(function (k) {
          e.forEach(function (e) {
            e.qp.concat(e.rp).find(function (b) {
              return b.RP(k);
            }) &&
              (l.find(function (b) {
                return b.zf === k.zf && b.VM.Hp === e.Hp;
              }) ||
                l.push({ zf: k.zf, VM: e }));
          });
        });
    },
  };
})();
(function () {
  function v() {}
  function r(a, b) {
    var e = this.u(a, b),
      f;
    1100 < e.length &&
      ((f = e.length - 1e3),
      e.splice(0, f),
      c.U.Wb(
        c.U.Ab.Fn,
        c.U.types.ae,
        [
          "'",
          d.H.ga,
          "':",
          " the chart data exceeded the maximum number of bars: ",
          c.Wp.kS(a, b),
          " in the ",
          f,
          " bars of ",
          1e3,
        ].join("")
      ));
  }
  function l(a, b) {
    return a[0] - b[0];
  }
  function e(a, b) {
    return [a, b].join("_-|-_");
  }
  function k(b, c) {
    var e = g.data.yn,
      h = g.data.wo,
      k = a.L.rg,
      l,
      p,
      n,
      x,
      v;
    if (
      !c.xM &&
      (n = d.O.Ka(b)) &&
      ((v = c.rd), (l = c.time), (p = c.kj.La()), l)
    ) {
      if (void 0 !== n.bo && 1365 < d.H.IE)
        switch (n.bo) {
          case e.ix:
            x = c.Dj.normalize(n.j);
            break;
          case e.gu:
            x = c.Nf.normalize(n.j);
            break;
          case e.jx:
            x =
              0 === c.Nf && 1 > n.Yk
                ? c.Dj.normalize(n.j)
                : c.Nf.normalize(n.j);
            break;
          default:
            return;
        }
      else x = 0 === c.Nf && 1 > n.Yk ? c.Dj : c.Nf;
      x &&
        ((l = a.L.Ax(l)),
        Object.keys(k).forEach(function (e) {
          e = k[e];
          var g = d.ef.u(b, e),
            n,
            m,
            y;
          if (g && g.length) {
            g.Ov = c.Bm;
            g.Qv = c.Dj;
            g.Yv = c.Nf;
            m = a.L.Ax(l, e);
            if ((n = g[g.length - 1]))
              if ((y = n[0])) {
                if (y === m) {
                  n[4] = x;
                  x > n[2] && (n[2] = x);
                  x < n[3] && (n[3] = x);
                  n[5]++;
                  v.ki(h.uq) && (n[6] += f.Wa.od(p));
                  return;
                }
                if (m < y) return;
              }
            x &&
              ((n = []),
              (n[0] = m),
              (n[1] = x),
              (n[2] = x),
              (n[3] = x),
              (n[4] = x),
              (n[5] = 1),
              (n[6] = c.rd & h.uq ? f.Wa.od(p) : 0),
              g.push(n),
              r.call(d.ef, b, e));
          }
        }));
    }
  }
  var h = window.J,
    b = h.ma,
    a = h.controls,
    g = h.V,
    d = g.la,
    f = g.control,
    c = g.view;
  v.prototype = {
    cV: 1e3,
    u: function (a, b) {
      return void 0 === a || void 0 === b ? null : v.G.u.call(this, e(a, b));
    },
    c: function (a, b, c) {
      var f, g, h;
      if (void 0 === a || void 0 === b) return this;
      f = e(a, b);
      g = this.u(a, b) || [];
      h = (c || []).reduce(function (a, b) {
        a[b[0]] = b;
        return a;
      }, {});
      g.forEach(function (a) {
        var b = a[0],
          c = h[b];
        b &&
          c &&
          ((a[0] = c[0]),
          (a[1] = c[1]),
          (a[2] = c[2]),
          (a[3] = c[3]),
          (a[4] = c[4]),
          (a[5] = c[5]),
          (h[b] = null));
      });
      Object.keys(h).forEach(function (a) {
        (a = h[a]) && g.push(a);
      });
      g.sort(l);
      r.call(this, a, b);
      if ((a = d.wa.u(a))) (g.Ov = a.Bm), (g.Qv = a.vb), (g.Yv = a.Nf);
      this.oj(f);
      return this;
    },
    Lf: function (a, b) {
      var c = e(a, b),
        g = this.u(a, b);
      if (!g || !g.length)
        return (
          void 0 !== a &&
            void 0 !== b &&
            ((c = e(a, b)),
            (g = []),
            (g.fa = a),
            (g.ea = b),
            v.G.u.call(this, c, g, !1),
            f.O.Xi(a),
            d.wa.zT(a, k) || d.wa.tg(a, k, 0)),
          this
        );
      g.splice(0, g.length);
      this.oj(c);
      return this;
    },
    lY: function (b) {
      var c = a.L.rg,
        d = this;
      Object.keys(c).forEach(function (a) {
        a = c[a];
        var f;
        void 0 !== d.u(b, a) &&
          ((f = []), (f.fa = b), (f.ea = a), d.u(e(b, a), f, !1));
      });
    },
    oj: function (a) {
      var b = this,
        c = this.ep,
        d = a.split("_-|-_"),
        e = d[0],
        f = parseInt(d[1], 10),
        g;
      if (!c || !c[a]) return !1;
      g = this.u(e, f);
      c[a].forEach(function (a) {
        a.call(b, e, f, g);
      });
      return this;
    },
    tg: function (a, b, c) {
      return void 0 === a || void 0 === b
        ? this
        : this.Vb(e(a, b), c, void 0, !1);
    },
    xe: function (a, b, c) {
      return void 0 === a || void 0 === b ? this : this.Ng(e(a, b), c);
    },
    Oa: function () {
      Object.keys(this.wb || {}).forEach(function (a) {
        if ((a = a.split("_-|-_")[0])) f.O.pl(a), d.wa.xe(a, k);
      });
      v.G.Oa.call(this);
      return this;
    },
  };
  b.he(v, d.bf);
  d.ef = new v();
})();
(function () {
  function v(b) {
    if (!a.indexedDB) return c;
    k(function (a) {
      if (a) {
        var c = a.transaction(["rate5"], "readwrite").objectStore("rate5");
        a = c.openCursor();
        a.onerror = h;
        a.onsuccess = function (a) {
          if ((a = a.target.result)) {
            var d = a.value;
            d && d.symbol === b ? (c.delete(d.id), v(b)) : a.continue();
          }
        };
      }
    });
  }
  function r() {
    k(function (a) {
      if (a) {
        var b = {},
          c = a.transaction(["rate5"], "readwrite").objectStore("rate5");
        a = c.openCursor();
        a.onerror = h;
        a.onsuccess = function (a) {
          if ((a = a.target.result)) {
            var d = a.value,
              e;
            if (d) {
              e = [d.symbol, d.period, d.version || ""].join("_");
              if (b[e] && !0 === l(b[e], d)) {
                c.put(b[e]).onsuccess = function () {
                  c.delete(d.id).onsuccess = function () {
                    r();
                  };
                };
                return;
              }
              b[e] = d;
            }
            a.continue();
          }
        };
      }
    });
  }
  function l(a, b) {
    if (a.finish < b.start || a.start > b.finish) return !1;
    var c = {},
      d,
      f,
      g = a.bars,
      h = b.bars;
    d = 0;
    for (f = g.length; d < f; d++) c[g[d][0]] = d;
    for (var k = 0, l = h.length; k < l; k++)
      if ((d = h[k])) (f = c[d[0]]), 0 <= f ? (g[f] = d) : g.push(d);
    g.sort(e);
    a.start = Math.min(a.start, b.start);
    a.finish = Math.max(a.finish, b.finish);
    return !0;
  }
  function e(a, b) {
    return a[0] - b[0];
  }
  function k(b) {
    try {
      var c = a.indexedDB.open(f, 1);
      c.onerror = function () {
        b(null);
      };
      c.onsuccess = function () {
        b(c.result);
      };
      c.onupgradeneeded = function (a) {
        a.currentTarget.result.createObjectStore("rate5", {
          keyPath: "id",
          autoIncrement: !0,
        });
      };
    } catch (d) {
      a.indexedDB = null;
    }
  }
  function h() {}
  function b(a) {
    f = ["cache-", a.Df(), "-5"].join("");
  }
  var a = E.Qa,
    g = E.ba,
    d = E.V.la,
    f = "cache5",
    c = (d.qv = {});
  c.ha = function () {
    d.H.oe && g.vg.kh(d.H.oe.Bf(), g.vg.methods.bu, b, !0);
    return c;
  };
  c.sj = function (b, d, e, f, h) {
    var l = g.rb.Pm;
    if (!a.indexedDB) return h(b, d, e, f, null), c;
    if (!e && !f) return h(b, d, e, f, null), c;
    k(function (a) {
      if (a)
        try {
          var c = a
            .transaction(["rate5"], "readonly")
            .objectStore("rate5")
            .openCursor();
          c.onerror = function () {
            h(b, d, e, f, null);
          };
          c.onsuccess = function (a) {
            if ((a = a.target.result)) {
              var c = a.value;
              if (c && c.symbol == b && c.period == d && c.version == l) {
                var g = c.start,
                  k = c.finish;
                if (e >= g && f <= k) {
                  if (e == g && f == k) {
                    h(b, d, e, f, c.bars);
                    return;
                  }
                  a = [];
                  if ((c = c.bars))
                    for (var k = 0, n = c.length; k < n; k++)
                      (g = c[k]), g[0] >= e && g[0] <= f && a.push(g);
                  if (a && a.length) {
                    h(b, d, e, f, a);
                    return;
                  }
                  h(b, d, e, f, null);
                  return;
                }
              }
              a.continue();
            } else h(b, d, e, f, null);
          };
        } catch (g) {
          h(b, d, e, f, null);
        }
      else h(b, d, e, f, null);
    });
    return c;
  };
  c.qo = function (b, d, e, f, h) {
    if (!a.indexedDB) return c;
    k(function (a) {
      if (a) {
        var c = {},
          k = g.rb.Pm;
        k && (c.version = k);
        c.symbol = b;
        c.period = d;
        c.start = e;
        c.finish = f;
        c.bars = h;
        a
          .transaction(["rate5"], "readwrite")
          .objectStore("rate5")
          .put(c).onsuccess = function () {
          r();
        };
      }
    });
    return c;
  };
  c.Oa = v;
})();
(function () {
  var v = E.V,
    r = v.la,
    l = E.ma,
    e = (v.la.qN = {});
  e.nN = 0;
  e.XE = 1;
  e.mN = 2;
  var k = (r.$E = {});
  k.JB = 16;
  var h = (r.k5 = {});
  h.JK = 16;
  h.W0 = 32;
  var b = (v.la.H = {});
  b.zN = function (a) {
    l.gG(a, this);
  };
  b.Oa = function () {
    var a = r.H;
    a.ga = null;
    a.cj = null;
    a.Wd = null;
    a.Qg = null;
    a.hf = null;
    a.yc = null;
    a.wh = null;
    a.ul = null;
    a.IE = null;
    a.oe = null;
    a.pr = null;
    a.Yw = null;
    a.tw = null;
    a.xp = null;
    a.AE = null;
    a.Bt = null;
    a.Dt = null;
    a.Ct = null;
    a.EM = null;
    a.vp = null;
    a.pg = null;
    a.qg = null;
    a.hi = null;
    a.Nd = null;
    a.Gl = 0;
    a.ya = 0;
    a.Xd = 0;
    a.pc = 0;
    a.margin = 0;
    a.bb = 0;
    a.ub = 0;
    a.Ie = 0;
    a.Sb = 0;
    a.Gc = 0;
    a.Qc = 0;
    a.jf = 0;
    a.LM = null;
    return a;
  };
  b.Cea = function (a) {
    this.Q3 = a.Q3;
    this.p4 = a.p4;
  };
  b.rH = function () {
    return this.cj == e.nN;
  };
  b.bB = function () {
    return this.cj == e.XE;
  };
  b.iU = function () {
    return this.cj == e.mN;
  };
  b.Zu = function () {
    return !!(this.Rw & 8);
  };
  b.tH = function () {
    return !!(this.Rw & 4);
  };
  b.qH = function () {
    return !!(this.Rw & 512);
  };
  b.rU = function () {
    return !!(this.Rw & 1024);
  };
  b.gU = function () {
    return this.xp == v.data.on.EH && this.vp == v.data.Cq.eq;
  };
  b.mU = function () {
    return this.Qj != v.control.cu.au;
  };
  b.Kg = function () {
    return this.xp == v.data.on.qs;
  };
  b.lH = function () {
    return this.xp == v.data.on.bv;
  };
  b.xN = function () {
    return !!(this.Gl & h.JK) || !!(this.Gl & h.W0);
  };
  b.yN = function () {
    return !!(this.Gl & h.JK);
  };
  b.z$ = function () {
    return !!(this.ga && this.oe && this.ul);
  };
  b.f$ = function (a, b) {
    return this.ga == a && this.oe == b;
  };
  b.nY = function () {
    return !!(this.Nm & k.JB);
  };
})();
(function () {
  function v(a) {
    return (c.Yd || []).some(function (b) {
      return b.l === a;
    });
  }
  function r(a) {
    return (c.ee || []).some(function (b) {
      return b.l === a;
    });
  }
  function l(e) {
    var h = b.data.eb,
      k,
      l,
      w,
      p,
      n,
      x,
      z;
    l = v(e);
    k = r(e);
    if (l || k)
      if ((n = g.O.Ka(e)))
        if ((x = g.wa.u(e)))
          if (
            ((z = a.pd.yI(n, x)),
            (w = a.ff.km(n, g.H.hf)),
            (p = a.ff.lm(n, g.H.hf)),
            w && p)
          ) {
            if (k) {
              if ((k = c.mq(e)))
                a.pd.BX(e)
                  ? x.rd & f.wo.tq &&
                    k.forEach(function (b) {
                      a.ci.Rq(n, x, b, w, p);
                    })
                  : k.forEach(function (b) {
                      b.zb() && x.rd & f.wo.hn && a.ci.Rq(n, x, b, w, p);
                      b.uc() && x.rd & f.wo.gn && a.ci.Rq(n, x, b, w, p);
                    }),
                  k.forEach(function (b) {
                    a.ci.EX(n, b, w, p, n.Td());
                    d.P.gL(b);
                  });
              b.control.Wc.ti(g.H);
              b.control.Wc.ui(g.H);
              d.P.hL();
            }
            l &&
              (e = c.Gu(e)) &&
              e.forEach(function (a) {
                switch (a.yb) {
                  case h.Ja:
                  case h.Lc:
                  case h.we:
                  case h.hd:
                    z.dc && (a.ed = z.dc);
                    break;
                  case h.Va:
                  case h.Zc:
                  case h.Ee:
                  case h.jd:
                    z.vb && (a.ed = z.vb);
                }
                d.P.M2(a);
              });
          }
  }
  function e(a) {
    var b = z[a];
    b ||
      ((a = "" + a),
      (b = z[a] =
        function () {
          l(a);
        }));
    h.al(b, 200);
  }
  var k = window.J,
    h = k.ma,
    b = k.V,
    a = b.control,
    g = b.la,
    d = b.view,
    f = b.data,
    c = (b.la.P = {
      Ij: !1,
      ee: [],
      Yd: [],
      Oa: function () {
        var b = this.Yd,
          d = this.ee;
        b &&
          b.forEach(function (b) {
            if ((b = b.l)) a.O.pl(b), g.wa.xe(b, e);
          });
        d &&
          d.forEach(function (b) {
            if ((b = b.l)) a.O.pl(b), g.wa.xe(b, e);
          });
        this.ee = [];
        this.Yd = [];
        this.Ij = !1;
        z = {};
        return c;
      },
      yg: function () {
        var a = this.ee,
          b = this.Yd;
        a &&
          ((a.mp = a.some(function (a) {
            return !!a.Mb;
          })),
          (a.np = a.some(function (a) {
            return !!a.Qb;
          })));
        b &&
          ((b.mp = b.some(function (a) {
            return !!a.C;
          })),
          (b.np = b.some(function (a) {
            return !!a.D;
          })));
      },
      Sh: function (c) {
        var d, f;
        if (!c) return !1;
        f = c.X;
        if (
          (this.Yd || []).find(function (a) {
            return a.X === f;
          })
        )
          return !1;
        c.Om = new b.data.ig();
        this.Yd[this.Yd.length] = c;
        d = c.l;
        a.O.Xi(d);
        g.wa.tg(d, e);
        c.Mm && (this.Ij = !0);
        return !0;
      },
      iY: function (a) {
        var b, c;
        if (!a) return !1;
        if ((b = this.Yd))
          if (
            ((c = a.X),
            (a = b.Hm(function (a) {
              return a.X === c;
            })),
            -1 !== a)
          )
            return this.Yd.splice(a, 1), !0;
        return !1;
      },
      $k: function (c) {
        var d;
        if (!c) return !1;
        c.Om = new b.data.Tg();
        this.ee[this.ee.length] = c;
        d = c.l;
        a.O.Xi(d);
        g.wa.tg(d, e);
        c.hM && (this.Ij = !0);
        return !0;
      },
      kY: function (a) {
        if (!a) return !1;
        a = a.ka ? this.fg(a.ka, !0) : this.Ul(a.l, !0);
        return -1 < a ? (this.ee.splice(a, 1), !0) : !1;
      },
      N2: function (a) {
        return (this.Yd || []).concat(this.ee || []).some(function (b) {
          return b.l === a;
        });
      },
      df: function (a, b) {
        return b
          ? (this.Yd || []).Hm(function (b) {
              return b.X === a;
            })
          : (this.Yd || []).find(function (b) {
              return b.X === a;
            });
      },
      Gu: function (a, b) {
        return (this.Yd || []).slice().filter(function (c) {
          return c.l === a && (void 0 === b || c.Oea === b);
        });
      },
      fg: function (a, b) {
        return b
          ? (this.ee || []).Hm(function (b) {
              return b.ka === a;
            })
          : (this.ee || []).find(function (b) {
              return b.ka === a;
            });
      },
      Ul: function (a, b) {
        return b
          ? (this.ee || []).Hm(function (b) {
              return b.l === a;
            })
          : (this.ee || []).find(function (b) {
              return b.l === a;
            });
      },
      Ui: function (b, c) {
        return a.Wc.Kg(g.H) ? this.fg(c) : this.Ul(b);
      },
      mq: function (a) {
        return (this.ee || []).slice().filter(function (b) {
          return b.l === a;
        });
      },
      VG: function () {
        return this.Yd && !!this.Yd.length;
      },
      yT: function () {
        return (this.ee || []).some(function (a) {
          return !a.Td();
        });
      },
    }),
    z = {};
})();
(function () {
  function v(b, a) {
    return b.X > a.X ? 1 : b.X < a.X ? -1 : 0;
  }
  function r(b, a) {
    return b.ka > a.ka ? 1 : b.ka < a.ka ? -1 : 0;
  }
  function l(b, a) {
    if (b.ka > a.ka) return 1;
    if (b.ka < a.ka) return -1;
    if (h.data.Tg.pf(b.da) !== h.data.Tg.pf(a.da)) {
      if (b.da > a.da) return 1;
      if (b.da < a.da) return -1;
    }
    return 0;
  }
  function e(b, a) {
    return b.Te > a.Te ? 1 : b.Te < a.Te ? -1 : 0;
  }
  function k(b, a) {
    return b.Od > a.Od ? 1 : b.Od < a.Od ? -1 : 0;
  }
  var h = window.J.V;
  h.la.History = {
    Ij: !1,
    fh: null,
    Yd: null,
    ee: null,
    Br: null,
    gE: null,
    dE: null,
    eE: null,
    Oa: function () {
      this.eE = this.dE = this.gE = this.ee = this.fh = this.Yd = null;
      return this;
    },
    yg: function () {
      this.gE = (this.Yd && this.Yd.slice().sort(v)) || [];
      this.dE = (this.fh && this.fh.slice().sort(k)) || [];
      this.eE = (this.fh && this.fh.slice().sort(r)) || [];
      this.Ij =
        (this.Ij = (this.fh || []).some(function (b) {
          return !!b.uw;
        })) ||
        (this.Yd || []).some(function (b) {
          return !!b.Mm;
        });
      return this;
    },
    df: function (b) {
      var a = this.gE,
        e,
        d,
        f,
        c;
      if (a)
        for (f = 0, c = a.length; f <= c; ) {
          e = Math.floor(f + (c - f) / 2);
          d = a[e] && a[e].X;
          if (d === b) return a[e];
          d > b ? (c = e - 1) : (f = e + 1);
        }
      return null;
    },
    Eu: function (b) {
      var a = this.dE,
        e,
        d,
        f,
        c;
      if (a)
        for (f = 0, c = a.length; f <= c; ) {
          e = Math.floor(f + (c - f) / 2);
          d = a[e] && a[e].Od;
          if (d === b) return a[e];
          d > b ? (c = e - 1) : (f = e + 1);
        }
      return null;
    },
    Bx: function (b) {
      var a = this.eE,
        e,
        d,
        f,
        c;
      if (a)
        for (f = 0, c = a.length; f <= c; ) {
          e = Math.floor(f + (c - f) / 2);
          d = a[e] && a[e].ka;
          if (d === b) return a[e];
          d > b ? (c = e - 1) : (f = e + 1);
        }
      return null;
    },
    vG: function (b, a) {
      return h.control.Wc.Kg(h.la.H) ? this.Bx(a) : null;
    },
    qS: function (b) {
      return (this.fh || []).filter(function (a) {
        return a.X === b;
      });
    },
    fY: function (b) {
      var a = (this.fh || []).Hm(function (a) {
        return a.Od === b;
      });
      -1 !== a && (this.fh.splice(a, 1), this.yg());
      return this;
    },
    jY: function (b) {
      var a = (this.Yd || []).Hm(function (a) {
        return a.X === b;
      });
      -1 !== a && (this.Yd.splice(a, 1), this.yg());
      return this;
    },
    FS: function () {
      return (this.fh || []).reduce(function (b, a) {
        var e = a.l;
        e && -1 === b.indexOf(e) && b.push(e);
        return b;
      }, []);
    },
    eu: function (b) {
      var a = this,
        g;
      this.ee = [];
      this.Br || (this.Br = new h.data.DT());
      this.Br.Oa();
      g = this.Br;
      g.Wd = 0;
      g.ya = 0;
      g.Tt = 0;
      g.Xd = 0;
      g.Ii = 0;
      g.Qg = 0;
      g.Mk = 0;
      g.$t = 0;
      if ((g = this.fh))
        (g = g.slice().sort(e)),
          b &&
            (g = g.filter(function (a) {
              return a.l === b;
            })),
          g.forEach(function (b) {
            a.fL(b);
          });
      return this;
    },
    fL: function (b) {
      var a = b.pf() ? b.Od : b.ka,
        e = b.aa,
        d;
      (d = (this.ee || []).find(function (b) {
        return b.ka === a && h.data.Tg.pf(b.da) === h.data.Tg.pf(e) ? !0 : !1;
      }))
        ? d.wu(b)
        : ((d = new h.data.CT()),
          d.wu(b),
          (this.ee[this.ee.length] = d),
          this.ee.sort(l));
      this.Br.wu(b);
      return this;
    },
  };
})();
(function () {
  function v(a) {
    if ((a = c.O.qq(a))) {
      var b = q.u(a.l);
      b ||
        ((b = new d.data.z2()),
        (b.l = a.l),
        (b.j = a.j),
        (b.id = a.zf),
        (b.kc = 0),
        (b.Dc = 0),
        (b.vb = 0),
        (b.dc = 0),
        (b.Nf = 0),
        (b.kj = new Long(0, 0, !0)),
        q.u(a.l, b, !0));
      return b;
    }
    return null;
  }
  function r(a, b) {
    var c = d.data.Zo;
    void 0 === a && (a = 0);
    void 0 === b && (b = 0);
    return 0 === b || a == b ? c.Nl : a >= b ? c.Ol : c.Ml;
  }
  function l(a, b) {
    var c = d.data.Zo;
    void 0 === a && (a = new Long(0, 0, !0));
    void 0 === b && (b = new Long(0, 0, !0));
    return b.ab() || 0 === b.compare(a) ? c.Nl : a.Jm(a) ? c.Ol : c.Ml;
  }
  function e(a) {
    if ((a = c.O.qq(a))) {
      var b = u[a.l];
      b || (b = u[a.l] = []);
      return b;
    }
    return null;
  }
  function k(g, h) {
    if (g == b.rb.Je.Za) {
      var k = d.data.wo,
        m = d.data.js,
        u = d.data.B2,
        O = A.O.$X(h),
        I;
      if (O)
        for (var G, F, y, M, D, L, B, Q = 0, N = O.length; Q < N; Q++)
          if (
            (I = O[Q]) &&
            !(I.Ze & u.g0) &&
            ((G = I.zf), (y = c.O.qq(G))) &&
            ((B = y.A), (F = v(G)))
          )
            if (((L = I.rd), (D = y.j), I.hj < F.yE && (L & k.hn || L & k.gn)))
              z.U.Wb(
                z.U.Ab.ERROR,
                z.U.types.ae,
                [
                  "old tick ",
                  y.l,
                  " (tick: ",
                  a.pj(I.hj, !0),
                  ", last: ",
                  a.pj(F.yE, !0),
                  ") ",
                  (I.vb || 0).normalize(D).toFixed(D),
                  " / ",
                  (I.dc || 0).normalize(D).toFixed(D),
                ].join("")
              );
            else if (I.hj < F.AM && L & k.tq)
              z.U.Wb(
                z.U.Ab.ERROR,
                z.U.types.ae,
                [
                  "old last price ",
                  y.l,
                  " (tick: ",
                  a.pj(I.hj, !0),
                  ", last: ",
                  a.pj(F.AM, !0),
                  ") ",
                  (I.Lm || 0).normalize(D).toFixed(D),
                ].join("")
              );
            else {
              F.time = I.time;
              F.hj = I.hj;
              F.xM = !1;
              null == F.rd && (F.rd = 0);
              F.rd = F.rd.Mh(k.hn, !1);
              F.rd = F.rd.Mh(k.gn, !1);
              F.rd = F.rd.Mh(k.tq, !1);
              F.rd = F.rd.Mh(k.uq, !1);
              L & k.hn &&
                0 !== I.vb &&
                ((M = I.vb.Cf(D)),
                y.hH() || F.Ud(m.Xl, r(M, F.Dj)),
                F.Ud(m.fn, r(M, F.Dj)),
                (F.Dj = M),
                (F.yE = I.hj),
                (F.rd = F.rd.Mh(k.hn, !0)));
              L & k.gn &&
                0 !== I.dc &&
                ((M = I.dc.Cf(D)),
                y.hH() || F.Ud(m.Xl, r(M, F.Bm)),
                F.Ud(m.dn, r(M, F.Bm)),
                (F.Bm = M),
                (F.yE = I.hj),
                (F.rd = F.rd.Mh(k.gn, !0)));
              L & k.tq &&
                0 !== I.Lm &&
                ((D = I.Lm.Cf(D)),
                F.Ud(m.Xl, r(D, F.Nf)),
                (F.Nf = D),
                (F.AM = I.hj),
                (F.rd = F.rd.Mh(k.tq, !0)));
              L & k.uq &&
                ((L = I.C4),
                F.Ud(m.gs, l(L, F.kj)),
                (F.kj = L.La()),
                (F.rd = F.rd.Mh(k.uq, !0)));
              F.vb = F.Dj = F.Dj || 0;
              F.dc = F.Bm = F.Bm || 0;
              F.Lm = F.Nf = F.Nf || 0;
              if (y.A && y.A.cg)
                if (
                  ((B = f.pd.zI(B.cg, B.gj, y.Fb, y.j, F.vb, F.dc)), B.result)
                )
                  (F.vb = B.vb), (F.dc = B.dc);
                else {
                  z.U.Wb(
                    z.U.Ab.ERROR,
                    z.U.types.tK,
                    [
                      "Invalid statistic after extend (",
                      y.l,
                      " ",
                      a.pj(I.time),
                      ", tick: ",
                      F.vb,
                      "/",
                      F.dc,
                      ", original: ",
                      F.Dj,
                      "/",
                      F.Bm,
                      ")",
                    ].join("")
                  );
                  continue;
                }
              F.Ye = F.vb;
              F.Xe = F.dc;
              if ((I = e(G)))
                I.push({ vb: F.Ye, dc: F.Xe, Lm: F.Nf }),
                  125 < I.length && I.splice(0, I.length - 125 - 25);
              q.u(y.l, F);
            }
    }
  }
  function h(e, g) {
    if (e == b.rb.Je.Za) {
      var h = d.data.js,
        k = d.data.wo,
        m = d.data.Zo,
        u = d.data.XK,
        I = d.data.N_,
        G = A.O.ZX(g),
        F,
        y,
        M,
        D,
        L,
        B,
        Q;
      if (G)
        for (var N = 0, K = G.length; N < K; N++)
          (F = G[N]) &&
            !(F.Ze & I.qY) &&
            ((y = F.zf), (B = c.O.qq(y))) &&
            ((Q = B.A), (y = v(y))) &&
            ((M = F.rd),
            (L = y.j),
            (y.rd = 0),
            (y.time = Math.max(F.zM, y.time)),
            (y.hj = Math.max(F.zM, y.hj)),
            (y.xM = !0),
            (y.Yea = !0),
            M.qd(h.fn).compare(Long.Ga) &&
              ((D = F.Ye.Cf(L)),
              y.Ud(h.fn, r(D, y.Ye)),
              (y.Ye = D),
              (y.Dj = D),
              (y.vb = D),
              (y.rd |= k.hn)),
            M.qd(h.Su).compare(Long.Ga) &&
              ((D = F.xl.Cf(L)),
              y.Ud(h.Su, r(D, y.xl)),
              (y.xl = D),
              Q &&
                Q.cg &&
                ((y.xl = f.pd.NB(Q.cg, Q.gj, B.Fb, B.j, y.xl)),
                0 >= y.xl && (y.xl = D))),
            M.qd(h.Tu).compare(Long.Ga) &&
              ((D = F.yl.Cf(L)),
              y.Ud(h.Tu, r(D, y.yl)),
              (y.yl = D),
              Q &&
                Q.cg &&
                ((y.yl = f.pd.NB(Q.cg, Q.gj, B.Fb, B.j, y.yl)),
                0 >= y.yl && (y.yl = D))),
            M.qd(h.dn).compare(Long.Ga) &&
              ((D = F.Xe.Cf(L)),
              y.Ud(h.dn, r(D, y.Xe)),
              (y.Xe = D),
              (y.Bm = D),
              (y.dc = D),
              (y.rd |= k.gn)),
            M.qd(h.Jx).compare(Long.Ga) &&
              ((D = F.zm.Cf(L)),
              y.Ud(h.Jx, r(D, y.zm)),
              (y.zm = D),
              Q &&
                Q.cg &&
                ((y.zm = f.pd.MB(Q.cg, Q.gj, B.Fb, B.j, y.zm)),
                0 >= y.zm && (y.zm = D))),
            M.qd(h.Kx).compare(Long.Ga) &&
              ((D = F.Am.Cf(L)),
              y.Ud(h.Kx, r(D, y.Am)),
              (y.Am = D),
              Q &&
                Q.cg &&
                ((y.Am = f.pd.MB(Q.cg, Q.gj, B.Fb, B.j, y.Am)),
                0 >= y.Am && (y.Am = D))),
            M.qd(h.Xl).compare(Long.Ga) &&
              ((D = F.Nf.Cf(L)),
              y.Ud(h.Xl, r(D, y.Nf)),
              (y.Nf = D),
              (y.rd |= k.tq)),
            M.qd(h.Uu).compare(Long.Ga) &&
              ((D = F.tr.Cf(L)), y.Ud(h.Uu, r(D, y.tr)), (y.tr = D)),
            M.qd(h.Vu).compare(Long.Ga) &&
              ((D = F.ur.Cf(L)), y.Ud(h.Vu, r(D, y.ur)), (y.ur = D)),
            M.qd(h.gs).compare(Long.Ga) &&
              (y.Ud(h.gs, l(F.kj, y.kj)), (y.kj = F.kj), (y.rd |= k.uq)),
            M.qd(h.by).compare(Long.Ga) &&
              (y.Ud(h.by, l(F.Rp, y.Rp)), (y.Rp = F.Rp.La())),
            M.qd(h.cy).compare(Long.Ga) &&
              (y.Ud(h.cy, l(F.Sp, y.Sp)), (y.Sp = F.Sp.La())),
            M.qd(h.NG).compare(Long.Ga) && (y.Zw = F.Zw),
            M.qd(h.QG).compare(Long.Ga) && (y.m = F.m.La()),
            M.qd(h.PG).compare(Long.Ga) && (y.ax = F.ax),
            M.qd(h.OG).compare(Long.Ga) && (y.$w = F.$w),
            M.qd(h.Yx).compare(Long.Ga) &&
              (y.Ud(h.Yx, r(F.Hr, y.Hr)), (y.Hr = F.Hr)),
            M.qd(h.Zx).compare(Long.Ga) &&
              (y.Ud(h.Zx, l(F.Lp, y.Lp)), (y.Lp = F.Lp.La())),
            M.qd(h.$x).compare(Long.Ga) &&
              (y.Ud(h.$x, r(F.Ir, y.Ir)), (y.Ir = F.Ir)),
            M.qd(h.ay).compare(Long.Ga) &&
              (y.Ud(h.ay, l(F.Mp, y.Mp)), (y.Mp = F.Mp.La())),
            M.qd(h.Rx).compare(Long.Ga) &&
              (y.Ud(h.Rx, m.Nl), (y.Jc = F.Jc.Cf(L))),
            M.qd(h.Nx).compare(Long.Ga) &&
              (y.Ud(h.Nx, m.Nl), (y.Oc = F.Oc.Cf(L))),
            M.qd(h.Lx).compare(Long.Ga) &&
              ((D = F.Jt.Cf(L)), y.Ud(h.Lx, r(D, y.Jt)), (y.Jt = D)),
            M.qd(h.Mx).compare(Long.Ga) &&
              ((y.Dr = F.Dr.Cf(2)),
              y.Ud(h.Mx, 0 < y.Dr ? m.Ol : 0 > y.Dr ? m.Ml : m.Nl)),
            M.qd(h.Xx).compare(Long.Ga) &&
              ((D = F.St.Cf(3)), y.Ud(h.Xx, r(D, y.St)), (y.St = D)),
            M.qd(h.Ux).compare(Long.Ga) &&
              ((D = F.Rt.Cf(L)), y.Ud(h.Ux, r(D, y.Rt)), (y.Rt = D)),
            M.qd(h.Ox).compare(Long.Ga) &&
              ((D = F.Kt.Tc().Cf(u.Ri)), y.Ud(h.Ox, r(D, y.Kt)), (y.Kt = D)),
            M.qd(h.Vx).compare(Long.Ga) &&
              ((D = F.Ot.Tc().Cf(u.Ri)), y.Ud(h.Vx, r(D, y.Ot)), (y.Ot = D)),
            M.qd(h.Px).compare(Long.Ga) &&
              ((D = F.Lt.Tc().Cf(u.Ri)), y.Ud(h.Px, r(D, y.Lt)), (y.Lt = D)),
            M.qd(h.Wx).compare(Long.Ga) &&
              ((D = F.Pt.Tc().Cf(u.Ri)), y.Ud(h.Wx, r(D, y.Pt)), (y.Pt = D)),
            M.qd(h.Sx).compare(Long.Ga) &&
              ((D = F.Nt.Tc().Cf(u.Ri)), y.Ud(h.Sx, r(D, y.Nt)), (y.Nt = D)),
            M.qd(h.Qx).compare(Long.Ga) &&
              ((D = F.Mt.Tc().Cf(u.Ri)), y.Ud(h.Qx, r(D, y.Mt)), (y.Mt = D)),
            M.qd(h.Tx).compare(Long.Ga) &&
              ((D = F.Qt.Tc().Cf(u.Ri)), y.Ud(h.Tx, r(D, y.Qt)), (y.Qt = D)),
            y.Ye &&
              y.Xe &&
              (F.Ye || F.Xe) &&
              Q &&
              Q.cg &&
              ((y.Ye = y.Dj),
              (y.Xe = y.Bm),
              (F = f.pd.zI(Q.cg, Q.gj, B.Fb, B.j, y.Ye, y.Xe)),
              F.result
                ? ((y.Ye = F.vb), (y.Xe = F.dc))
                : z.U.Wb(
                    z.U.Ab.ERROR,
                    z.U.types.tK,
                    [
                      "Invalid statistic after extend (",
                      B.l,
                      " ",
                      a.pj(y.time),
                      ", tick: ",
                      F.Ye,
                      "/",
                      F.Xe,
                      ", original: ",
                      y.Ye,
                      "/",
                      y.Xe,
                      ")",
                    ].join("")
                  )),
            q.u(B.l, y));
    }
  }
  var b = E.ba,
    a = E.ma,
    g = E.controls,
    d = E.V,
    f = d.control,
    c = d.la,
    z = d.view,
    A = d.Rg,
    m = a.he,
    u = {},
    q = (d.la.wa = function () {
      var a = b.rb;
      a.Ke(a.mb.UH, k);
      a.Ke(a.mb.SH, h);
      g.L.Af = this;
    });
  m(q, d.la.bf);
  q.prototype.aF = function (a) {
    return (a = c.O.Ka(a)) ? e(a.zf) : null;
  };
  q.prototype.tg = function (a, b, c) {
    if ("string" != typeof a) return this;
    this.Vb.call(this, a, b, c, !1);
    return this;
  };
  q.prototype.xe = function (a, b) {
    this.Ng.call(this, a, b);
    return this;
  };
  q.prototype.zT = function (a, b) {
    return this.RG.call(this, a, b);
  };
  q = d.la.wa = new q();
})();
(function () {
  function v() {
    clearTimeout(g);
    g = setTimeout(r, 3e3);
  }
  function r() {
    var a = h.la.Ib;
    if (k.Pd) {
      var b = window.localStorage.market_watch5;
      (b && b.indexOf && 0 === b.indexOf("{")) || (b = "{}");
      if ((b = window.JSON.parse(b))) {
        var d = a.Se;
        if (d) {
          var e = {};
          e.symbols = a.J;
          e.tab = a.jr || "";
          e.details = a.gr || "";
          b[d] = e;
          window.localStorage.market_watch5 = JSON.stringify(b);
        }
      }
    }
  }
  function l(a) {
    h.la.Ib.Se = a.Df();
  }
  var e = E.ba,
    k = E.Qa,
    h = E.V,
    b = h.la,
    a = h.control,
    g,
    d = (h.la.Ib = function () {
      this.J = [];
      this.gr = null;
      this.jr = "symbols";
      this.i("change", v);
    });
  d.prototype = {
    J: null,
    gr: null,
    jr: null,
    Se: null,
    ha: function () {
      e.vg.kh(b.H.oe.Bf(), e.vg.methods.bu, l, !0);
      return this;
    },
    sj: function () {
      var d;
      this.J = [];
      this.gr = null;
      this.jr = "symbols";
      var c = this.J;
      if (
        k.Pd &&
        (d = window.localStorage.market_watch5) &&
        d.indexOf &&
        0 === d.indexOf("{") &&
        (d = window.JSON.parse(d)) &&
        (d = d[this.Se])
      ) {
        var g = d.tab;
        g && (this.jr = g);
        (g = d.details) && b.O.Ka(g) && (this.gr = g);
        if ((d = d.symbols))
          d.forEach(function (a) {
            -1 < c.indexOf(a) || (b.O.Ka(a) && c.push(a));
          }),
            c.length > a.O.ak && (c.length = a.O.ak);
        r();
      }
      !c.length &&
        (d = decodeURIComponent(e.bd.so("symbols"))) &&
        ((d = d.split(",")),
        d.forEach(function (d) {
          !b.O.Ka(d) ||
            -1 < c.indexOf(d) ||
            (c.push(d), c.length > a.O.ak && (c.length = a.O.ak));
        }));
      return this;
    },
    i: function (a, b, d) {
      this.Vb.apply(this, arguments);
      return this;
    },
    hc: function (a, b) {
      this.Ng.apply(this, arguments);
      return this;
    },
    po: function () {
      this.oj("change");
      return this;
    },
    YJ: function (a, b) {
      if (!a) return this;
      var d = this.J;
      d || (d = this.J = []);
      a = a.trim();
      if (-1 < d.indexOf(a)) return this;
      d[d.length] = a;
      !0 !== b && this.po();
      return this;
    },
    eL: function (a, b) {
      if (!a) return this;
      var d = this.J;
      if (d) {
        a = a.trim();
        var e = d.indexOf(a);
        -1 < e && d.splice(e, 1);
      }
      !0 !== b && this.po();
      return this;
    },
    HW: function (a, b) {
      var d = this.J,
        e;
      d &&
        (e = d[a]) &&
        (b < a
          ? (d.splice(a, 1), d.splice(b, 0, e))
          : (d.splice(a, 1), d.splice(b - 1, 0, e)),
        this.po());
      return this;
    },
    Vg: function () {
      return b.H.ul ? (this.J || []).slice() : [];
    },
    z_: function (a) {
      return this.Vg().pM(a);
    },
    A_: function () {
      var a = this.Vg();
      return a
        ? !!a.find(function (a) {
            if ((a = b.O.Ka(a)) && a.hl()) return !0;
          })
        : !1;
    },
    y_: function (a) {
      this.gr = a;
      this.po();
      return this;
    },
    xv: function (a) {
      this.jr = a;
      this.po();
      return this;
    },
  };
  E.ma.he(d, h.la.bf);
  h.la.Ib = new d();
})();
(function () {
  function v() {
    var a = k.rb;
    a.Ke(a.mb.NH, l);
  }
  function r(a) {
    (a = h.Rg.fd.SX(a)) &&
      a.forEach(function (a) {
        var d;
        if ((d = b.O.qq(a.l)))
          if (h.control.fd.bk(d.l)) {
            var e = v.u(d.l);
            e || ((e = new h.data.ON(d)), v.u(d.l, e, !0));
            d = e;
          } else d = null;
        else d = null;
        d && (d.PN(a), v.u(d.l, d));
      });
  }
  function l(a, b) {
    a === k.rb.Je.Za && r(b);
  }
  var e = window.J,
    k = e.ba,
    h = e.V,
    b = h.la;
  v.prototype = {
    tg: function (a, b) {
      if ("string" !== typeof a) return this;
      this.Vb.call(this, a, b, void 0, !1);
      return this;
    },
  };
  e.ma.he(v, h.la.bf);
  v = h.la.fd = new v();
})();
(function () {
  function v(a, b) {
    var c = new Date(a),
      e = [];
    e.push(c.getUTCFullYear());
    e.push(".");
    e.push(r(c.getUTCMonth() + 1));
    e.push(".");
    e.push(r(c.getUTCDate()));
    e.push(" ");
    e.push(r(c.getUTCHours()));
    e.push(":");
    e.push(r(c.getUTCMinutes()));
    e.push(":");
    e.push(r(c.getUTCSeconds()));
    b &&
      ((c = c.getUTCMilliseconds()),
      e.push(".", 10 > c ? "00" + c : 100 > c ? "0" + c : "" + c));
    return e.join("");
  }
  function r(a) {
    return 10 > a ? "0" + a : "" + a;
  }
  var l = E.V,
    e = E.controls,
    k = l.view,
    h = l.la,
    b = (E.V.data.eb = {});
  b.Ja = 0;
  b.Va = 1;
  b.Lc = 2;
  b.Zc = 3;
  b.we = 4;
  b.Ee = 5;
  b.hd = 6;
  b.jd = 7;
  b.xB = 8;
  var a = (E.V.data.yi = {});
  a.Eh = 0;
  a.fm = 1;
  a.Fh = 2;
  a = E.V.data.tj = {};
  a.il = 0;
  a.sn = 1;
  a.Bk = 2;
  a.Ck = 3;
  a = E.V.data.Io = {};
  a.sI = 0;
  a.Hq = 1;
  a.zs = 2;
  a.rn = 3;
  a.Eo = 4;
  a.lv = 5;
  a.oI = 6;
  a.pI = 7;
  a.rI = 8;
  a.qI = 9;
  a = E.V.data.un = {};
  a.kv = 0;
  a.AB = 1;
  a.zB = 2;
  a.xs = 3;
  a.ys = 4;
  a.CB = 5;
  a.BB = 6;
  a.iX = 7;
  a.rX = 8;
  a.kX = 9;
  a.oX = 10;
  a.nX = 11;
  a.qX = 12;
  a.pX = 13;
  a.jX = 14;
  a.lX = 15;
  a.mX = 16;
  a.sX = 17;
  a = l.data.Bs = {};
  a.c5 = 0;
  a.Pr = 1;
  a.Qr = 2;
  a.b5 = 3;
  a.d5 = 4;
  var g = (l.data.ig = function () {
    this.vE = e.L.Sc.qW;
  });
  g.zb = function (a) {
    return a == b.Ja || a == b.we || a == b.Lc || a == b.hd;
  };
  g.uc = function (a) {
    return a == b.Va || a == b.Ee || a == b.Zc || a == b.jd;
  };
  g.dm = function (a) {
    return a == b.Ja || a == b.Va;
  };
  g.ps = function (a) {
    return (
      a == b.we || a == b.Ee || a == b.Lc || a == b.Zc || a == b.hd || a == b.jd
    );
  };
  g.em = function (a) {
    return a == b.hd || a == b.jd;
  };
  g.prototype.Th = function () {
    var a = new l.data.ig(),
      b;
    for (b in this) this.hasOwnProperty(b) && (a[b] = this[b]);
    return a;
  };
  g.prototype.Xf = function () {
    return this.X;
  };
  g.prototype.nq = function () {
    return this.ii;
  };
  g.prototype.rS = function () {
    var a = this.yb,
      e = this.ed,
      c = this.N,
      g = 0,
      k = 0,
      m = h.O.Ka(this.l);
    if (m) {
      var l = m.Ta,
        m = m.Fb;
      switch (a) {
        case b.Lc:
          g = e - c;
          break;
        case b.we:
          g = c - e;
          break;
        case b.hd:
          g = c - e;
          break;
        case b.Zc:
          g = c - e;
          break;
        case b.Ee:
          g = e - c;
          break;
        case b.jd:
          g = e - c;
      }
      l ? (k = (g / l).normalize(0)) : m && (k = (g / m).normalize(0));
    }
    return k;
  };
  g.prototype.Wl = function (a) {
    return v(this.Te, a);
  };
  g.prototype.pq = function (a) {
    return v(this.ij, a);
  };
  g.prototype.BG = function (a) {
    return v(this.Xw, a);
  };
  g.prototype.Ju = function () {
    var a = this.yb,
      e = "unknown";
    a == b.Ja && (e = "buy");
    a == b.Va && (e = "sell");
    a == b.Lc && (e = "buy limit");
    a == b.Zc && (e = "sell limit");
    a == b.we && (e = "buy stop");
    a == b.Ee && (e = "sell stop");
    a == b.hd && (e = "buy stop limit");
    a == b.jd && (e = "sell stop limit");
    a == b.xB && (e = "close by");
    return e;
  };
  g.prototype.Ex = function () {
    var a = l.data.Io,
      b = this.qk,
      c = "unknown";
    b == a.sI && (c = "started");
    b == a.Hq && (c = "placed");
    b == a.zs && (c = "canceled");
    b == a.rn && (c = "partial");
    b == a.Eo && (c = "filled");
    b == a.lv && (c = "rejected");
    b == a.oI && (c = "expired");
    b == a.pI && (c = "request adding");
    b == a.rI && (c = "request modifying");
    b == a.qI && (c = "request cancelling");
    return c;
  };
  g.prototype.oq = function () {
    var a = l.data.un,
      b = "",
      c = this.ho;
    c == a.kv && (b = "Placed manually");
    c == a.AB && (b = "Placed by expert");
    c == a.zB && (b = "Placed by dealer");
    c == a.xs && (b = "Placed on SL");
    c == a.ys && (b = "Placed on TP");
    c == a.CB && (b = "Placed on Stop-Out");
    c == a.BB && (b = "Placed on Rollover");
    return b;
  };
  g.prototype.to = function (a) {
    void 0 === a && (a = !0);
    var b = [],
      c = this.Ff,
      e = this.wc;
    a
      ? c >= e
        ? (b.push(k.F.Ea(c)), b.push(" / "), b.push(k.F.Ea(c.sub(e))))
        : (b.push(k.F.Ea(c)), b.push(" / "), b.push(k.F.Ea(e)))
      : ((a = this.Ae),
        (c = k.F.um(c, a)),
        (e = k.F.um(e, a)),
        b.push(k.F.Ea(c)),
        b.push(" / "),
        b.push(k.F.Ea(c.sub(e))));
    return b.join("");
  };
  g.prototype.Iu = function (a) {
    void 0 === a && (a = 0);
    return this.N || (this.yb != b.Ja && this.yb != b.Va)
      ? k.F.Z(this.N, this.j, a)
      : "market";
  };
  g.prototype.gk = function (a) {
    void 0 === a && (a = !0);
    var b = [],
      c = this.Xf();
    c && b.push("#" + c);
    b.push(this.Ju());
    0 === this.Ff.compare(this.wc)
      ? b.push(k.F.Ea(this.Ff))
      : b.push(this.to());
    a && (b.push(this.l), this.Jc && (b.push("at"), b.push(this.Iu(this.Na))));
    return b.join(" ");
  };
  g.prototype.zb = function () {
    return g.zb(this.yb);
  };
  g.prototype.uc = function () {
    return g.uc(this.yb);
  };
  g.prototype.dm = function () {
    return g.dm(this.yb);
  };
  g.prototype.ps = function () {
    return g.ps(this.yb);
  };
  g.prototype.ns = function () {
    var a = this.yb;
    return a == b.Lc || a == b.Zc;
  };
  g.prototype.yq = function () {
    var a = this.yb;
    return a == b.we || a == b.Ee;
  };
  g.prototype.em = function () {
    return g.em(this.yb);
  };
  g.prototype.nU = function () {
    return this.dm() && !this.N;
  };
  g.prototype.iH = function () {
    return this.yb == b.xB;
  };
  g.prototype.aB = function () {
    return this.dm() && this.ka;
  };
})();
(function () {
  function v(a) {
    return 10 > a ? "0" + a : "" + a;
  }
  var r = window.J,
    l = r.controls,
    e = r.V,
    k = e.view,
    h = e.la,
    b = (r.V.data.aq = {
      Zp: 0,
      $p: 1,
      Xm: 2,
      S5: 2,
      Xr: 3,
      ou: 4,
      qu: 5,
      Wr: 6,
      T5: 6,
      pu: 7,
      e6: 7,
      qx: 8,
      rx: 9,
      ox: 10,
      px: 11,
      sx: 12,
      nu: 13,
      U5: 13,
      tu: 14,
      ru: 15,
      su: 16,
      uu: 17,
      UF: 18,
    }),
    a = (r.V.data.bq = { xx: 0, Rl: 1, Zr: 2, cG: 3, E8: 255 }),
    g = (r.V.data.C8 = {
      V5: 0,
      X5: 1,
      W5: 2,
      b6: 3,
      d6: 4,
      c6: 5,
      dQ: 6,
      Y5: 7,
      hQ: 8,
      Z5: 9,
      a6: 10,
      eQ: 11,
      gQ: 12,
      fQ: 13,
      cQ: 14,
    });
  r.V.data.Oq = { Lq: 0, mv: 1 };
  var d = (r.V.data.Tg = function () {
    this.m = Long.Ga.La();
    this.vE = l.L.Sc.rW;
  });
  d.zb = function (a) {
    return a === b.Zp;
  };
  d.uc = function (a) {
    return a === b.$p;
  };
  d.prototype = {
    Od: null,
    uw: null,
    X: null,
    Te: null,
    Fr: null,
    l: null,
    aa: null,
    Nk: null,
    Jc: null,
    Oc: null,
    Mb: null,
    Qb: null,
    m: null,
    ya: null,
    Xn: null,
    Fp: null,
    Xd: null,
    pc: null,
    ii: null,
    ka: null,
    Eb: null,
    Ae: null,
    j: null,
    Hc: null,
    Sm: null,
    Th: function () {
      var a = new e.data.Tg(),
        b;
      for (b in this) this.hasOwnProperty(b) && (a[b] = this[b]);
      return a;
    },
    nq: function () {
      return this.ii;
    },
    Xf: function () {
      return this.X;
    },
    oq: function () {
      var a = e.data.un,
        b = "";
      switch (this.Sm) {
        case a.kv:
          b = "Placed manually";
          break;
        case a.AB:
          b = "Placed by expert";
          break;
        case a.zB:
          b = "Placed by dealer";
          break;
        case a.xs:
          b = "Placed on SL";
          break;
        case a.ys:
          b = "Placed on TP";
          break;
        case a.CB:
          b = "Placed on Stop-Out";
          break;
        case a.BB:
          b = "Placed on Rollover";
      }
      return b;
    },
    Wl: function (a) {
      var b = new Date(this.Te),
        d = [];
      d.push(b.getUTCFullYear());
      d.push(".");
      d.push(v(b.getUTCMonth() + 1));
      d.push(".");
      d.push(v(b.getUTCDate()));
      d.push(" ");
      d.push(v(b.getUTCHours()));
      d.push(":");
      d.push(v(b.getUTCMinutes()));
      d.push(":");
      d.push(v(b.getUTCSeconds()));
      a &&
        ((a = b.getUTCMilliseconds()),
        d.push(".", 10 > a ? "00" + a : 100 > a ? "0" + a : "" + a));
      return d.join("");
    },
    Hu: function () {
      var a = e.data.aq,
        b = "";
      switch (this.aa) {
        case a.Zp:
          b = "buy";
          break;
        case a.$p:
          b = "sell";
          break;
        case a.Xm:
          b = "balance";
          break;
        case a.Xr:
          b = "credit";
          break;
        case a.ou:
          b = "charge";
          break;
        case a.qu:
          b = "correction";
          break;
        case a.Wr:
          b = "bonus";
          break;
        case a.pu:
          b = "commission";
          break;
        case a.qx:
          b = "daily commission";
          break;
        case a.rx:
          b = "monthly commission";
          break;
        case a.ox:
          b = "daily agent commission";
          break;
        case a.px:
          b = "monthly agent commission";
          break;
        case a.sx:
          b = "interest rate";
          break;
        case a.nu:
          b = "canceled buy";
          break;
        case a.tu:
          b = "canceled sell";
          break;
        case a.ru:
          b = "dividend";
          break;
        case a.su:
          b = "franked dividend";
          break;
        case a.uu:
          b = "tax";
      }
      return b;
    },
    AG: function () {
      var a = e.data.bq,
        b = "";
      switch (this.Nk) {
        case a.xx:
          b = "in";
          break;
        case a.Rl:
          b = "out";
          break;
        case a.Zr:
          b = "in/out";
          break;
        case a.cG:
          b = "out by";
      }
      return b;
    },
    gk: function (a) {
      var b = [],
        d = this.Od;
      d || (d = this.ka);
      d && b.push("#" + d);
      b.push(this.Hu());
      b.push(k.F.Ea(this.m));
      !1 !== a &&
        (b.push(this.l),
        b.push(k.F.Z(this.Jc, this.j, 3)),
        this.Mb && b.push("sl: " + k.F.Z(this.Mb, this.j)),
        this.Qb && b.push("tp: " + k.F.Z(this.Qb, this.j)));
      return b.join(" ");
    },
    xG: function (a) {
      var b = this.Mb,
        d = this.Qb,
        e = this.Oc,
        g = this.m.La(),
        k = 0,
        l = 0,
        r = h.O.Ka(this.l);
      if (r) {
        var p = r.Ta,
          r = r.Fb,
          n = this.zb(),
          x = this.uc();
        if ("sl" === a) {
          if (g.ab() || !b) return Number.J;
          n ? (k = e - b) : x && (k = b - e);
        }
        if ("tp" === a) {
          if (g.ab() || !d) return Number.J;
          n ? (k = d - e) : x && (k = e - d);
        }
        p ? (l = (k / p).normalize(0)) : r && (l = (k / r).normalize(0));
      }
      return l;
    },
    Yu: function () {
      return this.Nk === a.xx;
    },
    os: function () {
      return this.Nk === a.Rl;
    },
    ms: function () {
      return this.Nk === a.Zr;
    },
    oH: function () {
      return this.Nk === a.cG;
    },
    zb: function () {
      return d.zb(this.aa);
    },
    uc: function () {
      return d.uc(this.aa);
    },
    $u: function () {
      return this.aa === b.Zp || this.aa === b.$p;
    },
    jH: function () {
      return this.aa === b.Xr || this.aa === b.Wr;
    },
    hU: function () {
      return this.aa === b.nu || this.aa === b.tu;
    },
    sH: function () {
      var a = this.Sm;
      return (
        a === g.dQ ||
        a === g.hQ ||
        a === g.eQ ||
        a === g.gQ ||
        a === g.fQ ||
        a === g.cQ
      );
    },
    pf: function () {
      return d.pf(this.aa);
    },
    Td: function () {
      if (void 0 !== this.J) return this.J;
      var a = h.O.Ka(this.l);
      a && a.A && (this.J = a.Td());
      return this.J;
    },
  };
  d.pf = function (a) {
    return (
      a === b.Xm ||
      a === b.Xr ||
      a === b.ou ||
      a === b.qu ||
      a === b.Wr ||
      a === b.pu ||
      a === b.qx ||
      a === b.rx ||
      a === b.ox ||
      a === b.px ||
      a === b.sx ||
      a === b.ru ||
      a === b.su ||
      a === b.uu ||
      a === b.UF
    );
  };
  d.J = function (a) {
    return (
      a === b.Xm ||
      a === b.Xr ||
      a === b.ou ||
      a === b.qu ||
      a === b.Wr ||
      a === b.pu ||
      a === b.ru ||
      a === b.su ||
      a === b.uu ||
      a === b.UF
    );
  };
})();
(function () {
  var v = E.V;
  v.data.Tf = { Sl: 0, bl: 1, wk: 2, Eg: 3 };
  v.data.Yi = { $q: 0, OK: 1, Fv: 2, CD: 3, Ev: 4 };
  v.data.vD = { xda: 0, Ws: 1, wda: 1 };
  v.data.U_ = { vba: 0, zX: 1, uba: 1, sda: 1 };
  v.data.Pc = {
    Ei: 0,
    Xo: 1,
    Xs: 2,
    Ys: 3,
    Zs: 4,
    Wo: 5,
    nl: 32,
    Bn: 33,
    Gk: 34,
    Hk: 35,
    Cn: 36,
    ek: 37,
    ol: 38,
    fk: 39,
    Dn: 64,
  };
  v.data.Fk = {
    JY: 0,
    IY: 1,
    uJ: 2,
    tJ: 3,
    FY: 4,
    GY: 5,
    HY: 6,
    LY: 7,
    KY: 8,
    hca: 9,
  };
  v.data.qm = { iB: 0, mB: 1, jB: 2, nB: 3, kB: 4, oB: 5, lB: 6, pB: 7 };
  v.data.uD = { NW: 0, LW: 1, MW: 2 };
  var r = (v.data.Ci = { hG: 0, cl: 1, dl: 2, M8: 4 });
  r.yx = r.cl | r.dl;
  r = v.data.ai = { l0: 0, An: 1, zn: 2, Wq: 4, Xq: 8 };
  r.vK = r.An | r.zn | r.Wq | r.Xq;
  r = v.data.dd = { YW: 0, Gq: 1, zo: 2, Ao: 4, ws: 8, Lg: 16, Mg: 32, lI: 64 };
  r.Saa = r.Gq;
  r.kI = r.Gq | r.zo | r.Ao | r.ws | r.Lg | r.Mg | r.lI;
  v.data.yn = { ix: 0, gu: 1, jx: 255 };
  v.data.$h = {
    dD: 0,
    RC: 1,
    SC: 2,
    TC: 3,
    UC: 4,
    XC: 5,
    YC: 6,
    ZC: 7,
    aD: 8,
    bD: 9,
    cD: 10,
    eD: 11,
    VC: 12,
    WC: 13,
    $C: 14,
    nJ: 15,
  };
  v.data.S_ = {
    hy: 1,
    ky: 2,
    yy: 3,
    Cy: 4,
    Gy: 5,
    Ry: 6,
    oz: 7,
    Jz: 8,
    wz: 9,
    dA: 10,
    $z: 11,
    CA: 12,
    IA: 13,
    KA: 14,
    fy: 51,
    xy: 52,
    nz: 53,
    cz: 54,
    Ez: 55,
    eA: 56,
    MA: 57,
    ly: 101,
    my: 102,
    py: 103,
    qy: 104,
    oy: 105,
    Ty: 106,
    jz: 107,
    lz: 108,
    mz: 109,
    sz: 110,
    Fz: 111,
    Hz: 112,
    Iz: 113,
    Kz: 114,
    Zz: 115,
    aA: 116,
    jA: 117,
    uA: 118,
    vA: 119,
    wA: 120,
    JA: 121,
    NA: 122,
    RA: 123,
    ty: 151,
    uy: 152,
    vy: 153,
    Ny: 154,
    Vy: 155,
    Yy: 156,
    fz: 157,
    iz: 158,
    pz: 159,
    uz: 160,
    Yz: 161,
    PA: 162,
    Sz: 201,
    Tz: 202,
    Uz: 203,
    Vz: 204,
    Wz: 205,
    Xz: 206,
    OA: 207,
    TA: 208,
    dz: 251,
    ny: 252,
    ry: 253,
    sy: 254,
    By: 255,
    Dy: 256,
    Ey: 257,
    Fy: 258,
    Sy: 259,
    gz: 260,
    hz: 261,
    yz: 262,
    zz: 263,
    Az: 264,
    Bz: 265,
    Cz: 266,
    Dz: 267,
    Rz: 268,
    BA: 269,
    wy: 301,
    Uy: 302,
    Wy: 303,
    Xy: 304,
    qz: 305,
    rz: 306,
    Oz: 307,
    Mz: 308,
    Nz: 309,
    Pz: 310,
    bA: 311,
    gy: 351,
    iy: 352,
    jy: 353,
    zy: 354,
    Ay: 355,
    Oy: 356,
    Py: 357,
    Zy: 358,
    bz: 359,
    ez: 360,
    vz: 361,
    xz: 362,
    kz: 363,
    Lz: 364,
    Qz: 365,
    cA: 366,
    fA: 367,
    tA: 368,
    yA: 369,
    GA: 370,
    HA: 371,
    LA: 372,
    QA: 373,
    SA: 374,
    $A: 375,
    gA: 401,
    hA: 402,
    iA: 403,
    kA: 404,
    lA: 405,
    mA: 406,
    nA: 407,
    oA: 408,
    pA: 409,
    qA: 410,
    rA: 411,
    sA: 412,
    Ly: 451,
    My: 452,
    Qy: 453,
    $y: 454,
    az: 455,
    Gz: 456,
    xA: 457,
    AA: 458,
    zA: 459,
    DA: 460,
    EA: 461,
    FA: 462,
    UA: 501,
    VA: 502,
    ZA: 503,
    WA: 504,
    XA: 505,
    YA: 506,
    Hy: 551,
    Iy: 552,
    Jy: 553,
    Ky: 554,
  };
  var l = (v.data.Symbol = function () {});
  l.prototype = {
    mh: function () {
      return l.mh(this.Zd);
    },
    Xu: function () {
      return this.Zd === v.data.Pc.Gk;
    },
    ls: function () {
      var e = v.data.Pc,
        k = this.Zd;
      return k === e.ek || k === e.fk;
    },
    Td: function () {
      return this.Zd === v.data.Pc.Dn;
    },
    hl: function () {
      var e = this.A;
      return e
        ? e.Rh !== v.data.Yi.$q &&
            (this.Zd !== v.data.Pc.Dn || e.Rh === v.data.Yi.CD)
        : null;
    },
    gl: function (e) {
      return this.A ? 0 !== (this.A.ad & e) : !1;
    },
    nH: function () {
      return this.Zd === v.data.Pc.Hk || this.Zd === v.data.Pc.Cn;
    },
    kU: function () {
      return (
        this.Zd == v.data.Pc.Xo ||
        this.Zd == v.data.Pc.Bn ||
        this.Zd == v.data.Pc.Gk
      );
    },
    hH: function () {
      return this.bo === v.data.yn.gu || this.bo === v.data.yn.jx;
    },
    hs: function () {
      var e = this.A;
      return e && void 0 !== e.Nm ? 0 !== (e.Nm & v.data.U_.zX) : !0;
    },
    Cache: function () {
      var e = this.A,
        k,
        h;
      if (e)
        for (h in ((k = this.J = {}), e)) e.hasOwnProperty(h) && (k[h] = e[h]);
    },
    Lf: function () {
      var e = this.J,
        k,
        h;
      if (e && (k = this.A)) for (h in e) e.hasOwnProperty(h) && (k[h] = e[h]);
    },
    TG: function () {
      return this.A.bb && this.A.ub && this.A.bb !== this.A.ub;
    },
    zi: function (e, k) {
      var h = v.data.eb,
        b = v.data.qm,
        a = this.A,
        g = 0,
        d = 0;
      switch (e) {
        case h.Ja:
          g = a.me[b.iB];
          d = a.ne[b.iB];
          break;
        case h.Va:
          g = a.me[b.mB];
          d = a.ne[b.mB];
          break;
        case h.Lc:
          g = a.me[b.jB];
          d = a.ne[b.jB];
          break;
        case h.we:
          g = a.me[b.kB];
          d = a.ne[b.kB];
          break;
        case h.hd:
          g = a.me[b.lB];
          d = a.ne[b.lB];
          break;
        case h.Zc:
          g = a.me[b.nB];
          d = a.ne[b.nB];
          break;
        case h.Ee:
          g = a.me[b.oB];
          d = a.ne[b.oB];
          break;
        case h.jd:
          g = a.me[b.pB];
          d = a.ne[b.pB];
          break;
        default:
          d = g = 0;
      }
      return k ? g : d ? d : g;
    },
  };
  l.mh = function (e) {
    return e === v.data.Pc.Ei || e === v.data.Pc.Wo;
  };
})();
(function () {
  var v = window.J.V;
  v.data.dK = { HH: 0, qB: 1, FH: 2, GH: 3 };
  (v.data.M_ = function () {}).prototype = {
    Hp: null,
    Ze: null,
    bb: null,
    ub: null,
    Cw: null,
    qp: [],
    rp: [],
  };
})();
(function () {
  var v = window.J.V,
    r = (v.data.cK = { xH: 0, wH: 1 });
  (v.data.xn = function () {}).prototype = {
    JE: null,
    Ze: null,
    l: null,
    Jp: null,
    Kp: null,
    Rm: null,
    RP: function (l) {
      return this.SF(l.l, l.tt, l.$b);
    },
    SF: function (l, e, k) {
      if (!l || !e || 0 > k) return !1;
      switch (this.JE) {
        case r.xH:
          return this.l === l;
        case r.wH:
          return (
            (!this.Jp || k >= this.Jp) &&
            (!this.Kp || k <= this.Kp) &&
            this.l === e
          );
      }
      return !1;
    },
  };
})();
(function () {
  var v = window.J.V,
    r = v.la,
    l = v.data.Pc;
  v.data.on = { EH: 0, bv: 1, qs: 2 };
  v.data.haa = { bV: 0, E$: 1 };
  v.data.aI = { bV: 0, C$: 1, D$: 2, DH: 4, F$: 8 };
  v.data.mG = { O8: 0, kG: 1, jG: 2, iG: 3 };
  v.data.yea = { nea: 0, pea: 1, oea: 2, qea: 3 };
  v.data.fK = { pJ: 0, oJ: 1 };
  v.data.Cq = { P8: 0, eq: 1 };
  v = v.data.Bq = function (e) {
    this.ac = r.O.Ka(e);
  };
  v.prototype.JW = function () {
    return this.ac && this.ac.l;
  };
  v.prototype.MN = function () {
    return this.ac && this.ac.tt;
  };
  v.prototype.o = function () {
    return this.ac && this.ac.zf;
  };
  v.prototype.YR = function () {
    return this.ac && this.ac.$b;
  };
  v.prototype.Td = function () {
    return this.ac && this.ac.Td();
  };
  v.prototype.pU = function () {
    if (this.ac) {
      var e = this.ac.Zd;
      return e !== l.nl && e !== l.Hk && e !== l.ol && e !== l.ek && e !== l.fk;
    }
    return !1;
  };
  v.prototype.xn = function (e) {
    if (void 0 === e) return this.BM;
    this.BM = e;
  };
  v.prototype.tD = function (e) {
    if (void 0 === e) return this.hN;
    this.hN = e;
  };
  v.prototype.ND = function (e) {
    this.m -= Math.min(this.volume, e);
  };
})();
(function () {
  function v(b, a) {
    if (b) return b;
    var g = this.ac;
    if (!g) return 0;
    g = g.l;
    if (!g) return 0;
    var d = e.wa.u(g);
    if (d) {
      if (a == l.data.eb.Ja) return d.vb;
      if (a == l.data.eb.Va) return d.dc;
    }
    k.O.Xi(g, !0);
    return 0;
  }
  function r(b, a, g, d, f, c) {
    var h = l.data.Pc,
      k = l.data.eb,
      m = 0,
      u = 0;
    f ? (u = b.A.bb) : ((u = b.A.bb), b.A.ub && (u = b.A.ub));
    switch (b.Zd) {
      case h.Ei:
        m = 0 < u ? (u * g) / b.Bc / e.H.wh : g / e.H.wh;
        break;
      case h.Wo:
        0 < u ? (m = (u * g) / b.Bc) : (m = g);
        break;
      case h.Xs:
        m = 0 < u ? (u * g) / b.Bc : g * d;
        break;
      case h.Xo:
        m = (u * g) / b.Bc;
        break;
      case h.Ys:
        0 < u
          ? (m = (u * g) / b.Bc)
          : symbol.Ta && (m = ((g * d) / b.Ta) * b.Qf);
        break;
      case h.Dn:
        m = 0;
        break;
      case h.Zs:
        m = 0 < u ? (u * g) / b.Bc / e.H.wh : (g * d) / e.H.wh;
        break;
      case h.nl:
      case h.ol:
      case h.Hk:
      case h.Cn:
        m = 0 < u ? (u * g) / b.Bc : g * d;
        break;
      case h.Bn:
        m = (u * g) / b.Bc;
        break;
      case h.Gk:
        switch (a) {
          case k.Ja:
            m = c
              ? (g / b.Bc) *
                (b.A.bb + (b.Qf / b.Ta) * (d - b.zh) * (1 + 0.01 * b.A.hh))
              : (g / b.Bc) *
                (b.A.bb + (b.Qf / b.Ta) * (b.eo - b.zh) * (1 + 0.01 * b.A.hh));
            break;
          case k.Va:
            m = c
              ? (g / b.Bc) *
                (b.A.ub + (b.Qf / b.Ta) * (b.zh - d) * (1 + 0.01 * b.A.hh))
              : (g / b.Bc) *
                (b.A.ub + (b.Qf / b.Ta) * (b.zh - b.fo) * (1 + 0.01 * b.A.hh));
            break;
          case k.Lc:
          case k.hd:
            m =
              (g / b.Bc) *
              (b.A.bb + (b.Qf / b.Ta) * (d - b.zh) * (1 + 0.01 * b.A.hh));
            break;
          case k.Zc:
          case k.jd:
            m =
              (g / b.Bc) *
              (b.A.ub + (b.Qf / b.Ta) * (b.zh - d) * (1 + 0.01 * b.A.hh));
            break;
          case k.we:
            m =
              (g / b.Bc) *
              (b.A.bb + (b.Qf / b.Ta) * (b.eo - b.zh) * (1 + 0.01 * b.A.hh));
            break;
          case k.Ee:
            m =
              (g / b.Bc) *
              (b.A.ub + (b.Qf / b.Ta) * (b.zh - b.fo) * (1 + 0.01 * b.A.hh));
            break;
          default:
            m = (u * g) / b.Bc;
        }
        break;
      case h.ek:
      case h.fk:
        0 < u
          ? (m = (u * g) / b.Bc)
          : (m = ((g * b.Mi * d) / 100).normalize(b.kk));
    }
    return m;
  }
  var l = E.V,
    e = l.la,
    k = l.control,
    h = (l.data.EW = function (b) {
      h.G.constructor.apply(this, arguments);
      this.Uk =
        this.Tk =
        this.Sk =
        this.Rk =
        this.Dp =
        this.Ep =
        this.Wn =
        this.Id =
        this.Of =
        this.Ic =
          0;
      this.Gt = !1;
      this.Tm = this.uk = this.hN = this.m = this.margin = 0;
    });
  E.ma.he(h, l.data.Bq);
  h.prototype.Sh = function (b, a) {
    var g = l.data.eb,
      d = l.data.Bs,
      f = this.ac;
    if (!f || !f.A || !b) return !1;
    var c = b.yb,
      h = 0;
    if (f.Td()) return !1;
    var v = k.Wa.Uf(b.wc, b.Ae);
    if (0 >= v) return !0;
    a &&
      ((this.Gt = !0),
      b.vl == d.Pr && (b.ns() || b.yq()) && (c = b.zb() ? g.Ja : g.Va),
      b.vl == d.Qr && b.em() && (c = b.zb() ? g.Lc : g.Zc));
    d = f.zi(c, !0);
    if (0 >= d) return !0;
    var m = b.N;
    m || (c != g.Ja && c != g.Va) || (m = b.ed);
    if (c == g.hd || c == g.jd) m = b.Na;
    if (c == g.Ja || c == g.Lc || c == g.we || c == g.hd) {
      b.rc ? (h = b.rc) : e.wa.u(f.l) && (h = k.ff.MC(f, e.H.hf, m));
      if (0 >= h) return !0;
      g = r(f, c, v, m, !0, !1);
      g = g * h * d;
      this.Rk = this.Rk.ca(g, e.H.yc);
      this.Tk += b.wc.Tc();
      return !0;
    }
    if (c == g.Va || c == g.Zc || c == g.Ee || c == g.jd) {
      b.rc ? (h = b.rc) : e.wa.u(f.l) && (h = k.ff.NC(f, e.H.hf, m));
      if (0 >= h) return !0;
      g = r(f, c, v, m, !0, !1);
      g *= h;
      g *= d;
      this.Sk = this.Sk.ca(g, e.H.yc);
      this.Uk += b.wc.Tc();
      return !0;
    }
    return !1;
  };
  h.prototype.$k = function (b) {
    var a = l.data.eb,
      g = this.ac;
    if (!b || !g || !g.A) return !1;
    b.zb() && (this.Ic = a.Ja);
    b.uc() && (this.Ic = a.Va);
    this.Id = k.Wa.Uf(b.m, b.Ae);
    this.Wn = b.Jc;
    this.Ep = b.Oc;
    a = r(g, this.Ic, this.Id, this.Wn, !1, !0);
    a *= b.Fp;
    a *= g.zi(this.Ic, !1);
    this.Dp = a.normalize(e.H.yc);
    this.Of = b.m.Tc();
    return !0;
  };
  h.prototype.Td = function () {
    return this.ac && this.ac.Td();
  };
  h.prototype.vk = function () {
    var b = l.data.eb,
      a = e.H,
      g = a.hf,
      d = a.yc,
      f = this.Rk,
      c = this.Sk,
      h;
    h = this.ac;
    if (!h || !h.A) return 0;
    if (h.Td())
      return (
        (this.Tm = this.uk = this.m = this.margin = f = f = 0),
        0 != this.Of &&
          (this.Ic == b.Ja &&
            ((c = k.ff.km(h, g)),
            (f = v.call(this, this.Ep, this.Ic)),
            (f = (this.Id * f).normalize(d)),
            (f = f * ((h.A && h.A.Ji) || 0)),
            (f = (f * c).normalize(d)),
            (a.Gc = a.Gc.ca(f, d)),
            (a.jf = a.jf.ca(f, d))),
          this.Ic == b.Va &&
            ((b = k.ff.lm(h, g)),
            (f = v.call(this, this.Ep, this.Ic)),
            (f = (this.Id * f).normalize(d)),
            (f = (f * b).normalize(d)),
            (a.Qc = a.Qc.ca(-f, d)),
            (a.jf = a.jf.ca(-f, d)))),
        this.margin
      );
    this.margin = 0;
    this.Of &&
      (this.Ic == b.Ja &&
        ((f += this.Dp),
        h.Xu()
          ? ((g = r(h, b.Va, this.Id, this.Wn, !1, !0)),
            (c = (c - g).normalize(d)))
          : this.Sk &&
            this.Uk &&
            (c -= ((this.Sk / this.Uk) * this.Of).normalize(d))),
      this.Ic == b.Va &&
        ((c += this.Dp),
        h.Xu()
          ? ((h = r(h, b.Ja, this.Id, this.Wn, !1, !0)),
            (f = (f - h).normalize(d)))
          : this.Rk &&
            this.Tk &&
            (f -= ((this.Rk / this.Tk) * this.Of).normalize(d))));
    this.margin = Math.max(f, c);
    h = this.Tk;
    g = this.Uk;
    this.uk = this.Tm = this.m = 0;
    this.Of &&
      (this.Ic == b.Ja && (h += this.Of), this.Ic == b.Va && (g += this.Of));
    h > g
      ? ((this.m = h), (this.uk = b.Ja))
      : h < g
      ? ((this.m = g), (this.uk = b.Va))
      : ((this.m = h), (this.uk = this.Ic));
    this.Tm = this.m ? this.margin / this.m : 0;
    a.margin = a.margin.ca(this.margin, d);
    return this.margin;
  };
})();
(function () {
  function v(a) {
    var b = this.ac;
    if (b) {
      var d = 0,
        e = 0,
        c;
      if ((c = k.wa.u(b.l))) (d = c.Nf), (e = c.dc);
      d || (d = a);
      !d &&
        ((a = b.l),
        "_TOD" === a.substr(a.length - 4) &&
          ((a = a.substr(0, a.length - 4) + "_TOM"), (c = k.wa.u(a)))) &&
        ((d = c.Nf), (e = c.dc));
      e || (e = d);
      return { FM: d, UL: e };
    }
  }
  function r(a, b, d, e) {
    var c = 0,
      c = 0,
      h = this.ac,
      l = h.A;
    e ? (c = l.bb) : ((c = l.bb), l.ub && (c = l.ub));
    c = 0 < c ? (c * b) / h.Bc : d * h.zi(a, e);
    return c.normalize(k.H.yc);
  }
  var l = window.J,
    e = l.V,
    k = e.la,
    h = e.control,
    b = (e.data.yW = function () {
      b.G.constructor.apply(this, arguments);
      this.qa =
        this.Cp =
        this.li =
        this.Vk =
        this.Id =
        this.Of =
        this.Ic =
        this.Er =
        this.ed =
          0;
      this.J = Number.MAX_VALUE;
      this.Qc =
        this.Gc =
        this.ub =
        this.bb =
        this.margin =
        this.Yb =
        this.te =
        this.Ph =
          0;
    });
  b.prototype = {
    Sh: function (a, b) {
      var d = e.data.eb,
        f = e.data.Bs,
        c = this.ac;
      if (!c || !c.A) return !1;
      var k = c.kk,
        l = a.yb,
        m = a.N,
        u,
        q;
      b &&
        (a.vl === f.Pr && a.yq() && (l = a.zb() ? d.Ja : d.Va),
        a.vl === f.Qr && a.em() && ((l = a.zb() ? d.Lc : d.Zc), (m = a.Na)));
      if (l !== d.Ja && l !== d.Va && l !== d.Lc && l !== d.Zc) return !0;
      this.ed || ((f = v.call(this, a.ed)), (this.ed = f.FM), (this.Er = f.UL));
      return l === d.Ja || l === d.Lc
        ? ((f = h.Wa.Uf(a.wc, a.Ae)),
          (q = 0),
          (this.li = this.li.ca(f, 1e4)),
          l === d.Ja ? (q = this.Er) : (q = m),
          (u = h.Wc.Vp(c, d.Ja, a.wc, f, q)),
          (this.Cp = this.Cp.ca(u, k)),
          l === d.Ja ? (q = this.ed) : (q = m <= this.ed ? m : this.ed),
          (u = h.Wc.Vp(c, d.Ja, a.wc, f, q)),
          (this.qa = this.qa.ca(u, k)),
          (this.J = Math.min(this.J, q)),
          !0)
        : l === d.Va || l === d.Zc
        ? ((f = h.Wa.Uf(a.wc, a.Ae)),
          (q = 0),
          (this.Ph = this.Ph.ca(f, 1e4)),
          l === d.Va ? (q = this.ed) : (q = m >= this.ed ? m : this.ed),
          (u = (f * q).normalize(k)),
          (this.te = this.te.ca(u, k)),
          (this.Yb = Math.max(this.Yb, q)),
          !0)
        : !1;
    },
    $k: function (a) {
      var b = e.data.eb,
        d = e.data.Oq,
        f = this.ac,
        c;
      if (!a || !f || !f.A) return !1;
      this.ed || ((c = v.call(this, a.Oc)), (this.ed = c.FM), (this.Er = c.UL));
      this.Ic = a.aa === d.Lq ? b.Ja : b.Va;
      this.Of = a.m.Tc();
      this.Id = h.Wa.Uf(a.m, a.Ae);
      this.Vk = h.Wc.Vp(f, this.Ic, this.Of, this.Id, this.ed);
      return !0;
    },
    vk: function () {
      var a = e.data.eb,
        b = this.ac;
      if (!b || !b.A) return 0;
      var d = k.H,
        f = d.hf,
        c = d.yc,
        l = 0,
        v = 0,
        v = 0,
        m,
        u,
        q;
      if (!this.Id && !this.li && !this.Ph) return 0;
      m = h.ff.km(b, f);
      f = h.ff.lm(b, f);
      if (b.Td())
        return (
          (this.Qc = this.Gc = this.margin = this.bb = this.ub = 0),
          0 !== this.Of &&
            ((l = 0),
            this.Ic === a.Ja &&
              ((l = (this.Id * this.ed).normalize(c)),
              (l = l * b.A.Ji),
              (this.Gc = l = (l * m).normalize(c)),
              (d.Gc = d.Gc.ca(l, c)),
              (d.jf = d.jf.ca(l, c))),
            this.Ic === a.Va &&
              ((l = (this.Id * this.ed).normalize(c)),
              (l = (l * f).normalize(c)),
              (this.Qc = -l),
              (d.Qc = d.Qc.ca(-l, c)),
              (d.jf = d.jf.ca(-l, c)))),
          this.margin
        );
      this.Id
        ? ((this.ub = r.call(this, this.Ic, this.Id, this.Vk, !1)),
          (this.margin = this.bb = r.call(this, this.Ic, this.Id, this.Vk, !0)),
          this.Ic === a.Ja &&
            ((this.ub = (this.ub * m).normalize(c)),
            (this.margin = this.bb = (this.bb * m).normalize(c)),
            b.A.Ji &&
              ((this.Gc = this.Vk * b.A.Ji),
              (this.Gc = (this.Gc * m).normalize(c))),
            (v = this.Id)),
          this.Ic === a.Va &&
            ((this.ub = (this.ub * f).normalize(c)),
            (this.margin = this.bb = (this.bb * f).normalize(c)),
            (this.Qc = (this.Vk * f).normalize(c)),
            (v = -this.Id)))
        : (this.Qc = this.Gc = this.margin = this.bb = this.ub = 0);
      this.li
        ? 0 >= v + this.li
          ? (l = 0)
          : ((l = Math.min(this.J, this.ed)),
            (u = this.ed),
            (q = b.zi(a.Ja, !0))
              ? (b.ls() &&
                  ((l = (b.Mi * l) / 100 + b.Zk),
                  (u = (b.Mi * u) / 100 + b.Zk)),
                (l =
                  v * (u - l) +
                  (v + this.li) * l * q +
                  (this.qa - this.li * l)),
                (l = (l * m).normalize(c)))
              : (l = this.Cp))
        : (l = this.bb);
      this.Ph
        ? 0 <= v - this.Ph
          ? (v = 0)
          : ((m = Math.max(this.Yb, this.ed)),
            (u = this.ed),
            (q = b.zi(a.Va, !0))
              ? (b.ls() &&
                  ((m = (b.Mi * m) / 100 + b.Zk),
                  (u = (b.Mi * u) / 100 + b.Zk)),
                (v =
                  -v * (m - u) -
                  (v - this.Ph) * m * q +
                  (this.Ph * m - this.te)),
                (v = (v * f).normalize(c)))
              : (v = this.bb))
        : (v = this.bb);
      if (l || v) this.margin = Math.max(l, v);
      d.margin = d.margin.ca(this.margin, c);
      d.bb = d.bb.ca(this.bb, c);
      d.ub = d.ub.ca(this.ub, c);
      d.Gc = d.Gc.ca(this.Gc, c);
      d.Qc = d.Qc.ca(-this.Qc, c);
      return this.margin;
    },
    lu: function (a, b, d) {
      var f = e.data.eb,
        c,
        h = this.Id;
      if (h) {
        var k = this.Ic;
        if (
          (k === f.Ja &&
            d.uc() &&
            ((c = h - this.Ph), 0 <= c && b.margin <= a.margin)) ||
          (k === f.Va &&
            d.zb() &&
            ((c = h - this.li), 0 <= c && b.margin <= a.margin))
        )
          return !0;
      }
      return !1;
    },
  };
  l.ma.he(b, e.data.Bq);
  b.J = function (a, b, d, f, c, k, l, m) {
    d = e.data.Pc;
    var u = b.A,
      q = 0,
      q = 0;
    m ? (q = u.bb) : ((q = u.bb), u.ub && (q = u.ub));
    switch (b.Zd) {
      case d.nl:
      case d.Hk:
      case d.ek:
      case d.ol:
      case d.fk:
        q = 0 < q ? (q * k) / b.Bc : h.Wc.Vp(b, f, c, k, l) * b.zi(f, m);
        break;
      default:
        q = 0;
    }
    return q.normalize(a.yc);
  };
})();
(function () {
  var v = window.J,
    r = v.V,
    l = (r.data.zW = function () {
      r.data.zW.G.constructor.apply(this, arguments);
    });
  v.ma.he(l, r.data.Bq);
})();
(function () {
  function v(a, b, d, f) {
    var c = e.data.eb,
      h = this.ac,
      l = h.A,
      m = 0,
      m = 0;
    f ? (m = l.bb) : ((m = l.bb), l.ub && (m = l.ub));
    m =
      0 < m ? (m * b) / h.Bc : h.zi(a, f) ? d * h.zi(a, f) : a === c.Va ? d : 0;
    return m.normalize(k.H.yc);
  }
  function r(a) {
    var b = this.ac;
    if (b) {
      var d = 0,
        e = 0,
        c;
      if ((c = k.wa.u(b.l))) (d = c.Nf), (e = c.dc);
      d || (d = a);
      !d &&
        ((a = b.l),
        "_TOD" === a.substr(a.length - 4) &&
          ((a = a.substr(0, a.length - 4) + "_TOM"), (c = k.wa.u(a)))) &&
        ((d = c.Nf), (e = c.dc));
      e || (e = d);
      this.ed = d;
      this.Er = e;
    }
  }
  var l = window.J,
    e = l.V,
    k = e.la,
    h = e.control,
    b = (e.data.AW = function () {
      b.G.constructor.apply(this, arguments);
      this.Qc =
        this.Gc =
        this.ub =
        this.bb =
        this.margin =
        this.Ph =
        this.Cp =
        this.li =
        this.Vk =
        this.Id =
        this.Of =
        this.Ic =
        this.Er =
        this.ed =
          0;
    });
  b.prototype = {
    Sh: function (a, b) {
      var d = e.control.Wa,
        f = e.data.Bs,
        c = e.data.eb,
        k = a.yb,
        l = a.N;
      b &&
        (a.vl === f.Pr && a.yq() && (k = a.zb() ? c.Ja : c.Va),
        a.vl === f.Qr && a.em() && ((k = a.zb() ? c.Lc : c.Zc), (l = a.Na)));
      if (k !== c.Ja && k !== c.Va && k !== c.Lc && k !== c.Zc) return !0;
      this.ed || r.call(this, a.ed);
      return k === c.Ja || k === c.Lc
        ? ((d = d.Uf(a.wc, a.Ae)),
          (this.li = this.li.ca(d, VOLUME_DIGITS)),
          (f = 0),
          (f = k === c.Ja ? this.Er : l),
          (c = h.Wc.Vp(this.ac, c.Ja, a.wc, d, f)),
          (this.Cp = this.Cp.ca(c, this.ac.kk)),
          !0)
        : k === c.Va || k === c.Zc
        ? ((d = d.Uf(a.wc, a.Ae)), (this.Ph = this.Ph.ca(d, VOLUME_DIGITS)), !0)
        : !1;
    },
    $k: function (a) {
      var b = e.data.eb,
        d = e.control.Wa,
        f = e.data.Oq;
      this.ed || r.call(this, a.Oc);
      this.Ic = a.aa === f.Lq ? b.Ja : b.Va;
      this.Of = a.m;
      this.Id = d.Uf(a.m, a.Ae);
      this.Vk = h.Wc.Vp(this.ac, this.Ic, this.Of, this.Id, this.ed);
      return !0;
    },
    vk: function () {
      var a = e.data.eb,
        b = 0,
        d = 0,
        f = 0,
        d = this.ac,
        c = k.H,
        l = c.hf,
        r = c.yc;
      if (!this.Id && !this.li && !this.Ph) return 0;
      var m = h.ff.km(d, l),
        l = h.ff.lm(d, l);
      if (d.Td())
        return (
          (this.Qc = this.Gc = this.margin = this.bb = this.ub = 0),
          0 !== this.Of &&
            (this.Ic === a.Ja &&
              ((b = (this.Id * this.ed).normalize(r)),
              (b = b * d.A.Ji),
              (this.Gc = b = (b * m).normalize(r)),
              (c.Gc = c.Gc.ca(b, r)),
              (c.jf = c.jf.ca(b, r))),
            this.Ic === a.Va &&
              ((b = (this.Id * this.ed).normalize(r)),
              (b = (b * l).normalize(r)),
              (this.Qc = -b),
              (c.Qc = c.Qc.ca(-b, r)),
              (c.jf = c.jf.ca(-b, r)))),
          this.margin
        );
      this.Id
        ? ((this.ub = v.call(this, this.Ic, this.Id, this.Vk, !1)),
          (this.margin = this.bb = v.call(this, this.Ic, this.Id, this.Vk, !0)),
          this.Ic === a.Ja &&
            ((this.ub = (this.ub * m).normalize(r)),
            (this.margin = this.bb = (this.bb * m).normalize(r)),
            d.A.Ji &&
              ((this.Gc = this.Vk * d.A.Ji),
              (this.Gc = (this.Gc * m).normalize(r))),
            (f = this.Id)),
          this.Ic == a.Va &&
            ((this.ub = (this.ub * l).normalize(r)),
            (this.margin = this.bb = (this.bb * l).normalize(r)),
            (this.Qc = (this.Vk * l).normalize(r)),
            (f = -this.Id)))
        : (this.Qc = this.Gc = this.margin = this.bb = this.ub = 0);
      if (this.li)
        if (0 >= f + this.li) b = 0;
        else {
          var u = d.zi(a.Ja, !0);
          if (u) {
            var q = this.ed;
            d.ls() && (q = (d.Mi * q) / 100 + d.Zk);
            b = (f + this.li) * u * q;
          } else b = this.Cp;
          b = (b * m).normalize(r);
        }
      else b = this.bb;
      this.Ph
        ? 0 <= f - this.Ph
          ? (d = 0)
          : ((q = this.ed),
            (u = d.zi(a.Va, !0)),
            d.ls() && (q = (d.Mi * q) / 100 + d.Zk),
            (d = u ? (-f + this.Ph) * u * q : (-f + this.Ph) * q),
            (d = (d * l).normalize(r)))
        : (d = this.bb);
      if (b || d) this.margin = Math.max(b, d);
      c.margin = c.margin.ca(this.margin, r);
      c.bb = c.bb.ca(this.bb, r);
      c.ub = c.ub.ca(this.ub, r);
      c.Gc = c.Gc.ca(this.Gc, r);
      c.Qc = c.Qc.ca(-this.Qc, r);
      return this.margin;
    },
    lu: function (a, b, d) {
      var e = this.Id,
        c;
      if (e) {
        var h = this.Ic;
        if (
          (h == OrderType.Ja &&
            d.uc() &&
            ((c = e - this.Ph), 0 <= c && b.margin <= a.margin)) ||
          (h == OrderType.Va &&
            d.zb() &&
            ((c = e - this.li), 0 <= c && b.margin <= a.margin))
        )
          return !0;
      }
      return !1;
    },
  };
  l.ma.he(b, e.data.Bq);
})();
(function () {
  function v(a, b, d, f, c, h, k) {
    var l = e.data.Pc,
      u = e.data.eb,
      q = 0,
      r = 0;
    h ? (r = a.A.bb) : ((r = a.A.bb), a.A.ub && (r = a.A.ub));
    switch (a.Zd) {
      case l.Ei:
        q = 0 < r ? (r * f) / a.Bc / b : f / b;
        break;
      case l.Wo:
        0 < r ? (q = (r * f) / a.Bc) : (q = f);
        break;
      case l.Xs:
        q = 0 < r ? (r * f) / a.Bc : f * c;
        break;
      case l.Xo:
        q = (r * f) / a.Bc;
        break;
      case l.Ys:
        q = 0 < r ? (r * f) / a.Bc : ((f * c) / a.Ta) * a.Qf;
        break;
      case l.Dn:
        q = 0;
        break;
      case l.Zs:
        q = 0 < r ? (r * f) / a.Bc / b : (f * c) / b;
        break;
      case l.nl:
      case l.ol:
        q = 0 < r ? (r * f) / a.Bc : f * c;
        break;
      case l.Bn:
        q = (r * f) / a.Bc;
        break;
      case l.Gk:
        switch (d) {
          case u.Ja:
            q = k
              ? (f / a.Bc) *
                (a.A.bb + (a.Qf / a.Ta) * (c - a.zh) * (1 + 0.01 * a.A.hh))
              : (f / a.Bc) *
                (a.A.bb + (a.Qf / a.Ta) * (a.eo - a.zh) * (1 + 0.01 * a.A.hh));
            break;
          case u.Va:
            q = k
              ? (f / a.Bc) *
                (a.A.ub + (a.Qf / a.Ta) * (a.zh - c) * (1 + 0.01 * a.A.hh))
              : (f / a.Bc) *
                (a.A.ub + (a.Qf / a.Ta) * (a.zh - a.fo) * (1 + 0.01 * a.A.hh));
            break;
          case u.Lc:
          case u.hd:
            q =
              (f / a.Bc) *
              (a.A.bb + (a.Qf / a.Ta) * (c - a.zh) * (1 + 0.01 * a.A.hh));
            break;
          case u.Zc:
          case u.jd:
            q =
              (f / a.Bc) *
              (a.A.ub + (a.Qf / a.Ta) * (a.zh - c) * (1 + 0.01 * a.A.hh));
            break;
          case u.we:
            q =
              (f / a.Bc) *
              (a.A.bb + (a.Qf / a.Ta) * (a.eo - a.zh) * (1 + 0.01 * a.A.hh));
            break;
          case u.Ee:
            q =
              (f / a.Bc) *
              (a.A.ub + (a.Qf / a.Ta) * (a.zh - a.fo) * (1 + 0.01 * a.A.hh));
            break;
          default:
            q = (r * f) / a.Bc;
        }
        break;
      case l.Hk:
      case l.Cn:
        q = (r * f) / a.Bc;
        break;
      case l.ek:
      case l.fk:
        0 < r
          ? (q = (r * f) / a.Bc)
          : (q = ((f * a.Mi * c) / 100).normalize(a.kk));
    }
    return q;
  }
  function r(a, b) {
    var d = e.data.eb,
      f = 0,
      c;
    if (a) f = a;
    else if ((c = k.wa.u(this.ac.l)))
      b === d.Ja && (f = c.vb), b === d.Va && (f = c.dc);
    return f;
  }
  var l = window.J,
    e = l.V,
    k = e.la,
    h = e.control,
    b = (e.data.BW = function () {
      b.G.constructor.apply(this, arguments);
      this.BM = null;
      this.wh = 1;
      this.Uk =
        this.Tk =
        this.Sk =
        this.Rk =
        this.Dp =
        this.Ep =
        this.Wn =
        this.Id =
        this.Of =
        this.Ic =
          0;
      this.Gt = !1;
      this.Tm = this.uk = this.m = this.margin = 0;
    });
  b.prototype = {
    eU: function (a) {
      this.wh = a.wh;
    },
    Sh: function (a, b) {
      var d = e.control.Wa,
        f = e.data.Bs,
        c = e.data.eb,
        l = this.ac,
        r = 0,
        m = a.yb,
        u;
      if (l.Td()) return !1;
      d = d.Uf(a.wc, a.Ae);
      if (0 >= d) return !0;
      b &&
        ((this.Gt = !0),
        a.vl === f.Pr && (a.ns() || a.yq()) && (m = a.zb() ? c.Ja : c.Va),
        a.vl === f.Qr && a.em() && (m = a.zb() ? c.Lc : c.Zc));
      if (0 >= (f = l.zi(m, !0))) return !0;
      u = a.N;
      u || (m !== c.Ja && m !== c.Va) || (u = a.ed);
      if (m === c.hd || m === c.jd) u = a.Na;
      if (m === c.Ja || m === c.Lc || m === c.we || m === c.hd) {
        a.rc ? (r = a.rc) : k.wa.u(l.l) && (r = h.ff.MC(l, k.H.hf, u));
        if (0 >= r) return !0;
        c = v(l, this.wh, m, d, u, !0, !1);
        c = c * r * f;
        this.Rk = this.Rk.ca(c, k.H.yc);
        this.Tk += a.wc.Tc();
        return !0;
      }
      if (m === c.Va || m === c.Zc || m === c.Ee || m === c.jd) {
        a.rc ? (r = a.rc) : k.wa.u(l.l) && (r = h.ff.NC(l, k.H.hf, u));
        if (0 >= r) return !0;
        c = v(l, this.wh, m, d, u, !0, !1);
        c *= r;
        c *= f;
        this.Sk = this.Sk.ca(c, k.H.yc);
        this.Uk += a.wc.Tc();
        return !0;
      }
      return !1;
    },
    $k: function (a) {
      var b = e.data.eb,
        d = e.control.Wa;
      a.zb() && (this.Ic = b.Ja);
      a.uc() && (this.Ic = b.Va);
      this.Id = d.Uf(a.m, a.Ae);
      this.Wn = a.Jc;
      this.Ep = a.Oc;
      b = v(this.ac, this.wh, this.Ic, this.Id, a.Jc, !1, !0);
      b *= a.Fp;
      b *= this.ac.zi(this.Ic, !1);
      this.Dp = b.normalize(k.H.yc);
      this.Of = a.m.Tc();
      return !0;
    },
    vk: function (a) {
      var b = e.data.eb,
        d = this.Rk,
        f = this.Sk,
        c,
        k;
      k = this.ac;
      c = a.hf;
      var l = a.yc;
      if (k.Td())
        return (
          (this.Tm = this.uk = this.m = this.margin = 0),
          0 !== this.Of &&
            (this.Ic === b.Ja &&
              ((d = h.ff.km(k, c)),
              (f = r.call(this, this.Ep, this.Ic)),
              (f = (this.Id * f).normalize(l)),
              (f = f * k.A.Ji),
              (f = (f * d).normalize(l)),
              (a.Gc = a.Gc.ca(f, l)),
              (a.jf = a.jf.ca(f, l))),
            this.Ic === b.Va &&
              ((b = h.ff.lm(k, c)),
              (f = r.call(this, this.Ep, this.Ic)),
              (k = (this.Id * f).normalize(l)),
              (k = (k * b).normalize(l)),
              (a.Qc = a.Qc.ca(-k, l)),
              (a.jf = a.jf.ca(-k, l)))),
          this.margin
        );
      this.margin = 0;
      0 !== this.Of &&
        (this.Ic === b.Ja &&
          ((d += this.Dp),
          k.Xu()
            ? ((c = v(k, this.wh, b.Va, this.Id, this.Wn, !1, !0)),
              (f = (f - c).normalize(l)))
            : this.Sk &&
              this.Uk &&
              (f -= ((this.Sk / this.Uk) * this.Of).normalize(l))),
        this.Ic === b.Va &&
          ((f += this.Dp),
          k.Xu()
            ? ((k = v(k, this.wh, b.Ja, this.Id, this.Wn, !1, !0)),
              (d = (d - k).normalize(l)))
            : this.Rk &&
              this.Tk &&
              (d -= ((this.Rk / this.Tk) * this.Of).normalize(l))));
      this.margin = Math.max(d, f);
      k = this.Tk;
      c = this.Uk;
      this.uk = this.Tm = this.m = 0;
      0 !== this.Of &&
        (this.Ic === b.Ja && (k += this.Of),
        this.Ic === b.Va && (c += this.Of));
      k > c
        ? ((this.m = k), (this.uk = b.Ja))
        : k < c
        ? ((this.m = c), (this.uk = b.Va))
        : ((this.m = k), (this.uk = this.Ic));
      this.Tm = this.m ? this.margin / this.m : 0;
      a.Qc = a.Qc.ca(-this.margin, l);
      return this.margin;
    },
    lu: function (a, b, d, e) {
      return ((e.zb() && d.uc()) || (e.uc() && d.zb())) &&
        !e.m.ab() &&
        !d.wc.ab() &&
        ((d = e.m.sub(d.wc)),
        (d.Jm(window.Bl.ZERO) || d.co().Pk(e.m)) && b.margin <= a.margin)
        ? !0
        : !1;
    },
  };
  l.ma.he(b, e.data.Bq);
})();
(function () {
  function v(a) {
    a.m && ((a.ia = a.ia / a.m), (a.rc = a.rc / a.m));
  }
  function r(d, c) {
    if (d) return d;
    var e = this.ac;
    if (!e) return 0;
    e = e.l;
    if (!e) return 0;
    var g = b.wa.u(e);
    if (g) {
      if (c == h.data.eb.Ja) return g.vb;
      if (c == h.data.eb.Va) return g.dc;
    }
    a.O.Xi(e, !0);
    return 0;
  }
  function l(d, c, e, g, k) {
    var l = h.data.Pc,
      q = b.H,
      r = 0,
      p = 0,
      n = a.Wa.Uf(c, d.Bc),
      x = a.Wa.od(c);
    g ? (p = d.A.bb) : ((p = d.A.bb), d.A.ub && (p = d.A.ub));
    k && (p && (p = d.A.wp), (n = a.Wa.Uf(c, d.A.wp)));
    switch (d.Zd) {
      case l.Ei:
        r = 0 < p ? (p * x) / q.wh : n / q.wh;
        break;
      case l.Wo:
        0 < p ? (r = p * x) : (r = n);
        break;
      case l.Xs:
        r = 0 < p ? p * x : n * e;
        break;
      case l.Xo:
        r = p * x;
        break;
      case l.Ys:
        r = 0 < p ? p * x : ((n * e) / d.Ta) * d.Qf;
        break;
      case l.Dn:
        r = 0;
        break;
      case l.Zs:
        r = 0 < p ? (p * x) / q.wh : (n * e) / q.wh;
        break;
      case l.nl:
      case l.ol:
      case l.Hk:
      case l.Cn:
        r = 0 < p ? p * x : n * e;
        break;
      case l.Bn:
      case l.Gk:
        r = p * x;
        break;
      case l.ek:
      case l.fk:
        0 < p ? (r = p * x) : (r = ((n * d.Mi * e) / 100).normalize(d.kk));
    }
    return r;
  }
  function e(a, b) {
    var d = a.m + b.m,
      e = a.ia * a.m + b.ia * b.m,
      g = a.rc * a.m + b.rc * b.m;
    return { ia: e / d, rc: g / d };
  }
  function k() {
    var a = this.ac,
      b = 0,
      d = 0,
      g = 0;
    this.zc.m > this.Ac.m &&
      ((g = this.zc.m - this.Ac.m),
      a.TG() && this.zc.Zt
        ? this.zc.Zt
          ? ((d = this.zc.Zt),
            (g = g > d ? g - d : 0),
            (d = l(a, d, this.zc.ia, !0, !1)),
            g && (d += l(a, g, this.zc.ia, !1, !1)))
          : (d = l(a, g, this.zc.ia, !1, !1))
        : (d = l(a, g, this.zc.ia, !1, !1)),
      (d *= this.zc.rc),
      (d *= this.zc.Be));
    this.zc.m < this.Ac.m &&
      ((g = this.Ac.m - this.zc.m),
      a.TG() && this.Ac.Zt
        ? this.Ac.Zt
          ? ((d = this.Ac.Zt),
            (g = g > d ? g - d : 0),
            (d = l(a, d, this.Ac.ia, !0, !1)),
            g && (d += l(a, g, this.Ac.ia, !1, !1)))
          : (d = l(a, g, this.Ac.ia, !1, !1))
        : (d = l(a, g, this.Ac.ia, !1, !1)),
      (d *= this.Ac.rc),
      (d *= this.Ac.Be));
    g = Math.min(this.zc.m, this.Ac.m);
    if (0 < g)
      var b = e(this.zc, this.Ac),
        h = b.rc,
        k = (this.zc.Be + this.Ac.Be) / 2,
        b = l(a, g, b.ia, !1, !0),
        b = b * h * k;
    return d + b;
  }
  var h = E.V,
    b = h.la,
    a = h.control,
    g = h.data.ig,
    d = (h.data.DW = function (a) {
      d.G.constructor.apply(this, arguments);
      this.zc = { m: 0, ia: 0, rc: 0, Be: 0 };
      this.Ac = { m: 0, ia: 0, rc: 0, Be: 0 };
      this.zd = [];
      this.zd[0] = { m: 0, ia: 0, rc: 0, Be: 0 };
      this.zd[1] = { m: 0, ia: 0, rc: 0, Be: 0 };
      this.zd[2] = { m: 0, ia: 0, rc: 0, Be: 0 };
      this.zd[3] = { m: 0, ia: 0, rc: 0, Be: 0 };
      this.zd[4] = { m: 0, ia: 0, rc: 0, Be: 0 };
      this.zd[5] = { m: 0, ia: 0, rc: 0, Be: 0 };
      this.zd[6] = { m: 0, ia: 0, rc: 0, Be: 0 };
      this.zd[7] = { m: 0, ia: 0, rc: 0, Be: 0 };
      this.wr = 0;
    });
  E.ma.he(d, h.data.Bq);
  d.prototype.Sh = function (d, c) {
    var e = h.data.eb,
      k = h.data.Bs,
      l = this.ac;
    if (!l || !l.A || !d) return !1;
    var u = d.yb,
      q = 0;
    if (l.Td()) return !1;
    if (d.aB() || d.iH()) return !0;
    c &&
      (d.vl == k.Pr && (d.ns() || d.yq()) && (u = d.zb() ? e.Ja : e.Va),
      d.vl == k.Qr && d.em() && (u = d.zb() ? e.Lc : e.Zc));
    k = l.zi(l, u, !0);
    if (0 >= k) return !0;
    var r = d.N;
    !r && g.dm(u) && (r = d.ed);
    g.em(u) && (r = d.Na);
    if (g.zb(u)) {
      d.rc ? (q = d.rc) : b.wa.u(l.l) && (q = a.ff.MC(l, b.H.hf, r));
      if (0 >= q) return !0;
      c && u == e.Ja
        ? ((this.zc.m += d.wc.Tc()),
          (this.zc.ia += r * d.wc.Tc()),
          (this.zc.rc += q * d.wc.Tc()),
          (this.zc.Oc = r),
          (this.zc.Be = k))
        : ((this.zd[u].m += d.wc.Tc()),
          (this.zd[u].ia += r * d.wc.Tc()),
          (this.zd[u].rc += q * d.wc.Tc()),
          (this.zd[u].Be = k));
      return !0;
    }
    if (g.uc(u)) {
      d.rc ? (q = d.rc) : b.wa.u(l.l) && (q = a.ff.NC(l, b.H.hf, r));
      if (0 >= q) return !0;
      c && u == e.Va
        ? ((this.Ac.m += d.wc.Tc()),
          (this.Ac.ia += r * d.wc.Tc()),
          (this.Ac.rc += q * d.wc.Tc()),
          (this.Ac.Oc = r),
          (this.Ac.Be = k))
        : ((this.zd[u].m += d.wc.Tc()),
          (this.zd[u].ia += r * d.wc.Tc()),
          (this.zd[u].rc += q * d.wc.Tc()),
          (this.zd[u].Be = k));
      return !0;
    }
    return !1;
  };
  d.prototype.$k = function (a) {
    if (!a) return !1;
    var b = h.data.eb,
      d = this.ac;
    return d && d.A
      ? a.zb()
        ? ((this.zc.m += a.m.Tc()),
          (this.zc.ia += a.Jc * a.m.Tc()),
          (this.zc.rc += a.Fp * a.m.Tc()),
          (this.zc.Oc = a.Oc),
          (this.zc.Be = d.zi(b.Ja, !1)),
          !0)
        : a.uc()
        ? ((this.Ac.m += a.m.Tc()),
          (this.Ac.ia += a.Jc * a.m.Tc()),
          (this.Ac.rc += a.Fp * a.m.Tc()),
          (this.Ac.Oc = a.Oc),
          (this.Ac.Be = d.zi(b.Va, !1)),
          !0)
        : !1
      : !1;
  };
  d.prototype.vk = function () {
    var d = h.data.eb,
      c = h.data.aI,
      g = this.ac;
    if (!g || !g.A) return 0;
    var A = b.H,
      m = A.hf,
      u = A.yc,
      q = 0,
      w = 0,
      p = 0;
    this.wr = 0;
    v(this.zc);
    v(this.Ac);
    if (g.Td())
      return (
        (w = w = 0),
        this.zc.m &&
          ((p = a.ff.km(g, m)),
          (w = r.call(this, this.zc.Oc, d.Ja)),
          (w = (a.Wa.Uf(this.zc.m, g.Bc) * w).normalize(u)),
          (w = w * (g.A && g.A.Ji)),
          (w = (w * p).normalize(u)),
          (A.Gc = A.Gc.ca(w, u)),
          (A.jf = A.jf.ca(w, u))),
        this.Ac.m &&
          ((p = a.ff.lm(g, m)),
          (w = r.call(this, this.Ac.Oc, d.Va)),
          (w = (a.Wa.Uf(this.Ac.m, g.Bc) * w).normalize(u)),
          (w = (w * p).normalize(u)),
          (A.Qc = A.Qc.ca(-w, u)),
          (A.jf = A.jf.ca(-w, u))),
        this.wr
      );
    if (g.A.At & c.DH) {
      for (var n = 0, x = 0, c = 0, C = this.zd.length; c < C; c++)
        if (((m = this.zd[c]), m.m)) {
          v(m);
          if (c == d.Ja || c == d.Lc || c == d.we || c == d.hd)
            (q = l(g, m.m, m.ia, !0, !1)), (q *= m.rc), (q *= m.Be), (w += q);
          if (c == d.Va || c == d.Zc || c == d.Ee || c == d.jd)
            (q = l(g, m.m, m.ia, !0, !1)), (q *= m.rc), (q *= m.Be), (p += q);
        }
      this.zc.m &&
        ((n = l(g, this.zc.m, this.zc.ia, !1, !1)),
        (n *= this.zc.rc),
        (n *= this.zc.Be));
      this.Ac.m &&
        ((x = l(g, this.Ac.m, this.Ac.ia, !1, !1)),
        (x *= this.Ac.rc),
        (x *= this.Ac.Be));
      this.wr = Math.max(n + w, x + p);
    } else {
      n = k.call(this);
      c = 0;
      for (C = this.zd.length; c < C; c++)
        if (((m = this.zd[c]), m.m)) {
          v(m);
          if (c == d.Lc || c == d.we || c == d.hd)
            (q = l(g, m.m, m.ia, !0, !1)), (q *= m.rc), (q *= m.Be), (w += q);
          if (c == d.Zc || c == d.Ee || c == d.jd)
            (q = l(g, m.m, m.ia, !0, !1)), (q *= m.rc), (q *= m.Be), (p += q);
        }
      this.zd[d.Ja].m &&
        (this.zc.Be || (this.zc.Be = this.zd[d.Ja].Be),
        (g = e(this.zc, this.zd[d.Ja])),
        (this.zc.ia = g.ia),
        (this.zc.rc = g.rc),
        (this.zc.m += this.zd[d.Ja].m),
        (this.zc.N4 = this.zd[d.Ja].m));
      this.zd[d.Va].m &&
        (this.Ac.Be || (this.Ac.Be = this.zd[d.Va].Be),
        (g = e(this.Ac, this.zd[d.Va])),
        (this.Ac.ia = g.ia),
        (this.Ac.rc = g.rc),
        (this.Ac.m += this.zd[d.Va].m),
        (this.Ac.N4 = this.zd[d.Va].m));
      if (this.zd[d.Ja].m || this.zd[d.Va].m)
        (d = k.call(this)), (n = Math.max(n, d));
      this.wr = n + w + p;
    }
    A.margin = A.margin.ca(this.wr, u);
    return this.wr;
  };
  d.prototype.Td = function () {
    var a = this.ac;
    return a && a.Td() ? !0 : !1;
  };
})();
(function () {
  var v = E.V,
    r = (v.data.wo = {});
  r.hn = 1;
  r.gn = 2;
  r.tq = 4;
  r.uq = 8;
  r.P9 = 16;
  r.S9 = 32;
  r.R9 = 64;
  r.vT = 128;
  r.Q9 = r.vT;
  r = v.data.js = {};
  r.fn = Long.ec("0000000000000001", !0, 16);
  r.Su = Long.ec("0000000000000002", !0, 16);
  r.Tu = Long.ec("0000000000000004", !0, 16);
  r.dn = Long.ec("0000000000000008", !0, 16);
  r.Jx = Long.ec("0000000000000010", !0, 16);
  r.Kx = Long.ec("0000000000000020", !0, 16);
  r.Xl = Long.ec("0000000000000040", !0, 16);
  r.Uu = Long.ec("0000000000000080", !0, 16);
  r.Vu = Long.ec("0000000000000100", !0, 16);
  r.gs = Long.ec("0000000000000200", !0, 16);
  r.by = Long.ec("0000000000000400", !0, 16);
  r.cy = Long.ec("0000000000000800", !0, 16);
  r.Zx = Long.ec("0000000000001000", !0, 16);
  r.ay = Long.ec("0000000000002000", !0, 16);
  r.Yx = Long.ec("0000000000004000", !0, 16);
  r.$x = Long.ec("0000000000008000", !0, 16);
  r.NG = Long.ec("0000000000010000", !0, 16);
  r.QG = Long.ec("0000000000020000", !0, 16);
  r.PG = Long.ec("0000000000040000", !0, 16);
  r.OG = Long.ec("0000000000080000", !0, 16);
  r.Rx = Long.ec("0000000000100000", !0, 16);
  r.Nx = Long.ec("0000000000200000", !0, 16);
  r.Lx = Long.ec("0000000000400000", !0, 16);
  r.Mx = Long.ec("0000000000800000", !0, 16);
  r.Xx = Long.ec("0000000001000000", !0, 16);
  r.Ux = Long.ec("0000000002000000", !0, 16);
  r.s9 = Long.ec("0000000004000000", !0, 16);
  r.t9 = Long.ec("0000000008000000", !0, 16);
  r.y9 = Long.ec("0000000010000000", !0, 16);
  r.x9 = Long.ec("0000000020000000", !0, 16);
  r.z9 = Long.ec("0000000040000000", !0, 16);
  r.u9 = Long.ec("0000000080000000", !0, 16);
  r.v9 = Long.ec("0000000100000000", !0, 16);
  r.w9 = Long.ec("0000000200000000", !0, 16);
  r.Ox = Long.ec("0000000400000000", !0, 16);
  r.Vx = Long.ec("0000000800000000", !0, 16);
  r.Px = Long.ec("0000001000000000", !0, 16);
  r.Wx = Long.ec("0000002000000000", !0, 16);
  r.Sx = Long.ec("0000004000000000", !0, 16);
  r.Qx = Long.ec("0000008000000000", !0, 16);
  r.Tx = Long.ec("0000010000000000", !0, 16);
  var l = (v.data.Zo = {});
  l.Ol = 0;
  l.Ml = 1;
  l.Nl = 2;
  r = v.data.C2 = {};
  r.k0 = 1;
  r.c0 = 2;
  r.uK = 4;
  r.gda = 0;
  r.$ca = r.k0 | r.c0 | r.uK;
  r = v.data.XK = {};
  r.DR = 3;
  r.B6 = 2;
  r.Ri = 5;
  r = v.data.B2 = {};
  r.dda = 0;
  r.eda = 1;
  r.e0 = 2;
  r.d0 = 4;
  r.h0 = 8;
  r.j0 = 16;
  r.f0 = 32;
  r.i0 = 64;
  r.ada = 128;
  r.bda = 256;
  r.g0 = 512;
  r.cda = r.e0 | r.d0 | r.h0 | r.j0 | r.f0 | r.i0;
  r.fda = 4294967295;
  (v.data.N_ = {}).qY = 1;
  v = v.data.z2 = function () {
    this.up = Long.Ga.La();
    this.tp = Long.Ga.La();
  };
  v.prototype.Ud = function (e, k) {
    switch (k) {
      case l.Ol:
        this.up = this.up.IM(e);
        this.tp = this.tp.qd(e.Et());
        break;
      case l.Ml:
        this.tp = this.tp.IM(e);
        this.up = this.up.qd(e.Et());
        break;
      default:
        (this.up = this.up.qd(e.Et())), (this.tp = this.tp.qd(e.Et()));
    }
  };
  v.prototype.cf = function (e) {
    return this.up.qd(e).compare(Long.Ga)
      ? l.Ol
      : this.tp.qd(e).compare(Long.Ga)
      ? l.Ml
      : l.Nl;
  };
})();
(function () {
  var v = E.V,
    r = (v.data.Fc = {});
  r.Pca = 0;
  r.ck = 0;
  r.Yg = 1;
  r.zg = 2;
  r.Ih = 3;
  r.qh = 4;
  r.Pg = 5;
  r.yj = 6;
  r.Di = 7;
  r.dk = 8;
  r.sK = 9;
  r.Zi = 10;
  r.Qca = r.Zi;
  r.Xca = 100;
  r.hK = 100;
  r.wD = 101;
  r.xD = 102;
  r.iK = 103;
  r.qK = 104;
  r.rK = 105;
  r.AD = 106;
  r.Yca = r.AD;
  r.Rca = 200;
  r.zD = 200;
  r.Uq = 201;
  r.nK = 202;
  r.kK = 203;
  r.lK = 204;
  r.jK = 205;
  r.yD = 206;
  r.mK = 207;
  r.Vs = 208;
  r.Sca = r.Vs;
  r.Uca = r.ck;
  r.Wca = r.Vs;
  r.Tca = 255;
  var l = (v.data.rm = {});
  l.To = 1;
  l.Uo = 2;
  l.Y_ = 4;
  l.a0 = 8;
  l.Z_ = 16;
  l.$_ = 32;
  l.X_ = 64;
  l.W_ = 128;
  l.oK = 256;
  l.pK = 512;
  l.b0 = 1024;
  l.Cv = 0;
  l.Vca =
    l.To | l.Uo | l.Y_ | l.a0 | l.Z_ | l.$_ | l.X_ | l.W_ | l.oK | l.pK | l.b0;
  l = v.data.aL = {};
  l.XG = 20;
  l.GT = 2;
  l.YG = 1;
  l.Wu = 2;
  l.ET = 1;
  l.FT = 15;
  l.HT = 15e3;
  l.IT = 64;
  l = v.data.bi = function () {
    this.m = Long.Ga.La();
    this.OM = this.PM = this.Qh = this.D = this.C = this.Na = this.N = 0;
  };
  l.prototype.Th = function () {
    var e = new v.data.bi(),
      k;
    for (k in this) this.hasOwnProperty(k) && (e[k] = this[k]);
    return e;
  };
  l.prototype.zb = function () {
    var e = v.data.eb,
      k = this.da;
    return k == e.Ja || k == e.we || k == e.Lc || k == e.hd;
  };
  l.prototype.uc = function () {
    var e = v.data.eb,
      k = this.da;
    return k == e.Va || k == e.Ee || k == e.Zc || k == e.jd;
  };
  l.prototype.ns = function () {
    var e = v.data.eb,
      k = this.da;
    return k == e.Lc || k == e.Zc;
  };
  l.prototype.yq = function () {
    var e = v.data.eb,
      k = this.da;
    return k == e.we || k == e.Ee;
  };
  l.prototype.em = function () {
    var e = v.data.eb,
      k = this.da;
    return k == e.hd || k == e.jd;
  };
  l.prototype.dm = function () {
    var e = this.aa;
    return e == r.Yg || e == r.zg || e == r.Ih || e == r.qh || e == r.zD;
  };
  l.prototype.ps = function () {
    return this.aa == r.Pg;
  };
  l.prototype.oU = function () {
    return this.aa == r.Di;
  };
  l.prototype.qU = function () {
    return this.aa == r.dk;
  };
  l.prototype.pf = function () {
    return this.aa == r.yD;
  };
  l.prototype.sU = function () {
    return this.aa == r.wD || this.aa == r.xD;
  };
  l.prototype.aB = function () {
    return (this.dm() || this.sU()) && this.Ya;
  };
  l.prototype.iH = function () {
    return this.aa == r.Zi || this.aa == r.Vs;
  };
})();
(function () {
  var v = E.V,
    r = (v.data.za = {});
  r.Cb = 0;
  r.jl = 1;
  r.gm = 2;
  r.nv = 3;
  r.CI = 4;
  r.DI = 5;
  r.FI = 6;
  r.GI = 7;
  r.HI = 8;
  r.II = 9;
  r.RB = 10;
  r.Pba = 11;
  r.EI = 12;
  r.Qba = 13;
  r.Rba = 14;
  r.Sba = 15;
  r.Nba = 16;
  r.Oba = 17;
  r.NX = 1025;
  r.qe = 10001;
  r.uj = 10002;
  r.vj = 10003;
  r.jm = 10004;
  r.Sq = 10005;
  r.Ms = 10006;
  r.ov = 10007;
  r.jg = 10008;
  r.Xc = 10009;
  r.hm = 10010;
  r.NI = 10011;
  r.ZI = 10012;
  r.Xg = 10013;
  r.im = 10014;
  r.qf = 10015;
  r.Qe = 10016;
  r.ml = 10017;
  r.UI = 10018;
  r.VI = 10019;
  r.pv = 10020;
  r.Mo = 10021;
  r.TB = 10022;
  r.WI = 10023;
  r.$I = 10024;
  r.VB = 10025;
  r.KI = 10026;
  r.JI = 10027;
  r.PX = 10028;
  r.OI = 10029;
  r.Lo = 10030;
  r.MI = 10031;
  r.Uba = 10032;
  r.RI = 10033;
  r.TI = 10034;
  r.kl = 10035;
  r.ll = 10036;
  r.Tba = 10037;
  r.OX = 10038;
  r.LI = 10039;
  r.SI = 10040;
  r.YI = 10041;
  r.UB = 10042;
  r.WB = 10043;
  r.SB = 10044;
  r.XI = 10045;
  r.QI = 10046;
  r.Wba = 11e3;
  r.Dk = 11001;
  r.Vba = 11002;
  r = v.data.ar = function (l) {
    this.Ca = l;
    this.Eb = this.rk = this.ia = this.volume = this.X = this.Od = null;
  };
  r.prototype.jU = function () {
    var l = v.data.za;
    return this.Ca == l.Xc || this.Ca == l.hm || this.Ca == l.Dk;
  };
  r.prototype.$R = function () {
    var l = v.data.za;
    return (
      this.Ca != l.Cb &&
      this.Ca != l.qe &&
      this.Ca != l.uj &&
      this.Ca != l.vj &&
      this.Ca != l.PX
    );
  };
})();
(function () {
  var v = window.J,
    r = v.V,
    l = (v.V.data.CT = function () {
      this.l = this.ka = "";
      this.Sm = this.da = 0;
      this.ii = "";
      this.pk = Long.Ga.La();
      this.Ft = this.Bp = 0;
      this.Fj = Long.Ga.La();
      this.Ae =
        this.Hc =
        this.j =
        this.ya =
        this.pc =
        this.uf =
        this.Xd =
        this.or =
        this.Ej =
          0;
    });
  l.prototype = {
    wu: function (e) {
      var k = r.data.Oq;
      if (e.pf())
        return (
          (this.ka = e.Od),
          (this.da = e.aa),
          (this.Sm = e.Sm),
          (this.ii = e.ii),
          (this.ya = e.ya),
          (this.pk = Long.Ga.La()),
          (this.Bp = e.Te),
          (this.Ft = 0),
          (this.Fj = Long.Ga.La()),
          (this.or = this.Ej = 0),
          (this.j = e.j),
          (this.Hc = e.Hc),
          !0
        );
      if (!e.ka) return !1;
      if (this.pk.ab())
        return (
          (this.l = e.l),
          (this.ka = e.ka),
          (this.da = e.zb() ? k.Lq : k.mv),
          (this.Sm = e.Sm),
          (this.ii = e.ii),
          (this.ya = e.ya),
          (this.pk = e.m.La()),
          (this.Bp = e.Te),
          (this.Ft = e.Jc),
          (this.Fj = Long.Ga.La()),
          (this.or = this.Ej = 0),
          (this.ya = e.ya),
          (this.pc = e.pc),
          (this.Xd = e.Xd),
          (this.uf = e.uf),
          (this.j = e.j),
          (this.Hc = e.Hc),
          (this.Ae = e.Ae),
          !0
        );
      if (this.ka !== e.ka) return !1;
      if ((e.zb() && this.da === k.Lq) || (e.uc() && this.da === k.mv)) {
        if (
          ((this.ya = this.ya.ca(e.ya, this.Hc)),
          (this.pc = this.pc.ca(e.pc, this.Hc)),
          (this.Xd = this.Xd.ca(e.Xd, this.Hc)),
          (this.uf = this.uf.ca(e.uf, this.Hc)),
          e.sH() ||
            ((this.Bp = Math.min(this.Bp, e.Te)),
            (this.Ft =
              (this.pk.Tc() * this.Ft + e.m.Tc() * e.Jc) /
              (this.pk.Tc() + e.m.Tc())),
            (this.pk = this.pk.add(e.m))),
          e.os() || e.ms())
        )
          this.Ej = Math.max(this.Ej, e.Te);
      } else
        (this.ya = this.ya.ca(e.ya, this.Hc)),
          (this.pc = this.pc.ca(e.pc, this.Hc)),
          (this.Xd = this.Xd.ca(e.Xd, this.Hc)),
          (this.uf = this.uf.ca(e.uf, this.Hc)),
          e.sH() ||
            (this.Ej
              ? ((this.Ej = Math.max(this.Ej, e.Te)),
                (this.or =
                  (this.Fj.Tc() * this.or + e.m.Tc() * e.Jc) /
                  (this.Fj.Tc() + e.m.Tc())),
                (this.Fj = this.Fj.add(e.m)))
              : ((this.Ej = e.Te), (this.or = e.Jc), (this.Fj = e.m.La())));
      this.j = e.j;
      this.Hc = e.Hc;
      this.Ae = e.Ae;
      return !0;
    },
    zb: function () {
      return this.da === r.data.Oq.Lq;
    },
    uc: function () {
      return this.da === r.data.Oq.mv;
    },
    pf: function () {
      return r.data.Tg.pf(this.da);
    },
  };
  v.ma.he(l, v.V.data.Tg);
})();
(function () {
  var v = window.J,
    r = v.V;
  (v.V.data.DT = function () {
    this.Oa();
  }).prototype = {
    Wd: null,
    ya: null,
    Tt: null,
    Xd: null,
    uf: null,
    Ii: null,
    Qg: null,
    Mk: null,
    $t: null,
    Oa: function () {
      this.uf =
        this.$t =
        this.Mk =
        this.Qg =
        this.Ii =
        this.Xd =
        this.Tt =
        this.ya =
        this.Wd =
          0;
      return this;
    },
    wu: function (l) {
      var e = r.data.aq,
        k = l.Hc;
      this.Wd = this.Wd.ca(l.ya, k);
      if (l.jH()) return (this.Qg = this.Qg.ca(l.ya, k)), this;
      if (l.aa === e.Xm && 0 < l.ya)
        return (this.Mk = this.Mk.ca(l.ya, k)), this;
      if (l.aa === e.Xm && 0 > l.ya)
        return (this.$t = this.$t.ca(l.ya, k)), this;
      if (l.pf())
        return (
          (this.ya = this.ya.ca(l.ya, k)), (this.Ii = this.Ii.ca(l.ya, k)), this
        );
      this.ya = this.ya.ca(l.ya, k);
      this.Ii = this.Ii.ca(l.ya, k);
      this.Tt = this.Tt.ca(l.pc, k);
      this.Wd = this.Wd.ca(l.pc, k);
      this.Ii = this.Ii.ca(l.pc, k);
      this.Xd = this.Xd.ca(l.Xd, k);
      this.uf = this.uf.ca(l.uf, k);
      this.Wd = this.Wd.ca(l.Xd, k);
      this.Ii = this.Ii.ca(l.Xd, k);
      this.Wd = this.Wd.ca(l.uf, k);
      this.Ii = this.Ii.ca(l.uf, k);
    },
  };
})();
(function () {
  function v(a) {
    var b = this.rk;
    if (b) {
      var d = b.Hm(function (b) {
        return b.ia === a.ia && b.Rb === a.Rb;
      });
      -1 < d && b.splice(d, 1);
    }
  }
  function r(a) {
    if (!a) return !1;
    var b = this.rk;
    b || (b = this.rk = []);
    b.push(a);
    return !0;
  }
  function l(a) {
    var b = this.rk;
    return b
      ? b.find(function (b) {
          return b.ia === a.ia && b.Rb === a.Rb;
        })
      : null;
  }
  function e(a) {
    return a === f.dy
      ? "reset"
      : a === f.If
      ? "sell"
      : a === f.Yf
      ? "buy"
      : a === f.Zl
      ? "sell market"
      : a === f.Yl
      ? "buy market"
      : "unknown";
  }
  function k(a, b) {
    return a.Rb === f.Zl
      ? b.Rb === f.Yf || b.Rb === f.Yl
        ? -1
        : b.Rb === f.If
        ? 1
        : 0
      : a.Rb === f.Yl
      ? b.Rb === f.Yf
        ? -1
        : b.Rb === f.If || b.Rb === f.Zl
        ? 1
        : 0
      : b.Rb === f.Zl
      ? a.Rb === f.Yf || a.Rb === f.Yl
        ? 1
        : a.Rb === f.If
        ? -1
        : 0
      : b.Rb === f.Yl
      ? a.Rb === f.Yf
        ? 1
        : a.Rb === f.If || a.Rb === f.Zl
        ? -1
        : 0
      : a.Rb < b.Rb
      ? -1
      : a.Rb > b.Rb
      ? 1
      : a.ia > b.ia
      ? -1
      : a.ia < b.ia
      ? 1
      : 0;
  }
  var h = window.J,
    b = h.V,
    a = b.view,
    g = b.control,
    d = (b.data.vea = { r5: 1, cF: 2, q5: 0, p5: 3 }),
    f = (b.data.bm = { dy: 0, If: 1, Yf: 2, Zl: 3, Yl: 4, Yj: 0 });
  b.data.U9 = { A9: 1, C9: 2, B9: 2 };
  (h.V.data.ON = function (a, b) {
    this.l = a.l;
    this.zf = a.zf;
    this.j = a.j;
    this.depth = a.Yk;
    this.Pn = a.A.Iw;
    this.Fb = a.Fb;
    this.cg = a.A.cg;
    this.gj = a.A.gj;
    this.mode = b;
    this.J = !0;
  }).prototype = {
    l: null,
    zf: null,
    j: null,
    depth: null,
    Pn: null,
    Fb: null,
    cg: null,
    gj: null,
    mode: null,
    J: null,
    rk: null,
    Wk: null,
    PN: function (b) {
      var h = !1;
      if (this.J) {
        var A = !1;
        if (0 !== (b.XL & d.cF)) (this.rk = b.On), this.rk.sort(k), (A = !0);
        else {
          b = b.On;
          for (var m, u = 0, q = b.length; u < q; u++)
            if ((m = b[u]) && m.Rb === f.dy) {
              this.Oa();
              A = !0;
              break;
            }
          if (A)
            for (u += 1; u < q; u++)
              if ((m = b[u]) && !r.call(this, m)) {
                A = !1;
                break;
              }
          A && this.rk.sort(k);
        }
        A && ((this.J = !1), (h = !0));
      } else if (0 === (b.XL & d.cF)) {
        var A = a.U,
          w,
          p,
          n;
        m = !1;
        q = u = 0;
        if (b.On.length) {
          w = b.On || [];
          for (var x = 0, C = w.length; x < C; x++)
            if ((p = w[x]))
              if (p.Rb === f.dy) this.Oa();
              else if (p.m.ab()) {
                n = l.call(this, p);
                if (!n) {
                  A.Wb(
                    A.Ab.ERROR,
                    A.types.Tp,
                    [
                      "invalid book transaction [",
                      this.l,
                      ", ",
                      e(p.Rb),
                      ",",
                      p.ia,
                      ",",
                      p.m.toString(),
                      "]",
                    ].join("")
                  );
                  m = !0;
                  break;
                }
                v.call(this, n);
              } else if ((n = l.call(this, p)))
                (n.m = n.m.add(p.m)), n.m.ab() && v.call(this, n.ia);
              else {
                if (!r.call(this, p)) {
                  A.Wb(
                    A.Ab.ERROR,
                    A.types.Tp,
                    [
                      "failed to store book change item [",
                      this.l,
                      ", ",
                      e(p.Rb),
                      ",",
                      p.ia,
                      ",",
                      p.m.toString(),
                      "]",
                    ].join("")
                  );
                  m = !0;
                  break;
                }
                this.rk.sort(k);
              }
          if (!m)
            for (w = this.rk, n = 0, x = w.length; n < x; n++)
              if ((p = w[n])) {
                if (p.m.Pk(Long.Ga)) {
                  A.Wb(
                    A.Ab.ERROR,
                    A.types.Tp,
                    [
                      "invalid book item [",
                      this.l,
                      ", ",
                      e(p.Rb),
                      ",",
                      p.ia,
                      ",",
                      p.m.toString(),
                      "]",
                    ].join("")
                  );
                  m = !0;
                  break;
                }
                p.Rb === f.If && q++;
                p.Rb === f.Yf && u++;
              }
          !m &&
            (u > this.depth || q > this.depth) &&
            (A.Wb(
              A.Ab.ERROR,
              A.types.Tp,
              [
                "invalid book transaction [",
                this.l,
                ", ",
                e(b.On[0].Rb),
                b.On[0].ia,
                ",",
                b.On[0].m.toString(),
                "][buys: ",
                u,
                ", sells: ",
                q,
                ", depth: ",
                this.depth,
                "]",
              ].join("")
            ),
            (m = !0));
          b = !m;
        } else
          A.Wb(
            A.Ab.Fn,
            A.types.Tp,
            ["empty book transaction ", b.l, ",", b.time].join("")
          ),
            (b = !0);
        b ? (h = !0) : (this.J = !0);
      }
      if (
        h &&
        ((b = a.U),
        (A = 0 !== this.cg),
        (m = this.Pn && this.Pn < this.depth),
        (h = -1),
        (this.Wk = this.rk.slice()),
        A || m)
      ) {
        w = 0;
        for (p = this.Wk.length; w < p; w++)
          if ((u = this.Wk[w])) {
            if (A) {
              q = u.ia;
              u.Rb === f.If && g.pd.MB(u.cg, u.gj, u.Fb, u.j, q);
              u.Rb === f.Yf && g.pd.NB(u.cg, u.gj, u.Fb, u.j, q);
              if (0 > q) {
                b.Wb(
                  b.Ab.ERROR,
                  b.types.Tp,
                  [
                    "invalid book after price extend [",
                    u.l,
                    ", ",
                    u.Rb === f.If ? "sell" : "buy",
                    ", ",
                    u.m.toString(),
                    ", price: ",
                    q,
                    ", original: ",
                    u.ia,
                    "]",
                  ].join("")
                );
                break;
              }
              u.ia = q.normalize(this.j);
            }
            u.Rb === f.If && (h = w);
          }
        m &&
          this.Wk.length &&
          ((b = 0 <= h ? h + 1 : 0),
          b > this.Pn &&
            (this.Wk.splice(0, b - this.Pn - 1 - 0 + 1), (h -= b - this.Pn)),
          (b = 0 <= h ? this.Wk.length - h - 1 : this.Wk.length),
          b > this.Pn &&
            ((h = this.Wk.length - 1),
            (b = h - (b - this.Pn) + 1),
            this.Wk.splice(b, h - b + 1)));
      }
    },
    Oa: function () {
      this.rk = [];
    },
  };
})();
window.xr = function () {
  function v() {
    try {
      window.localStorage.setItem("disclaimer", 1);
    } catch (e) {}
    var k = document.getElementById("disclaimer");
    k && k.parentElement.removeChild(k);
  }
  var r;
  try {
    r = !!+window.localStorage.getItem("disclaimer");
  } catch (l) {
    r = !1;
  }
  r ||
    ((r = document.createElement("div")),
    (r.innerHTML =
      '<div id="disclaimer"><style>.title { font-size: 15px; } .bg { z-index: 99998; position: fixed; left: 0; top: 0; height: 100%; width: 100%; background: #fff; } p { padding: 0;margin: 0 0 12px; } .window { position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); font-family: Tahoma, Helvetica,sans-serif; box-shadow: 0 0 3px 0 rgb(0 0 0 / 50%); border: 1px solid #737373; background: #979797; padding: 0 6px 6px; font-size: 12px; max-width: 400px; z-index: 99999; } .header { height: 28px; line-height: 28px; font-size: 15px; text-align: center; font-size: 15px; white-space: nowrap; text-overflow: ellipsis; overflow: hidden; position: relative; cursor: default; } .content { background: #f0f0f0; border: 1px solid gray; padding: 12px; line-height: 16px; } .footer { text-align: right; } .line { height: 1px; border-bottom: 1px solid #fff; background: #A0A0A0; margin: 0 -12px 12px; } .button { display: inline-block; background: linear-gradient(to bottom,#f6f6f6 0,#ddd 100%); border-radius: 0; border: 1px solid #949494; height: 24px; line-height: 22px; min-width: 72px; padding: 0; margin: 0; cursor: pointer; font-family: Tahoma, Helvetica, sans-serif; font-size: 12px; } .button:active { background: linear-gradient(to bottom,#dedede 0,#f7f7f7 100%); } .button:hover { border-color: #747474; } .button:focus { border-color: #39f; }</style><div class="bg"></div><div class="window"><div class="header"><div class="title">Disclaimer</div></div><div class="content"><p>MetaQuotes Ltd is a software development company and does not provide any financial, investment, brokerage, trading or data feed services, nor is it involved in any commission-based payments concerning any trading operations.</p><p>By pressing the ACCEPT button I agree with the <a class="link" href="https://www.metaquotes.net/licenses/webterminal" target="_blank">terms and conditions of the EULA</a>, the <a class="link" href="https://www.metaquotes.net/en/legal/policies" target="_blank">Privacy Policy</a> and the Disclaimer.</p><p>None of the information available in the application is intended as an investment advice. Before using this application for trading, you should seek the advice of a qualified and registered securities professional and undertake your own due diligence.</p><div class="line"></div><div class="footer"><button class="button" id="accept">Accept</button></div></div></div></div>'),
    document.body.appendChild(r),
    document.getElementById("accept").addEventListener("click", v));
};
(function () {
  var v = window.J.V;
  v.view.F = {
    yu: function (r, l) {
      void 0 === l && (l = !0);
      return l && 1e6 <= r
        ? Number(r / 1e6)
            .normalize(14)
            .toFixed(14)
            .Kr(12) + "M"
        : l && 1e3 <= r
        ? Number(r / 1e3)
            .normalize(11)
            .toFixed(11)
            .Kr(9) + "K"
        : r.normalize(8).toFixed(8).Kr(6);
    },
    Ea: function (r, l) {
      return this.yu(v.control.Wa.od(r), l);
    },
    eS: function (r, l) {
      void 0 === r && (r = Long.Ga.La());
      void 0 === l && (l = Long.Ga.La());
      var e = [];
      r.Jm(l)
        ? (e.push(this.Ea(r)), e.push(" / "), e.push(this.Ea(r.sub(l))))
        : (e.push(this.Ea(r)), e.push(" / "), e.push(this.Ea(l)));
      return e.join("");
    },
    ro: function (r) {
      return r.gc(8).Kr(8);
    },
    Z: function (r, l, e) {
      r || (r = 0);
      void 0 === e && (e = 0);
      return r
        .normalize(l + e)
        .toFixed(l + e)
        .Kr(e);
    },
    J: function (r, l, e) {
      return this.Z(r.Tc().Cf(l), l, e);
    },
    Zm: function (r, l) {
      r = r.normalize(l).toFixed(l);
      0 < l && (r = r.Kr(l));
      return r;
    },
    um: function (r, l) {
      return r.Ki(Long.ec(l + ""));
    },
  };
})();
(function () {
  function v() {
    var a = [],
      b = [],
      c = "";
    a.push("MetaTrader 5");
    if (T.H.ul) {
      for (var d = T.H.ul, e = 0, f = d.length; e < f; e++)
        d.charCodeAt(e) && (c += d.charAt(e));
      a.push(" - ");
      a.push(T.H.ga, ": ");
      a.push(T.H.oe, ", ");
      b.push(T.H.ga, ", ");
      b.push(c, " (");
      T.H.pr && b.push(T.H.pr, ", ");
      b.push(T.H.Wd.toFixed(T.H.yc), " ", T.H.hf, ", ");
      b.push("1:", T.H.wh);
      T.H.bB() ? a.push("Demo") : T.H.iU() ? a.push("Contest") : a.push("Real");
      a.push(" Account");
      R.Wc.Kg(T.H) && (b.push(", Hedge"), a.push(" - Hedge"));
      b.push(")");
    }
    ta && ta.Text(a.join("")).Fe(b.join(""));
  }
  function r() {
    var a = c();
    a.icon = P.ce.Au("new_chart", a.disabled);
    a.title = H.p0;
    ga && ga.vc([a]).g(!!a.disabled);
    aa && aa.ja(c());
  }
  function l() {
    var a = P.ce.Au,
      b = !T.O.ri().length,
      c = T.Ib.Vg();
    U && U.g(b).ie(a("symbols", b));
    b = !T.H.ul || !R.P.ih() || !c || !c.length;
    ba && ba.g(b).ie(a("new_order", b));
  }
  function e() {
    var a = T.ra.nd(),
      b = !a,
      c = (a && a.type) || "",
      d = (a && a.mode) || "",
      e = (a && a.period) || 0,
      f = B.L.rg,
      g = P.ce.Au;
    da.g(b)
      .ie(g("bar", b))
      .s("bar" == c);
    ca.g(b)
      .ie(g("candlesticks", b))
      .s("quote" == c);
    ka.g(b)
      .ie(g("line", b))
      .s("line" == c);
    oa.g(b)
      .ie(g("scroll", b))
      .s(a && a.scroll);
    ra.g(b)
      .ie(g("shift", b))
      .s(a && a.shift);
    na.g(b)
      .ie(g("cursor", b))
      .s("cursor" == d);
    sa.g(b)
      .ie(g("crosshair", b))
      .s("crosshair" == d);
    ia.g(b)
      .ie(g("verticalline", b))
      .s("verticalline" == d);
    Fa.g(b)
      .ie(g("horizontalline", b))
      .s("horizontalline" == d);
    ya.g(b)
      .ie(g("trendline", b))
      .s("trendline" == d);
    Da.g(b)
      .ie(g("callout", b))
      .s("callout" == d);
    Ba.g(b)
      .ie(g("fibonacciretracement", b))
      .s("fibonacciretracement" == d);
    Ia.g(b)
      .ie(g("equidistantchannel", b))
      .s("equidistantchannel" == d);
    b = !a || 6 == a.scale;
    va.g(b).ie(g("zoom_in", b));
    b = !a || 1 == a.scale;
    ma.g(b).ie(g("zoom_out", b));
    b = !a;
    Ka.g(b)
      .ie(g("m1", b))
      .s(e == f.Ve);
    xa.g(b)
      .ie(g("m5", b))
      .s(e == f.Pe);
    Ca.g(b)
      .ie(g("m15", b))
      .s(e == f.Ne);
    ja.g(b)
      .ie(g("m30", b))
      .s(e == f.Oe);
    za.g(b)
      .ie(g("h1", b))
      .s(e == f.Sd);
    Ma.g(b)
      .ie(g("h4", b))
      .s(e == f.pe);
    La.g(b)
      .ie(g("d1", b))
      .s(e == f.Ce);
    la.g(b)
      .ie(g("w1", b))
      .s(e == f.ze);
    Wa.g(b)
      .ie(g("mn1", b))
      .s(e == f.nh);
  }
  function k() {
    var a = P.ce.Me,
      b = T.H.ga,
      c = T.H.oe,
      d = [],
      e = T.$c.bs(R.Bb.Ww ? void 0 : 5),
      f,
      g,
      h;
    if (e)
      for (var k = 0, l = e.length; k < l; k++)
        !(f = e[k]) ||
          (f.ga == b && f.Pf == c) ||
          ((g = []),
          (h = []),
          g.push(f.ga),
          h.push(f.ga),
          f.Pf && (g.push(" - ", f.Pf), h.push(f.Pf)),
          f.v && g.push(": ", f.v),
          d.push(
            V(
              "file_connect_" + h.join("|||"),
              g.join(""),
              a(5 == f.version ? "mt5" : "mt4")
            )
          ));
    aa &&
      (aa.ja({ id: "file_connect", disabled: !d.length, items: d }),
      aa.ja({ id: "file_logout", disabled: !T.H.ga }),
      aa.ja({ id: "file_password", disabled: !T.H.ga }));
  }
  function h() {
    var a = T.B.u("block");
    aa.ja({ id: "view_marketwatch", checked: a & 1 });
    aa.ja({ id: "view_toolbox", checked: a & 2 });
  }
  function b() {
    aa &&
      aa.ja({
        id: "options_oneclick",
        checked: R.H.kn(),
        disabled: !T.H.ul,
      });
  }
  function a() {
    var a = T.ra.nd(),
      b = !a,
      c = b,
      d = (a && a.type) || null,
      e = (a && a.scale) || null,
      f = (a && a.period) || null,
      g = T.ra.UG(),
      h = T.ra.SG(),
      k = P.ce.Me,
      l = B.L.rg;
    aa.ja({
      id: "charts_type_bar",
      disabled: c,
      checked: "bar" == d,
      icon: k("bar", c),
    });
    aa.ja({
      id: "charts_type_quote",
      disabled: c,
      checked: "quote" == d,
      icon: k("candlesticks", c),
    });
    aa.ja({
      id: "charts_type_line",
      disabled: c,
      checked: "line" == d,
      icon: k("line", c),
    });
    aa.ja({
      id: "charts_zoom_in",
      disabled: c || 6 == e,
      icon: k("zoom_in", c || 6 == e),
    });
    aa.ja({
      id: "charts_zoom_out",
      disabled: c || 1 == e,
      icon: k("zoom_out", c || 1 == e),
    });
    aa.ja({
      id: "charts_grid",
      disabled: c,
      checked: a && a.grid,
      icon: k("grid", c),
    });
    aa.ja({
      id: "charts_volumes",
      disabled: c,
      checked: a && 1 === a.volumes,
      icon: k("volumes", c),
    });
    aa.ja({
      id: "charts_volumes_tick",
      disabled: c,
      checked: a && 2 === a.volumes,
      icon: k("volumes_tick", c),
    });
    aa.ja({
      id: "charts_scroll",
      disabled: c,
      checked: a && a.scroll,
      icon: k("scroll", c),
    });
    aa.ja({
      id: "charts_shift",
      disabled: c,
      checked: a && a.shift,
      icon: k("shift", c),
    });
    aa.ja({
      id: "charts_period_m1",
      disabled: c,
      checked: f == l.Ve,
      icon: k("m1", c),
    });
    aa.ja({
      id: "charts_period_m5",
      disabled: c,
      checked: f == l.Pe,
      icon: k("m5", c),
    });
    aa.ja({
      id: "charts_period_m15",
      disabled: c,
      checked: f == l.Ne,
      icon: k("m15", c),
    });
    aa.ja({
      id: "charts_period_m30",
      disabled: c,
      checked: f == l.Oe,
      icon: k("m30", c),
    });
    aa.ja({
      id: "charts_period_h1",
      disabled: c,
      checked: f == l.Sd,
      icon: k("h1", c),
    });
    aa.ja({
      id: "charts_period_h4",
      disabled: c,
      checked: f == l.pe,
      icon: k("h4", c),
    });
    aa.ja({
      id: "charts_period_daily",
      disabled: c,
      checked: f == l.Ce,
      icon: k("d1", c),
    });
    aa.ja({
      id: "charts_period_weekly",
      disabled: c,
      checked: f == l.ze,
      icon: k("w1", c),
    });
    aa.ja({
      id: "charts_period_monthly",
      disabled: c,
      checked: f == l.nh,
      icon: k("mn1", c),
    });
    aa.ja({
      id: "insert_object_verticalline",
      disabled: c,
      icon: k("verticalline", c),
    });
    aa.ja({
      id: "insert_object_horizontalline",
      disabled: c,
      icon: k("horizontalline", c),
    });
    aa.ja({
      id: "insert_object_trendline",
      disabled: c,
      icon: k("trendline", c),
    });
    aa.ja({
      id: "insert_object_trendlinebyangle",
      disabled: c,
      icon: k("trendlinebyangle", c),
    });
    aa.ja({
      id: "insert_object_cyclelines",
      disabled: c,
      icon: k("cyclelines", c),
    });
    aa.ja({
      id: "insert_object_arrowedline",
      disabled: c,
      icon: k("arrowedline", c),
    });
    aa.ja({
      id: "insert_object_equidistantchannel",
      disabled: c,
      icon: k("equidistantchannel", c),
    });
    aa.ja({
      id: "insert_object_stddevchannel",
      disabled: c,
      icon: k("stddevchannel", c),
    });
    aa.ja({
      id: "insert_object_regressionchannel",
      disabled: c,
      icon: k("regressionchannel", c),
    });
    aa.ja({
      id: "insert_object_andrewspitchfork",
      disabled: c,
      icon: k("andrewspitchfork", c),
    });
    aa.ja({
      id: "insert_object_gannline",
      disabled: c,
      icon: k("gannline", c),
    });
    aa.ja({
      id: "insert_object_gannfan",
      disabled: c,
      icon: k("gannfan", c),
    });
    aa.ja({
      id: "insert_object_ganngrid",
      disabled: c,
      icon: k("ganngrid", c),
    });
    aa.ja({
      id: "insert_object_fibonacciretracement",
      disabled: c,
      icon: k("fibonacciretracement", c),
    });
    aa.ja({
      id: "insert_object_fibotimezones",
      disabled: c,
      icon: k("fibotimezones", c),
    });
    aa.ja({
      id: "insert_object_fibonaccifan",
      disabled: c,
      icon: k("fibonaccifan", c),
    });
    aa.ja({
      id: "insert_object_fibonacciarcs",
      disabled: c,
      icon: k("fibonacciarcs", c),
    });
    aa.ja({
      id: "insert_object_fibonaccichannel",
      disabled: c,
      icon: k("fibonaccichannel", c),
    });
    aa.ja({
      id: "insert_object_fibonacciexpansion",
      disabled: c,
      icon: k("fibonacciexpansion", c),
    });
    aa.ja({
      id: "insert_object_elliottmotivewave",
      disabled: c,
      icon: k("elliottmotivewave", c),
    });
    aa.ja({
      id: "insert_object_elliottcorrectivewave",
      disabled: c,
      icon: k("elliottcorrectivewave", c),
    });
    aa.ja({
      id: "insert_object_rectangle",
      disabled: c,
      icon: k("rectangle", c),
    });
    aa.ja({ id: "insert_object_callout", disabled: c, icon: k("callout", c) });
    a = B.L.Nc.pG();
    e = 0;
    for (f = a.length; e < f; e++)
      if ((d = a[e]))
        aa.ja({ id: "insert_indicators_" + d.replace(/\s/g, ""), disabled: c }),
          aa.ja({
            id: "insert_indicators_" + d.replace(/\s/g, "") + "_top",
            disabled: c,
          });
    c = b || !g;
    aa.ja({
      id: "charts_objects_list",
      disabled: c,
      icon: k("objects_list", c),
    });
    aa.ja({
      id: "charts_objects_remove_all",
      disabled: c,
      icon: k("objects_remove_all", c),
    });
    c = b || !h;
    aa.ja({
      id: "charts_indicators",
      disabled: c,
      icon: k("indicator_list", c),
    });
  }
  function g(a, b, c) {
    a = S(B.input.io)
      .Fe(a || "undefined")
      .ie(b)
      .i("click", O)
      .b({ "margin-top": "3px" });
    void 0 !== c && (a.Md = c);
    return a;
  }
  function d() {
    return S(B.page.ge).K("sep").b({ "margin-top": "6px" });
  }
  function f() {
    var a = [];
    a.push(z());
    a.push(A());
    a.push(m());
    a.push(u());
    a.push(V("options", H.hW, "", "", "", "", [V("options_oneclick", H.iW)]));
    a.push(q());
    return a;
  }
  function c() {
    var a = [],
      b = T.Ib.Vg(),
      c,
      d,
      e,
      f,
      g;
    if (b && b.length) {
      e = [];
      for (var h = 0, k = b.length; h < k; h++)
        if ((c = b[h]))
          if (6 > h) a.push(V("new_chart_" + c, c));
          else if ((d = T.O.Ka(c)))
            (g = e[d.ZM])
              ? g.push(V("new_chart_" + c, c))
              : (f = T.Us.IS(d.ZM)) &&
                f.vf &&
                ((g = e[d.ZM] = []),
                g.push(V("new_chart_" + c, c)),
                6 == h && a.push("-"),
                a.push(
                  V(
                    "new_chart_" + f.vf,
                    f.vf,
                    void 0,
                    void 0,
                    void 0,
                    void 0,
                    g
                  )
                ));
    }
    return V("new_chart", H.GV, void 0, !a.length, void 0, void 0, a);
  }
  function z() {
    var a = P.ce.Me,
      b = [];
    b.push(c());
    b.push("-");
    R.Bb.Ww &&
      (b.push(V("file_platform_4", "MetaTrader 4 Platform")),
      b.push(V("file_platform_5", "MetaTrader 5 Platform", void 0, void 0, !0)),
      b.push("-"));
    b.push(V("file_connect", H.CV, void 0, !0));
    b.push(V("file_demo", H.DV, a("open_account")));
    b.push(V("file_login", H.EV, a("login_account")));
    b.push("-");
    b.push(V("file_password", H.BV, void 0, !0));
    b.push(V("file_logout", H.FV, void 0, !0));
    return V("file", H.AV, "", "", "", "", b);
  }
  function A() {
    var a = P.ce.Me,
      b = [],
      c;
    T.B.u("block");
    var d = Q.xa.EY,
      e,
      f = Q.xa.Db();
    c = [];
    if (d)
      for (var g = 0, h = d.length; g < h; g++)
        (e = d[g]) &&
          c.push(V("view_languages_" + e[1], e[0], void 0, void 0, e[1] == f));
    b.push(V("view_languages", "Languages", void 0, void 0, void 0, void 0, c));
    b.push("-");
    b.push(V("view_marketwatch", H.cv, a("market_watch")));
    b.push(V("view_toolbox", H.lW, a("toolbox")));
    L.LE &&
      L.rE &&
      (b.push("-"), b.push(V("view_fullscreen", H.kW, "", "", "", "", "", !0)));
    return V("view", H.jW, "", "", "", "", b);
  }
  function m() {
    var a = [],
      b = B.L.Nc,
      c = b.pG();
    if ((c = b.Cc.hS(c))) {
      for (
        var c = c.sort(function (a, b) {
            var c;
            c = b.count - a.count;
            if (0 !== c) return c;
            c = b.t - a.t;
            if (0 !== c) return c;
            c = b.t - a.t;
            return 0 !== c ? c : a.name.localeCompare(b.name);
          }),
          d = 0;
        6 > d;
        d++
      ) {
        var e = c[d].name,
          f = e.replace(/\s/g, "");
        a[d] = V("insert_indicators_" + f + "_top", e);
      }
      a[a.length] = "-";
    }
    a = a.concat([
      V(
        "indicators_trends",
        H.ZV,
        "",
        "",
        "",
        "",
        b
          .Fu("trend")
          .sort()
          .map(function (a) {
            return V("insert_indicators_" + a.replace(/\s/g, ""), a);
          })
      ),
      V(
        "indicators_oscillators",
        H.YV,
        "",
        "",
        "",
        "",
        b
          .Fu("oscillators")
          .sort()
          .map(function (a) {
            return V("insert_indicators_" + a.replace(/\s/g, ""), a);
          })
      ),
      V(
        "indicators_volumes",
        H.$V,
        "",
        "",
        "",
        "",
        b
          .Fu("volumes")
          .sort()
          .map(function (a) {
            return V("insert_indicators_" + a.replace(/\s/g, ""), a);
          })
      ),
      V(
        "indicators_bills",
        H.XV,
        "",
        "",
        "",
        "",
        b
          .Fu("bills")
          .sort()
          .map(function (a) {
            return V("insert_indicators_" + a.replace(/\s/g, ""), a);
          })
      ),
    ]);
    b = P.ce.Me;
    return V("insert", H.VV, "", "", "", "", [
      V("indicators", H.WV, "", "", "", "", a),
      "-",
      V("object_lines", H.fW, "", "", "", "", [
        V("insert_object_verticalline", H.IK, b("verticalline")),
        V("insert_object_horizontalline", H.FK, b("horizontalline")),
        V("insert_object_trendline", H.HK, b("trendline")),
        V("insert_object_trendlinebyangle", H.uF, b("trendlinebyangle")),
        V("insert_object_cyclelines", H.tF, b("cyclelines")),
        V("insert_object_arrowedline", H.sF, b("arrowedline")),
      ]),
      V("object_channels", H.aW, "", "", "", "", [
        V("insert_object_equidistantchannel", H.AK, b("equidistantchannel")),
        V("insert_object_stddevchannel", H.N0, b("stddevchannel")),
        V("insert_object_regressionchannel", H.I0, b("regressionchannel")),
        V("insert_object_andrewspitchfork", H.wK, b("andrewspitchfork")),
      ]),
      V("object_ganns", H.dW, "", "", "", "", [
        V("insert_object_gannline", H.y0, b("gannline")),
        V("insert_object_gannfan", H.DK, b("gannfan")),
        V("insert_object_ganngrid", H.EK, b("ganngrid")),
      ]),
      V("object_fibonacci", H.cW, "", "", "", "", [
        V(
          "insert_object_fibonacciretracement",
          H.CK,
          b("fibonacciretracement")
        ),
        V("insert_object_fibotimezones", H.P0, b("fibotimezones")),
        V("insert_object_fibonaccifan", H.v0, b("fibonaccifan")),
        V("insert_object_fibonacciarcs", H.t0, b("fibonacciarcs")),
        V("insert_object_fibonaccichannel", H.BK, b("fibonaccichannel")),
        V("insert_object_fibonacciexpansion", H.u0, b("fibonacciexpansion")),
      ]),
      V("object_elliott", H.bW, "", "", "", "", [
        V("insert_object_elliottmotivewave", H.zK, b("elliottmotivewave")),
        V(
          "insert_object_elliottcorrectivewave",
          H.yK,
          b("elliottcorrectivewave")
        ),
      ]),
      V("object_shapes", H.gW, "", "", "", "", [
        V("insert_object_rectangle", H.GK, b("rectangle")),
      ]),
      V("object_graphical", H.eW, "", "", "", "", [
        V("insert_object_callout", H.xK, b("callout")),
      ]),
    ]);
  }
  function u() {
    var a = P.ce.Me;
    return V("charts", H.dV, "", "", "", "", [
      V("charts_indicators", H.hV, a("indicator_list")),
      V("charts_objects", H.jV, "", !1, !1, void 0, [
        V("charts_objects_list", H.lV, a("objects_list")),
        "-",
        V("charts_objects_remove_all", H.kV, a("objects_remove_all")),
      ]),
      "-",
      V("charts_type_bar", H.eV, a("bar")),
      V("charts_type_quote", H.fV, a("candlesticks")),
      V("charts_type_line", H.iV, a("line")),
      "-",
      V("charts_period", H.mV, void 0, void 0, void 0, void 0, [
        V("charts_period_m1", H.qV, a("m1")),
        V("charts_period_m5", H.tV, a("m5")),
        V("charts_period_m15", H.rV, a("m15")),
        V("charts_period_m30", H.sV, a("m30")),
        "-",
        V("charts_period_h1", H.oV, a("h1")),
        V("charts_period_h4", H.pV, a("h4")),
        "-",
        V("charts_period_daily", H.nV, a("d1")),
        V("charts_period_weekly", H.vV, a("w1")),
        V("charts_period_monthly", H.uV, a("mn1")),
      ]),
      "-",
      V("charts_grid", H.gV, a("grid")),
      V("charts_scroll", H.wV, a("scroll")),
      V("charts_shift", H.xV, a("shift")),
      "-",
      V("charts_volumes", H.pF, a("volumes")),
      V("charts_volumes_tick", H.oF, a("volumes_tick")),
      "-",
      V("charts_zoom_in", H.yV, a("zoom_in")),
      V("charts_zoom_out", H.zV, a("zoom_out")),
    ]);
  }
  function q() {
    var a = P.ce.Me,
      b = fa.help;
    b ||
      (b = fa.help =
        V("help", H.HV, "", "", "", "", [
          V("help_mql5_site", H.RV, a("help_mql5_site")),
          V("help_mql5_docs", H.LV, a("help_mql5_docs")),
          V("help_mql5_articles", H.JV, a("help_mql5_articles")),
          V("help_mql5_code", H.KV, a("help_mql5_codes")),
          V("help_mql5_job", H.NV, a("help_mql5_freelance")),
          V("help_mql5_market", H.OV, a("help_mql5_market")),
          V("help_mql5_signals", H.PV, a("help_mql5_signals")),
          V("help_mql5_forum", H.MV, a("help_mql5_forum")),
          V("help_mql5_vps", H.QV, a("help_mql5_vps")),
          "-",
          V("help_download_desktop", H.SV, a("help_desktop")),
          V("help_download_ios", H.UV, a("help_iphone")),
          V("help_download_android", H.TV, a("help_android")),
          "-",
          V("help_about", H.IV, a("help_about")),
        ]));
    return b;
  }
  function w() {
    var a = window.location.search,
      b;
    if (a && 1 < a.length && (a = a.substr(1)))
      for (var a = a.split("&"), c = 0, d = a.length; c < d; c++)
        if ((b = a[c]))
          if (((b = b.split("=")), b.length && "border" == b[0] && "0" == b[1]))
            return !0;
    return !1;
  }
  function p(a) {
    var b = H.Db();
    return a ? (-1 < a.indexOf(b) ? b : "en") : b;
  }
  function n() {
    h();
  }
  function x() {
    e();
    a();
  }
  function C() {
    r();
  }
  function O() {
    var a = T.ra.nd(),
      b = this.Md;
    if ("symbols" == b) P.Ss.ha().na();
    else if ("new_order" == b) a ? P.Jb.na(a.symbol) : P.Jb.na();
    else if ("share" == b || "visit_mql5" == b)
      (a = p("en ru zh es de ja pt".split(" "))),
        "share" == b
          ? G(
              "https://www.mql5.com/" +
                a +
                "/trading/widget?utm_source=mt5webterminal&utm_campaign=" +
                a +
                ".trading.sharing"
            )
          : "visit_mql5" == b &&
            G(
              "https://www.mql5.com/" +
                a +
                "?utm_source=mt5webterminal&utm_campaign=" +
                a +
                ".trading.backlink"
            );
    else {
      "bar" == b && (a.type = "bar");
      "quote" == b && (a.type = "quote");
      "line" == b && (a.type = "line");
      "verticalline" == b && (a.mode = "verticalline");
      "horizontalline" == b && (a.mode = "horizontalline");
      "trendline" == b && (a.mode = "trendline");
      "callout" == b && (a.mode = "callout");
      "fibonacciretracement" == b && (a.mode = "fibonacciretracement");
      "equidistantchannel" == b && (a.mode = "equidistantchannel");
      "scroll" == b && (a.scroll = !oa.s());
      "shift" == b && (a.shift = !ra.s());
      "cursor" == b && (a.mode = b);
      "crosshair" == b && (a.mode = b);
      if ("zoom_in" == b || "zoom_out" == b) {
        var c = a.scale;
        "zoom_in" == b && c++;
        "zoom_out" == b && c--;
        1 > c && (c = 1);
        6 < c && (c = 6);
        a.scale = c;
      }
      c = b.split("_");
      if ("period" == c[0]) {
        var b = B.L.rg,
          c = c[1],
          d;
        "m1" == c && (d = b.Ve);
        "m5" == c && (d = b.Pe);
        "m15" == c && (d = b.Ne);
        "m30" == c && (d = b.Oe);
        "h1" == c && (d = b.Sd);
        "h4" == c && (d = b.pe);
        "d1" == c && (d = b.Ce);
        "w1" == c && (d = b.ze);
        "mn1" == c && (d = b.nh);
        d != a.period && R.xc.tn(a.symbol, d, !0);
      } else
        "fullscreen" == c[0] && ("on" == c[1] && W(Na), "off" == c[1] && Y()),
          T.ra.M("change");
    }
  }
  function I(a, c) {
    var d = a.split("_"),
      e = Q.xa.Db();
    if ("new" == d[0] && "chart" == d[1]) R.xc.tn(d[2], B.L.rg.Sd);
    else {
      if ("file" == d[0]) {
        if ("logout" == d[1]) {
          P.$U.na();
          return;
        }
        if ("login" == d[1]) {
          P.Bb.na().Vj();
          return;
        }
        if ("connect" == d[1]) {
          var f = T.$c.Cu(d[2].split("|||")[0], d[2].split("|||")[1]);
          if (f)
            if (5 == f.version)
              T.$c.Dx(f.ga, f.Pf, function (a) {
                P.Bb.Vj({ ga: f.ga, nf: f.Pf, mf: a }).na(!!f.Li).Um();
              });
            else {
              var g = window.location.href,
                h = N.kq(g);
              h.version = 4;
              h.login = f.ga;
              h.trade_server = f.Pf;
              "no_autologin" == h.startup_mode &&
                ((h.startup_mode = null), delete h.startup_mode);
              h.referrer = Q.bd.Uh();
              Q.bd.Yr(function (a) {
                h.ref = a;
                window.location.href = N.xq(g, h);
              });
            }
          return;
        }
        if ("demo" == d[1]) {
          P.fc.Ps();
          return;
        }
        if ("platform" == d[1] && "4" == d[2]) {
          y();
          return;
        }
        if ("password" == d[1]) {
          P.iu.na();
          return;
        }
      }
      if ("help" == d[0]) {
        if ("mql5" == d[1]) {
          var k = p("en ru zh es de ja pt".split(" "));
          switch (d[2]) {
            case "site":
              G(
                "http://www.mql5.com/" +
                  k +
                  "?utm_source=mt5webterminal&utm_campaign=" +
                  e +
                  ".help.menu"
              );
              return;
            case "docs":
              G(
                "http://www.mql5.com/" +
                  k +
                  "/docs?utm_source=mt5webterminal&utm_campaign=" +
                  e +
                  ".help.menu"
              );
              return;
            case "articles":
              G(
                "http://www.mql5.com/" +
                  k +
                  "/articles?utm_source=mt5webterminal&utm_campaign=" +
                  e +
                  ".help.menu"
              );
              return;
            case "code":
              G(
                "http://www.mql5.com/" +
                  k +
                  "/code?utm_source=mt5webterminal&utm_campaign=" +
                  e +
                  ".help.menu"
              );
              return;
            case "job":
              G(
                "http://www.mql5.com/" +
                  k +
                  "/job?utm_source=mt5webterminal&utm_campaign=" +
                  e +
                  ".help.menu"
              );
              return;
            case "market":
              G(
                "http://www.mql5.com/" +
                  k +
                  "/market?utm_source=mt5webterminal&utm_campaign=" +
                  e +
                  ".help.menu"
              );
              return;
            case "signals":
              G(
                "http://www.mql5.com/" +
                  k +
                  "/signals/mt5?utm_source=mt5webterminal&utm_campaign=" +
                  e +
                  ".help.menu"
              );
              return;
            case "forum":
              G(
                "http://www.mql5.com/" +
                  k +
                  "/forum?utm_source=mt5webterminal&utm_campaign=" +
                  e +
                  ".help.menu"
              );
              return;
            case "vps":
              G(
                "http://www.mql5.com/" +
                  k +
                  "/vps?utm_source=mt5webterminal&utm_campaign=" +
                  e +
                  ".help.menu"
              );
              return;
            default:
              return;
          }
        }
        if ("download" == d[1])
          switch (d[2]) {
            case "desktop":
              G(
                "http://www.metatrader5.com/" +
                  p("en es fr ja pt ru zh".split(" ")) +
                  "?utm_source=mt5webterminal&utm_campaign=" +
                  e +
                  ".help.menu"
              );
              return;
            case "ios":
              G(
                "https://download.mql5.com/cdn/mobile/mt5/ios?hl=" +
                  p("ru es pt zh ar cs fr it de el id jp pl tr".split(" ")) +
                  "&utm_source=mt5webterminal&utm_campaign=" +
                  e +
                  ".help.menu&pt=420190&ct=MetaTrader+5+Terminal"
              );
              return;
            case "android":
              G(
                "https://download.mql5.com/cdn/mobile/mt5/android?hl=" +
                  p("en|ru|es|pt|zh|ar|fr|de|el|id|it|jp|pl|tr|uk").split("|") +
                  "&utm_source=mt5webterminal&utm_campaign=" +
                  e +
                  ".help.menu"
              );
              return;
            default:
              return;
          }
        if ("about" == d[1]) {
          P.pN.na();
          return;
        }
      }
      if ("view" == d[0]) {
        if ("languages" == d[1]) {
          d[2] && (Q.xa.Gb(d[2]), K.view.xa.na());
          return;
        }
        "fullscreen" == d[1] && (c.checked ? Y() : W(Na));
        if ("marketwatch" == d[1] || "toolbox" == d[1]) {
          e = T.B.u("block");
          k = 0;
          "marketwatch" == d[1] && (k = 1);
          "toolbox" == d[1] && (k = 2);
          e = e.Lj(k);
          T.B.u("block", e);
          c.checked = !!(e & k);
          aa.ja(c);
          return;
        }
      }
      if ("options" == d[0] && "oneclick" == d[1])
        c.checked ? (R.H.HB(!1), (P.Go.reject = !0), b()) : P.Go.na();
      else {
        e = T.ra.nd();
        if ("insert" == d[0]) {
          if ("indicators" == d[1]) {
            T.ra.fU(d[2]);
            return;
          }
          "object" == d[1] && ((e.mode = d[2]), T.ra.M("change"));
        }
        if ("charts" == d[0])
          if ("indicators" == d[1]) P.RF.na();
          else {
            if ("objects" == d[1]) {
              if ("list" == d[2]) {
                P.ku.ha().na();
                return;
              }
              if ("remove" == d[2] && "all" == d[3]) {
                T.ra.jJ();
                return;
              }
            }
            if ("period" == d[1]) {
              var l = B.L.rg,
                d = d[2];
              "m1" == d && (k = l.Ve);
              "m5" == d && (k = l.Pe);
              "m15" == d && (k = l.Ne);
              "m30" == d && (k = l.Oe);
              "h1" == d && (k = l.Sd);
              "h4" == d && (k = l.pe);
              "daily" == d && (k = l.Ce);
              "weekly" == d && (k = l.ze);
              "monthly" == d && (k = l.nh);
              k != e.period && R.xc.tn(e.symbol, k, !0);
            } else
              "zoom" == d[1] &&
                ((k = e.scale),
                "in" == d[2] && k++,
                "out" == d[2] && k--,
                1 > k && (k = 1),
                6 < k && (k = 6),
                (e.scale = k)),
                "type" == d[1] && (e.type = d[2]),
                "grid" == d[1] && (e.grid = !e.grid),
                "scroll" == d[1] && (e.scroll = !e.scroll),
                "shift" == d[1] && (e.shift = !e.shift),
                "volumes" == d[1] &&
                  (e.volumes =
                    "tick" == d[2]
                      ? 2 === e.volumes
                        ? 0
                        : 2
                      : 1 === e.volumes
                      ? 0
                      : 1),
                T.ra.M("change");
          }
      }
    }
  }
  function G(a) {
    D.window.open(a, "_blank");
  }
  function F() {
    var a = !!Z();
    wa.h(!a);
    pa.h(a);
    aa.ja({ id: "view_fullscreen", checked: a });
  }
  function y() {
    var a = window.location.href,
      b = N.kq(a);
    b.version = 4;
    b.login && ((b.login = null), delete b.login);
    b.trade_server && ((b.trade_server = null), delete b.trade_server);
    "no_autologin" == b.startup_mode &&
      ((b.startup_mode = null), delete b.startup_mode);
    b.referrer = Q.bd.Uh();
    Q.bd.Yr(function (c) {
      b.ref = c;
      window.location.href = N.xq(a, b);
    });
  }
  function M() {
    Sa.oa();
  }
  var D = E.va,
    L = E.Qa,
    B = E.controls,
    Q = E.ba,
    N = E.ma,
    K = E.V,
    P = K.view,
    T = K.la,
    R = K.control,
    H = Q.xa,
    S = E.Ma,
    Z = D.vS,
    W = D.fS,
    Y = D.MP,
    V = N.bn,
    ea = E.oc.i,
    ha = (E.V.view.rf = {});
  ha.Vo = 32;
  ha.ha = function () {
    T.B.Vb("block", n);
    T.ra.i("change", x);
    T.ra.i("select", x);
    T.Ib.i("change", C);
    Na = D.document.documentElement;
    L.mk
      ? ea(D.document, "mozfullscreenchange", F)
      : (ea(Na, "webkitfullscreenchange", F),
        ea(Na, "msfullscreenchange", F),
        ea(Na, "fullscreenchange", F));
    var c = P.ce.Au;
    S(B.page.ge)
      .b({
        position: "absolute",
        border: w() ? "0 none" : "1px solid #D6D6D6",
        top: 0,
        bottom: 0,
        left: 0,
        right: 0,
      })
      .Uc(D.body);
    aa = S(B.page.Eq)
      .b({ position: "absolute", top: "1px", left: "1px", "z-index": 10001 })
      .i("select", I)
      .Uc(D.body)
      .vc(f());
    ga = S(B.page.Eq)
      .K("bar")
      .K("noname")
      .K("at-new-chart-button")
      .i("select", I);
    S(B.page.Eq).K("bar").K("noname");
    U = g(H.O0, c("symbols"), "symbols").K("at-symbols-button");
    ba = g(H.H0, c("new_order"), "new_order").K("at-new-order-button");
    da = g(H.n0, c("bar"), "bar");
    ca = g(H.o0, c("candlesticks"), "quote");
    ka = g(H.B0, c("line"), "line");
    oa = g(H.J0, c("scroll"), "scroll");
    ra = g(H.M0, c("shift"), "shift");
    na = g(H.r0, c("cursor"), "cursor");
    sa = g(H.q0, c("crosshair"), "crosshair");
    va = g(H.S0, c("zoom_in"), "zoom_in");
    ma = g(H.T0, c("zoom_out"), "zoom_out");
    Ka = g(H.C0, c("m1"), "period_m1").K("at-m1-period");
    xa = g(H.F0, c("m5"), "period_m5").K("at-m5-period");
    Ca = g(H.D0, c("m15"), "period_m15").K("at-m15-period");
    ja = g(H.E0, c("m30"), "period_m30").K("at-m30-period");
    za = g(H.z0, c("h1"), "period_h1").K("at-h1-period");
    Ma = g(H.A0, c("h4"), "period_h4").K("at-h4-period");
    La = g(H.s0, c("d1"), "period_d1").K("at-d-period");
    la = g(H.R0, c("w1"), "period_w1").K("at-w-period");
    Wa = g(H.G0, c("mn1"), "period_mn1").K("at-mn-period");
    Fa = g(H.FK, c("horizontalline"), "horizontalline");
    ia = g(H.IK, c("verticalline"), "verticalline");
    ya = g(H.HK, c("trendline"), "trendline");
    Da = g(H.xK, c("callout"), "callout");
    Ba = g(H.CK, c("fibonacciretracement"), "fibonacciretracement");
    Ia = g(H.AK, c("equidistantchannel"), "equidistantchannel");
    var m = Q.bd.Uh(),
      m = "www.mql5.com" == m || "www.mql5.dev" == m;
    Pa = S(B.input.io)
      .Fe(H.L0)
      .I(H.K0)
      .ie(P.ce.Me("share"))
      .i("click", O)
      .K("share-button")
      .b({ "margin-top": "3px" })
      .h(m);
    Pa.Md = "share";
    Ua = S(B.input.io)
      .Fe(H.Q0)
      .I("MQL5.community")
      .ie(P.ce.Me("visit_mql5"))
      .i("click", O)
      .K("share-button")
      .b({ "margin-top": "3px" })
      .h(!m);
    Ua.Md = "visit_mql5";
    ta = S(B.page.Text)
      .b({ "margin-top": "-29px", "margin-right": "-4px" })
      .Text("")
      .K("account");
    X = S(B.page.ge)
      .b({ position: "absolute", top: "26px", left: "1px", right: "1px" })
      .K("bar")
      .Uc(document.body)
      .c(
        (m = S(B.page.ge)
          .b({ display: "inline-block" })
          .c(ga)
          .c(ba)
          .c(U)
          .c(d()))
      )
      .c(
        (m = S(B.page.ge)
          .b({ display: "inline-block" })
          .c(da)
          .c(ca)
          .c(ka)
          .c(d()))
      )
      .c((m = S(B.page.ge).b({ display: "inline-block" }).c(va).c(ma).c(d())))
      .c((m = S(B.page.ge).b({ display: "inline-block" }).c(oa).c(ra).c(d())))
      .c((m = S(B.page.ge).b({ display: "inline-block" }).c(na).c(sa).c(d())))
      .c(
        (m = S(B.page.ge)
          .b({ display: "inline-block" })
          .c(ia)
          .c(Fa)
          .c(ya)
          .c(Da)
          .c(Ba)
          .c(Ia)
          .c(d()))
      )
      .c(
        (m = S(B.page.ge)
          .b({ display: "inline-block" })
          .c(Ka)
          .c(xa)
          .c(Ca)
          .c(ja)
          .c(za)
          .c(Ma)
          .c(La)
          .c(la)
          .c(Wa))
      )
      .c(
        S(B.page.ge).b({ display: "inline-block", float: "right" }).c(Pa).c(Ua)
      );
    L.LE &&
      L.rE &&
      ((wa = g(H.x0, c("fullscreen_on"), "fullscreen_on")),
      (pa = g(H.w0, c("fullscreen_off"), "fullscreen_off")),
      m.c(d()).c(wa).c(pa),
      F());
    X.c(ta);
    var m = { position: "absolute", bottom: "10px", width: "80px" },
      c = S(B.input.Ua)
        .Text(H.yH)
        .b(m)
        .b({ right: "50%", "margin-right": "3px", width: "100px" })
        .i("click", y),
      m = S(B.input.Ua)
        .Text(H.gB)
        .b(m)
        .b({ left: "50%", "margin-left": "3px", width: "100px" })
        .i("click", M),
      p = S(B.page.Text).Text(H.U0).b({ textAlign: "center", margin: "14px" });
    Sa = S(B.page.Window, { title: H.V0, width: 460, height: 130, Qk: !0 })
      .i("close", M)
      .Uc(D.body)
      .c(p)
      .c(c)
      .c(m)
      .oa();
    k();
    h();
    b();
    e();
    a();
    r();
    l();
    v();
  };
  ha.Dd = function () {
    k();
    r();
    l();
    v();
    b();
  };
  ha.Bea = v;
  ha.an = function () {
    return parseInt(X.Gf().offsetHeight, 10);
  };
  var fa = {},
    aa,
    X,
    ga,
    U,
    ba,
    da,
    ca,
    ka,
    oa,
    ra,
    na,
    sa,
    va,
    ma,
    Fa,
    ia,
    ya,
    Da,
    Ba,
    Ia,
    Ka,
    xa,
    Ca,
    ja,
    za,
    Ma,
    La,
    la,
    Wa,
    wa,
    pa,
    Pa,
    Ua,
    ta,
    Na,
    Sa;
})();
(function () {
  function v(a) {
    q && q.Db(a);
    if (w)
      for (var b = 0, c = w.length, d, e, f; b < c; b++)
        if ((d = w[b]))
          (e = d.Em),
            (f = d.BE),
            e && e.h(d.id == a),
            f && d.id == a && u && u.Wj(f);
  }
  function r() {
    (c.B.u("block") || 0).ki(2) ? (u.h(!0), q.h(!0)) : (u.h(!1), q.h(!1));
  }
  function l() {
    var a = z.Bi.E2() - 24,
      b = 27;
    46 > a && ((a = 46), (b = z.Bi.Dq() - a - 3), u.b("bottom", b));
    u.b({ height: a + "px", bottom: b + "px" });
    q.b({ bottom: b - 20 + "px" });
  }
  function e(a) {
    v(a);
  }
  function k() {
    r();
    l();
  }
  function h() {
    l();
  }
  function b() {
    l();
  }
  var a = E.va,
    g = E.controls,
    d = E.oc,
    f = E.V,
    c = f.la,
    z = f.view,
    A = E.Ma,
    m = (z.Jh = {});
  m.ha = function () {
    c.B.Vb("block", k, 0);
    c.B.Vb("toolbox_height", h, 0);
    u ||
      (u = A(g.page.ge)
        .b({ overflow: "hidden" })
        .K("frame")
        .K("bottom")
        .Uc(a.body));
    q ||
      (q = A(g.page.bt)
        .K("bottom")
        .K("lower")
        .K("frame")
        .K("toolbox")
        .Uc(a.body)
        .i("select", e));
    r();
    d.i(a.window, "resize", b);
  };
  m.Uc = function (a, b, c, d, e, f) {
    if (w) {
      for (var g = 0, h = w.length; g < h; g++)
        if ((k = w[g]) && k.id == a) return m;
      var k = {};
      k.id = a;
      k.label = b;
      k.title = c || "";
      k.Em = d;
      k.BE = e;
      f ? w.splice(0, 0, k) : w.push(k);
      if (u)
        for (b = 0, c = w.length; b < c; b++)
          (d = w[b]) && (d = d.Em) && u.c(d);
      q && q.vc(w);
      v(a);
    }
    return m;
  };
  m.Gb = v;
  m.De = function () {
    return !u || !u.h();
  };
  m.jo = function () {
    return q ? parseInt(q.b("bottom"), 10) : 0;
  };
  var u,
    q,
    w = [];
})();
(function () {
  function v() {
    var a = 0;
    if (u.B.u("block") & 1) {
      var b = u.B.u("symbols_table_columns"),
        a = 250;
      b & m.Ts.ln && (a += 60);
      b & m.Ts.cn && (a += 120);
      b & m.Ts.br && (a += 60);
      b & m.Ts.Os && (a += 40);
      b & m.Ts.Vq && (a += 80);
    }
    return a;
  }
  function r(a) {
    if (I)
      for (var b = 0, c = I.length, d, e, f; b < c; b++)
        if ((d = I[b]))
          (e = d.Em),
            (f = d.BE),
            e && e.h(d.id == a),
            f && d.id == a && C && C.Wj(f);
  }
  function l() {
    u.B.u("block") & 1
      ? (x.Le(!!u.B.u("market_watch_config")), x.na(!0))
      : x.oa();
  }
  function e() {
    var a, b, c, d;
    x.Le()
      ? ((a = m.Bi.aV),
        (b = m.rf.Vo + m.rf.an()),
        (c = m.Bi.Dq()),
        (d = m.Bi.wB() - 2),
        x.Aq(a).$o(b).jo(c).Nv(d).$l("").b("z-index", "9000"),
        O.b({ left: "-1px", right: "-1px", bottom: "-1px" }))
      : ((a = u.B.u("market_watch_window_left")),
        (b = u.B.u("market_watch_window_top")),
        (c = window.innerHeight - 200),
        x.Nv(v() + 10),
        x.$l(c).b("z-index", "14999"),
        void 0 !== a && void 0 !== b ? x.$o(b).Aq(a).jo("") : x.bI(),
        O.b({ left: "0", right: "0", bottom: "0" }));
  }
  function k(a) {
    r(a);
    u.Ib.xv(a);
  }
  function h() {
    l();
  }
  function b() {
    e();
  }
  function a() {
    x && x.Le() && x.$o(m.rf.Vo + m.rf.an()).jo(m.Bi.Dq());
  }
  function g() {
    var a = u.B.u("block"),
      a = a.Lj(1);
    u.B.u("block", a);
  }
  function d() {
    x &&
      !x.Le() &&
      (u.B.u("market_watch_window_left", x.Aq()),
      u.B.u("market_watch_window_top", x.$o()));
  }
  function f() {
    u.B.u("market_watch_config", Number(!u.B.u("market_watch_config")));
    u.B.oj("block");
  }
  var c = E.va,
    z = E.controls,
    A = E.V,
    m = A.view,
    u = A.la,
    q = E.oc.i,
    w = E.ba.xa,
    p = E.Ma,
    n = (E.V.view.Ib = {});
  n.ha = function () {
    u.B.Vb("block market_watch_config", h);
    u.B.Vb("block symbols_table_columns toolbox_height market_watch_width", b);
    q(c.window, "resize", a);
    C = p(z.page.ge).b({
      position: "absolute",
      left: "0",
      right: "0",
      top: "0",
      bottom: "24px",
      background: "#ffffff",
    });
    O = p(z.page.bt)
      .K("lower")
      .b({
        position: "absolute",
        left: "0",
        right: "0",
        bottom: "0",
        background: "#F0F0F0",
        "border-bottom": "3px solid #f0f0f0",
      })
      .i("select", k);
    x = p(z.page.Window, { title: w.cv, Qk: !1 })
      .b({ "z-index": "14999" })
      .Uc(c.body)
      .c(C)
      .c(O)
      .K("market-watch")
      .i("close", g)
      .i("move", d)
      .i("doubleclick", f)
      .oa();
    l();
    e();
    setTimeout(function () {
      a();
    }, 0);
    return n;
  };
  n.Uc = function (a, b, c, d, e, f) {
    if (I) {
      var g = {};
      g.id = a;
      g.label = b;
      g.title = c || "";
      g.Em = d;
      g.BE = e;
      isNaN(parseInt(f, 10)) ? I.push(g) : I.splice(f, 0, g);
      if (C && I)
        for (b = 0, c = I.length; b < c; b++)
          (d = I[b]) && (d = d.Em) && C.c(d);
      O && O.vc(I);
      r(a);
    }
    return n;
  };
  n.xv = function (a) {
    O && O.Db(a);
    r(a);
    return n;
  };
  n.rG = v;
  n.Le = function () {
    return x && x.Le();
  };
  n.E_ = function (a) {
    if (a > G && ((G = a), x)) {
      if (G) {
        a = new Date(G);
        var b;
        b = "" + a.getUTCHours().Gr();
        b = b + ":" + a.getUTCMinutes().Gr();
        b += ":";
        a = b += a.getUTCSeconds().Gr();
      } else a = "00:00:00";
      x.Fe(w.cv + ": " + a);
    }
  };
  n.De = function () {
    return !x || x.De();
  };
  n.Oa = function () {
    G = 0;
    x && x.Fe(w.cv);
    return n;
  };
  var x,
    C,
    O,
    I = [],
    G = 0;
})();
(function () {
  function v() {
    var a = Z.B.u("symbols_table_columns");
    ba.ja({ id: "column_last", checked: a & fa.ln });
    ba.ja({ id: "column_volume", checked: a & fa.br });
    ba.ja({ id: "column_spread", checked: a & fa.Os });
    ba.ja({ id: "column_time", checked: a & fa.Vq });
    ba.ja({ id: "column_hl", checked: a & fa.cn });
    a = Z.B.u("symbols_table_config");
    ba.ja({ id: "config_milliseconds", checked: a & aa.wj });
    ba.ja({ id: "config_grid", checked: a & aa.Xj });
    ba.ja({
      id: "config_arrange",
      checked: a & aa.Rf || !S.Ib.Le(),
      disabled: !S.Ib.Le(),
    });
  }
  function r() {
    if (ba && U) {
      var a = S.ce.Me,
        b = U.Db();
      b == z().id && (b = null);
      var c = Z.Ib.Vg(),
        d;
      d = !b || !W.O.fx(b);
      ba.ja({ id: "hide", disabled: d });
      d = !Z.O.ri().length;
      ba.ja({ id: "hide_all", disabled: d });
      ba.ja({ id: "show_all", disabled: d });
      ba.ja({ id: "symbols", disabled: d, icon: S.ce.Me("symbols", d) });
      d = !b;
      ba.ja({ id: "chart", disabled: d, icon: a("new_chart", d) });
      ba.ja({ id: "spec", disabled: d, icon: a("specification", d) });
      d = Z.O.Ka(b);
      ba.ja({
        id: "depth",
        checked: b && W.fd && W.fd.bk(b),
        visible: !(d && !d.hs()),
        icon: a("depth_of_market"),
      });
      d = b ? !W.P.Il(b) : !W.P.ih() || !c || !c.length;
      ba.ja({ id: "order", disabled: d, icon: S.ce.Me("new_order", d) });
    }
  }
  function l() {
    U && U.W();
  }
  function e() {
    var a = U.Ed,
      b = Z.B.u("symbols_table_columns"),
      c = !S.Ib.Le() || !!(Z.B.u("symbols_table_config") & aa.Rf),
      d = S.Bi.wB() - 21;
    S.Ib.Le() || (d = S.Ib.rG() - 24);
    var e,
      f,
      g = 2;
    e = 40;
    b & fa.ln && g++;
    b & fa.cn && (g += 2);
    b & fa.br && g++;
    b & fa.Vq && g++;
    2 < g && (e = 30);
    3 < g && (e = 25);
    a[0].width = Math.floor((e * d) / 100) + "px";
    e = 100 - e;
    f = 0 + parseInt(a[0].width, 10);
    b & fa.Os &&
      ((a[7].width = Math.floor((10 * d) / 100) + "px"),
      (e -= 10),
      (f += parseInt(a[7].width, 10) + 1));
    b & fa.Vq &&
      ((a[8].width = Math.floor((18 * d) / 100) + "px"),
      (e -= 18),
      (f += parseInt(a[8].width, 10) + 1),
      g--);
    e = Math.round(e / g);
    a[1].width = Math.floor((e * d) / 100) + "px";
    a[2].width = Math.floor((e * d) / 100) + "px";
    f += parseInt(a[1].width, 10) + 1;
    f += parseInt(a[2].width, 10) + 1;
    b & fa.ln &&
      ((a[3].width = Math.floor((e * d) / 100) + "px"),
      (f += parseInt(a[3].width, 10) + 1));
    b & fa.cn &&
      ((a[4].width = Math.floor((e * d) / 100) + "px"),
      (f += parseInt(a[4].width, 10) + 1),
      (a[5].width = Math.floor((e * d) / 100) + "px"),
      (f += parseInt(a[5].width, 10) + 1));
    b & fa.br &&
      ((a[6].width = Math.floor((e * d) / 100) + "px"),
      (f += parseInt(a[6].width, 10) + 1));
    f > d && (a[0].width = parseInt(a[0].width, 10) - (f - d) + "px");
    if (!c)
      for (b = 0; b < a.length; b++)
        if ((c = a[b]))
          if ((d = Z.B.u("symbols_table_" + c.id + "_width") || void 0))
            c.width = d + "px";
  }
  function k() {
    var a = U.Ed;
    a && (a = a[6]) && (a.Gj = Z.B.u("symbols_table_config") & aa.wj ? 1 : 0);
  }
  function h() {
    for (
      var a = Z.B.u("symbols_table_columns"), b, c = 0, d = ga.length;
      c < d;
      c++
    )
      (b = ga[c]) && void 0 !== b[4] && (b[4] & a ? U.Og(c) : U.Jg(c));
  }
  function b() {
    var a = U.Db();
    if (a) {
      var b = Z.Ib.Vg();
      if (b) {
        var c = b.indexOf(a);
        W.O.pl(a);
        b = Z.Ib.Vg();
        (a = b[c]) || (a = b[c - 1]);
        U.Db(a);
        q(a);
      }
    }
  }
  function a(a) {
    var b = H.data.js,
      c = H.data.Zo;
    if (!a) return null;
    var d = Z.O.Ka(a.l);
    if (!d) return null;
    var e = [],
      h = a.j || 0;
    e.push(g(a.l, a.cf && a.cf(b.Xl), 0, !0));
    e[0].uh = a.l;
    e.push(g(a.Ye || "", a.cf && a.cf(b.fn), h));
    e.push(g(a.Xe || "", a.cf && a.cf(b.dn), h));
    e.push(g(a.Nf || "", a.cf && a.cf(b.Xl), h));
    d.bo === H.data.yn.ix
      ? (e.push(g(a.xl || "", a.cf && a.cf(b.Su), h)),
        e.push(g(a.yl || "", a.cf && a.cf(b.Tu), h)))
      : d.bo === H.data.yn.gu
      ? (e.push(g(a.tr || "", a.cf && a.cf(b.Uu), h)),
        e.push(g(a.ur || "", a.cf && a.cf(b.Vu), h)))
      : (e.push(g("", 0, h)), e.push(g("", 0, h)));
    e.push(g(a.kj && !a.kj.ab() ? S.F.Ea(a.kj, !0) : "", a.cf && a.cf(b.gs)));
    e.push(g(a.Xe && a.Ye ? (a.Xe - a.Ye) * Math.pow(10, h) : "", c.Nl, 0));
    b = g("", a.cf && a.cf(b.Xl));
    b.content = f(a.hj || 0);
    b.kf = f(a.hj || 0, !0);
    e.push(b);
    b = {};
    b.cells = e;
    b.id = a.l;
    d.bM && (b.backgroundColor = d.bM);
    !1 === d.hl() ? (b.className = "notrade") : (b.$L = "notrade");
    d
      ? ((a = ""),
        (a = d.yf ? a + d.yf : a + d.l),
        d.rM && (a += "\n" + d.rM),
        d.A && d.A.Rh >= H.data.Yi.$q && (a += "\n" + Y.xJ + ": " + X.sG(d.Zd)),
        (d = a += "\n" + Y.uv + ": " + X.Fx(d.A && d.A.Rh)))
      : (d = "");
    b.title = d;
    return b;
  }
  function g(a, b, c, d) {
    var e = H.data.Zo,
      f = {},
      g = "";
    b == e.Ol && (g = "up");
    b == e.Ml && (g = "down");
    f.className = g;
    "number" == typeof a
      ? (isNaN(parseInt(c, 10)) || (a = a.toFixed(c)), (f.content = a))
      : (d
          ? ((f.className = "symbol"),
            (a = ['<span class="i ', g, '">&nbsp;</span>', ea(a)].join("")))
          : (a = ea(a)),
        (f.content = a || ""));
    return f;
  }
  function d() {
    for (var a = [], b, c, d = 0, e = ga.length; d < e; d++)
      if ((c = ga[d]))
        (b = {}),
          (b.id = c[0]),
          (b.content = c[1]),
          (b.Qm = !1),
          c[2] && (b.align = c[2]),
          c[3] && (b.width = c[3]),
          c[4] && (b.visible = !1),
          a.push(b);
    return { ej: a, Dw: !0 };
  }
  function f(a, b) {
    if (!a) return b ? "00:00:00.000" : "00:00:00";
    var c = new Date(a),
      d;
    d = "" + c.getUTCHours().Gr();
    d = d + ":" + c.getUTCMinutes().Gr();
    d += ":";
    d += c.getUTCSeconds().Gr();
    b &&
      ((c = c.getMilliseconds()),
      10 > c ? (c = "00" + c) : 100 > c && (c = "0" + c),
      (d += "."),
      (d += c));
    return d;
  }
  function c() {
    var a = [];
    a.push(ha("order", Y.TJ));
    a.push(ha("chart", Y.wJ));
    a.push(ha("spec", Y.UJ));
    a.push(ha("depth", Y.vv));
    a.push("-");
    a.push(ha("hide", Y.q_, "", !0));
    a.push(ha("hide_all", Y.r_));
    a.push(ha("show_all", Y.v_));
    a.push(ha("symbols", Y.w_, S.ce.Me("symbols")));
    a.push("-");
    a.push(ha("config_milliseconds", Y.oD));
    a.push(ha("config_arrange", Y.BD));
    a.push("-");
    a.push(
      ha("columns", Y.PY, "", "", "", "", [
        ha("column_last", Y.QJ),
        ha("column_hl", Y.PJ + "/" + Y.RJ),
        ha("column_volume", Y.XJ),
        ha("column_spread", Y.VJ),
        ha("column_time", Y.WJ),
      ])
    );
    return a;
  }
  function z() {
    var a = {
        id: "__total__",
        nk: !1,
        draggable: !1,
        className: "add",
        cells: [
          { content: "&nbsp;", className: "symbol", colSpan: 9 },
          { content: "&nbsp;" },
          { content: "&nbsp;" },
          { content: "&nbsp;" },
          { content: "&nbsp;" },
          { content: "&nbsp;" },
          { content: "&nbsp;" },
        ],
      },
      b = Z.Ib.Vg(),
      b = (b && b.length) || 0,
      c = Z.O.ri(),
      c = (c && c.length) || 0;
    a.cells[0].content = [
      '<span class="count">',
      b,
      " / ",
      c,
      '</span><span class="i plus"></span>',
      Y.MY,
    ].join("");
    return a;
  }
  function A() {
    for (
      var a = [],
        b = new Date().getTime(),
        c = Z.O.ri(),
        d,
        e,
        f = 0,
        g = c.length;
      f < g;
      f++
    )
      !(d = c[f]) ||
        (d.$b && d.$b < b) ||
        ((e = d.l), d.yf && (e += ", " + d.yf), a.push(e));
    return a;
  }
  function m(a, c) {
    var d = a.split("_"),
      e = U.Db();
    e == z().id && (e = null);
    var f;
    if ("order" == a) e ? S.Jb.na(e) : S.Jb.na();
    else if ("chart" == a) W.xc.tn(e, K.L.rg.Sd);
    else if ("spec" == a) S.Ss.sD(e);
    else if ("depth" == a) c.checked ? S.fd.oa() : S.fd.na(e);
    else if ("symbols" == a) S.Ss.ha().na();
    else if ("hide" == a) b();
    else if ("hide_all" == a) W.O.K2();
    else if ("show_all" == a) W.O.Q_();
    else {
      if ("column" == d[0]) {
        e = 0;
        switch (d[1]) {
          case "last":
            e = fa.ln;
            break;
          case "volume":
            e = fa.br;
            break;
          case "spread":
            e = fa.Os;
            break;
          case "time":
            e = fa.Vq;
            break;
          case "hl":
            e = fa.cn;
        }
        f = Z.B.u("symbols_table_columns");
        f = f.Lj(e);
        "hl" === d[1] && f.ki(fa.cn) && !f.ki(fa.ln) && (f = f.Lj(fa.ln));
        Z.B.u("symbols_table_columns", f);
      }
      if ("config" == d[0]) {
        e = 0;
        switch (d[1]) {
          case "grid":
            e = aa.Xj;
            break;
          case "milliseconds":
            e = aa.wj;
            break;
          case "arrange":
            e = aa.Rf;
        }
        f = Z.B.u("symbols_table_config");
        f = f.Lj(e);
        Z.B.u("symbols_table_config", f);
        if ("arrange" == d[1] && f.ki(aa.Rf) && (d = U.Ed)) {
          f = 0;
          for (var g = d.length; f < g; f++)
            (e = d[f]) && Z.B.u("symbols_table_" + e.id + "_width", 0);
        }
      }
    }
  }
  function u() {
    U && U.h() && U.W();
  }
  function q(a) {
    if (a == z().id) {
      a = Z.O.ri();
      if (!a || !a.length) return;
      setTimeout(function () {
        da.f("").jb();
      });
      return !1;
    }
    r();
    a && S.nj.Gb(a);
  }
  function w(a, b) {
    Z.Ib.HW(a, b);
  }
  function p(a) {
    W.P.Il(a) && S.Jb.na(a);
  }
  function n(a) {
    a && 46 == a.keyCode && b();
  }
  function x() {
    if (S.Ib.Le()) {
      var a = U.Ed,
        b;
      if (a) {
        for (var c = 0, d = a.length; c < d; c++)
          (b = a[c]) &&
            b.id &&
            Z.B.u("symbols_table_" + b.id + "_width", parseInt(b.width, 10));
        a = Z.B.u("symbols_table_config");
        a.ki(aa.Rf) &&
          ((a = a.Mh(aa.Rf, !1)), Z.B.u("symbols_table_config", a));
      }
    } else e(), l();
  }
  function C() {
    da && da.Up();
  }
  function O(b, c) {
    U.Zg(a(c));
    S.Ib.E_(c.hj);
  }
  function I(a) {
    v();
    "symbols_table_columns" == a && h();
    "symbols_table_config" === a && k();
    e();
    l();
  }
  function G() {
    v();
    e();
    l();
  }
  function F(a) {
    ("block" != a && "market_watch_width" != a) || e();
    l();
  }
  function y() {
    da.vL = !0;
    da.Up();
  }
  function M() {
    var a = U.Gf();
    a && (a = T.gq(a, "tr", "add")[0]) && da.b({ top: a.offsetTop + "px" });
  }
  function D() {
    da.b({ top: "-10000px" });
    da.vL ? (da.vL = null) : B();
  }
  function L(a) {
    if (a) {
      var b = a.split(",");
      if (b)
        for (var c = 0, d = b.length; c < d; c++)
          if ((a = b[c]) && Z.O.Ka(a.trim())) return a;
    }
  }
  function B() {
    var a = da.f();
    if (a) {
      var b = a.split(",");
      if (b)
        for (var c = 0, d = b.length; c < d; c++)
          if ((a = b[c]))
            if ((a = Z.O.Ka(a.trim()))) {
              da.f("").Up();
              W.O.Xi(a.l);
              U.Db(a.l).jb();
              S.nj.Gb(a.l);
              return;
            }
    }
    da.f("").Up();
  }
  function Q(a) {
    a && 13 == a.keyCode && B();
  }
  function N() {
    l();
  }
  var K = E.controls,
    P = E.ma,
    T = E.va,
    R = E.oc,
    H = E.V,
    S = H.view,
    Z = H.la,
    W = H.control,
    Y = E.ba.xa,
    V = E.Ma,
    ea = P.Kc,
    ha = P.bn,
    fa = (H.view.Ts = {});
  fa.ln = 1;
  fa.br = 2;
  fa.Os = 4;
  fa.Vq = 8;
  fa.cn = 32;
  var aa = (H.view.gK = {});
  aa.Xj = 1;
  aa.wj = 2;
  aa.Rf = 4;
  var X = (S.O = {});
  X.ha = function () {
    Z.B.Vb("symbols_table_columns", I);
    Z.B.Vb("symbols_table_config", I);
    Z.B.Vb("block market_watch_width toolbox_height", F);
    Z.B.Vb("market_watch_config", G);
    R.i(T.window, "resize", N);
    U = V(K.page.no, d())
      .K("fixed grid symbols-table no-border")
      .b({
        position: "absolute",
        left: "0",
        right: "0",
        top: "0",
        bottom: "0",
      })
      .vc([z()])
      .i("select", q)
      .i("move", w)
      .i("doubleclick", p)
      .i("keydown", n)
      .i("scroll", C)
      .i("resize", x);
    ba = V(K.page.Wj).vc(c()).i("select", m);
    da = V(K.input.Text)
      .K("symbols")
      .zx()
      .gx()
      .y2()
      .i("focus", M)
      .i("blur", D)
      .i("autocomplete", L)
      .i("select", B)
      .i("keydown", Q)
      .i("escape", y);
    var a = V(K.page.ge)
      .b({ position: "absolute", left: "0", right: "0", top: "0", bottom: "0" })
      .c(U)
      .c(da)
      .i("show", u);
    S.Ib.Uc("symbols", Y.u_, "", a, ba);
    k();
    h();
    h();
    v();
    r();
    return X;
  };
  X.na = function (b, c) {
    if (!b) return X;
    U && U.ex(a(b), -1, !0 === c);
    ca[b.l] = !0;
    Z.wa.tg(b.l, O);
    if (!0 === c) return X;
    r();
    U.Zg(z());
    return X;
  };
  X.oa = function (a, b) {
    U && U.kJ(a, !0 === b);
    ca[a] = null;
    delete ca[a];
    Z.wa.xe(a, O);
    if (!0 === b) return X;
    U.Zg(z());
    return X;
  };
  X.LD = function () {
    if (!U) return X;
    var b, c;
    for (c in ca)
      ca.hasOwnProperty(c) &&
        (b = Z.O.Ka(c)) &&
        (U.Zg(a(b), !0), (b = Z.wa.u(c)) && U.Zg(a(b), !0));
    return X;
  };
  X.Dd = function () {
    l();
    U.Zg(z());
    r();
    da && da.u(A());
  };
  var ga = [
      ["symbol", Y.x_, "", ""],
      ["bid", Y.OY, "right", ""],
      ["ask", Y.NY, "right", ""],
      ["last", Y.QJ, "right", "", fa.ln],
      ["high", Y.PJ, "right", "", fa.cn],
      ["low", Y.RJ, "right", "", fa.cn],
      ["volume", Y.XJ, "right", "", fa.br],
      ["spread", "!", "right", "", fa.Os],
      ["time", Y.WJ, "right", "", fa.Vq],
    ],
    U,
    ba,
    da,
    ca = {};
})();
(function () {
  function v(a, b) {
    if (void 0 === b || void 0 === a || !a.length) return "";
    var c = (a || []).find(function (a) {
      return a[0] === b;
    });
    return (c && c[1]) || "";
  }
  var r = window.J,
    l = r.V,
    e = r.ba.xa,
    k = l.data.S_,
    h = [
      [l.data.Pc.Ei, "Forex"],
      [l.data.Pc.Xo, "Futures"],
      [l.data.Pc.Xs, "CFD"],
      [l.data.Pc.Ys, "CFD Index"],
      [l.data.Pc.Zs, "CFD Leverage"],
      [l.data.Pc.Wo, "Forex No Leverage"],
      [l.data.Pc.nl, "Exchange Stocks"],
      [l.data.Pc.Bn, "Exchange Futures"],
      [l.data.Pc.Gk, "FORTS Futures"],
      [l.data.Pc.Hk, "Exchange Option"],
      [l.data.Pc.Cn, "Exchange Margin Option"],
      [l.data.Pc.ek, "Exchange Bonds"],
      [l.data.Pc.ol, "Exchange MOEX Stocks"],
      [l.data.Pc.fk, "Exchange MOEX Bonds"],
      [l.data.Pc.Dn, "Collateral"],
    ],
    b = [
      [l.data.Yi.$q, e.n_],
      [l.data.Yi.OK, e.m_],
      [l.data.Yi.Fv, e.o_],
      [l.data.Yi.CD, e.k_],
      [l.data.Yi.Ev, e.l_],
    ],
    a = [
      [l.data.qm.iB, "Market buy"],
      [l.data.qm.mB, "Market sell"],
      [l.data.qm.jB, "Buy limit"],
      [l.data.qm.nB, "Sell limit"],
      [l.data.qm.kB, "Buy stop"],
      [l.data.qm.oB, "Sell stop"],
      [l.data.qm.lB, "Buy stop limit"],
      [l.data.qm.pB, "Sell stop limit"],
    ],
    g = [
      [l.data.Tf.Sl, e.dZ],
      [l.data.Tf.bl, e.bZ],
      [l.data.Tf.wk, e.cZ],
      [l.data.Tf.Eg, "Exchange"],
    ],
    d = [
      [l.data.uD.NW, e.jZ],
      [l.data.uD.LW, e.kZ],
      [l.data.uD.MW, e.lZ],
    ],
    f = [
      [l.data.Fk.IY, e.ZZ],
      [l.data.Fk.uJ, ""],
      [l.data.Fk.tJ, ""],
      [l.data.Fk.FY, ""],
      [l.data.Fk.GY, e.XZ],
      [l.data.Fk.HY, e.YZ],
      [l.data.Fk.LY, e.b_],
      [l.data.Fk.KY, e.a_],
    ],
    c = [
      [l.data.Ci.hG, e.hZ],
      [l.data.Ci.yx, e.gZ],
      [l.data.Ci.cl, e.hD],
      [l.data.Ci.dl, e.iD],
    ],
    z = [
      [l.data.ai.An, e.kD],
      [l.data.ai.zn, e.nD],
      [l.data.ai.Wq, e.lD],
      [l.data.ai.Xq, e.mD],
    ],
    A = [
      [l.data.dd.Gq, "Market"],
      [l.data.dd.zo, "Limit"],
      [l.data.dd.Ao, "Stop"],
      [l.data.dd.ws, "Stop Limit"],
      [l.data.dd.Lg, "Stop Loss"],
      [l.data.dd.Mg, "Take Profit"],
    ],
    m = [
      [0, e.FJ],
      [1, e.HJ],
      [2, e.FJ],
      [3, e.HJ],
    ],
    u = [
      [0, e.GJ],
      [1, e.GJ],
      [2, e.EJ],
      [3, e.EJ],
    ],
    q = [
      [l.data.yn.ix, "By bid price"],
      [l.data.yn.gu, "By last price"],
      [l.data.yn.jx, "By default"],
    ],
    w = [
      [l.data.$h.dD, e.dD],
      [l.data.$h.RC, e.RC],
      [l.data.$h.SC, e.SC],
      [l.data.$h.TC, e.TC],
      [l.data.$h.UC, e.UC],
      [l.data.$h.XC, e.XC],
      [l.data.$h.YC, e.YC],
      [l.data.$h.ZC, e.ZC],
      [l.data.$h.aD, e.aD],
      [l.data.$h.bD, e.bD],
      [l.data.$h.cD, e.cD],
      [l.data.$h.eD, e.eD],
      [l.data.$h.VC, e.VC],
      [l.data.$h.WC, e.WC],
      [l.data.$h.$C, e.$C],
      [l.data.$h.nJ, e.cca],
    ],
    p = [
      [k.hy, e.hy],
      [k.ky, e.ky],
      [k.yy, e.yy],
      [k.Cy, e.Cy],
      [k.Gy, e.Gy],
      [k.Ry, e.Ry],
      [k.oz, e.oz],
      [k.Jz, e.Jz],
      [k.wz, e.wz],
      [k.dA, e.dA],
      [k.$z, e.$z],
      [k.CA, e.CA],
      [k.IA, e.IA],
      [k.KA, e.KA],
      [k.fy, e.fy],
      [k.xy, e.xy],
      [k.nz, e.nz],
      [k.cz, e.cz],
      [k.Ez, e.Ez],
      [k.eA, e.eA],
      [k.MA, e.MA],
      [k.ly, e.ly],
      [k.my, e.my],
      [k.py, e.py],
      [k.qy, e.qy],
      [k.oy, e.oy],
      [k.Ty, e.Ty],
      [k.jz, e.jz],
      [k.lz, e.lz],
      [k.mz, e.mz],
      [k.sz, e.sz],
      [k.Fz, e.Fz],
      [k.Hz, e.Hz],
      [k.Iz, e.Iz],
      [k.Kz, e.Kz],
      [k.Zz, e.Zz],
      [k.aA, e.aA],
      [k.jA, e.jA],
      [k.uA, e.uA],
      [k.vA, e.vA],
      [k.wA, e.wA],
      [k.JA, e.JA],
      [k.NA, e.NA],
      [k.RA, e.RA],
      [k.ty, e.ty],
      [k.uy, e.uy],
      [k.vy, e.vy],
      [k.Ny, e.Ny],
      [k.Vy, e.Vy],
      [k.Yy, e.Yy],
      [k.fz, e.fz],
      [k.iz, e.iz],
      [k.pz, e.pz],
      [k.uz, e.uz],
      [k.Yz, e.Yz],
      [k.PA, e.PA],
      [k.Sz, e.Sz],
      [k.Tz, e.Tz],
      [k.Uz, e.Uz],
      [k.Vz, e.Vz],
      [k.Wz, e.Wz],
      [k.Xz, e.Xz],
      [k.OA, e.OA],
      [k.TA, e.TA],
      [k.dz, e.dz],
      [k.ny, e.ny],
      [k.ry, e.ry],
      [k.sy, e.sy],
      [k.By, e.By],
      [k.Dy, e.Dy],
      [k.Ey, e.Ey],
      [k.Fy, e.Fy],
      [k.Sy, e.Sy],
      [k.gz, e.gz],
      [k.hz, e.hz],
      [k.yz, e.yz],
      [k.zz, e.zz],
      [k.Az, e.Az],
      [k.Bz, e.Bz],
      [k.Cz, e.Cz],
      [k.Dz, e.Dz],
      [k.Rz, e.Rz],
      [k.BA, e.BA],
      [k.wy, e.wy],
      [k.Uy, e.Uy],
      [k.Wy, e.Wy],
      [k.Xy, e.Xy],
      [k.qz, e.qz],
      [k.rz, e.rz],
      [k.Oz, e.Oz],
      [k.Mz, e.Mz],
      [k.Nz, e.Nz],
      [k.Pz, e.Pz],
      [k.bA, e.bA],
      [k.gy, e.gy],
      [k.iy, e.iy],
      [k.jy, e.jy],
      [k.zy, e.zy],
      [k.Ay, e.Ay],
      [k.Oy, e.Oy],
      [k.Py, e.Py],
      [k.Zy, e.Zy],
      [k.bz, e.bz],
      [k.ez, e.ez],
      [k.vz, e.vz],
      [k.xz, e.xz],
      [k.kz, e.kz],
      [k.Lz, e.Lz],
      [k.Qz, e.Qz],
      [k.cA, e.cA],
      [k.fA, e.fA],
      [k.tA, e.tA],
      [k.yA, e.yA],
      [k.GA, e.GA],
      [k.HA, e.HA],
      [k.LA, e.LA],
      [k.QA, e.QA],
      [k.SA, e.SA],
      [k.$A, e.$A],
      [k.gA, e.gA],
      [k.hA, e.hA],
      [k.iA, e.iA],
      [k.kA, e.kA],
      [k.lA, e.lA],
      [k.mA, e.mA],
      [k.nA, e.nA],
      [k.oA, e.oA],
      [k.pA, e.pA],
      [k.qA, e.qA],
      [k.rA, e.rA],
      [k.sA, e.sA],
      [k.Ly, e.Ly],
      [k.My, e.My],
      [k.Qy, e.Qy],
      [k.$y, e.$y],
      [k.az, e.az],
      [k.Gz, e.Gz],
      [k.xA, e.xA],
      [k.AA, e.AA],
      [k.zA, e.zA],
      [k.DA, e.DA],
      [k.EA, e.EA],
      [k.FA, e.FA],
      [k.UA, e.UA],
      [k.VA, e.VA],
      [k.ZA, e.ZA],
      [k.WA, e.WA],
      [k.XA, e.XA],
      [k.YA, e.YA],
      [k.Hy, e.Hy],
      [k.Iy, e.Iy],
      [k.Jy, e.Jy],
      [k.Ky, e.Ky],
    ];
  r.ma.gG(
    {
      Fx: function (a) {
        return v(b, a);
      },
      sG: function (a) {
        return v(h, a);
      },
      yS: function (b) {
        return v(a, b);
      },
      tS: function (a) {
        return v(g, a);
      },
      wS: function (a) {
        return v(d, a);
      },
      uS: function (a) {
        return v(c, a);
      },
      GS: function (a) {
        return v(z, a);
      },
      BS: function (a) {
        return v(A, a);
      },
      ES: function (a) {
        return v(f, a);
      },
      FG: function (a) {
        return v(q, a);
      },
      AS: function (a) {
        return v(m, a);
      },
      zS: function (a) {
        return v(u, a);
      },
      CS: function (a) {
        return v(w, a);
      },
      xS: function (a) {
        return v(p, a);
      },
    },
    l.view.O
  );
})();
(function () {
  function v() {
    if (!M.ua) return M;
    L = n.O.Ka(D);
    B = n.wa.u(D);
    Q.vc(k());
    l();
    e();
    return M;
  }
  function r() {
    D && (x.O.bk(D) || x.O.Xi(D, !1), v(), n.wa.tg(D, g), g());
  }
  function l() {
    var a = p.ce.Me,
      b = !x.P.Il(D);
    N.ja({ id: "order", disabled: b, icon: p.ce.Me("new_order", b) });
    b = !1;
    N.ja({ id: "chart", disabled: b, icon: a("new_chart", b) });
    N.ja({ id: "spec", disabled: b, icon: a("specification", b) });
    var b = n.ra.nd() || {},
      b = D == b.symbol,
      c = !p.fd.De();
    N.ja({ id: "depth", checked: c, visible: !!b, icon: a("depth_of_market") });
  }
  function e() {
    var a = Q.iq(),
      b;
    if (a)
      for (var c = 0, d = a.length; c < d; c++)
        if ((b = a[c]) && "title" != b.id) {
          b = b.id;
          if (L && B) {
            var e = w.data.XK,
              f = null;
            b == y.GC.id && (f = h(y.GC, 0 < L.Ta, (L.Ta || 0).toFixed(L.j)));
            b == y.HC.id && (f = h(y.HC, 0 < L.Qf, (L.Qf || 0).toFixed(5)));
            b == y.hC.id && (f = h(y.hC, 0 < L.Mi, (L.Mi || 0).toFixed(L.kk)));
            b == y.XB.id && (f = h(y.XB, 0 < L.Zk, (L.Zk || 0).toFixed(L.kk)));
            if (b == y.mC.id || b == y.aJ.id)
              f = h(
                y.mC,
                0 < (L.A && L.A.bb),
                ((L.A && L.A.bb) || 0).toFixed(2)
              );
            if (b == y.nC.id || b == y.bJ.id)
              f = h(
                y.nC,
                0 < (L.A && L.A.ub),
                ((L.A && L.A.ub) || 0).toFixed(2)
              );
            b == y.uC.id && (f = h(y.uC, 0 < L.fo, (L.fo || 0).toFixed(L.j)));
            b == y.tC.id && (f = h(y.tC, 0 < L.eo, (L.eo || 0).toFixed(L.j)));
            b == y.zC.id && (f = h(y.zC, 0 < L.zh, (L.zh || 0).toFixed(L.j)));
            b == y.aC.id && (f = h(y.aC, !0, 0 < B.Ye ? p.F.Z(B.Ye, B.j) : ""));
            b == y.bC.id && (f = h(y.bC, 0 < B.xl, p.F.Z(B.xl || 0, B.j)));
            b == y.cC.id && (f = h(y.cC, 0 < B.yl, p.F.Z(B.yl || 0, B.j)));
            b == y.YB.id && (f = h(y.YB, !0, 0 < B.Xe ? p.F.Z(B.Xe, B.j) : ""));
            b == y.ZB.id && (f = h(y.ZB, 0 < B.zm, p.F.Z(B.zm || 0, B.j)));
            b == y.$B.id && (f = h(y.$B, 0 < B.Am, p.F.Z(B.Am || 0, B.j)));
            b == y.jC.id && (f = h(y.jC, 0 < B.Nf, p.F.Z(B.Nf || 0, B.j)));
            b == y.kC.id && (f = h(y.kC, 0 < B.tr, p.F.Z(B.tr || 0, B.j)));
            b == y.lC.id && (f = h(y.lC, 0 < B.ur, p.F.Z(B.ur || 0, B.j)));
            b == y.pC.id && (f = h(y.pC, !!B.Dr, (B.Dr || 0).toFixed(2) + "%"));
            b == y.JC.id &&
              (f = h(
                y.JC,
                B.kj && !B.kj.ab(),
                p.F.Ea(B.kj || Long.Ga.La(), !0)
              ));
            b == y.KC.id &&
              (f = h(
                y.KC,
                B.Rp && !B.Rp.ab(),
                p.F.Ea(B.Rp || Long.Ga.La(), !0)
              ));
            b == y.LC.id &&
              (f = h(
                y.LC,
                B.Sp && !B.Sp.ab(),
                p.F.Ea(B.Sp || Long.Ga.La(), !0)
              ));
            b == y.fC.id &&
              (f = h(y.fC, 0 < B.Zw, parseInt(B.Zw, 10).toString()));
            b == y.gC.id &&
              (f = h(y.gC, B.m && !B.m.ab(), p.F.Ea(B.m || Long.Ga.La(), !0)));
            b == y.IC.id && (f = h(y.IC, 0 < B.ax, (B.ax || 0).gc(0)));
            b == y.iC.id &&
              (f = h(y.iC, 0 < B.$w, parseInt(B.$w, 10).toString()));
            b == y.dC.id &&
              (f = h(y.dC, 0 < B.Hr, parseInt(B.Hr, 10).toString()));
            b == y.eC.id &&
              (f = h(
                y.eC,
                B.Lp && !B.Lp.ab(),
                p.F.Ea(B.Lp || Long.Ga.La(), !0)
              ));
            b == y.EC.id &&
              (f = h(y.EC, 0 < B.Ir, parseInt(B.Ir, 10).toString()));
            b == y.FC.id &&
              (f = h(
                y.FC,
                B.Mp && !B.Mp.ab(),
                p.F.Ea(B.Mp || Long.Ga.La(), !0)
              ));
            b == y.wC.id && (f = h(y.wC, 0 < B.Jc, p.F.Z(B.Jc || 0, B.j)));
            b == y.qC.id && (f = h(y.qC, 0 < B.Oc, p.F.Z(B.Oc || 0, B.j)));
            b == y.oC.id && (f = h(y.oC, 0 < B.Jt, p.F.Z(B.Jt || 0, B.j)));
            b == y.DC.id && (f = h(y.DC, 0 < B.St, (B.St || 0).toFixed(e.DR)));
            b == y.AC.id && (f = h(y.AC, 0 < B.Rt, p.F.Z(B.Rt || 0, B.j)));
            b == y.rC.id && (f = h(y.rC, 0 < B.Kt, p.F.Z(B.Kt || 0, e.Ri)));
            b == y.BC.id && (f = h(y.BC, 0 < B.Ot, p.F.Z(B.Ot || 0, e.Ri)));
            b == y.sC.id && (f = h(y.sC, 0 < B.Lt, p.F.Z(B.Lt || 0, e.Ri)));
            b == y.CC.id && (f = h(y.CC, 0 < B.Pt, p.F.Z(B.Pt || 0, e.Ri)));
            b == y.xC.id && (f = h(y.xC, 0 < B.Nt, p.F.Z(B.Nt || 0, e.Ri)));
            b == y.vC.id && (f = h(y.vC, 0 < B.Mt, p.F.Z(B.Mt || 0, e.Ri)));
            b == y.yC.id && (f = h(y.yC, 0 < B.Qt, p.F.Z(B.Qt || 0, e.Ri)));
            b = f;
          } else b = null;
          b && Q.Zg(b);
        }
  }
  function k() {
    if (!L) return [];
    var a = w.data.Pc,
      b = w.data.C2,
      c = [],
      d = D;
    L.yf && (d += ", " + G(L.yf));
    var e = { id: "title" };
    e.cells = [
      {
        colSpan: 2,
        content: [
          '<a href="#" style="font-size: 11px;" onclick="return(false);">',
          d,
          "</a>",
        ].join(""),
      },
    ];
    c.push(e);
    L.Zd > a.Ei && (c.push(h(y.GC, !1)), c.push(h(y.HC, !1)));
    c.push(h(y.hC, !1));
    c.push(h(y.XB, !1));
    L.Zd != a.Gk
      ? (c.push(h(y.mC, !1)), c.push(h(y.nC, !1)))
      : (c.push(h(y.aJ, !1)), c.push(h(y.bJ, !1)));
    c.push(h(y.uC, !1));
    c.push(h(y.tC, !1));
    c.push(h(y.zC, !1));
    c.push(h(y.aC, !0));
    c.push(h(y.bC, !1));
    c.push(h(y.cC, !1));
    c.push(h(y.YB, !0));
    c.push(h(y.ZB, !1));
    c.push(h(y.$B, !1));
    c.push(h(y.jC, !1));
    c.push(h(y.kC, !1));
    c.push(h(y.lC, !1));
    0 < L.Yk &&
      (c.push(h(y.pC, !1)),
      c.push(h(y.JC, !1)),
      c.push(h(y.KC, !1)),
      c.push(h(y.LC, !1)));
    L.D4 & b.uK &&
      (c.push(h(y.fC, !1)),
      c.push(h(y.gC, !1)),
      c.push(h(y.IC, !1)),
      c.push(h(y.iC, !1)),
      c.push(h(y.dC, !1)),
      c.push(h(y.eC, !1)),
      c.push(h(y.EC, !1)),
      c.push(h(y.FC, !1)),
      c.push(h(y.wC, !1)),
      c.push(h(y.qC, !1)),
      c.push(h(y.oC, !1)),
      c.push(h(y.DC, !1)),
      c.push(h(y.AC, !1)),
      c.push(h(y.rC, !1)),
      c.push(h(y.BC, !1)),
      c.push(h(y.sC, !1)),
      c.push(h(y.CC, !1)),
      c.push(h(y.xC, !1)),
      c.push(h(y.vC, !1)),
      c.push(h(y.yC, !1)));
    return c;
  }
  function h(a, b, c) {
    var d = w.data.Zo,
      e = {},
      f = "";
    if (a.Mc.compare(Long.Ga) && B) {
      var g = B.cf(a.Mc);
      g == d.Ol && (f = "up");
      g == d.Ml && (f = "down");
    }
    e.id = a.id;
    e.visible = b;
    e.cells = [
      {
        className: "symbol",
        content: ['<span class="i ', f, '">&nbsp;</span>', G(a.title)].join(""),
      },
      { content: c || "&nbsp;", className: f },
    ];
    return e;
  }
  function b() {
    var a = [];
    a.push(F("order", C.TJ));
    a.push(F("chart", C.wJ));
    a.push(F("depth", C.vv));
    a.push(F("spec", C.UJ));
    return a;
  }
  function a(a, b) {
    "order" == a
      ? p.Jb.na(D)
      : "chart" == a
      ? (x.xc.tn(D, m.L.rg.Sd), l())
      : "spec" == a
      ? p.Ss.sD(D)
      : "depth" == a && (b.checked ? p.fd.oa() : p.fd.na(D));
  }
  function g() {
    var a = !!B;
    B = n.wa.u(D);
    a ? e() : v();
  }
  function d() {
    q.i(Q.Gf(), "click", c);
    r();
  }
  function f() {
    q.hc(Q.Gf(), "click", c);
    n.wa.xe(D, g);
  }
  function c(a) {
    (a = a.target) && "a" == I(a) && p.Ss.sD(D);
  }
  function z() {
    l();
  }
  function A() {
    Q && Q.V_();
  }
  var m = E.controls,
    u = E.ma,
    q = E.oc,
    w = E.V,
    p = w.view,
    n = w.la,
    x = w.control,
    C = E.ba.xa,
    O = E.Ma,
    I = E.va.md,
    G = u.Kc,
    F = u.bn,
    u = w.data.js,
    y = {
      Xba: {
        id: "SYMBOL",
        title: C.vR,
        Mc: Long.Ga.La(),
      },
      GC: { id: "STATS_TICK_SIZE", title: C.xR, Mc: Long.Ga.La() },
      HC: { id: "STATS_TICK_VALUE", title: C.yR, Mc: Long.Ga.La() },
      hC: { id: "STATS_FACE_VALUE", title: C.VQ, Mc: Long.Ga.La() },
      XB: { id: "STATS_ACCRUED_INTEREST", title: C.KQ, Mc: Long.Ga.La() },
      mC: { id: "SPEC_MARGIN_INITIAL", title: C.$Q, Mc: Long.Ga.La() },
      aJ: { id: "SPEC_MARGIN_INITIAL_BUY", title: C.aR, Mc: Long.Ga.La() },
      bJ: { id: "SPEC_MARGIN_INITIAL_SELL", title: C.bR, Mc: Long.Ga.La() },
      nC: { id: "SPEC_MARGIN_MAINTENANCE", title: C.cR, Mc: Long.Ga.La() },
      uC: {
        id: "STATS_PRICE_MIN",
        title: C.jR,
        Mc: Long.Ga.La(),
      },
      tC: { id: "STATS_PRICE_MAX", title: C.iR, Mc: Long.Ga.La() },
      zC: { id: "STATS_PRICE_SETTLE", title: C.oR, Mc: Long.Ga.La() },
      aC: { id: "BID", title: C.OQ, Mc: u.fn },
      bC: { id: "BID_HIGH", title: C.PQ, Mc: u.Su },
      cC: { id: "BID_LOW", title: C.QQ, Mc: u.Tu },
      YB: { id: "ASK", title: C.LQ, Mc: u.dn },
      ZB: { id: "ASK_HIGH", title: C.MQ, Mc: u.Jx },
      $B: { id: "ASK_LOW", title: C.NQ, Mc: u.Kx },
      jC: { id: "LAST", title: C.XQ, Mc: u.Xl },
      kC: { id: "LAST_HIGH", title: C.YQ, Mc: u.Uu },
      lC: { id: "LAST_LOW", title: C.ZQ, Mc: u.Vu },
      pC: { id: "PRICE_CHANGE", title: C.eR, Mc: u.Mx },
      JC: { id: "VOLUME", title: C.AR, Mc: u.gs },
      KC: { id: "VOL_HIGH", title: C.BR, Mc: u.by },
      LC: { id: "VOL_LOW", title: C.CR, Mc: u.cy },
      fC: { id: "STATS_DEALS", title: C.TQ, Mc: u.NG },
      gC: { id: "STATS_DEALS_VOLUME", title: C.UQ, Mc: u.QG },
      IC: { id: "STATS_TURNOVER", title: C.zR, Mc: u.PG },
      iC: { id: "STATS_INTEREST", title: C.WQ, Mc: u.OG },
      dC: { id: "STATS_BUY_ORDERS", title: C.RQ, Mc: u.Yx },
      eC: { id: "STATS_BUY_VOLUME", title: C.SQ, Mc: u.Zx },
      EC: { id: "STATS_SELL_ORDERS", title: C.tR, Mc: u.$x },
      FC: { id: "STATS_SELL_VOLUME", title: C.uR, Mc: u.ay },
      wC: {
        id: "STATS_PRICE_OPEN",
        title: C.lR,
        Mc: u.Rx,
      },
      qC: { id: "STATS_PRICE_CLOSE", title: C.fR, Mc: u.Nx },
      oC: { id: "STATS_PRICE_AW", title: C.dR, Mc: u.Lx },
      DC: { id: "STATS_PRICE_VOLA", title: C.sR, Mc: u.Xx },
      AC: { id: "STATS_PRICE_THEO", title: C.pR, Mc: u.Ux },
      rC: { id: "STATS_PRICE_DELTA", title: C.gR, Mc: u.Ox },
      BC: { id: "STATS_PRICE_THETA", title: C.qR, Mc: u.Vx },
      sC: { id: "STATS_PRICE_GAMMA", title: C.hR, Mc: u.Px },
      CC: { id: "STATS_PRICE_VEGA", title: C.rR, Mc: u.Wx },
      xC: { id: "STATS_PRICE_RHO", title: C.mR, Mc: u.Sx },
      vC: { id: "STATS_PRICE_OMEGA", title: C.kR, Mc: u.Qx },
      yC: {
        id: "STATS_PRICE_SENSITIVITY",
        title: C.nR,
        Mc: u.Tx,
      },
    },
    M = (p.nj = {});
  M.ha = function () {
    if (M.ua) return M;
    Q = O(m.page.Yo, {
      ej: [
        { id: "name", content: "&nbsp;" },
        { id: "value", content: "&nbsp;", align: "right" },
      ],
    })
      .T(!0)
      .Iq(!1)
      .rq(!0)
      .K("symbols-table no-header")
      .i("show", d)
      .i("hide", f);
    N = O(m.page.Wj).vc(b()).i("select", a);
    p.Ib.Uc("details", C.wR, "", Q, N);
    n.B.Vb("books", z);
    n.B.Vb("block", A);
    M.ua = !0;
    return M;
  };
  M.Gb = function (a) {
    if (!a) return M;
    D = a;
    n.Ib.y_(D);
    Q.h() && r();
    return M;
  };
  M.Dd = v;
  var D, L, B, Q, N;
})();
(function () {
  function v(a, b, c, d, f, g) {
    if (!c) return F;
    d && (c = ["'", m.H.ga, "': ", c].join(""));
    g && d && (g = ["'", m.H.ga, "': ", g].join(""));
    d = !!(m.B.u("journal_table_config") & C.ae);
    var h = {};
    h.code = a;
    h.type = b;
    h.message = c;
    h.Z3 = g;
    h.time = new Date().getTime();
    L.splice(0, 0, h);
    (d || b !== I.ae) && M && M.ex(e(h), !0);
    f && u.Jh.Gb("journal");
    return F;
  }
  function r() {
    var a = m.B.u("journal_table_config");
    D.ja({ id: "config_grid", checked: a & C.Xj });
    D.ja({ id: "config_debug", checked: a & C.ae });
  }
  function l() {
    var a = [],
      b = !!(m.B.u("journal_table_config") & C.ae);
    if (L)
      for (var c, d = 0, f = L.length; d < f; d++)
        (c = L[d]) && (b || c.type != I.ae) && a.push(e(c));
    return a;
  }
  function e(a) {
    var b = [];
    b.push(k(p(a.time, !0), a.code));
    b.push(k("string" == typeof a.type ? a.type : n(G[a.type] || "")));
    b.push(k(a.Z3 || n(a.message || "")));
    a = {};
    a.id = y++;
    a.cells = b;
    return a;
  }
  function k(a, b) {
    var c = {},
      d = "";
    b == O.Za && (d = "ok");
    b == O.ZR && (d = "folder");
    b == O.Fn && (d = "warning");
    b == O.ERROR && (d = "error");
    b == O.ZE && (d = "attention");
    d &&
      ((a = ['<span class="i ', d, '">&nbsp;</span>', a].join("")),
      (c.className = "iconed"));
    c.content = a;
    return c;
  }
  function h() {
    for (
      var a = [
          ["time", w.xU, "156px"],
          ["type", w.wU, "100px"],
          ["message", w.uU],
        ],
        b = [],
        c,
        d,
        e = 0,
        f = a.length;
      e < f;
      e++
    )
      if ((d = a[e]))
        (c = {}),
          (c.id = d[0]),
          (c.content = d[1]),
          (c.Qm = !1),
          (c.resize = !1),
          d[2] && (c.width = d[2]),
          b.push(c);
    return { ej: b };
  }
  function b() {
    var a = [],
      b = new Date(),
      c = b.getUTCMonth() + 1,
      d = b.getUTCDate();
    10 > c && (c = "0" + c);
    10 > d && (d = "0" + d);
    a.push(b.getUTCFullYear());
    a.push(c);
    a.push(d);
    a.push(".log");
    return a.join("");
  }
  function a() {
    var a = [];
    a.push(x("config_debug", w.tU));
    a.push("-");
    a.push(x("save", w.vU));
    return a;
  }
  function g(a) {
    a = a.split("_");
    var c, d;
    if ("config" == a[0]) {
      c = 0;
      switch (a[1]) {
        case "scroll":
          c = C.oN;
          break;
        case "grid":
          c = C.Xj;
          break;
        case "debug":
          c = C.ae;
      }
      d = m.B.u("journal_table_config");
      d = d.Lj(c);
      m.B.u("journal_table_config", d);
    }
    if ("save" == a[0]) {
      a = Blob;
      c = [];
      if (L)
        for (var e = 0, f = L.length; e < f; e++)
          (d = L[e]) &&
            c.push(
              d.code,
              "\t",
              p(d.time, !0),
              "\t",
              "string" == typeof d.type ? d.type : G[d.type] || "Unknown",
              "\t",
              d.message,
              "\r\n"
            );
      window.saveAs(
        new a([c.join("")], { type: "text/plain;charset=utf-8" }),
        b()
      );
    }
  }
  function d() {
    r();
    M.vc(l());
  }
  function f() {
    M && M.W();
  }
  var c = E.controls,
    z = E.ma,
    A = E.V,
    m = A.la,
    u = A.view,
    q = E.Ma,
    w = E.ba.xa,
    p = z.pj,
    n = z.Kc,
    x = z.bn,
    C = { Xj: 1, oN: 2, ae: 4 },
    O = { ZR: -1, Za: 0, Fn: 1, ERROR: 2, ZE: 3 },
    I = {
      Kd: 0,
      Q5: 1,
      Lca: 2,
      Ak: 3,
      r9: 4,
      Aea: 5,
      Dv: 6,
      ae: 7,
      tK: 8,
      Tp: 9,
      vJ: 10,
    },
    G =
      "Terminal Config System Network Host User Trade Debug Ticks Books Symbols".split(
        " "
      ),
    F = (u.U = {});
  F.Ab = O;
  F.types = I;
  F.ha = function () {
    M = q(c.page.no, h())
      .b({ position: "absolute", left: "0", right: "0", top: "0", bottom: "0" })
      .K("fixed odd grid no-border")
      .K("journal toolbox-table")
      .K("at-journal-table");
    D = q(c.page.Wj).vc(a()).i("select", g);
    u.Jh.Uc("journal", w.yU, "", M, D);
    r();
    m.B.Vb("journal_table_config", d);
    m.B.Vb("toolbox_height", f);
    return F;
  };
  F.Wb = v;
  F.xu = function (a, b) {
    v(a, I.ae, ["'", m.H.ga, "': ", b].join(""));
  };
  var y = 0,
    M,
    D,
    L = [];
})();
(function () {
  var v = E.controls;
  E.V.view.Wp = {
    lq: function (r) {
      var l = v.L.rg,
        e = "";
      r == l.Ve && (e = "M1");
      r == l.Pe && (e = "M5");
      r == l.Ne && (e = "M15");
      r == l.Oe && (e = "M30");
      r == l.Sd && (e = "H1");
      r == l.pe && (e = "H4");
      r == l.Ce && (e = "Daily");
      r == l.ze && (e = "Weekly");
      r == l.nh && (e = "Monthly");
      return e;
    },
    kS: function (r, l) {
      return r + ", " + this.lq(l);
    },
  };
})();
(function () {
  function v(a, c) {
    var d = Za.Db(),
      e = a.symbol,
      f = a.period,
      g = a.id,
      h,
      k,
      l;
    if (!c)
      for (k = 0, l = Qa.length; k < l; k++)
        if ((h = Qa[k]) && h.id == g) return;
    if (!0 === c) {
      k = 0;
      for (l = Qa.length; k < l; k++)
        if ((h = Qa[k]) && h.id == d) {
          Qa.splice(k, 1, z(a));
          break;
        }
      k == l && Qa.push(z(a));
    } else Qa.push(z(a));
    Va.K("empty", !0);
    Za.h(!0).vc(Qa);
    cb.h(!0).vc(m());
    b();
    ja.ef.tg(e, f, Q);
    ja.wa.tg(e, N);
  }
  function r(a) {
    a = a.id;
    var c;
    if (Qa)
      for (var d = 0, e = Qa.length; d < e; d++)
        if ((c = Qa[d]) && c.id == a) {
          Qa.splice(d, 1);
          break;
        }
    Za.vc(Qa);
    cb.vc(m());
    Qa.length || (b(), Za.h(!1), cb.h(!1), Va.K("empty"));
  }
  function l() {
    Aa && Aa.tm(!1);
    Ea && Ea.h(!1);
    Ga && Ga.h(!1);
    Ha && Ha.h(!1);
    Ja && Ja.h(!1);
  }
  function e() {
    Aa && Aa.tm(!1);
    Ea && Ea.h(!1);
    Ga && Ga.h(!1);
    Ha && Ha.h(!1);
    Ja && Ja.h(!1);
    if (ja.ra.nd()) {
      var a;
      a = xa.L.rg;
      var b = xa.L.Fl,
        c = 0,
        d = ja.ra.nd();
      if (d) {
        var e = d.period,
          d = d.windows,
          f,
          g;
        if (d)
          for (var h = 0, k = d.length; h < k; h++)
            if ((f = d[h]))
              if ((f = f.indicators))
                for (var l = 0, n = f.length; l < n; l++)
                  if ((g = f[l]))
                    "Main" == g.type
                      ? (c++, (l = n))
                      : !g.temp &&
                        ((g = g.period_flags),
                        (e == a.Ve && g & b.Ve) ||
                          (e == a.Pe && g & b.Pe) ||
                          (e == a.Ne && g & b.Ne) ||
                          (e == a.Oe && g & b.Oe) ||
                          (e == a.Sd && g & b.Sd) ||
                          (e == a.pe && g & b.pe) ||
                          (e == a.Ce && g & b.Ce) ||
                          (e == a.ze && g & b.ze) ||
                          (e == a.nh && g & b.Zj)) &&
                        (c++, (l = n));
      }
      if ((a = c))
        if (1 == a) Aa.tm(!0).b({ top: "0", bottom: "0" }).si(!0).vd();
        else if ((b = Va.Gf().offsetHeight))
          switch (((b = Math.floor((b - 4 * a) / (a + 1))), (c = 0), a)) {
            case 5:
              Ja.h(!0)
                .b({ bottom: c + "px", top: "auto", height: b + 20 + "px" })
                .si(!0)
                .vd()
                .W();
              Ha.h(!0)
                .b({
                  bottom: (c += b - 2 + 20) + "px",
                  top: "auto",
                  height: b + "px",
                })
                .si(!1)
                .vd()
                .W();
              Ga.h(!0)
                .b({
                  bottom: (c += b - 2) + "px",
                  top: "auto",
                  height: b + "px",
                })
                .si(!1)
                .vd()
                .W();
              Ea.h(!0)
                .b({
                  bottom: (c += b - 2) + "px",
                  top: "auto",
                  height: b + "px",
                })
                .si(!1)
                .vd()
                .W();
              Aa.tm(!0)
                .b({ bottom: c + (b - 2) + "px", top: "0" })
                .si(!1)
                .vd();
              break;
            case 4:
              Ha.h(!0)
                .b({ bottom: c + "px", top: "auto", height: b + 20 + "px" })
                .si(!0)
                .vd()
                .W();
              Ga.h(!0)
                .b({
                  bottom: (c += b - 2 + 20) + "px",
                  top: "auto",
                  height: b + "px",
                })
                .si(!1)
                .vd()
                .W();
              Ea.h(!0)
                .b({
                  bottom: (c += b - 2) + "px",
                  top: "auto",
                  height: b + "px",
                })
                .si(!1)
                .vd()
                .W();
              Aa.tm(!0)
                .b({ bottom: c + (b - 2) + "px", top: "0" })
                .si(!1)
                .vd()
                .W();
              break;
            case 3:
              Ga.h(!0)
                .b({ bottom: c + "px", top: "auto", height: b + 20 + "px" })
                .si(!0)
                .vd()
                .W();
              Ea.h(!0)
                .b({
                  bottom: (c += b - 2 + 20) + "px",
                  top: "auto",
                  height: b + "px",
                })
                .si(!1)
                .vd()
                .W();
              Aa.tm(!0)
                .b({ bottom: c + (b - 2) + "px", top: "0" })
                .si(!1)
                .vd()
                .W();
              break;
            case 2:
              Ea.h(!0)
                .b({ bottom: c + "px", top: "auto", height: b + 20 + "px" })
                .si(!0)
                .vd()
                .W(),
                Aa.tm(!0)
                  .b({ bottom: c + (b - 2 + 20) + "px", top: "0" })
                  .si(!1)
                  .vd()
                  .W();
          }
    }
  }
  function k() {
    var a = xa.L.jp,
      b = ja.ra.nd();
    if (b) {
      var c = ja.ef.u(b.symbol, b.period),
        d = ja.P.Gu(b.symbol).concat(ja.P.mq(b.symbol));
      Aa.wI(d);
      Aa.B(b);
      Aa.ef(c);
      Aa.vd();
      Aa.Qo();
      Aa.W();
      Ea && Ea.h() && (Ea.B(b), Ea.ef(c), Ea.vd(), Ea.W());
      Ga && Ga.h() && (Ga.B(b), Ga.ef(c), Ga.vd(), Ga.W());
      Ha && Ha.h() && (Ha.B(b), Ha.ef(c), Ha.vd(), Ha.W());
      Ja && Ja.h() && (Ja.B(b), Ja.ef(c), Ja.vd(), Ja.W());
      Ta.K("black", b.color == a.Vm);
      Ra.K("black", b.color == a.Vm);
    }
  }
  function h() {
    var a = Ca.data.js,
      b = Ca.data.Zo,
      c = ja.ra.nd();
    if (c) {
      var d = ja.wa.u(c.symbol);
      d &&
        (Ra.Pq(d.vb).cq(c.digits),
        d.cf(a.fn) !== b.Nl &&
          (Ra.K("red", d.cf(a.fn) != b.Ml), Ra.K("blue", d.cf(a.fn) != b.Ol)),
        Ta.Pq(d.dc).cq(c.digits),
        d.cf(a.dn) !== b.Nl &&
          (Ta.K("red", d.cf(a.dn) != b.Ml), Ta.K("blue", d.cf(a.dn) != b.Ol)));
    }
  }
  function b() {
    var b = ja.ra.nd();
    if (b && Qa.length) {
      var c = ja.O.Ka(b.symbol);
      (b = ja.ef.u(b.symbol, b.period)) && b.length
        ? (e(),
          Ya.h(!1),
          Ta.h(!0),
          Ra.h(!0),
          Oa.h(!0),
          bb.h(c ? c.hs() : !0),
          eb.h(!0).b("margin-left", bb.h() ? "24px" : "5px"),
          a())
        : (l(), Ya.h(!0), Ta.h(!1), Ra.h(!1), Oa.h(!1), bb.h(!1), eb.h(!1));
    } else l(), Ya.h(!1), Ta.h(!1), Ra.h(!1), Oa.h(!1), bb.h(!1), eb.h(!1);
  }
  function a() {
    var a = ja.ra.nd();
    if (a && (a = ja.O.Ka(a.symbol)) && a.A) {
      if (!Oa.f()) {
        var b = Long.ec(ja.B.u("trade_lots_last"));
        b.ab() && (b = a.A.mj);
        Oa.f(Ma.Wa.od(b));
      }
      b = Ma.Wa.En(a.A.sg);
      Oa.T(b);
      Oa.Y(Ma.Wa.od(a.A.sg));
      Oa.Fa(0);
      Oa.mc(Ma.Wa.od(a.A.lj));
      Oa.K("short-value", 4 < b);
    }
  }
  function g() {
    ja.B.u("block");
    var a = za.Bi.NP(),
      b = za.Bi.Dq() + 3;
    fb.b({ left: a + "px", bottom: b + "px" });
    Va.b({
      left: a + "px",
      bottom: b + 21 + "px",
      top: za.rf.Vo + za.rf.an() + "px",
    });
    cb.b({ bottom: b - 2 + "px" });
    Aa.vd().W();
    Ea && Ea.h() && Ea.vd().W();
    Ga && Ga.h() && Ga.vd().W();
    Ha && Ha.h() && Ha.vd().W();
    Ja && Ja.h() && Ja.vd().W();
    b = za.Bi.Dq() + 4;
    za.Jh.De() || (b = za.Jh.jo() + 1);
    ib.b("bottom", b + "px");
  }
  function d() {
    var a = ja.ra.nd(),
      a = a && !!ja.B.u("charts_one_click") && Ma.P.Il(a.symbol);
    Ra.K("hidden", a);
    Ta.K("hidden", a);
    Oa.K("hidden", a);
  }
  function f() {
    var a = xa.L.rg,
      b = !!ja.ra.ei.length,
      d = ja.ra.nd() || {},
      e = !d.symbol,
      f,
      g,
      h,
      k,
      l,
      n = d.type,
      m = d.scale,
      p = d.period;
    Va.Wj(e ? null : ua);
    f = !$a && !Xa && !ab;
    ua.Xa("type_bar", f).jh("type_bar", "bar" == n);
    ua.Xa("type_quote", f).jh("type_quote", "quote" == n);
    ua.Xa("type_line", f).jh("type_line", "line" == n);
    ua.Xa("zoom_in", f && 6 != m);
    ua.Xa("zoom_in_disabled", f && 6 == m);
    ua.Xa("zoom_out", f && 1 != m);
    ua.Xa("zoom_out_disabled", f && 1 == m);
    ua.Xa("grid", f).jh("grid", d.grid);
    ua.Xa("volumes", f).jh("volumes", 1 === d.volumes);
    ua.Xa("volumes_tick", f).jh("volumes_tick", 2 === d.volumes);
    ua.Xa("scroll", f).jh("scroll", d.scroll);
    ua.Xa("shift", f).jh("shift", d.shift);
    ua.Xa("period", f);
    ua.Xa("refresh", f);
    ua.Xa("period_m1", f).jh("period_m1", p == a.Ve);
    ua.Xa("period_m5", f).jh("period_m5", p == a.Pe);
    ua.Xa("period_m15", f).jh("period_m15", p == a.Ne);
    ua.Xa("period_m30", f).jh("period_m30", p == a.Oe);
    ua.Xa("period_h1", f).jh("period_h1", p == a.Sd);
    ua.Xa("period_h4", f).jh("period_h4", p == a.pe);
    ua.Xa("period_d1", f).jh("period_d1", p == a.Ce);
    ua.Xa("period_w1", f).jh("period_w1", p == a.ze);
    ua.Xa("period_mn1", f).jh("period_mn1", p == a.nh);
    ua.Xa("period_separator", f);
    ua.Xa("grid_separator", f);
    ua.Xa("zoom_separator", f);
    ua.Xa("volume_separator", f);
    ua.Xa("refresh_separator", f);
    f = !!d && !Xa && !ab;
    e = !d || !ja.ra.UG();
    ua.Xa("object_list", f && !e);
    ua.Xa("object_list_disabled", f && e);
    (f = !!$a) && (g = ja.ra.ds($a));
    e = ta.mF;
    e = e.split("%NAME%").join((g && g.name) || "");
    ua.Xa("object_prop", f).Yh("object_prop", e);
    ua.Xa("object_remove", f);
    ua.Xa("object_remove_all", f);
    ua.Xa("object_separator1", f);
    f = !!d && !Xa && !$a;
    e = !d || !ja.ra.SG();
    ua.Xa("indicator_list", f && !e);
    ua.Xa("indicator_list_disabled", f && e);
    (f = !!ab) && (l = ja.ra.cs(ab));
    e = ta.kF;
    e = e.split("%NAME%").join((l && l.instance && l.instance.cd()) || "");
    ua.Xa("indicator_prop", f).Yh("indicator_prop", e);
    ua.Xa("indicator_remove", f);
    ua.Xa("indicator_separator", f);
    f = f && gb && gb.sl && 0 < gb.sl();
    ua.Xa("indicator_remove_window", f);
    f = b && !$a && !Xa && !ab;
    ua.Xa("close", f);
    ua.Xa("prop", f);
    ua.Xa("close_separator", f);
    d = b = !1;
    f = !!Xa;
    e = !Ma.P.ih();
    f &&
      ((h = ja.P.df(Xa.split("_")[0]))
        ? (b = !0)
        : (k = ja.P.fg(Xa.split("_")[0])) && (d = !0));
    f = za.ce.Me;
    ua.ja({
      id: "order_modify",
      visible: b,
      disabled: e,
      icon: f("modify_order", e),
    });
    ua.ja({
      id: "order_delete",
      visible: b,
      disabled: e,
      icon: f("delete_order", e),
    });
    ua.ja({
      id: "position_modify",
      visible: d,
      disabled: e,
      icon: f("modify_order", e),
    });
    ua.ja({
      id: "position_close",
      visible: d,
      disabled: e,
      icon: f("close_order", e),
    });
    b &&
      (ua.Yh("order_modify", [ta.fu, " ", h.gk(!1)].join("")),
      ua.Yh("order_delete", [ta.iF, " ", h.gk(!1)].join("")));
    d &&
      (ua.Yh("position_modify", [ta.fu, " ", k.gk(!1)].join("")),
      ua.Yh("position_close", [ta.hx, " ", k.gk(!1)].join("")));
    ua.Xa("position_cancel_sl", !1);
    ua.Xa("position_cancel_tp", !1);
    ua.Xa("position_cancel_separator", !1);
    d &&
      ((n = Xa.split("_")[1]), "sl" == n || "tp" == n) &&
      (ua.Xa("position_cancel_separator", !0),
      "sl" == n &&
        ua
          .Xa("position_cancel_sl", !0)
          .Vi("position_cancel_sl", k.Mb.toFixed(k.j)),
      "tp" == n &&
        ua
          .Xa("position_cancel_tp", !0)
          .Vi("position_cancel_tp", k.Qb.toFixed(k.j)));
    ua.Xa("order_cancel_sl", !1);
    ua.Xa("order_cancel_tp", !1);
    ua.Xa("order_cancel_separator", !1);
    b &&
      ((n = Xa.split("_")[1]), "sl" == n || "tp" == n) &&
      (ua.Xa("order_cancel_separator", !0),
      "sl" == n &&
        ua.Xa("order_cancel_sl", !0).Vi("order_cancel_sl", h.C.toFixed(h.j)),
      "tp" == n &&
        ua.Xa("order_cancel_tp", !0).Vi("order_cancel_tp", h.D.toFixed(h.j)));
    c();
  }
  function c(a) {
    ua.Xa("trade_sell_limit", !1)
      .Xa("trade_buy_limit", !1)
      .Xa("trade_separator", !1)
      .Xa("trade", !1)
      .Xa("trade_sell_limit_sub", !1)
      .Xa("trade_buy_limit_sub", !1)
      .Xa("trade_sub_separator", !1)
      .Xa("trade_sell_stop_sub", !1)
      .Xa("trade_buy_stop_sub", !1)
      .Xa("trade_sub_separator1", !1)
      .Xa("trade_new_order_sub", !1)
      .Xa("trade_oneclick", !1)
      .Xa("depth_of_market", !1)
      .Xa("type_separator", !1);
    eb.K("hidden");
    var b = ja.ra.nd(),
      c = (b && b.digits) || 0;
    (b = (b && b.symbol) || null) && Ma.P.Il(b) && eb.K("hidden", !0);
    if (!$a && !Xa && !ab) {
      var d = ja.O.Ka(b);
      ua.ja({
        id: "depth_of_market",
        checked: !za.fd.De(),
        visible: d ? d.hs() : !0,
      });
      ua.Xa("type_separator", !0);
      b &&
        Ma.P.Il(b) &&
        ((d = !!ja.B.u("charts_one_click")),
        ua.Xa("trade_oneclick", !0).jh("trade_oneclick", d),
        !1 !== a &&
          (ua.Xa("trade", !0),
          ua.Xa("trade_new_order_sub", !0),
          (a = Aa.$P()))) &&
        ((a = a[1]),
        (b = ja.wa.u(b)) &&
          b.Dj &&
          ((d = Oa.f().normalize(2).toFixed(2)),
          a < b.Dj
            ? (ua
                .Xa("trade_buy_limit", !0)
                .Vi("trade_buy_limit", a.toFixed(c))
                .Yh("trade_buy_limit", "Buy Limit " + d),
              ua
                .Xa("trade_buy_limit_sub", !0)
                .Vi("trade_buy_limit_sub", a.toFixed(c))
                .Yh("trade_buy_limit_sub", "Buy Limit " + d),
              ua
                .Xa("trade_sell_stop_sub", !0)
                .Vi("trade_sell_stop_sub", a.toFixed(c))
                .Yh("trade_sell_stop_sub", "Sell Stop " + d))
            : (ua
                .Xa("trade_sell_limit", !0)
                .Vi("trade_sell_limit", a.toFixed(c))
                .Yh("trade_sell_limit", "Sell Limit " + d),
              ua
                .Xa("trade_sell_limit_sub", !0)
                .Vi("trade_sell_limit_sub", a.toFixed(c))
                .Yh("trade_sell_limit_sub", "Sell Limit " + d),
              ua
                .Xa("trade_buy_stop_sub", !0)
                .Vi("trade_buy_stop_sub", a.toFixed(c))
                .Yh("trade_buy_stop_sub", "Buy Stop " + d)),
          ua.Xa("trade_separator", !0),
          ua.Xa("trade_sub_separator", !0),
          ua.Xa("trade_sub_separator1", !0)));
    }
  }
  function z(a) {
    var b = {};
    b.id = a.id;
    b.label = [a.symbol, za.Wp.lq(a.period)].join(", ");
    return b;
  }
  function A() {
    var a = [],
      b = za.ce.Me;
    a.push(wa("order_cancel_sl", ta.Yq, b("delete_order")));
    a.push(wa("order_cancel_tp", ta.Zq, b("delete_order")));
    a.push({ id: "order_cancel_separator", ji: !0 });
    a.push(wa("position_cancel_sl", ta.Yq, b("delete_order")));
    a.push(wa("position_cancel_tp", ta.Zq, b("delete_order")));
    a.push({ id: "position_cancel_separator", ji: !0 });
    a.push(wa("order_modify", ta.fu, b("modify_order")));
    a.push(wa("order_delete", ta.iF, b("delete_order")));
    a.push(wa("position_modify", ta.fu, b("modify_order")));
    a.push(wa("position_close", ta.hx, b("close_order")));
    a.push(
      wa(
        "trade_sell_limit",
        "Sell Limit",
        b("sell_limit"),
        void 0,
        void 0,
        "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
      )
    );
    a.push(
      wa(
        "trade_buy_limit",
        "Buy Limit",
        b("buy_limit"),
        void 0,
        void 0,
        "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
      )
    );
    a.push({ id: "trade_separator", ji: !0 });
    a.push(
      wa("trade", ta.AO, void 0, void 0, void 0, void 0, [
        wa(
          "trade_sell_limit_sub",
          "Sell Limit",
          b("sell_limit"),
          void 0,
          void 0,
          "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
        ),
        wa(
          "trade_buy_limit_sub",
          "Buy Limit",
          b("buy_limit"),
          void 0,
          void 0,
          "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
        ),
        { id: "trade_sub_separator", ji: !0 },
        wa(
          "trade_sell_stop_sub",
          "Sell Stop",
          b("sell_limit"),
          void 0,
          void 0,
          "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
        ),
        wa(
          "trade_buy_stop_sub",
          "Buy Stop",
          b("buy_limit"),
          void 0,
          void 0,
          "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
        ),
        { id: "trade_sub_separator1", ji: !0 },
        wa("trade_new_order_sub", ta.lO, b("new_order")),
      ])
    );
    a.push(wa("trade_oneclick", ta.nF, b("oneclick")));
    a.push(wa("depth_of_market", ta.vv, b("depth_of_market")));
    a.push(wa("object_prop", ta.mF, b("object_prop")));
    a.push(wa("object_list", ta.lF, b("objects_list")));
    a.push(wa("object_list_disabled", ta.lF, b("objects_list", !0), !0));
    a.push({ id: "object_separator1", ji: !0 });
    a.push(wa("object_remove", ta.gO, b("object_remove")));
    a.push(wa("object_remove_all", ta.fO, b("objects_remove_all")));
    a.push(wa("indicator_prop", ta.kF, b("indicator_prop")));
    a.push(wa("indicator_remove", ta.iO, b("indicator_remove")));
    a.push(wa("indicator_remove_window", ta.jO, b("indicator_window_remove")));
    a.push({ id: "indicator_separator", ji: !0 });
    a.push(wa("indicator_list", ta.jF, b("indicator_list")));
    a.push(wa("indicator_list_disabled", ta.jF, b("indicator_list", !0), !0));
    a.push({ id: "type_separator", ji: !0 });
    a.push(wa("type_bar", ta.dO, b("bar")));
    a.push(wa("type_quote", ta.eO, b("candlesticks")));
    a.push(wa("type_line", ta.kO, b("line")));
    a.push({ id: "period_separator", ji: !0 });
    a.push(
      wa("period", ta.mO, void 0, void 0, void 0, void 0, [
        wa("period_m1", ta.qO, b("m1")),
        wa("period_m5", ta.tO, b("m5")),
        wa("period_m15", ta.rO, b("m15")),
        wa("period_m30", ta.sO, b("m30")),
        "-",
        wa("period_h1", ta.oO, b("h1")),
        wa("period_h4", ta.pO, b("h4")),
        "-",
        wa("period_d1", ta.nO, b("d1")),
        wa("period_w1", ta.vO, b("w1")),
        wa("period_mn1", ta.uO, b("mn1")),
      ])
    );
    a.push({ id: "refresh_separator", ji: !0 });
    a.push(wa("refresh", ta.xO, b("refresh")));
    a.push({ id: "grid_separator", ji: !0 });
    a.push(wa("grid", ta.hO, b("grid")));
    a.push(wa("scroll", ta.yO, b("scroll")));
    a.push(wa("shift", ta.zO, b("shift")));
    a.push({ id: "volume_separator", ji: !0 });
    a.push(wa("volumes", ta.pF, b("volumes")));
    a.push(wa("volumes_tick", ta.oF, b("volumes_tick")));
    a.push({ id: "zoom_separator", ji: !0 });
    a.push(wa("zoom_in", ta.qF, b("zoom_in")));
    a.push(wa("zoom_in_disabled", ta.qF, b("zoom_in", !0), !0));
    a.push(wa("zoom_out", ta.rF, b("zoom_out")));
    a.push(wa("zoom_out_disabled", ta.rF, b("zoom_out", !0), !0));
    a.push({ id: "close_separator", ji: !0 });
    a.push(wa("prop", ta.wO, b("chart_prop")));
    a.push(wa("close", ta.hx, b("close")));
    return a;
  }
  function m() {
    var a = ja.ra.nd(),
      b,
      c = [],
      d = [];
    a && (b = a.id);
    if (Qa)
      for (var e = 0, f = Qa.length; e < f; e++)
        (a = Qa[e]) && d.push(wa(a.id, a.label, void 0, void 0, b == a.id));
    c.push(wa("all", "\u00bb ", void 0, void 0, void 0, void 0, d));
    return c;
  }
  function u(a) {
    a = new Date(a);
    var b = [];
    b.push(a.getUTCFullYear());
    b.push(".");
    b.push(q(a.getUTCMonth() + 1));
    b.push(".");
    b.push(q(a.getUTCDate()));
    b.push(" ");
    b.push(q(a.getUTCHours()));
    b.push(":");
    b.push(q(a.getUTCMinutes()));
    return b.join("");
  }
  function q(a) {
    return 10 > a ? "0" + a : "" + a;
  }
  function w(a, b) {
    var c = Ca.data.eb,
      d = ja.ra.nd(),
      e = a.split("_");
    if ("depth_of_market" == a) ia();
    else if ("refresh" == a) Ma.xc.dY();
    else if ("prop" == a) za.OP.na();
    else if ("close" == a) Ma.xc.Xp(d.id);
    else {
      if ("trade" == e[0]) {
        if ("oneclick" == e[1]) {
          ja.B.u("charts_one_click", !b.checked);
          return;
        }
        if (
          !(
            ("sell" != e[1] && "buy" != e[1]) ||
            ("limit" != e[2] && "stop" != e[2])
          )
        ) {
          var f = parseFloat(b.key),
            g,
            h = b.label.split(" "),
            h = parseFloat(h[h.length - 1]),
            h = Ma.Wa.zj(h);
          "sell" == e[1] && "limit" == e[2] && (g = c.Zc);
          "buy" == e[1] && "limit" == e[2] && (g = c.Lc);
          "sell" == e[1] && "stop" == e[2] && (g = c.Ee);
          "buy" == e[1] && "stop" == e[2] && (g = c.we);
          Ma.Ag.IB(d.symbol, h, g, f, 0, 0, 0);
          return;
        }
        if ("new" == e[1] && "order" == e[2]) {
          za.Jb.na(d.symbol);
          return;
        }
      }
      if ("order" == e[0] && (c = ja.P.df(Xa.split("_")[0]))) {
        if ("modify" == e[1]) {
          za.Jb.Tq(c.X);
          return;
        }
        if ("delete" == e[1]) {
          Ma.Ag.vI(c);
          return;
        }
        if ("cancel" == e[1]) {
          if ("sl" == e[2]) {
            Ma.Ag.Fs(c, c.N, c.Na, 0, c.D);
            return;
          }
          if ("tp" == e[2]) {
            Ma.Ag.Fs(c, c.N, c.Na, c.C, 0);
            return;
          }
        }
      }
      if ("position" == e[0] && (c = ja.P.fg(Xa.split("_")[0]))) {
        if ("modify" == e[1]) {
          za.Jb.Rs(c);
          return;
        }
        if ("close" == e[1]) {
          Ma.Ag.KB(c);
          return;
        }
        if ("cancel" == e[1]) {
          if ("sl" == e[2]) {
            Ma.Ag.Ks(c, 0, c.Qb);
            return;
          }
          if ("tp" == e[2]) {
            Ma.Ag.Ks(c, c.Mb, 0);
            return;
          }
        }
      }
      if ("object" == e[0]) {
        if ("remove" == e[1]) {
          if ("all" == e[2]) {
            ja.ra.jJ();
            return;
          }
          if ($a) {
            ja.ra.QC($a);
            return;
          }
        }
        "prop" == e[1] && $a
          ? (d = ja.ra.ds($a)) && za.mx.ha().na(d)
          : "list" == e[1] && za.ku.ha().na();
      } else {
        if ("indicator" == e[0]) {
          if ("list" == e[1]) {
            za.RF.na();
            return;
          }
          if ("prop" == e[1]) {
            ab && (d = ja.ra.cs(ab)) && za.ju.na(d);
            return;
          }
          if ("remove" == e[1]) {
            if ("window" == e[2] && gb) {
              ja.ra.gY(gb.sl());
              return;
            }
            if (ab) {
              ja.ra.PC(ab);
              return;
            }
          }
        }
        "period" == e[0]
          ? ((c = xa.L.rg),
            (e = e[1]),
            "m1" == e && (f = c.Ve),
            "m5" == e && (f = c.Pe),
            "m15" == e && (f = c.Ne),
            "m30" == e && (f = c.Oe),
            "h1" == e && (f = c.Sd),
            "h4" == e && (f = c.pe),
            "d1" == e && (f = c.Ce),
            "w1" == e && (f = c.ze),
            "mn1" == e && (f = c.nh),
            f != d.period && Ma.xc.tn(d.symbol, f, !0))
          : ("zoom" == e[0] &&
              ((f = d.scale),
              "in" == e[1] && f++,
              "out" == e[1] && f--,
              1 > f && (f = 1),
              6 < f && (f = 6),
              (d.scale = f)),
            "type" == e[0] && (d.type = e[1]),
            "grid" == a && (d.grid = !d.grid),
            "scroll" == a && (d.scroll = !d.scroll),
            "shift" == a && (d.shift = !d.shift),
            "volumes" == a && (d.volumes = 1 === d.volumes ? 0 : 1),
            "volumes_tick" == a && (d.volumes = 2 === d.volumes ? 0 : 2),
            ja.ra.M("change"));
      }
    }
  }
  function p(a) {
    ja.ra.Ro(a);
  }
  function n(a) {
    ja.ra.Ro(a);
  }
  function x() {
    c();
  }
  function C() {
    g();
  }
  function O() {
    d();
  }
  function I() {
    Xa = null;
    var a = xa.L.jp,
      b = ja.ra.nd();
    if (b) {
      Aa.wI(ja.P.Gu(b.symbol).concat(ja.P.mq(b.symbol)));
      Aa.B(b);
      Ea && Ea.h() && Ea.B(b);
      Ga && Ga.h() && Ga.B(b);
      Ha && Ha.h() && Ha.B(b);
      Ja && Ja.h() && Ja.B(b);
      if (db) {
        if (
          db.scale !== b.scale ||
          db.shift !== b.shift ||
          db.color != b.color ||
          db.descriptions != b.descriptions
        )
          Aa.vd().QP(),
            Ea && Ea.h() && Ea.vd(),
            Ga && Ga.h() && Ga.vd(),
            Ha && Ha.h() && Ha.vd(),
            Ja && Ja.h() && Ja.vd(),
            T();
        db.shift !== b.shift && Aa.Qo();
        b.scroll && b.scroll != db.scroll && Aa.Qo();
      }
      Ta.K("black", b.color == a.Vm);
      Ra.K("black", b.color == a.Vm);
      Aa.W();
      Ea && Ea.h() && Ea.W();
      Ga && Ga.h() && Ga.W();
      Ha && Ha.h() && Ha.W();
      Ja && Ja.h() && Ja.W();
    }
    d();
    f();
    db = Ua(ja.ra.nd());
  }
  function G() {
    b();
    h();
    k();
    var a = ja.ra.nd();
    a && (Za.Db(a.id), cb.vc(m()));
    d();
    f();
    db = Ua(ja.ra.nd());
  }
  function F(a, b) {
    v(b);
  }
  function y(a, b) {
    r(b);
  }
  function M(a, b) {
    v(b, !0);
  }
  function D() {
    var a = ja.ra.ei,
      b;
    if (a) for (var c = 0, d = a.length; c < d; c++) (b = a[c]) && v(b);
  }
  function L(a, b) {
    e();
    k();
    za.ju.na(ja.ra.cs(b));
  }
  function B() {
    e();
    k();
  }
  function Q(b, c) {
    var d = ja.ra.nd();
    if (d && d.symbol == b && d.period == c) {
      e();
      Aa.vd();
      Ea && Ea.h() && Ea.vd();
      Ga && Ga.h() && Ga.vd();
      Ha && Ha.h() && Ha.vd();
      Ja && Ja.h() && Ja.vd();
      Ta.h(!0);
      Ra.h(!0);
      Oa.h(!0);
      var f = ja.O.Ka(d.symbol);
      bb.h(f ? f.hs() : !0);
      eb.h(!0).b("margin-left", bb.h() ? "24px" : "5px");
      Ya.h(!1);
      f = Aa.ef();
      d = ja.ef.u(d.symbol, d.period);
      f === d
        ? (Aa && Aa.JP().W(),
          Ea && Ea.h() && Ea.W(),
          Ga && Ga.h() && Ga.W(),
          Ha && Ha.h() && Ha.W(),
          Ja && Ja.h() && Ja.W())
        : (h(), k(), a());
    }
  }
  function N(a) {
    var b = ja.ra.nd();
    b &&
      b.symbol == a &&
      (h(),
      b.scroll &&
        !Aa.lU() &&
        (Aa.Qo().W(),
        Ea && Ea.h() && Ea.W(),
        Ga && Ga.h() && Ga.W(),
        Ha && Ha.h() && Ha.W(),
        Ja && Ja.h() && Ja.W()));
  }
  function K() {
    ja.ra.M("change");
  }
  function P(a, b, c, d) {
    this && ja.ra.nd() && (a = ja.ra.ZP(this.sl(), a, c, d)) && (b.w = a);
  }
  function T() {
    var a = ja.ra.nd();
    if (
      a &&
      (Aa.W(),
      Ea && Ea.h() && Ea.W(),
      Ga && Ga.h() && Ga.W(),
      Ha && Ha.h() && Ha.W(),
      Ja && Ja.h() && Ja.W(),
      a.from < 2 * Aa.Gn)
    )
      return Ma.xc.GW(a.symbol, a.period), !0;
  }
  function R() {
    Aa && Aa.tm() && Aa.W();
    Ea && Ea.h() && Ea.W();
    Ga && Ga.h() && Ga.W();
    Ha && Ha.h() && Ha.W();
    Ja && Ja.h() && Ja.W();
  }
  function H() {
    gb = this;
  }
  function S() {
    gb = null;
  }
  function Z(a, b) {
    Xa = ab = null;
    $a = b;
    f();
  }
  function W() {
    $a = null;
    f();
  }
  function Y(a, b) {
    var c = ja.ra.ds(b);
    c && za.mx.ha().na(c);
  }
  function V() {
    ja.ra.qo();
  }
  function ea(a, b, c) {
    ab = $a = null;
    Xa = [b, c].join("_");
    f();
  }
  function ha() {
    Xa = null;
    f();
  }
  function fa(a, b) {
    if (Ma.P.ih()) {
      var c = ja.P.df(b);
      c ? za.Jb.Tq(c.X) : (c = ja.P.fg(b)) && za.Jb.Rs(c);
    }
  }
  function aa(a, b) {
    if (Ma.P.ih()) {
      var c = ja.P.df(b);
      c
        ? Ma.Ag.Fs(c, c.Cr, c.Na, c.mi, c.ni)
        : (c = ja.P.fg(b)) && Ma.Ag.Ks(c, c.mi, c.ni);
    }
  }
  function X(a, b) {
    Xa = $a = null;
    ab = b;
    f();
  }
  function ga() {
    ab = null;
    f();
  }
  function U(a, b) {
    var c = ja.ra.cs(b);
    c && za.ju.na(c);
  }
  function ba(a) {
    var b = [];
    if (a) {
      var c = 2,
        d = Aa.B();
      d && (c = d.digits);
      b.push('<span class="v date">' + u(a[0]) + "</span>");
      b.push('<span class="v">O: ' + a[1].toFixed(c) + "</span>");
      b.push('<span class="v">H: ' + a[2].toFixed(c) + "</span>");
      b.push('<span class="v">L: ' + a[3].toFixed(c) + "</span>");
      b.push('<span class="v">C: ' + a[4].toFixed(c) + "</span>");
      c = (d && d.volumes) || 0;
      b.push(
        '<span class="v date">' +
          (c ? "V: " + (1 < c ? a[5] : a[6]) : "&nbsp;") +
          "</span>"
      );
    } else
      b.push('<span class="v date">&nbsp;</span>'),
        b.push('<span class="v">&nbsp;</span>'),
        b.push('<span class="v">&nbsp;</span>'),
        b.push('<span class="v">&nbsp;</span>'),
        b.push('<span class="v">&nbsp;</span>'),
        b.push('<span class="v date">&nbsp;</span>');
    ib.Text(b.join(""));
  }
  function da(a) {
    a = Ia.ve(a.target);
    c(a && a == Aa);
  }
  function ca(a) {
    a && a.preventDefault && a.preventDefault();
    a = a.dataTransfer;
    var b = a.types,
      c;
    if (b)
      for (var d = 0, e = b.length; d < e; d++)
        if (((c = b[d]), "mt/symbol" == c))
          return (
            (a.dropEffect = "move"), Va.K("dragenter"), Za.K("dragenter"), !1
          );
    a.dropEffect = "none";
    return !1;
  }
  function ka(a) {
    var b = Ba.wf || Ba.gh ? "Text" : "mt/symbol";
    a = a.dataTransfer.types;
    var c;
    if (a)
      for (var d = 0, e = a.length; d < e; d++)
        if (((c = a[d]), c == b)) {
          Va.K("dragenter");
          Za.K("dragenter");
          break;
        }
  }
  function oa() {
    Va.K("dragenter", !0);
    Za.K("dragenter", !0);
  }
  function ra(a) {
    a.stopPropagation && a.stopPropagation();
    Va.K("dragenter", !0);
    Za.K("dragenter", !0);
    var b;
    Ba.wf || Ba.gh
      ? ((a = a.dataTransfer.getData("Text")),
        0 === a.indexOf('{"mt') &&
          (a = JSON.parse(a)) &&
          a["mt/symbol"] &&
          (b = a["mt/symbol"]))
      : (b = a.dataTransfer.getData("mt/symbol"));
    b &&
      setTimeout(function () {
        var a = ja.ra.nd();
        Ma.xc.tn(b, (a && a.period) || xa.L.rg.Sd, !0);
      });
    return !1;
  }
  function na() {
    if (Oa.f()) {
      var a = ja.ra.nd();
      a && Ma.Ag.LB(a.symbol, Ma.Wa.zj(Oa.f()), Ca.data.eb.Ja, Ta.Pq());
    } else Oa.jb().Gb();
  }
  function sa() {
    if (Oa.f()) {
      var a = ja.ra.nd();
      a && Ma.Ag.LB(a.symbol, Ma.Wa.zj(Oa.f()), Ca.data.eb.Va, Ra.Pq());
    } else Oa.jb().Gb();
  }
  function va(a) {
    a = a.target;
    for (Pa(Da.window, "keydown", ma); a; ) {
      if ("div" == la(a) && Wa(a, "page-chart")) {
        pa(Da.window, "keydown", ma);
        break;
      }
      a = La(a);
    }
  }
  function ma(a) {
    if (Aa) {
      var b = ja.ra.nd();
      if (b) {
        var c = Aa.ef() || [],
          d = Aa.Gn,
          e = Aa.ft;
        a = a.keyCode;
        if ($a && 46 == a) ja.ra.QC($a);
        else if (36 == a)
          0 >= b.from ||
            ((b.from = 0),
            Aa.W(),
            Ea && Ea.h() && Ea.W(),
            Ga && Ga.h() && Ga.W(),
            Ha && Ha.h() && Ha.W(),
            Ja && Ja.h() && Ja.W(),
            T());
        else {
          35 == a && (b.from = c.length - d + e);
          if (37 == a) {
            if (0 >= b.from) return;
            b.from--;
          }
          39 == a && b.from++;
          if (33 == a) {
            if (0 >= b.from) return;
            b.from -= d;
          }
          34 == a && (b.from += d);
          T() ||
            (0 > b.from && (b.from = 0),
            b.from > c.length - d + e && (b.from = c.length - d + e),
            Aa.W(),
            Ea && Ea.h() && Ea.W(),
            Ga && Ga.h() && Ga.W(),
            Ha && Ha.h() && Ha.W(),
            Ja && Ja.h() && Ja.W());
        }
      }
    }
  }
  function Fa() {
    g();
  }
  function ia() {
    if (za.fd.De()) {
      var a = ja.ra.nd();
      a && za.fd.na(a.symbol);
    } else za.fd.oa();
  }
  function ya() {
    var a = !!ja.B.u("charts_one_click");
    ja.B.u("charts_one_click", !a);
  }
  var Da = E.va,
    Ba = E.Qa,
    Ia = E.ma,
    Ka = E.oc,
    xa = E.controls,
    Ca = E.V,
    ja = Ca.la,
    za = Ca.view,
    Ma = Ca.control,
    La = Da.Ad,
    la = Da.md,
    Wa = Da.wg,
    wa = Ia.bn,
    pa = Ka.i,
    Pa = Ka.hc,
    Ua = Ia.lo,
    ta = E.ba.xa,
    Na = E.Ma,
    Sa = (za.xc = {});
  Sa.ha = function () {
    if (Sa.ua) return Sa;
    var a = Da.body;
    ua = Na(xa.page.Wj).vc(A()).i("select", w);
    Ra = Na(xa.input.ZK)
      .I("SELL")
      .Pq(0)
      .cq(5)
      .K("blue left one-click")
      .h(!1)
      .i("click", sa);
    Ta = Na(xa.input.ZK)
      .I("BUY")
      .Pq(0)
      .cq(5)
      .K("blue one-click")
      .h(!1)
      .i("click", na);
    Oa = Na(xa.input.Number)
      .o("chart-one-click-volume")
      .K("one-click")
      .T(2)
      .h(!1);
    Ya = Na(xa.page.Text)
      .Text('<img src="/trade/res/i/terminal/loader.gif">')
      .K("loader")
      .h(!1);
    Aa = Na(xa.L.Zb)
      .i("mode", K)
      .i("create", P)
      .i("scrollfinish", T)
      .i("scrollprogress", R)
      .i("focus", H)
      .i("blur", S)
      .i("focusobject", Z)
      .i("blurobject", W)
      .i("doubleclickobject", Y)
      .i("changeobject", V)
      .i("focusorder", ea)
      .i("blurorder", ha)
      .i("doubleclickorder", fa)
      .i("changeorder", aa)
      .i("focusindicator", X)
      .i("blurindicator", ga)
      .i("doubleclickindicator", U)
      .i("barinfo", ba)
      .sl(0)
      .tm(!1);
    Ea = Na(xa.L.Zb)
      .i("mode", K)
      .i("create", P)
      .i("scrollfinish", T)
      .i("scrollprogress", R)
      .i("focus", H)
      .i("blur", S)
      .i("focusobject", Z)
      .i("blurobject", W)
      .i("doubleclickobject", Y)
      .i("changeobject", V)
      .i("focusorder", ea)
      .i("blurorder", ha)
      .i("doubleclickorder", fa)
      .i("changeorder", aa)
      .i("focusindicator", X)
      .i("blurindicator", ga)
      .i("doubleclickindicator", U)
      .i("barinfo", ba)
      .sl(1)
      .h(!1);
    Ga = Na(xa.L.Zb)
      .i("mode", K)
      .i("create", P)
      .i("scrollfinish", T)
      .i("scrollprogress", R)
      .i("focus", H)
      .i("blur", S)
      .i("focusobject", Z)
      .i("blurobject", W)
      .i("doubleclickobject", Y)
      .i("changeobject", V)
      .i("focusorder", ea)
      .i("blurorder", ha)
      .i("doubleclickorder", fa)
      .i("changeorder", aa)
      .i("focusindicator", X)
      .i("blurindicator", ga)
      .i("doubleclickindicator", U)
      .i("barinfo", ba)
      .sl(2)
      .h(!1);
    Ha = Na(xa.L.Zb)
      .i("mode", K)
      .i("create", P)
      .i("scrollfinish", T)
      .i("scrollprogress", R)
      .i("focus", H)
      .i("blur", S)
      .i("focusobject", Z)
      .i("blurobject", W)
      .i("doubleclickobject", Y)
      .i("changeobject", V)
      .i("focusorder", ea)
      .i("blurorder", ha)
      .i("doubleclickorder", fa)
      .i("changeorder", aa)
      .i("focusindicator", X)
      .i("blurindicator", ga)
      .i("doubleclickindicator", U)
      .i("barinfo", ba)
      .sl(3)
      .h(!1);
    Ja = Na(xa.L.Zb)
      .i("mode", K)
      .i("create", P)
      .i("scrollfinish", T)
      .i("scrollprogress", R)
      .i("focus", H)
      .i("blur", S)
      .i("focusobject", Z)
      .i("blurobject", W)
      .i("doubleclickobject", Y)
      .i("changeobject", V)
      .i("focusorder", ea)
      .i("blurorder", ha)
      .i("doubleclickorder", fa)
      .i("changeorder", aa)
      .i("focusindicator", X)
      .i("blurindicator", ga)
      .i("doubleclickindicator", U)
      .i("barinfo", ba)
      .sl(4)
      .h(!1);
    bb = Na(xa.input.io)
      .K("charts")
      .Fe(ta.vv)
      .ie(za.ce.Me("charts_depth_of_market"))
      .i("click", ia)
      .b({
        position: "absolute",
        "z-index": "999",
        "margin-top": "2px",
        "margin-left": "5px",
      })
      .h(!1);
    eb = Na(xa.input.io)
      .K("charts")
      .Fe(ta.nF)
      .ie(za.ce.Me("charts_trade_one_click"))
      .i("click", ya)
      .b({
        position: "absolute",
        "z-index": "999",
        "margin-top": "2px",
        "margin-left": "24px",
      })
      .h(!1);
    Va = Na(xa.page.ge)
      .K("frame")
      .K("right")
      .c(Ya)
      .c(Aa)
      .c(Ea)
      .c(Ga)
      .c(Ha)
      .c(Ja)
      .c(Ra)
      .c(Ta)
      .c(Oa)
      .c(bb)
      .c(eb)
      .Uc(a)
      .K("empty");
    Za = Na(xa.page.bt).K("lower").Uc(a).i("select", p).h(!1);
    fb = Na(xa.page.ge).K("chart-tabs").Uc(a).c(Za);
    cb = Na(xa.page.Eq)
      .K("chart-list")
      .i("select", n)
      .Uc(Da.body)
      .vc(m())
      .h(!1);
    ib = Na(xa.page.Text).K("charts-status-bar").Uc(a);
    a = Va.Gf();
    pa(a, "dragover", ca);
    pa(a, "dragenter", ka);
    pa(a, "dragleave", oa);
    pa(a, "drop", ra);
    pa(Va, "contextmenu", da);
    ba();
    ja.ra.i("select", G, 0);
    ja.ra.i("change", I);
    ja.ra.i("create", F);
    ja.ra.i("close", y);
    ja.ra.i("replace", M);
    ja.ra.i("start", D);
    ja.ra.i("add_indicator", L);
    ja.ra.i("update_indicator remove_indicator remove_indicator_window", B);
    ja.B.Vb("trade_default_volume", x);
    ja.B.Vb(
      "block symbols_table_columns market_watch_width books_width toolbox_height",
      C
    );
    ja.B.Vb("charts_one_click", O);
    g();
    d();
    Sa.ua = !0;
    pa(Da.body, "mousedown", va);
    pa(Da.window, "resize", Fa);
    g();
    return Sa;
  };
  Sa.Oa = function () {
    var a = ja.ra.ei,
      b;
    if (a) for (var c = 0, d = a.length; c < d; c++) (b = a[c]) && r(b);
  };
  Sa.Dd = function () {
    g();
    d();
    a();
    f();
  };
  Sa.fq = function () {
    return Aa ? Aa.Gn : 0;
  };
  Sa.wv = function (a) {
    Aa && (Aa.wv(a), Aa.W());
    return Sa;
  };
  Sa.pD = function (a) {
    Aa && (Aa.pD(a), Aa.W());
    return Sa;
  };
  var Qa = [],
    Aa,
    Ea,
    Ga,
    Ha,
    Ja,
    Va,
    ua,
    Ya,
    Za,
    fb,
    cb,
    Oa,
    Ta,
    Ra,
    bb,
    eb,
    ib,
    $a,
    Xa,
    ab,
    gb,
    db;
})();
(function () {
  function v() {
    if (!w.ua) return w;
    n = null;
    x.oa();
    return w;
  }
  function r() {
    var a = A.ra.qG() || [];
    x.Fe(
      [u.WO, " ", n.symbol, ",", z.Wp.lq(n.period), " (", a.length, ")"].join(
        ""
      )
    ).na();
    C.vc(l(a)).Db(null);
    O.g(!0);
    I.g(!0);
    G.g(!0);
  }
  function l(a) {
    var b = z.ce.Me,
      c = [],
      d,
      e,
      f,
      g;
    if (a)
      for (var h = 0, k = a.length; h < k; h++)
        if ((d = a[h]))
          (g = b(d.type.toLowerCase().replace(/\s/g, ""))),
            (e = {}),
            (e.id = d.id),
            (e.cells = []),
            c.push(e),
            (f = {}),
            (f.content = [
              '<span class="i" style="background: url(\'/trade/res/i/terminal/icons16.png\') transparent no-repeat ',
              g[1],
              " ",
              g[2],
              '"></span>&nbsp;',
              d.type,
            ].join("")),
            (f.className = "iconed"),
            e.cells.push(f),
            (f = {}),
            (f.content = m(d.name || "")),
            e.cells.push(f),
            (f = {}),
            (f.content = m(d.description || "")),
            e.cells.push(f);
    return c;
  }
  function e() {
    var a = !C.Db();
    O.g(a);
    I.g(a);
    G.g(a);
  }
  function k() {
    b();
  }
  function h() {
    var a = C.Db();
    a &&
      n &&
      (a = A.ra.ds(a)) &&
      (a.date && a.date[0]
        ? z.xc.wv(a.date[0])
        : a.value && a.value[0] && z.xc.pD(a.value[0]));
  }
  function b() {
    var a = C.Db();
    a && (a = A.ra.ds(a)) && z.mx.ha().na(a);
  }
  function a() {
    var a = C.Db();
    a && n && (A.ra.QC(a), r());
  }
  function g() {
    v();
  }
  var d = E.va,
    f = E.controls,
    c = E.V,
    z = c.view,
    A = c.la,
    m = E.ma.Kc,
    u = E.ba.xa,
    q = E.Ma,
    w = (z.ku = {});
  w.ha = function () {
    if (w.ua) return w;
    var c = { position: "absolute", right: "8px", width: "84px" };
    C = q(f.page.Yo, p)
      .T(!0)
      .Iq(!0)
      .rq(!0)
      .Av(!0)
      .h(!0)
      .K("toolbox-table borders objects")
      .i("select", e)
      .i("doubleclick", k);
    O = q(f.input.Ua).Text(u.XO).b(c).b({ top: "8px" }).i("click", h);
    I = q(f.input.Ua).Text(u.SO).b(c).b({ top: "36px" }).i("click", b);
    G = q(f.input.Ua).Text(u.QO).b(c).b({ top: "64px" }).i("click", a);
    F = q(f.input.Ua).Text(u.PO).b(c).b({ bottom: "8px" }).i("click", g);
    x = q(f.page.Window, { title: u.VO, width: 800, height: 400 })
      .Uc(d.body)
      .c(C)
      .c(O)
      .c(I)
      .c(G)
      .c(F)
      .oa();
    w.ua = !0;
    return w;
  };
  w.na = function () {
    if (!w.ua) return w;
    n = A.ra.nd();
    x.na();
    r();
    return w;
  };
  w.oa = v;
  w.Dd = function () {
    C && C.vc(l(A.ra.qG() || []));
  };
  w.De = function () {
    return !x || x.De() ? !0 : !1;
  };
  var p = {
      ej: [
        { content: u.UO, width: "180px" },
        { content: u.TO, width: "180px" },
        { content: u.RO },
      ],
    },
    n,
    x,
    C,
    O,
    I,
    G,
    F;
})();
(function () {
  function v() {
    if (q.ua) return q;
    var c = f.L.jp,
      l = { position: "absolute", bottom: "8px", width: "84px" },
      p = { position: "absolute", left: "338px", "margin-top": "-1px" },
      r = { position: "absolute", left: "322px" },
      v,
      w,
      z,
      A,
      U,
      ba,
      da,
      ca,
      ka,
      oa,
      ra,
      na,
      sa,
      va,
      ma;
    n = u(f.L.Zb)
      .b({
        position: "absolute",
        left: "8px",
        top: "8px",
        bottom: "8px",
        width: "300px",
        border: "1px solid #A0A0A0",
      })
      .sl(0)
      .dJ(!0);
    v = u(f.page.I)
      .Text(m.qP + ":")
      .b({ position: "absolute", left: "322px", top: "8px" });
    C = u(f.input.of)
      .de([
        { label: m.vP, value: c.tl },
        { label: m.uP, value: c.el },
        { label: m.tP, value: c.Vm },
      ])
      .b({ position: "absolute", left: "322px", top: "26px", width: "140px" })
      .i("change", e);
    F = u(f.input.No, "type")
      .o("type-bar")
      .b(r)
      .b({ top: "62px" })
      .i("change", h);
    A = u(f.page.I, "type-bar").Text(m.iP).b(p).b({ top: "62px" });
    y = u(f.input.No, "type")
      .o("type-quote")
      .b(r)
      .b({ top: "84px" })
      .i("change", h);
    U = u(f.page.I, "type-quote").Text(m.mP).b(p).b({ top: "84px" });
    M = u(f.input.No, "type")
      .o("type-line")
      .b(r)
      .b({ top: "106px" })
      .i("change", h);
    ba = u(f.page.I, "type-line").Text(m.rP).b(p).b({ top: "106px" });
    O = u(f.input.pa).o("foreground").b(r).b({ top: "134px" }).i("change", h);
    c = u(f.page.I, "foreground").Text(m.nP).b(p).b({ top: "134px" });
    I = u(f.input.pa).o("shift").b(r).b({ top: "156px" }).i("change", k);
    w = u(f.page.I, "shift").Text(m.pP).b(p).b({ top: "156px" });
    G = u(f.input.pa).o("scroll").b(r).b({ top: "178px" }).i("change", h);
    z = u(f.page.I, "scroll").Text(m.oP).b(p).b({ top: "178px" });
    D = u(f.input.pa).o("ohlc").b(r).b({ top: "206px" }).i("change", h);
    da = u(f.page.I, "ohlc").Text(m.BP).b(p).b({ top: "206px" });
    B = u(f.input.pa)
      .o("chart-prop-bid")
      .b(r)
      .b({ top: "228px" })
      .i("change", h);
    ka = u(f.page.I, "chart-prop-bid").Text(m.xP).b(p).b({ top: "228px" });
    L = u(f.input.pa)
      .o("chart-prop-ask")
      .b(r)
      .b({ top: "250px" })
      .i("change", h);
    ca = u(f.page.I, "chart-prop-ask").Text(m.wP).b(p).b({ top: "250px" });
    Q = u(f.input.pa)
      .o("chart-prop-last")
      .b(r)
      .b({ top: "272px" })
      .i("change", h);
    oa = u(f.page.I, "chart-prop-last").Text(m.AP).b(p).b({ top: "272px" });
    N = u(f.input.pa).o("period").b(r).b({ top: "294px" }).i("change", h);
    ra = u(f.page.I, "period").Text(m.CP).b(p).b({ top: "294px" });
    K = u(f.input.pa)
      .o("chart-prop-grid")
      .b(r)
      .b({ top: "316px" })
      .i("change", h);
    na = u(f.page.I, "chart-prop-grid").Text(m.zP).b(p).b({ top: "316px" });
    P = u(f.input.pa)
      .o("chart-prop-tick-volumes")
      .b(r)
      .b({ top: "338px" })
      .i("change", h);
    sa = u(f.page.I, "chart-prop-tick-volumes")
      .Text(m.EP)
      .b(p)
      .b({ top: "338px" });
    T = u(f.input.pa)
      .o("chart-prop-real-volumes")
      .b(r)
      .b({ top: "360px" })
      .i("change", h);
    va = u(f.page.I, "chart-prop-real-volumes")
      .Text(m.DP)
      .b(p)
      .b({ top: "360px" });
    R = u(f.input.pa)
      .o("chart-prop-desc")
      .b(r)
      .b({ top: "382px" })
      .i("change", h);
    ma = u(f.page.I, "chart-prop-desc").Text(m.yP).b(p).b({ top: "382px" });
    H = u(f.input.pa)
      .o("chart-prop-orders")
      .b(r)
      .b({ top: "404px" })
      .i("change", h);
    p = u(f.page.I, "chart-prop-orders").Text(m.FP).b(p).b({ top: "404px" });
    S = u(f.input.Ua).Text(m.kP).b(l).b({ right: "188px" }).i("click", b);
    Z = u(f.input.Ua).Text(m.jP).b(l).b({ right: "98px" }).i("click", a);
    W = u(f.input.Ua).Text(m.lP).b(l).b({ right: "8px" }).i("click", g);
    l = u(f.page.ge)
      .b({
        position: "absolute",
        left: "8px",
        right: "8px",
        top: "8px",
        bottom: "40px",
      })
      .b({ background: "#ffffff", border: "1px solid #ACACAC" })
      .c(n)
      .c(v)
      .c(C)
      .c(F)
      .c(A)
      .c(y)
      .c(U)
      .c(M)
      .c(ba)
      .c(O)
      .c(c)
      .c(I)
      .c(w)
      .c(G)
      .c(z)
      .c(D)
      .c(da)
      .c(B)
      .c(ka)
      .c(L)
      .c(ca)
      .c(Q)
      .c(oa)
      .c(N)
      .c(ra)
      .c(K)
      .c(na)
      .c(P)
      .c(sa)
      .c(T)
      .c(va)
      .c(R)
      .c(ma)
      .c(H)
      .c(p);
    x = u(f.page.Window, { title: m.MF, width: 620, height: 520 })
      .Uc(d.body)
      .c(l)
      .c(S)
      .c(Z)
      .c(W)
      .oa();
    q.ua = !0;
    return q;
  }
  function r() {
    x && x.oa();
    w = null;
    return q;
  }
  function l() {
    var a = {};
    a.id = new Date().getTime() + 1;
    a.symbol = w.symbol;
    a.symbol_name = w.symbol_name;
    a.period = w.period;
    a.color = w.color;
    a.type = w.type;
    a.foreground = w.foreground;
    a.shift = w.shift;
    a.scroll = w.scroll;
    a.ohlc = w.ohlc;
    a.bid = w.bid;
    a.ask = w.ask;
    a.last = w.last;
    a.periods = w.periods;
    a.volumes = w.volumes;
    a.grid = w.grid;
    a.descriptions = w.descriptions;
    a.orders = w.orders;
    a.scale = w.scale;
    a.digits = w.digits;
    a.windows = [];
    a.windows[0] = {};
    a.windows[0].indicators = [];
    a.windows[0].indicators[0] = {};
    a.windows[0].indicators[0].type = "Main";
    a.windows[0].indicators[0].id = new Date().getTime() + 2;
    p = a;
    n.B(p);
    n.ef(A.ef.u(p.symbol, p.period));
    n.vd();
    n.Qo();
    n.W();
    C.f(p.color);
    F.s("bar" == p.type);
    y.s("quote" == p.type);
    M.s("line" == p.type);
    O.s(!!p.foreground);
    I.s(!!p.shift);
    G.s(!!p.scroll);
    D.s(!!p.ohlc);
    B.s(!!p.bid);
    L.s(!!p.ask);
    Q.s(!!p.last);
    N.s(!!p.periods);
    K.s(!!p.grid);
    P.s(2 === p.volumes);
    T.s(1 === p.volumes);
    R.s(!!p.descriptions);
    H.s(!!p.orders);
    x.Fe([m.MF, " ", w.symbol, ",", z.Wp.lq(w.period)].join(""));
  }
  function e() {
    n && ((p.color = C.f()), n.vd(), n.W());
  }
  function k() {
    n && ((p.shift = I.s()), n.vd(), n.Qo(), n.W());
  }
  function h() {
    "chart-prop-tick-volumes" == this.o() && T.s(!1);
    "chart-prop-real-volumes" == this.o() && P.s(!1);
    F.s() && (p.type = "bar");
    y.s() && (p.type = "quote");
    M.s() && (p.type = "line");
    p.foreground = O.s();
    p.shift = I.s();
    p.scroll = G.s();
    p.ohlc = D.s();
    p.bid = B.s();
    p.ask = L.s();
    p.last = Q.s();
    p.periods = N.s();
    p.grid = K.s();
    p.descriptions = R.s();
    p.orders = H.s();
    p.volumes = 0;
    P.s() && (p.volumes = 2);
    T.s() && (p.volumes = 1);
    n.Qo();
    n.W();
  }
  function b() {
    w.color = p.color;
    w.type = p.type;
    w.foreground = p.foreground;
    w.shift = p.shift;
    w.scroll = p.scroll;
    w.ohlc = p.ohlc;
    w.bid = p.bid;
    w.ask = p.ask;
    w.last = p.last;
    w.periods = p.periods;
    w.volumes = p.volumes;
    w.grid = p.grid;
    w.descriptions = p.descriptions;
    w.orders = p.orders;
    A.ra.M("change");
    A.B.u("charts_color_scheme", w.color);
    r();
  }
  function a() {
    r();
  }
  function g() {
    l();
  }
  var d = E.va,
    f = E.controls,
    c = E.V,
    z = c.view,
    A = c.la,
    m = E.ba.xa,
    u = E.Ma,
    q = (z.OP = {});
  q.ha = v;
  q.na = function () {
    q.ua || v();
    w = A.ra.nd();
    x.na();
    l();
    return q;
  };
  q.oa = r;
  var w, p, n, x, C, O, I, G, F, y, M, D, L, B, Q, N, K, P, T, R, H, S, Z, W;
})();
(function () {
  function v() {
    if (w.ua) return w;
    var c = { position: "absolute", right: "8px", width: "84px" };
    x = q(f.page.dL)
      .b({
        margin: "8px 100px 8px 8px",
        height: "180px",
        "margin-right": "100px",
      })
      .i("select", k)
      .i("dblclick", h);
    C = q(f.input.Ua).Text(u.LT).b(c).b({ top: "8px" }).i("click", b);
    O = q(f.input.Ua).Text(u.MT).b(c).b({ top: "36px" }).i("click", a);
    I = q(f.input.Ua).Text(u.JT).b(c).b({ bottom: "8px" }).i("click", g);
    n = q(f.page.Window, { title: u.ZG, width: 420, height: 240 })
      .Uc(d.body)
      .c(x)
      .c(C)
      .c(O)
      .c(I)
      .oa();
    w.ua = !0;
    return w;
  }
  function r() {
    if (!w.ua) return w;
    p = null;
    n.oa();
    return w;
  }
  function l() {
    n.Fe([u.ZG, " ", p.symbol, ",", z.Wp.lq(p.period)].join("")).na();
    x.vc(e()).Db(null);
    C.g(!0);
    O.g(!0);
  }
  function e() {
    var a = z.ce.Me,
      b = a("indicator_window"),
      c = a("indicator"),
      d,
      e,
      f,
      g,
      h,
      k = { id: "terminal" };
    k.icon = a("terminal");
    k.label = [p.symbol, z.Wp.lq(p.period)].join();
    k.items = [];
    if (p && (a = p.windows))
      for (var l = 0, n = a.length; l < n; l++)
        if ((d = a[l]))
          if (
            ((g = {}),
            (g.id = "window_" + l),
            (g.label = 0 === l ? u.KT : u.NT + " " + l),
            (g.icon = b),
            (g.items = []),
            k.items.push(g),
            (d = d.indicators))
          )
            for (var q = 0, r = d.length; q < r; q++)
              (e = d[q]) &&
                "Main" != e.type &&
                ((f = e.instance),
                (h = {}),
                (h.id = ["indicator", e.id].join("_")),
                (h.label = m(f ? f.tc() : e.type)),
                (h.icon = c),
                g.items.push(h));
    return k;
  }
  function k() {
    var a = "indicator" != x.Db().split("_")[0];
    C.g(a);
    O.g(a);
  }
  function h() {
    b();
  }
  function b() {
    var a = x.Db();
    a && (a = a.split("_")[1]) && (a = A.ra.cs(a)) && z.ju.na(a);
  }
  function a() {
    var a = x.Db();
    a && (a = a.split("_")[1]) && (A.ra.PC(a), l());
  }
  function g() {
    r();
  }
  var d = E.va,
    f = E.controls,
    c = E.V,
    z = c.view,
    A = c.la,
    m = E.ma.Kc,
    u = E.ba.xa,
    q = E.Ma,
    w = (z.RF = {});
  w.ha = v;
  w.na = function () {
    w.ua || v();
    p = A.ra.nd();
    n.na();
    l();
    return w;
  };
  w.oa = r;
  var p, n, x, C, O, I;
})();
(function () {
  function v() {
    if (u.ua) return u;
    var c = { position: "absolute", bottom: "10px", width: "84px" };
    x = m(f.page.bt)
      .vc(w)
      .K("prop")
      .b({
        position: "absolute",
        left: "10px",
        right: "10px",
        top: "10px",
        zIndex: "3001",
      })
      .i("select", e);
    C = m(f.input.Ua).Text(A.yF).b(c).b("right", "102px").i("click", h);
    O = m(f.input.Ua).Text(A.xF).b(c).b("right", "10px").i("click", b);
    var c = {
        position: "absolute",
        width: "98px",
        "text-align": "right",
        left: "0",
      },
      l = { position: "absolute", left: "104px", right: "20px" },
      p = { position: "absolute", left: "104px" };
    G = m(f.page.Text, "charts-object-prop-name")
      .Text(A.eP + ":")
      .b(c)
      .b({ top: "20px" });
    F = m(f.input.Text)
      .o("charts-object-prop-name")
      .b(l)
      .b({ top: "16px" })
      .i("change", k)
      .i("keydown", k)
      .i("keyup", k)
      .i("paste", k);
    y = m(f.page.Text, "charts-object-prop-desc")
      .Text(A.dP + ":")
      .b(c)
      .b({ top: "52px" });
    M = m(f.input.Text)
      .o("charts-object-prop-desc")
      .FW()
      .b(l)
      .b({ top: "48px" });
    c.left = "122px";
    c.width = "auto";
    c["text-align"] = "left";
    Q = m(f.input.pa).o("obj_prop_common_background").b(p).b({ top: "82px" });
    B = m(f.page.I, "obj_prop_common_background")
      .Text(A.bP)
      .b(c)
      .b({ top: "81px" });
    L = m(f.input.pa).o("obj_prop_common_disabled").b(p).b({ top: "106px" });
    D = m(f.page.I, "obj_prop_common_disabled")
      .Text(A.gP)
      .b(c)
      .b({ top: "105px" });
    p.left = "70px";
    c.left = "88px";
    K = m(f.input.pa)
      .o("obj_prop_period_all")
      .b(p)
      .b({ top: "20px" })
      .i("change", g);
    P = m(f.page.I, "obj_prop_period_all").Text(A.AF).b(c).b({ top: "18px" });
    T = m(f.input.pa).o("obj_prop_period_m1").b(p).b({ top: "50px" });
    R = m(f.page.I, "obj_prop_period_m1").Text(A.EF).b(c).b({ top: "48px" });
    H = m(f.input.pa).o("obj_prop_period_m5").b(p).b({ top: "74px" });
    S = m(f.page.I, "obj_prop_period_m5").Text(A.HF).b(c).b({ top: "72px" });
    Z = m(f.input.pa).o("obj_prop_period_m15").b(p).b({ top: "98px" });
    W = m(f.page.I, "obj_prop_period_m15").Text(A.FF).b(c).b({ top: "96px" });
    p.left = "194px";
    c.left = "212px";
    Y = m(f.input.pa).o("obj_prop_period_m30").b(p).b({ top: "50px" });
    V = m(f.page.I, "obj_prop_period_m30").Text(A.GF).b(c).b({ top: "48px" });
    ea = m(f.input.pa).o("obj_prop_period_h1").b(p).b({ top: "74px" });
    ha = m(f.page.I, "obj_prop_period_h1").Text(A.CF).b(c).b({ top: "72px" });
    fa = m(f.input.pa).o("obj_prop_period_h4").b(p).b({ top: "98px" });
    aa = m(f.page.I, "obj_prop_period_h4").Text(A.DF).b(c).b({ top: "96px" });
    p.left = "310px";
    c.left = "328px";
    X = m(f.input.pa).o("obj_prop_period_d1").b(p).b({ top: "50px" });
    ga = m(f.page.I, "obj_prop_period_d1").Text(A.BF).b(c).b({ top: "48px" });
    U = m(f.input.pa).o("obj_prop_period_w1").b(p).b({ top: "74px" });
    ba = m(f.page.I, "obj_prop_period_w1").Text(A.JF).b(c).b({ top: "72px" });
    da = m(f.input.pa).o("obj_prop_period_mn").b(p).b({ top: "98px" });
    ca = m(f.page.I, "obj_prop_period_mn").Text(A.IF).b(c).b({ top: "96px" });
    N = m(f.page.ge).b({ position: "absolute" });
    I = m(f.page.ge)
      .b({
        position: "absolute",
        left: "10px",
        right: "10px",
        top: "31px",
        bottom: "42px",
        border: "1px solid #ACACAC",
        background: "#ffffff",
        zIndex: "3000",
      })
      .c(G)
      .c(F)
      .c(y)
      .c(M)
      .c(B)
      .c(Q)
      .c(D)
      .c(L)
      .c(N)
      .c(K)
      .c(P)
      .c(T)
      .c(R)
      .c(H)
      .c(S)
      .c(Z)
      .c(W)
      .c(Y)
      .c(V)
      .c(ea)
      .c(ha)
      .c(fa)
      .c(aa)
      .c(X)
      .c(ga)
      .c(U)
      .c(ba)
      .c(da)
      .c(ca);
    n = m(f.page.Window, { title: A.fP, width: 460, height: 284 })
      .Uc(d.body)
      .c(x)
      .c(I)
      .c(C)
      .c(O)
      .i("close", a)
      .b({ "z-index": "15001" })
      .oa();
    u.ua = !0;
    return u;
  }
  function r() {
    if (!u.ua) return u;
    p = null;
    n.oa();
    return u;
  }
  function l(a) {
    var b = [];
    b.push(w[0]);
    a && b.push(w[1]);
    b.push(w[2]);
    return b;
  }
  function e() {
    var a = x.Db(),
      b = "common" == a,
      c = "params" == a,
      a = "visual" == a;
    G.h(b);
    F.h(b);
    y.h(b);
    M.h(b);
    B.h(b);
    Q.h(b);
    D.h(b);
    L.h(b);
    N.h(c);
    K.h(a);
    P.h(a);
    T.h(a);
    R.h(a);
    H.h(a);
    S.h(a);
    Z.h(a);
    W.h(a);
    Y.h(a);
    V.h(a);
    ea.h(a);
    ha.h(a);
    fa.h(a);
    aa.h(a);
    X.h(a);
    ga.h(a);
    U.h(a);
    ba.h(a);
    da.h(a);
    ca.h(a);
  }
  function k() {
    C.g(!F.f());
  }
  function h() {
    var a = p.instance;
    a && a.lb && a.lb();
    p.name = F.f();
    p.description = M.f();
    p.background = Q.s();
    p.disabled = L.s();
    var b = 0;
    K.s()
      ? (b = q.Kd)
      : (T.s() && (b |= q.Ve),
        H.s() && (b |= q.Pe),
        Z.s() && (b |= q.Ne),
        Y.s() && (b |= q.Oe),
        ea.s() && (b |= q.Sd),
        fa.s() && (b |= q.pe),
        X.s() && (b |= q.Ce),
        U.s() && (b |= q.ze),
        da.s() && (b |= q.Zj));
    p.period_flags = b;
    a && a.v && a.Ha(a.v);
    r();
    c.la.ra.qo();
    z.ku.De() || z.ku.Dd();
  }
  function b() {
    r();
  }
  function a() {
    r();
  }
  function g() {
    var a = K.s();
    T.g(a);
    H.g(a);
    Z.g(a);
    Y.g(a);
    ea.g(a);
    fa.g(a);
    X.g(a);
    U.g(a);
    da.g(a);
  }
  var d = E.va,
    f = E.controls,
    c = E.V,
    z = c.view,
    A = E.ba.xa,
    m = E.Ma,
    u = (z.mx = {});
  u.ha = v;
  u.na = function (a) {
    u.ua || v();
    p = a;
    F.f(p.name || "");
    M.f(p.description || "");
    Q.s(p.background || !1);
    L.s(p.disabled || !1);
    a = p.period_flags;
    a == q.Kd
      ? (K.s(!0),
        T.s(!1),
        H.s(!1),
        Z.s(!1),
        Y.s(!1),
        ea.s(!1),
        fa.s(!1),
        X.s(!1),
        U.s(!1),
        da.s(!1))
      : (K.s(!1),
        T.s(!!(a & q.Ve)),
        H.s(!!(a & q.Pe)),
        Z.s(!!(a & q.Ne)),
        Y.s(!!(a & q.Oe)),
        ea.s(!!(a & q.Sd)),
        fa.s(!!(a & q.pe)),
        X.s(!!(a & q.Ce)),
        U.s(!!(a & q.ze)),
        da.s(!!(a & q.Zj)));
    g();
    a = p.instance;
    var b = 246,
      c;
    a && a.constructor && a.constructor.type && n.Fe(a.constructor.type);
    a &&
      a.kb &&
      ((c = parseInt(a.kb(N.Oa()), 10)), isNaN(c) || (b = Math.max(c, b)));
    x.vc(l(a && a.kb)).Db("common");
    e();
    n.na();
    n.$l(b);
    setTimeout(function () {
      F.jb().Gb();
    }, 100);
    return u;
  };
  u.oa = r;
  var q = {
    Ve: 1,
    Pe: 2,
    Ne: 4,
    Oe: 8,
    Sd: 16,
    pe: 32,
    Ce: 64,
    ze: 128,
    Zj: 256,
  };
  q.Kd = q.Ve | q.Pe | q.Ne | q.Oe | q.Sd | q.pe | q.Ce | q.ze | q.Zj;
  var w = [
      { id: "common", label: A.cP },
      { id: "params", label: A.zF },
      { id: "visual", label: A.KF },
    ],
    p,
    n,
    x,
    C,
    O,
    I,
    G,
    F,
    y,
    M,
    D,
    L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha,
    fa,
    aa,
    X,
    ga,
    U,
    ba,
    da,
    ca;
})();
(function () {
  function v() {
    if (z.ua) return z;
    var d = { position: "absolute", bottom: "10px", width: "84px" };
    q = c(g.page.bt)
      .vc(A)
      .Db("params")
      .K("prop")
      .b({
        position: "absolute",
        left: "10px",
        right: "10px",
        top: "10px",
        zIndex: "3001",
      })
      .i("select", l);
    w = c(g.input.Ua).Text(f.yF).b(d).b("right", "102px").i("click", e);
    p = c(g.input.Ua).Text(f.xF).b(d).b("right", "10px").i("click", k);
    var d = {
        position: "absolute",
        width: "98px",
        "text-align": "right",
        left: "0",
      },
      m = { position: "absolute", left: "104px" };
    d.left = "122px";
    d.width = "auto";
    d["text-align"] = "left";
    m.left = "70px";
    d.left = "88px";
    C = c(g.input.pa)
      .o("ind_prop_period_all")
      .b(m)
      .b({ top: "20px" })
      .i("change", b);
    O = c(g.page.I, "ind_prop_period_all").Text(f.AF).b(d).b({ top: "18px" });
    I = c(g.input.pa).o("ind_prop_period_m1").b(m).b({ top: "50px" });
    G = c(g.page.I, "ind_prop_period_m1").Text(f.EF).b(d).b({ top: "48px" });
    F = c(g.input.pa).o("ind_prop_period_m5").b(m).b({ top: "74px" });
    y = c(g.page.I, "ind_prop_period_m5").Text(f.HF).b(d).b({ top: "72px" });
    M = c(g.input.pa).o("ind_prop_period_m15").b(m).b({ top: "98px" });
    D = c(g.page.I, "ind_prop_period_m15").Text(f.FF).b(d).b({ top: "96px" });
    m.left = "194px";
    d.left = "212px";
    L = c(g.input.pa).o("ind_prop_period_m30").b(m).b({ top: "50px" });
    B = c(g.page.I, "ind_prop_period_m30").Text(f.GF).b(d).b({ top: "48px" });
    Q = c(g.input.pa).o("ind_prop_period_h1").b(m).b({ top: "74px" });
    N = c(g.page.I, "ind_prop_period_h1").Text(f.CF).b(d).b({ top: "72px" });
    K = c(g.input.pa).o("ind_prop_period_h4").b(m).b({ top: "98px" });
    P = c(g.page.I, "ind_prop_period_h4").Text(f.DF).b(d).b({ top: "96px" });
    m.left = "310px";
    d.left = "328px";
    T = c(g.input.pa).o("ind_prop_period_d1").b(m).b({ top: "50px" });
    R = c(g.page.I, "ind_prop_period_d1").Text(f.BF).b(d).b({ top: "48px" });
    H = c(g.input.pa).o("ind_prop_period_w1").b(m).b({ top: "74px" });
    S = c(g.page.I, "ind_prop_period_w1").Text(f.JF).b(d).b({ top: "72px" });
    Z = c(g.input.pa).o("ind_prop_period_mn").b(m).b({ top: "98px" });
    W = c(g.page.I, "ind_prop_period_mn").Text(f.IF).b(d).b({ top: "96px" });
    x = c(g.page.ge).b({ position: "absolute" });
    n = c(g.page.ge)
      .b({
        position: "absolute",
        left: "10px",
        right: "10px",
        top: "31px",
        bottom: "42px",
        border: "1px solid #ACACAC",
        background: "#ffffff",
        zIndex: "3000",
      })
      .c(x)
      .c(C)
      .c(O)
      .c(I)
      .c(G)
      .c(F)
      .c(y)
      .c(M)
      .c(D)
      .c(L)
      .c(B)
      .c(Q)
      .c(N)
      .c(K)
      .c(P)
      .c(T)
      .c(R)
      .c(H)
      .c(S)
      .c(Z)
      .c(W);
    u = c(g.page.Window, { title: f.PT, width: 460, height: 280 })
      .Uc(a.body)
      .c(q)
      .c(n)
      .c(w)
      .c(p)
      .i("close", h)
      .b({ "z-index": "15001" })
      .oa();
    z.ua = !0;
    return z;
  }
  function r() {
    if (!z.ua) return z;
    m = null;
    u.oa();
    return z;
  }
  function l() {
    var a = q.Db(),
      b = "visual" == a;
    x.h("params" == a);
    C.h(b);
    O.h(b);
    I.h(b);
    G.h(b);
    F.h(b);
    y.h(b);
    M.h(b);
    D.h(b);
    L.h(b);
    B.h(b);
    Q.h(b);
    N.h(b);
    K.h(b);
    P.h(b);
    T.h(b);
    R.h(b);
    H.h(b);
    S.h(b);
    Z.h(b);
    W.h(b);
  }
  function e() {
    var a = g.L.Fl,
      b = m.instance;
    b && b.lb && b.lb();
    var c = 0;
    C.s()
      ? (c = a.Kd)
      : (I.s() && (c |= a.Ve),
        F.s() && (c |= a.Pe),
        M.s() && (c |= a.Ne),
        L.s() && (c |= a.Oe),
        Q.s() && (c |= a.Sd),
        K.s() && (c |= a.pe),
        T.s() && (c |= a.Ce),
        H.s() && (c |= a.ze),
        Z.s() && (c |= a.Zj));
    m.period_flags = c;
    m.temp && ((m.temp = null), delete m.temp);
    b && (b.Lf && b.Lf(), b.v && b.Ha(b.v));
    r();
    d.la.ra.M("update_indicator");
    d.la.ra.qo();
  }
  function k() {
    m.temp && (d.la.ra.PC(m.id), d.la.ra.qo());
    r();
  }
  function h() {
    k();
  }
  function b() {
    var a = C.s();
    I.g(a);
    F.g(a);
    M.g(a);
    L.g(a);
    Q.g(a);
    K.g(a);
    T.g(a);
    H.g(a);
    Z.g(a);
  }
  var a = E.va,
    g = E.controls,
    d = E.V,
    f = E.ba.xa,
    c = E.Ma,
    z = (d.view.ju = {});
  z.ha = v;
  z.na = function (a) {
    var c = g.L.Fl;
    z.ua || v();
    m = a;
    a = m.period_flags;
    a == c.Kd
      ? (C.s(!0),
        I.s(!1),
        F.s(!1),
        M.s(!1),
        L.s(!1),
        Q.s(!1),
        K.s(!1),
        T.s(!1),
        H.s(!1),
        Z.s(!1))
      : (C.s(!1),
        I.s(!!(a & c.Ve)),
        F.s(!!(a & c.Pe)),
        M.s(!!(a & c.Ne)),
        L.s(!!(a & c.Oe)),
        Q.s(!!(a & c.Sd)),
        K.s(!!(a & c.pe)),
        T.s(!!(a & c.Ce)),
        H.s(!!(a & c.ze)),
        Z.s(!!(a & c.Zj)));
    b();
    c = m.instance;
    a = 240;
    c && (c.tc && u.Fe(c.tc()), c.kb && (a = Math.max(c.kb(x.Oa() || 0), a)));
    l();
    u.na();
    u.$l(a);
    return z;
  };
  z.oa = r;
  var A = [
      { id: "params", label: f.zF },
      { id: "visual", label: f.KF },
    ],
    m,
    u,
    q,
    w,
    p,
    n,
    x,
    C,
    O,
    I,
    G,
    F,
    y,
    M,
    D,
    L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W;
})();
(function () {
  function v() {
    y && y.oa();
    N && N.f("");
    return F;
  }
  function r() {
    C.du.get(
      "https://trade.mql5.com/trade/servers",
      { version: 5, all: 1 },
      {
        Ew: function (a) {
          a = window.JSON.parse(a) || {};
          L.u(a.mt5 || []);
        },
        onerror: function () {},
      }
    );
  }
  function l() {
    var a = [],
      b,
      c = {},
      d = F.fj,
      e;
    if (d && d.length) {
      b = {};
      for (var f = 0, g = d.length; f < g; f++)
        (e = d[f]) && e.name && (b[e.name] = !0);
    }
    if ((d = O.la.$c.bs(5)))
      for (f = 0, g = d.length; f < g; f++)
        !(e = d[f]) ||
          (b && !b[e.Pf]) ||
          !e.ga ||
          c[e.ga] ||
          (a.push(e.ga), (c[e.ga] = 1));
    return a;
  }
  function e() {
    var a = [],
      b = {},
      c = F.fj,
      d;
    if (c)
      for (var e = 0, f = c.length; e < f; e++)
        (d = c[e]) &&
          (d = d.name) &&
          !b[d] &&
          ((b[d] = 1), a.push({ label: d, value: d }));
    return a;
  }
  function k() {
    var a = I.BH;
    p.Rj || (a = a.split("%TECH%").join(I.zH));
    p.eh || (a = a.split("%TECH%").join(I.AH));
    p.sr || (a = a.split("%TECH%").join(I.CH));
    return a;
  }
  function h() {
    v();
  }
  function b(a) {
    O.control.Bb.Vr(M.f(), N.f(), L.h() ? L.f() : B.f(), P.f(), a);
  }
  function a() {
    O.view.fc.Ps();
  }
  function g() {
    var a = M.f(),
      b = N.f(),
      c = L.h() ? L.f() : B.f(),
      d = !1,
      a = !a || !/^\d+$/.test(a) || !parseInt(a, 10);
    H.g() || ((!a && b && c) || (d = !0), M.K("invalid", !a), R.g(d));
  }
  function d(a) {
    a && 13 == a.keyCode && !R.g() && b();
  }
  function f() {
    C.rb.eK();
    v();
  }
  function c(a) {
    var c = O.la.$c,
      d = M.f();
    if (d) {
      var e = c.bs(5),
        f,
        h;
      if (e)
        for (var k = 0, l = e.length; k < l; k++)
          if ((f = e[k]) && f.ga == d && (h = f.Pf)) {
            L.h() && L.f(h);
            B.h() && B.f(h);
            g();
            if (
              C.bd.mH() &&
              (e = f.xE) &&
              ((e = e.split(",")), -1 == e.indexOf(C.bd.wx() + ""))
            )
              return;
            c.Dx(d, h, function (c) {
              N.f(c);
              g();
              z();
              P.h() && P.jb();
              !a ||
                ("keydown" != a.type && "keyup" != a.type) ||
                13 != a.keyCode ||
                b();
            });
            return;
          }
    }
    z();
  }
  function z() {
    var a = M.f();
    if (a) {
      var b = O.la.$c.bs(),
        c;
      if (b)
        for (var d = 0, e = b.length; d < e; d++)
          if ((c = b[d]) && c.ga == a && c.Li) {
            P.h() || F.na(!0);
            return;
          }
    }
    P.h() && F.na(!1);
  }
  function A(a) {
    a && 13 === a.keyCode && (this.Up(), d(a));
  }
  function m() {
    "mt4-platform" == this.o() && u();
  }
  function u() {
    var a = window.location.href,
      b = x.kq(a);
    b.version = 4;
    b.login && ((b.login = null), delete b.login);
    b.trade_server && ((b.trade_server = null), delete b.trade_server);
    "no_autologin" == b.startup_mode &&
      ((b.startup_mode = null), delete b.startup_mode);
    b.referrer = C.bd.Uh();
    C.bd.Yr(function (c) {
      b.ref = c;
      window.location.href = x.xq(a, b);
    });
  }
  function q() {
    ea.s(!0);
    ha.oa();
  }
  var w = E.va,
    p = E.Qa,
    n = E.controls,
    x = E.ma,
    C = E.ba,
    O = E.V,
    I = E.ba.xa,
    G = E.Ma,
    F = (E.V.view.Bb = {});
  F.ha = function () {
    var e = O.control.Bb.Ww,
      l = O.control.Bb.Ho(),
      x = {
        position: "absolute",
        width: "130px",
        left: "0",
        textAlign: "right",
        lineHeight: "23px",
        "padding-top": "1px",
      },
      v = { position: "absolute", width: "128px", left: "135px" },
      U = {
        position: "absolute",
        bottom: "10px",
        width: "80px",
        left: "135px",
      },
      ba = 440,
      da = e ? 240 : 214;
    "de" == C.xa.Db() && (ba += 20);
    var ca = G(n.page.Text)
        .Text(I.PU)
        .b({ lineHeight: "38px", textAlign: "center" }),
      ka = G(n.page.Text, "login")
        .Text(I.HU + ":")
        .b(x)
        .b({ top: "40px" });
    M = G(n.input.Text, "combobox")
      .o("login")
      .f("")
      .b(v)
      .b({ top: "40px" })
      .K("login")
      .i("keydown", g)
      .i("keyup", g)
      .i("change", g)
      .i("blur", z)
      .i("select", c);
    var oa = G(n.page.I, "password")
      .Text(I.IU + ":")
      .b(x)
      .b({ top: "70px" });
    N = G(n.input.Text, "password")
      .o("password")
      .f("")
      .b(v)
      .b({ top: "70px" })
      .i("change", g)
      .i("keyup", g)
      .i("keydown", g)
      .i("keydown", d);
    var ra = G(n.page.I, "save")
      .Text(I.LU)
      .Fe(I.KU)
      .b({ position: "absolute", top: "75px", left: "284px" });
    Q = G(n.input.pa).o("save").s(F.w4).b(v).b({
      top: "76px",
      width: "auto",
      left: "268px",
    });
    K = G(n.page.Text, "otp")
      .Text("One-time password:")
      .b(x)
      .b({ top: "100px" })
      .h(!1);
    P = G(n.input.Text)
      .o("otp")
      .f("")
      .b(v)
      .b({ top: "100px" })
      .h(!1)
      .i("change", g)
      .i("keyup", g)
      .i("keydown", g)
      .i("keydown", d);
    D = G(n.page.Text, "server")
      .Text(I.MU + ":")
      .b(x)
      .b({ top: "100px" });
    L = G(n.input.Text)
      .zx()
      .gx()
      .o("server")
      .b(v)
      .b({ top: "100px", width: "245px" })
      .h(!F.fj || !F.fj.length)
      .i("keydown", g)
      .i("keydown", A)
      .i("keyup", g)
      .i("change", g);
    Z = G(n.page.Text)
      .Text(I.JU + ":")
      .b(x)
      .h(e)
      .b({ top: "132px", "line-height": "" });
    W = G(n.page.Text, "mt5-platform")
      .Text("MetaTrader 5")
      .h(e)
      .b({ position: "absolute", top: "133px", left: "152px" });
    ea = G(n.input.No, "platform")
      .o("mt5-platform")
      .s(!0)
      .b(v)
      .b({ top: "135px", width: "auto" })
      .h(e)
      .i("change", m);
    Y = G(n.page.Text, "mt4-platform")
      .Text("MetaTrader 4")
      .h(e)
      .b({
        position: "absolute",
        top: "133px",
        left: "152px",
        "margin-left": "94px",
      });
    V = G(n.input.No, "platform")
      .o("mt4-platform")
      .b(v)
      .b({ top: "135px", width: "auto", "margin-left": "94px" })
      .h(e)
      .i("change", m);
    x = G(n.page.Text).b({
      position: "absolute",
      bottom: "42px",
      left: "10px",
      right: "10px",
      height: "1px",
      background: "#A0A0A0",
      "border-bottom": "1px solid #FFFFFF",
    });
    R = G(n.input.Ua).Text(I.GU).b(U).i("click", b);
    H = G(n.input.Ua)
      .Text(I.gB)
      .b(U)
      .b({ "margin-left": "86px" })
      .i("click", h);
    S = G(n.input.Ua)
      .Text(I.EU)
      .Fe(I.FU)
      .b(U)
      .b({ left: "10px", width: "60px" })
      .i("click", a);
    B = G(n.input.of)
      .o("server")
      .b(v)
      .h((F.fj && F.fj.length) || !1)
      .b({ top: "100px", width: "245px" })
      .i("change", g);
    (p.eh && p.sr) ||
      ((T = G(n.page.Text)
        .b({
          position: "absolute",
          left: "40px",
          right: "40px",
          top: e ? "186px" : "156px",
          textAlign: "center",
          color: "#dd0000",
        })
        .Text(k())),
      (da += 44),
      (ba += 20),
      M.g(!0),
      N.g(!0),
      P.g(!0),
      L.g(!0),
      B.g(!0),
      Q.g(!0),
      R.g(!0),
      H.g(!0));
    p.Rj || Q.g(!0).s(!1);
    p.indexedDB || p.Pd || Q.g(!0).s(!1);
    y = G(n.page.Window, { title: I.QU, width: ba, height: da, Qk: !0 })
      .i("close", f)
      .Uc(w.body)
      .c(ca)
      .c(ka)
      .c(M)
      .c(oa)
      .c(N)
      .c(ra)
      .c(Q)
      .c(K)
      .c(P)
      .c(D)
      .c(L)
      .c(B)
      .c(Z)
      .c(Y)
      .c(V)
      .c(W)
      .c(ea)
      .c(x)
      .c(S)
      .c(R)
      .c(H)
      .K("login-form" + (l ? " simple" : ""))
      .oa();
    y.$j("real_height", da);
    T && y.c(T);
    e = G(n.input.Ua)
      .Text(I.yH)
      .b(U)
      .b({
        right: "50%",
        "margin-right": "3px",
        width: "100px",
      })
      .i("click", u);
    U = G(n.input.Ua)
      .Text(I.gB)
      .b(U)
      .b({ left: "50%", "margin-left": "3px", width: "100px" })
      .i("click", q);
    v = G(n.page.Text).Text(I.NU).b({ textAlign: "center", margin: "14px" });
    ha = G(n.page.Window, { title: I.OU, width: 460, height: 150, Qk: !0 })
      .i("close", q)
      .Uc(w.body)
      .c(v)
      .c(e)
      .c(U)
      .oa();
    T && y.c(T);
    L.h() && r();
    l &&
      (ca.h(!1),
      ra.h(!1),
      Q.h(!1),
      Z.h(!1),
      Y.h(!1),
      V.h(!1),
      W.h(!1),
      ea.h(!1),
      x.h(!1),
      H.h(!1),
      S.h(!1),
      M.b("left", "140px"),
      N.b("left", "140px"),
      L.b("left", "140px"),
      P.b("left", "140px"),
      R.b("left", "140px"),
      ka.b("top", "10px"),
      M.b("top", "10px"),
      oa.b("top", "45px"),
      N.b("top", "45px"),
      D.b("top", "80px"),
      K.b("top", "80px"),
      L.b("top", "80px"),
      P.b("top", "80px"),
      R.b("top", "115px"),
      R.Text(I.DU));
    F.ua = !0;
    return F;
  };
  F.na = function (a) {
    void 0 === a && (a = !1);
    a = !!a;
    var b = O.control.Bb.Ho();
    M.g(!1);
    N.g(!1);
    L.g(!1);
    B.g(!1);
    P.g(!1).f("");
    K.h(a);
    P.h(a);
    var c = { "margin-top": a ? (b ? "35px" : "30px") : "0" };
    D.b(c);
    L.b(c);
    B.b(c);
    Z.b(c);
    Y.b(c);
    V.b(c);
    W.b(c);
    ea.b(c);
    b && R.b(c);
    y.na().$l(y.$j("real_height") + 30 * Number(a));
    M.f()
      ? N.f()
        ? P.f()
          ? L.h() && !L.f()
            ? L.jb()
            : B.h() && !B.f()
            ? B.jb()
            : M.jb().Gb()
          : P.jb()
        : N.jb()
      : M.jb();
    g();
    return F;
  };
  F.oa = v;
  F.Um = function () {
    setTimeout(
      function () {
        R.g() || (P.h() && !P.f()) || b(!0);
      },
      p.mk ? 500 : 100
    );
  };
  F.jb = function () {
    N && N.jb();
    return F;
  };
  F.Ym = function (a) {
    N && N.g(a);
    P && P.g(a);
    R && R.g(a);
    H && H.g(a);
    p.Rj || ((p.indexedDB || p.Pd) && Q && Q.g(a));
    M && M.g(a);
    L && L.g(a);
    B && B.g(a);
    return F;
  };
  F.eY = function () {
    return Q ? Q.s() : !1;
  };
  F.Oa = function (a) {
    N && N.f("");
    a && M && M.f("");
    P && P.f("");
    return F;
  };
  F.Lf = function () {
    O.control.Bb.Ho() || M.u(l());
    B.de(e());
    return F;
  };
  F.Vj = function (a, b) {
    void 0 === b && (b = !0);
    a &&
      (M.f(a.ga || "", !0),
      N.f(a.mf || ""),
      L.h() && L.f(a.nf, !0),
      B.h() && B.f(a.nf));
    g();
    b && c();
    return F;
  };
  var y, M, D, L, B, Q, N, K, P, T, R, H, S, Z, W, Y, V, ea, ha;
})();
(function () {
  function v() {
    if (X.h()) {
      var a = H.B.u("trade_table_sort");
      (-1 === a.indexOf("close_price") && -1 === a.indexOf("profit")) || g();
      X.Gh();
    }
  }
  function r() {
    var a = S.ce.Me,
      b = X.Db(),
      c = !0,
      d = !0,
      e = !0;
    if (Z.P.ih() && P.rb.ey() && ((c = !1), b && "total" !== b)) {
      b = b.split("_");
      "collateral" === b[0] && (c = !0);
      if ("position" === b[0]) {
        var c = !0,
          f = H.P.fg(b[1]);
        f && Z.P.Il(f.l) && (c = e = d = !1);
      }
      "order" === b[0] &&
        ((c = !0), (b = H.P.df(b[1])) && Z.P.Il(b.l) && (c = e = !1));
    }
    ga.ja({ id: "order_new", disabled: c, icon: a("new_order", c) })
      .ja({
        id: "order_close",
        disabled: d,
        icon: a("close_order", d),
      })
      .ja({ id: "order_modify", disabled: e, icon: a("modify_order", e) });
  }
  function l() {
    var a = H.B.u("trade_table_columns");
    0 !== (a & ea.xi) && H.P.Ij ? X.Og(2) : X.Jg(2);
    a & ea.xj ? X.Og(10) : X.Jg(10);
    a & ea.Mq ? X.Og(11) : X.Jg(11);
    a & ea.Qi ? X.Og(12) : X.Jg(12);
  }
  function e() {
    var a = H.B.u("trade_profit_unit"),
      b = H.B.u("trade_table_config"),
      c = H.B.u("trade_table_columns"),
      d = H.B.u("trade_table_volumes") || ha.mn;
    ga.ja({ id: "volumes_lots", checked: d === ha.mn })
      .ja({ id: "volumes_amounts", checked: d === ha.Hl })
      .ja({
        id: "profit_money",
        checked: a === fa.YE,
      })
      .ja({ id: "profit_points", checked: a === fa.dx })
      .ja({ id: "config_arrange", checked: !!(b & V.Rf) })
      .ja({ id: "config_seconds", checked: !!(b & V.wj) })
      .ja({ id: "columns_id", checked: !!(c & ea.xi), visible: H.P.Ij })
      .ja({ id: "columns_swap", checked: !!(c & ea.xj) })
      .ja({ id: "columns_profit", checked: !!(c & ea.Mq) })
      .ja({ id: "columns_comment", checked: !!(c & ea.Qi) });
  }
  function k() {
    var a;
    H.B.u("trade_table_volumes") === S.$i.Hl && (a = 1);
    var b = X.Ed.find(function (a) {
      return "volume" === a.id;
    });
    b && (b.Gj = a);
    X.Gh();
  }
  function h() {
    var a;
    H.B.u("trade_table_config") & V.wj && (a = 1);
    var b = X.Ed.find(function (a) {
      return "open_time" === a.id;
    });
    b && (b.Gj = a);
    X.Gh();
  }
  function b() {
    var a;
    H.B.u("trade_profit_unit") === S.H2.dx && (a = 1);
    var b = X.Ed.find(function (a) {
      return "profit" === a.id;
    });
    b && (b.Gj = a);
    X.Gh();
  }
  function a() {
    var a = X.Ed;
    if (a) {
      var b = (H.B.u("trade_table_config") || 0).ki(V.Rf);
      a.forEach(function (a) {
        a.width = null;
        if (!b) {
          var c = H.B.u("trade_table_" + a.id + "_width") || void 0;
          c && (a.width = c + "px");
        }
      });
      X.Ba && X.W();
    }
  }
  function g() {
    var a = H.B.u("trade_table_sort");
    if (a) {
      var b = X.u();
      if (b && b.length) {
        var c = b.filter(function (a) {
            return a.g4;
          }),
          d = b.filter(function (a) {
            return a.i4;
          }),
          e = b.filter(function (a) {
            return a.b4;
          }),
          f = b.filter(function (a) {
            return a.c4;
          }),
          b = b.filter(function (a) {
            return a.f4;
          });
        S.HD.bK(c, a);
        S.HD.bK(e, a);
        S.HD.L_(b, a);
        X.u([].concat(c, d, e, f, b));
      }
    }
  }
  function d() {
    var a = K.bn;
    return [
      a("order_new", W.m2, S.ce.Me("new_order")),
      a("order_close", W.$0, S.ce.Me("close_order")),
      a("order_modify", W.o1, S.ce.Me("modify_order")),
      "-",
      a("profit", W.$s, void 0, void 0, void 0, void 0, [
        a("profit_money", W.o2),
        a("profit_points", W.p2),
      ]),
      "-",
      a("config_seconds", W.oD),
      a("config_arrange", W.BD),
      "-",
      a("columns", W.b1, void 0, void 0, void 0, void 0, [
        a("columns_id", W.NK),
        a("columns_swap", W.TK),
        a("columns_profit", W.$s),
        a("columns_comment", W.LK),
      ]),
    ];
  }
  function f() {
    var a = [];
    [
      [W.r2, "symbol"],
      [W.UK, "tiket"],
      [W.NK, "id"],
      [W.s2, "open_time"],
      [W.v2, "type"],
      [W.VK, "volume"],
      [W.n2, "open_price"],
      [W.q2, "sl"],
      [W.u2, "tp"],
      [W.KK, "close_price"],
      [W.TK, "swap"],
      [W.$s, "profit"],
      [W.LK, "comment"],
    ].forEach(function (b, c) {
      var d = { id: b[1], content: b[0] },
        e = b[1];
      if ("profit" === e || "sl" === e || "tp" === e) d.close = !0;
      2 < c && (d.align = "right");
      a.push(d);
    });
    return { ej: a };
  }
  function c() {
    var a = [],
      b = 0,
      c = !1,
      d = H.P.ee || [],
      e = H.P.Yd || [],
      f = d.mp || e.mp,
      g = d.np || e.np,
      d = d.slice();
    d.sort(p);
    e = e.slice();
    e.sort(n);
    d &&
      ((b = 0),
      d.forEach(function (d) {
        d.Td() || ((a[a.length] = z(d, f, g)), (c = !0), b++);
      }),
      (a[a.length] = m(aa.rJ, c || H.P.VG())),
      (b = 0),
      d.forEach(function (c) {
        if (c.Td()) {
          var d = a.length,
            e = c.uc(),
            f = "balance";
          c.zb() && (f = "buy");
          e && (f = "sell");
          e = [];
          e[0] = w(K.Kc(c.l).toLowerCase(), f);
          e[0].uh = c.l;
          (f = H.O.Ka(c.l)) && f.yf && (e[0].title = f.yf);
          e[1] = w("");
          e[1].className = "col_span";
          e[2] = w("");
          e[2].className = "col_span";
          e[3] = w(c.Wl());
          e[3].kf = c.Wl(!0);
          e[4] = w(c.Hu());
          e[5] = w("");
          e[5].content = S.F.Ea(c.m);
          e[5].kf = S.F.Ea(S.F.um(c.m, c.Ae));
          e[6] = w("");
          e[7] = w("", "", "col_span");
          e[8] = w("", "", "col_span");
          e[9] = w(S.F.Z(c.Oc, c.j, 3));
          e[10] = w("");
          e[11] = w("", "", "col_span");
          e[12] = w(K.Kc(c.Eb));
          f = { id: "collateral_" + c.l, cells: e, b4: !0 };
          f.ka = c.ka;
          f.l = c.l;
          f.Te = c.Te;
          f.aa = c.aa;
          f.m = c.m.La();
          f.Jc = c.Jc;
          f.Mb = c.Mb;
          f.Qb = c.Qb;
          f.Oc = c.Oc;
          f.pc = c.pc;
          f.ya = c.ya;
          f.Eb = c.Eb;
          a[d] = f;
          b++;
        }
      }),
      b && (a[a.length] = u()));
    e &&
      ((e = e.slice()),
      e.sort(n),
      e.forEach(function (b) {
        a[a.length] = q(b, f, g);
      }));
    return a;
  }
  function z(a, b, c) {
    var d = a.zb(),
      e = a.uc(),
      f = "balance";
    d && (f = "buy");
    e && (f = "sell");
    var e = 0,
      e = d
        ? (a.Oc - a.Jc).normalize(a.j + 3)
        : (a.Jc - a.Oc).normalize(a.j + 3),
      e = S.F.Z(e * Math.pow(10, a.j), 0, 3),
      d = [],
      g = Z.P.ih();
    d[0] = w(K.Kc(a.l).toLowerCase(), f);
    d[0].uh = a.l;
    (f = H.O.Ka(a.l)) && f.yf && (d[0].title = f.yf);
    d[1] = w(a.ka);
    d[2] = w(K.Kc(a.hM));
    d[3] = w(a.Wl());
    d[3].kf = a.Wl(!0);
    d[4] = w(a.Hu());
    d[5] = w("");
    d[5].content = S.F.Ea(a.m);
    d[5].kf = S.F.Ea(S.F.um(a.m, a.Ae));
    d[6] = w(S.F.Z(a.Jc, a.j, 3));
    f = S.F.Z(a.Mb || 0, a.j);
    d[7] = w(f, "", A(a, "sl"));
    g &&
      (a.Mb && (d[7].zl = W.Yq + " " + f),
      (d[7].className += b && !a.Mb ? " shift" : ""));
    f = S.F.Z(a.Qb || 0, a.j);
    d[8] = w(f, "", A(a, "tp"));
    g &&
      (a.Qb && (d[8].zl = W.Zq + " " + f),
      (d[8].className += c && !a.Qb ? " shift" : ""));
    d[9] = w(S.F.Z(a.Oc, a.j, 3));
    d[10] = w((a.pc || 0).gc(a.Hc));
    d[11] = w("");
    d[11].content = a.ya.gc(a.Hc);
    d[11].kf = e;
    d[12] = w(K.Kc(a.Eb));
    g && (d[11].zl = W.a1 + " " + a.gk());
    b = "position_" + a.ka;
    c = [];
    a.Eb && c.push(K.Kc(a.Eb));
    c.push(a.oq());
    (e = a.nq()) && c.push(W.MK + " " + e);
    d = { id: b, cells: d, title: c.join(", "), g4: !0 };
    d.ka = a.ka;
    d.l = a.l;
    d.Te = a.Te;
    d.aa = a.aa;
    d.m = a.m.La();
    d.Jc = a.Jc;
    d.Mb = a.Mb;
    d.Qb = a.Qb;
    d.Oc = a.Oc;
    d.pc = a.pc;
    d.ya = a.ya;
    d.Eb = a.Eb;
    return d;
  }
  function A(a, b) {
    var c = H.O.Ka(a.l);
    if (c) {
      var d;
      if ("sl" === b) {
        d = a.xG("sl");
        if (0 >= d) return "yellow";
        if (d <= x(c)) return "red";
      }
      if ("tp" === b) {
        d = a.xG("tp");
        if (0 >= d) return "yellow";
        if (d <= x(c)) return "green";
      }
    }
    return "";
  }
  function m(a, b) {
    var c = {
        id: "total",
        className: "total",
        cells: [],
        i4: !0,
        draggable: !1,
      },
      d = [],
      e = H.H,
      f = e.yc;
    b && e.mU() && (c.className += " margin-call");
    H.H.ga &&
      (a & aa.tY && d.push(W.Y0 + ": " + (e.Wd || 0).gc(f) + " " + e.hf),
      a & aa.sJ && d.push(W.$s + ": " + (e.Ie || 0).gc(f)),
      a & aa.sY && e.Gc && d.push(W.X0 + ": " + (e.Gc || 0).gc(f) + " " + e.hf),
      a & aa.yY && e.Qc && d.push(W.j1 + ": " + (e.Qc || 0).gc(f)),
      a & aa.xY && d.push(W.f1 + ": " + (e.Sb || 0).gc(f)),
      a & aa.wY && e.Qg && d.push(W.e1 + ": " + (e.Qg || 0).gc(f)),
      a & aa.uY &&
        0 < e.hi &&
        e.gU() &&
        d.push(W.Z0 + ": " + (e.hi || 0).gc(f)),
      a & aa.vY && e.Nd && d.push(W.c1 + ": " + e.Nd.gc(f)),
      a & aa.zY && 0 < e.margin && d.push(W.l1 + ": " + (e.margin || 0).gc(f)),
      a & aa.AY && d.push(W.g1 + ": " + (e.Rc || 0).gc(f)),
      a & aa.CY &&
        0 < e.margin &&
        d.push(W.n1 + ": " + (e.Tn || 0).gc(f) + " %"),
      a & aa.BY && 0 < e.bb && d.push(W.i1 + ": " + (e.bb || 0).gc(f)),
      a & aa.DY && 0 < e.ub && d.push(W.k1 + ": " + (e.ub || 0).gc(f)));
    var g = "equity";
    e.Sb > e.Wd && (g = "equity_up");
    e.Sb && e.Sb < e.Wd && (g = "equity_down");
    d = w(d.join("&nbsp;&nbsp;"), g);
    d.colSpan = 11;
    c.cells[0] = d;
    for (d = 0; 10 > d; d++) c.cells[c.cells.length] = w("");
    d = w("");
    d.content = d.kf = (e.Ie || 0).gc(f);
    d.className = Z.P.ih() && b ? "profit" : "";
    c.cells[c.cells.length] = d;
    c.cells[c.cells.length] = w("");
    (f = H.$c.hq("stat")) || (f = {});
    f.equity = e.Sb || 0;
    f.profit = e.Ie || 0;
    f.load = (e.margin / e.Sb || 0).toFixed(1);
    f.currency = e.hf;
    H.$c.om("stat", f).as();
    return c;
  }
  function u() {
    var a = {
        id: "total_collateral",
        className: "total",
        c4: !0,
        cells: [],
        draggable: !1,
      },
      b = [],
      c = H.H;
    b.push("Collateral: " + (c.jf || 0).gc(c.yc) + " " + c.hf);
    var d = "equity";
    c.Sb > c.Wd && (d = "equity_up");
    c.Sb && c.Sb < c.Wd && (d = "equity_down");
    var e = H.B.u("trade_table_columns"),
      c = 9;
    e & ea.xi && c++;
    e & ea.xj && c++;
    e & ea.Mq && c++;
    e & ea.Qi && c++;
    b = w(b.join("&nbsp;&nbsp;&nbsp;"), d);
    b.colSpan = c;
    a.cells[0] = b;
    return a;
  }
  function q(a, b, c) {
    var d = R.data.eb,
      e = [];
    e.length = 13;
    e[0] = w(K.Kc(a.l.toLowerCase()), U.Cx(a.yb));
    e[0].uh = a.l;
    var f = H.O.Ka(a.l);
    f && f.yf && (e[0].title = f.yf);
    f = Z.P.ih();
    e[1] = w(a.Xf());
    e[2] = w(a.Mm);
    e[3] = w(a.pq());
    e[3].kf = a.pq(!0);
    e[4] = w(a.Ju());
    e[5] = w("");
    e[5].content = a.to(!0);
    e[5].kf = a.to(!1);
    var g = a.Iu(),
      h;
    a: {
      h = R.data.eb;
      var k = H.O.Ka(a.l);
      if (k) {
        var l = Number.MAX_VALUE;
        switch (a.yb) {
          case h.Lc:
          case h.Zc:
          case h.we:
          case h.Ee:
          case h.hd:
          case h.jd:
            l = a.rS();
        }
        if (0 >= l) {
          h = "yellow";
          break a;
        }
        if (l <= x(k)) {
          h = "green";
          break a;
        }
      }
      h = "";
    }
    e[6] = w(g, "", h);
    if (a.yb === d.jd || a.yb === d.hd)
      (d = "" + S.F.Z(a.N, a.j)),
        (d = d + "(" + S.F.Z(a.Na, a.j)),
        (d += ")"),
        (e[6].title = d);
    d = S.F.Z(a.C || 0, a.j);
    e[7] = w(d);
    f &&
      (a.C && (e[7].zl = W.Yq + " " + d),
      (e[7].className += b && !a.C ? " shift" : ""));
    d = S.F.Z(a.D || 0, a.j);
    e[8] = w(d);
    f &&
      (a.D && (e[8].zl = W.Zq + " " + d),
      (e[8].className += c && !a.D ? " shift" : ""));
    e[9] = w(S.F.Z(a.ed, a.j, 3));
    e[10] = w("");
    e[11] = w("");
    e[11].content = e[11].kf = a.Ex();
    f && (e[11].zl = "Delete " + a.gk());
    e[12] = w(K.Kc(a.Eb));
    b = "order_" + a.X;
    c = [];
    a.Eb && c.push(K.Kc(a.Eb));
    c.push(a.oq());
    (f = a.nq()) && c.push(W.MK + " " + f);
    e = { id: b, cells: e, title: c.join(", "), f4: !0, uh: a.l };
    e.l = a.l;
    e.X = a.Xf();
    e.Mm = a.Mm;
    e.ij = a.ij;
    e.yb = a.yb;
    e.Ff = a.Ff.La();
    e.wc = a.wc.La();
    e.N = a.N;
    e.Na = a.Na;
    e.C = a.C;
    e.D = a.D;
    e.ed = a.ed;
    return e;
  }
  function w(a, b, c) {
    var d = {},
      e = [];
    c && e.push(c);
    b &&
      ((d.Sg = a),
      (a = ['<span class="i ', b, '">&nbsp;</span>', a].join("")),
      e.push("iconed"));
    d.content = a;
    d.className = e.join(" ");
    return d;
  }
  function p(a, b) {
    return a.Te - b.Te;
  }
  function n(a, b) {
    return a.X - b.X;
  }
  function x(a) {
    var b = [10, 10, 10, 10, 10, 100];
    return a.j >= b.length ? b[b.length - 1] : b[a.j];
  }
  function C(a) {
    var b, c;
    a = a.split("_");
    if ("order" === a[0]) {
      if ((c = X.Db()) && "total" !== c) {
        c = c.split("_");
        if ("position" === c[0] && (b = H.P.fg(c[1]))) {
          if ("new" === a[1]) {
            S.Jb.na(b.l);
            return;
          }
          if ("close" === a[1]) {
            S.Jb.zv(b);
            return;
          }
          if ("modify" === a[1]) {
            S.Jb.Rs(b);
            return;
          }
        }
        if ("order" === c[0] && (c = H.P.df(c[1]))) {
          if ("new" === a[1]) {
            S.Jb.na(c.l);
            return;
          }
          if ("modify" === a[1]) {
            S.Jb.Tq(c.X);
            return;
          }
        }
      }
      "new" === a[1] && S.Jb.na();
    } else {
      if ("config" === a[0]) {
        b = 0;
        switch (a[1]) {
          case "arrange":
            b = V.Rf;
            break;
          case "grid":
            b = V.Xj;
            break;
          case "seconds":
            b = V.wj;
        }
        c = H.B.u("trade_table_config");
        c = c.Lj(b);
        H.B.u("trade_table_config", c);
        c.ki(V.Rf) &&
          (b = X.Ed) &&
          b.forEach(function (a) {
            H.B.u("trade_table_" + a.id + "_width", 0);
          });
      }
      if ("columns" === a[0]) {
        b = 0;
        switch (a[1]) {
          case "id":
            b = ea.xi;
            break;
          case "swap":
            b = ea.xj;
            break;
          case "profit":
            b = ea.Mq;
            break;
          case "comment":
            b = ea.Qi;
        }
        c = H.B.u("trade_table_columns");
        c = c.Lj(b);
        H.B.u("trade_table_columns", c);
      }
      "profit" === a[0] &&
        ("money" === a[1] && (c = fa.YE),
        "points" === a[1] && (c = fa.dx),
        H.B.u("trade_profit_unit", c));
      "volumes" === a[0] &&
        ("lots" === a[1]
          ? H.B.u("trade_table_volumes", ha.mn)
          : "amounts" === a[1] && H.B.u("trade_table_volumes", ha.Hl));
    }
  }
  function O(c) {
    "trade_profit_unit" === c
      ? (b(), e())
      : "trade_table_volumes" === c
      ? (k(), e())
      : ("trade_table_columns" === c && (l(), e()),
        "trade_table_config" === c && (a(), e(), h()));
  }
  function I() {
    r();
  }
  function G(a, b) {
    var c = a;
    c &&
      "total" !== c &&
      ((c = c.split("_")),
      "position" === c[0]
        ? (c = H.P.fg(c[1])) &&
          (0 === b.indexOf(W.Yq)
            ? Z.Ag.Ks(c, 0, c.Qb)
            : 0 === b.indexOf(W.Zq)
            ? Z.Ag.Ks(c, c.Mb, 0)
            : Z.Ag.KB(c))
        : "order" === c[0] &&
          (c = H.P.df(c[1])) &&
          (0 === b.indexOf(W.Yq)
            ? Z.Ag.Fs(c, c.N, c.Na, 0, c.D)
            : 0 === b.indexOf(W.Zq)
            ? Z.Ag.Fs(c, c.N, c.Na, c.C, 0)
            : Z.Ag.vI(c)));
  }
  function F(a, b) {
    if (Z.P.ih()) {
      var c = X.Db();
      c &&
        "total" !== c &&
        ((c = c.split("_")),
        "position" === c[0]
          ? (c = H.P.fg(c[1])) &&
            ("sl" === b || "tp" === b ? S.Jb.Rs(c) : S.Jb.zv(c))
          : "order" === c[0] && (c = H.P.df(c[1])) && S.Jb.Tq(c.X));
    }
  }
  function y() {
    var a = X.Ed;
    a &&
      (a.forEach(function (a) {
        a &&
          a.id &&
          H.B.u("trade_table_" + a.id + "_width", parseInt(a.width, 10));
      }),
      (a = H.B.u("trade_table_config")),
      a.ki(V.Rf) && ((a = a.Mh(V.Rf, !1)), H.B.u("trade_table_config", a)));
  }
  function M() {
    H.B.u("trade_table_sort", X.Ek());
    g();
  }
  function D() {
    v();
  }
  function L() {
    r();
  }
  function B() {
    X && X.W();
  }
  var Q = window.J,
    N = Q.controls,
    K = Q.ma,
    P = Q.ba,
    T = Q.Qa,
    R = Q.V,
    H = R.la,
    S = R.view,
    Z = R.control,
    W = P.xa,
    Y = Q.Ma,
    V = (S.sm = {});
  V.Rf = 1;
  V.Xj = 2;
  V.wj = 4;
  var ea = (S.cL = {});
  ea.xi = 1;
  ea.xj = 2;
  ea.Mq = 4;
  ea.Qi = 8;
  ea.Kd = ea.xi | ea.xj | ea.Mq | ea.Qi;
  ea.DEFAULT = ea.xj | ea.Mq | ea.Qi;
  var ha = (S.$i = {});
  ha.mn = 0;
  ha.Hl = 1;
  var fa = (S.H2 = {});
  fa.YE = 0;
  fa.dx = 1;
  var aa = {
    tY: 1,
    sJ: 2,
    xY: 4,
    wY: 8,
    uY: 16,
    vY: 32,
    zY: 64,
    AY: 128,
    CY: 256,
    BY: 512,
    DY: 1024,
    sY: 2048,
    yY: 4096,
  };
  aa.rJ = 65535 & ~aa.sJ;
  aa.eca = 65535;
  aa.fca = 4;
  aa.gca = 13;
  var X,
    ga,
    U = (S.P = {
      fb: !1,
      ha: function () {
        if (this.fb) return this;
        H.B.Vb(
          "trade_table_config trade_table_columns trade_table_volumes trade_profit_unit",
          O
        );
        H.B.Vb("toolbox_height block", B);
        var c = P.rb;
        c.Ke(c.mb.OH, L);
        X = Y(N.page.no, f())
          .b({
            position: "absolute",
            left: "0",
            right: "0",
            top: "0",
            bottom: "0",
          })
          .K("fixed odd grid no-border trade-table toolbox-table")
          .K("at-trade-table")
          .i("select", I)
          .i("doubleclick", F)
          .i("close", G)
          .i("resize", y)
          .i("sort", M)
          .i("show", D, 0);
        ga = Y(N.page.Wj).vc(d()).i("select", C);
        a();
        b();
        k();
        h();
        r();
        this.fb = !0;
        return this;
      },
      na: function () {
        if (!this.fb) return this;
        S.Jh.Uc("trade", W.t2, "", X, ga, !0);
        r();
        return this;
      },
      oa: function () {
        if (!this.fb) return this;
        S.Jh.aG();
        return this;
      },
      W: function () {
        if (!this.fb) return this;
        r();
        e();
        l();
        X && (X.vc(c()).Ek(H.B.u("trade_table_sort")), g(), X.Gh());
        S.Jq.W();
        return this;
      },
      M2: function (a) {
        if (!this.fb) return this;
        var b = H.P.ee || [],
          c = H.P.Yd || [];
        X.Zg(q(a, b.mp || c.mp, b.np || c.np), T.gh);
        a = H.B.u("trade_table_sort");
        (T.gh || -1 !== a.indexOf("close_price")) && K.al(v, 500);
        return this;
      },
      gL: function (a) {
        if (!this.fb) return this;
        var b = H.P.ee || [],
          c = H.P.Yd || [];
        X.Zg(z(a, b.mp || c.mp, b.np || c.np), T.gh);
        a = H.B.u("trade_table_sort");
        (T.gh ||
          -1 !== a.indexOf("close_price") ||
          -1 !== a.indexOf("profit")) &&
          K.al(v, 500);
        return this;
      },
      hL: function () {
        if (!this.fb) return this;
        X.Zg(m(aa.rJ, H.P.VG() || H.P.yT()), T.gh);
        X.Zg(u(), T.gh);
        return this;
      },
      Cx: function (a) {
        var b = R.data.eb;
        switch (a) {
          case b.Ja:
          case b.Lc:
          case b.we:
          case b.hd:
            return "buy";
          case b.Va:
          case b.Zc:
          case b.Ee:
          case b.jd:
            return "sell";
          case b.xB:
            return "close_by";
        }
        return "";
      },
      wG: function (a) {
        if (!a) return "";
        var b = R.data.aq;
        switch (a.aa) {
          case b.Zp:
            if (a.Yu()) return "buy_in";
            if (a.os()) return "buy_out";
            if (a.ms()) return "buy_inout";
            if (a.oH()) return "buy_close_by";
            break;
          case b.nu:
            if (a.Yu()) return "buy_in_cancel";
            if (a.os()) return "buy_out_cancel";
            if (a.ms()) return "buy_inout_cancel";
            break;
          case b.$p:
            if (a.Yu()) return "sell_in";
            if (a.os()) return "sell_out";
            if (a.ms()) return "sell_inout";
            if (a.oH()) return "sell_close_by";
            break;
          case b.tu:
            if (a.Yu()) return "sell_in_cancel";
            if (a.os()) return "sell_out_cancel";
            if (a.ms()) return "sell_inout_cancel";
            break;
          default:
            return 0 > a.ya ? "equity_down" : "equity_up";
        }
        return "balance";
      },
    });
})();
(function () {
  function v(a, b) {
    var c = aa(a.l, b.l);
    return 0 != c ? c : a.ka > b.ka ? 1 : a.ka < b.ka ? -1 : 0;
  }
  function r(a, b) {
    if (a.Te > b.Te) return 1;
    if (a.Te < b.Te) return -1;
    var c = aa(a.l, b.l);
    return 0 != c ? c : a.ka > b.ka ? 1 : a.ka < b.ka ? -1 : 0;
  }
  function l(a, b) {
    return a.ka > b.ka ? 1 : a.ka < b.ka ? -1 : 0;
  }
  function e(a, b) {
    if (a.aa > b.aa) return 1;
    if (a.aa < b.aa) return -1;
    var c = aa(a.l, b.l);
    return 0 != c ? c : a.ka > b.ka ? 1 : a.ka < b.ka ? -1 : 0;
  }
  function k(a, b) {
    if (a.m.lf(b.m)) return 1;
    if (a.m.Pk(b.m)) return -1;
    var c = aa(a.l, b.l);
    return 0 != c ? c : a.ka > b.ka ? 1 : a.ka < b.ka ? -1 : 0;
  }
  function h(a, b) {
    if (a.Jc > b.Jc) return 1;
    if (a.Jc < b.Jc) return -1;
    var c = aa(a.l, b.l);
    return 0 != c ? c : a.ka > b.ka ? 1 : a.ka < b.ka ? -1 : 0;
  }
  function b(a, b) {
    if (a.Mb > b.Mb) return 1;
    if (a.Mb < b.Mb) return -1;
    var c = aa(a.l, b.l);
    return 0 != c ? c : a.ka > b.ka ? 1 : a.ka < b.ka ? -1 : 0;
  }
  function a(a, b) {
    if (a.Qb > b.Qb) return 1;
    if (a.Qb < b.Qb) return -1;
    var c = aa(a.l, b.l);
    return 0 != c ? c : a.ka > b.ka ? 1 : a.ka < b.ka ? -1 : 0;
  }
  function g(a, b) {
    if (a.Oc > b.Oc) return 1;
    if (a.Oc < b.Oc) return -1;
    var c = aa(a.l, b.l);
    return 0 != c ? c : a.ka > b.ka ? 1 : a.ka < b.ka ? -1 : 0;
  }
  function d(a, b) {
    if (a.pc > b.pc) return 1;
    if (a.pc < b.pc) return -1;
    var c = aa(a.l, b.l);
    return 0 != c ? c : a.ka > b.ka ? 1 : a.ka < b.ka ? -1 : 0;
  }
  function f(a, b) {
    if (a.ya > b.ya) return 1;
    if (a.ya < b.ya) return -1;
    var c = aa(a.l, b.l);
    return 0 != c ? c : a.ka > b.ka ? 1 : a.ka < b.ka ? -1 : 0;
  }
  function c(a, b) {
    var c = aa(a.Eb, b.Eb);
    if (0 != c) return c;
    c = aa(a.l, b.l);
    return 0 != c ? c : a.ka > b.ka ? 1 : a.ka < b.ka ? -1 : 0;
  }
  function z(a, b) {
    var c = aa(a.l, b.l);
    return 0 != c ? c : a.X > b.X ? 1 : a.X < b.X ? -1 : 0;
  }
  function A(a, b) {
    return a.X > b.X ? 1 : a.X < b.X ? -1 : 0;
  }
  function m(a, b) {
    var c = aa(a.Mm, b.Mm);
    if (0 != c) return c;
    c = aa(a.l, b.l);
    return 0 != c ? c : a.X > b.X ? 1 : a.X < b.X ? -1 : 0;
  }
  function u(a, b) {
    if (a.ij > b.ij) return 1;
    if (a.ij < b.ij) return -1;
    var c = aa(a.l, b.l);
    return 0 != c ? c : a.X > b.X ? 1 : a.X < b.X ? -1 : 0;
  }
  function q(a, b) {
    if (a.yb > b.yb) return 1;
    if (a.yb < b.yb) return -1;
    var c = aa(a.l, b.l);
    return 0 != c ? c : a.X > b.X ? 1 : a.X < b.X ? -1 : 0;
  }
  function w(a, b) {
    var c = a.Ff.sub(a.wc),
      d = b.Ff.sub(b.wc);
    if (c.lf(d)) return 1;
    if (c.Pk(d)) return -1;
    if (a.Ff.lf(b.Ff)) return 1;
    if (a.Ff.Pk(b.Ff)) return -1;
    c = aa(a.l, b.l);
    return 0 != c ? c : a.X > b.X ? 1 : a.X < b.X ? -1 : 0;
  }
  function p(a, b) {
    var c = a.N,
      d = b.N;
    if (a.yb == X.hd || a.yb == X.jd) c = a.Na;
    if (b.yb == X.hd || b.yb == X.jd) d = b.Na;
    if (c > d) return 1;
    if (c < d) return -1;
    c = aa(a.l, b.l);
    return 0 != c ? c : a.X > b.X ? 1 : a.X < b.X ? -1 : 0;
  }
  function n(a, b) {
    if (a.C > b.C) return 1;
    if (a.C < b.C) return -1;
    var c = aa(a.l, b.l);
    return 0 != c ? c : a.X > b.X ? 1 : a.X < b.X ? -1 : 0;
  }
  function x(a, b) {
    if (a.D > b.D) return 1;
    if (a.D < b.D) return -1;
    var c = aa(a.l, b.l);
    return 0 != c ? c : a.X > b.X ? 1 : a.X < b.X ? -1 : 0;
  }
  function C(a, b) {
    if (a.ed > b.ed) return 1;
    if (a.ed < b.ed) return -1;
    var c = aa(a.l, b.l);
    return 0 != c ? c : a.X > b.X ? 1 : a.X < b.X ? -1 : 0;
  }
  function O(a, b) {
    var c = aa(a.Eb, b.Eb);
    if (0 != c) return c;
    c = aa(a.l, b.l);
    return 0 != c ? c : a.X > b.X ? 1 : a.X < b.X ? -1 : 0;
  }
  function I(a, b) {
    return v(b, a);
  }
  function G(a, b) {
    return r(b, a);
  }
  function F(a, b) {
    return e(b, a);
  }
  function y(a, b) {
    return k(b, a);
  }
  function M(a, b) {
    return h(b, a);
  }
  function D(a, c) {
    return b(c, a);
  }
  function L(b, c) {
    return a(c, b);
  }
  function B(a, b) {
    return g(b, a);
  }
  function Q(a, b) {
    return d(b, a);
  }
  function N(a, b) {
    return f(b, a);
  }
  function K(a, b) {
    return l(b, a);
  }
  function P(a, b) {
    return c(b, a);
  }
  function T(a, b) {
    return z(b, a);
  }
  function R(a, b) {
    return A(b, a);
  }
  function H(a, b) {
    return m(b, a);
  }
  function S(a, b) {
    return u(b, a);
  }
  function Z(a, b) {
    return q(b, a);
  }
  function W(a, b) {
    return w(b, a);
  }
  function Y(a, b) {
    return p(b, a);
  }
  function V(a, b) {
    return n(b, a);
  }
  function ea(a, b) {
    return x(b, a);
  }
  function ha(a, b) {
    return C(b, a);
  }
  function fa(a, b) {
    return O(b, a);
  }
  function aa(a, b) {
    return a > b ? 1 : a < b ? -1 : 0;
  }
  var X = E.V.data.eb,
    ga = (E.V.view.HD = {});
  ga.bK = function (n, m) {
    var p = v;
    switch (m) {
      case "symbol":
        p = v;
        break;
      case "tiket":
        p = l;
        break;
      case "open_time":
        p = r;
        break;
      case "type":
        p = e;
        break;
      case "volume":
        p = k;
        break;
      case "open_price":
        p = h;
        break;
      case "sl":
        p = b;
        break;
      case "tp":
        p = a;
        break;
      case "close_price":
        p = g;
        break;
      case "swap":
        p = d;
        break;
      case "profit":
        p = f;
        break;
      case "comment":
        p = c;
        break;
      case "-symbol":
        p = I;
        break;
      case "-tiket":
        p = K;
        break;
      case "-open_time":
        p = G;
        break;
      case "-type":
        p = F;
        break;
      case "-volume":
        p = y;
        break;
      case "-open_price":
        p = M;
        break;
      case "-sl":
        p = D;
        break;
      case "-tp":
        p = L;
        break;
      case "-close_price":
        p = B;
        break;
      case "-swap":
        p = Q;
        break;
      case "-profit":
        p = N;
        break;
      case "-comment":
        p = P;
    }
    p && n.sort(p);
  };
  ga.L_ = function (a, b) {
    var c = z;
    switch (b) {
      case "symbol":
        c = z;
        break;
      case "tiket":
        c = A;
        break;
      case "id":
        c = m;
        break;
      case "open_time":
        c = u;
        break;
      case "type":
        c = q;
        break;
      case "volume":
        c = w;
        break;
      case "open_price":
        c = p;
        break;
      case "sl":
        c = n;
        break;
      case "tp":
        c = x;
        break;
      case "close_price":
        c = C;
        break;
      case "comment":
        c = O;
        break;
      case "-symbol":
        c = T;
        break;
      case "-tiket":
        c = R;
        break;
      case "-id":
        c = H;
        break;
      case "-open_time":
        c = S;
        break;
      case "-type":
        c = Z;
        break;
      case "-volume":
        c = W;
        break;
      case "-open_price":
        c = Y;
        break;
      case "-sl":
        c = V;
        break;
      case "-tp":
        c = ea;
        break;
      case "-close_price":
        c = ha;
        break;
      case "-comment":
        c = fa;
    }
    c && a.sort(c);
  };
})();
(function () {
  var v = E.Qa,
    r = E.V.view,
    l = "/trade/res/i/terminal/icons16.png?t=17";
  v.sa && (l = "/trade/res/i/terminal/icons16_2x.png?t=17");
  var e = "/trade/res/i/terminal/icons20.png?t=4";
  v.sa && (e = "/trade/res/i/terminal/icons20_2x.png?t=4");
  var k = {
      new_order: "-1px",
      new_chart: "-19px",
      tick_chart: "-37px",
      depth_of_market: "-55px",
      specification: "-73px",
      popup_price: "-91px",
      symbols: "-109px",
      save_picture: "-127px",
      save_sets: "-145px",
      bar: "-163px",
      candlesticks: "-181px",
      line: "-199px",
      refresh: "-217px",
      grid: "-235px",
      scroll: "-253px",
      shift: "-271px",
      zoom_in: "-289px",
      zoom_out: "-307px",
      market_watch: "-325px",
      toolbox: "-343px",
      verticalline: "-757px",
      horizontalline: "-775px",
      trendline: "-793px",
      terminal: "-811px",
      m1: "-595px",
      m5: "-613px",
      m15: "-631px",
      m30: "-649px",
      h1: "-667px",
      h4: "-685px",
      d1: "-703px",
      w1: "-721px",
      mn1: "-739px",
      object_remove: "-829px",
      fibonacciretracement: "-847px",
      text: "-865px",
      close: "-883px",
      equidistantchannel: "-901px",
      callout: "-919px",
      objects_list: "-937px",
      objects_remove_all: "-955px",
      close_order: "-973px",
      modify_order: "-991px",
      open_account: "-1009px",
      login_account: "-1027px",
      account: "-1045px",
      server: "-1063px",
      object_prop: "-1081px",
      buy_limit: "-1099px",
      sell_limit: "-1117px",
      oneclick: "-1135px",
      delete_order: "-1153px",
      volumes: "-1171px",
      chart_prop: "-1189px",
      indicator_prop: "-1243px",
      indicator_remove: "-1261px",
      indicator_window_remove: "-1279px",
      indicator_list: "-1297px",
      indicator_window: "-1315px",
      indicator: "-1333px",
      trendlinebyangle: "-1404px",
      cyclelines: "-1422px",
      arrowedline: "-1440px",
      andrewspitchfork: "-1495px",
      stddevchannel: "-1459px",
      regressionchannel: "-1477px",
      fibonaccichannel: "-1639px",
      fibotimezones: "-1585px",
      fibonaccifan: "-1603px",
      fibonacciarcs: "-1621px",
      fibonacciexpansion: "-1657px",
      gannline: "-1513px",
      gannfan: "-1531px",
      ganngrid: "-1549px",
      elliottmotivewave: "-1675px",
      elliottcorrectivewave: "-1693px",
      rectangle: "-1711px",
      triangle: "-1729px",
      extended_mode: "-1764px",
      spread: "-1783px",
      charts_depth_of_market: "-1819px",
      charts_trade_one_click: "-1837px",
      volumes_tick: "-1855px",
      mt4: "-1873px",
      mt5: "-1891px",
      visit_mql5: "-1945px",
      share: "-1963px",
      help_mql5_site: "-415px",
      help_mql5_docs: "-433px",
      help_mql5_articles: "-451px",
      help_mql5_codes: "-469px",
      help_mql5_freelance: "-487px",
      help_mql5_market: "-505px",
      help_mql5_signals: "-523px",
      help_mql5_forum: "-541px",
      help_mql5_vps: "-1927px",
      help_desktop: "-1909px",
      help_iphone: "-559px",
      help_android: "-577px",
      help_about: "-397px",
    },
    h = {
      new_chart: "0px",
      manage_profiles: "-22px",
      bar: "-44px",
      candlesticks: "-66px",
      line: "-88px",
      scroll: "-110px",
      shift: "-132px",
      cursor: "-154px",
      crosshair: "-176px",
      zoom_in: "-198px",
      zoom_out: "-220px",
      verticalline: "-242px",
      horizontalline: "-264px",
      trendline: "-286px",
      m1: "-308px",
      m5: "-330px",
      m15: "-352px",
      m30: "-374px",
      h1: "-396px",
      h4: "-418px",
      d1: "-440px",
      w1: "-462px",
      mn1: "-484px",
      fibonacciretracement: "-506px",
      text: "-528px",
      equidistantchannel: "-550px",
      callout: "-572px",
      symbols: "-594px",
      new_order: "-616px",
      fullscreen_on: "-638px",
      fullscreen_off: "-660px",
    },
    v = (r.ce = {});
  v.ha = function () {
    var b = new Image();
    b.src = l;
    b = new Image();
    b.src = e;
  };
  v.Me = function (b, a) {
    if (!b) return null;
    var e = k[b.toLowerCase()];
    return e ? [l, e, a ? "-19px" : "-1px"] : null;
  };
  v.Au = function (b, a) {
    if (!b) return null;
    var g = h[b.toLowerCase()];
    return g ? [e, g, a ? "-22px" : "0"] : null;
  };
})();
(function () {
  function v() {
    var e = b.History.FS(),
      f = [];
    f.push(c("symbols_all", d.QS, void 0, void 0, !w.sk));
    !w.sk &&
      ((a.uo.h() && a.uo.Db()) ||
        (a.fl.h() && a.fl.Db()) ||
        (a.yk.h() && a.yk.Db()) ||
        (a.am.h() && a.am.Db())) &&
      f.push(c("symbols_current", d.TS));
    e &&
      e.length &&
      (f.push("-"),
      e.map(function (a) {
        f.push(c("symbols_" + a, a, void 0, void 0, a == w.sk));
      }));
    return c("symbols", d.fT, void 0, void 0, void 0, void 0, f);
  }
  function r(c) {
    var d, e;
    c = c.split("_");
    if ("type" == c[0])
      (d = m.Yp),
        "orders" == c[1] && (d = m.Fq),
        "all" == c[1] && (d = m.Kd),
        "positions" == c[1] && (d = m.Kq),
        b.B.u("history_table_type", d);
    else {
      if ("period" == c[0]) {
        d = g.BT;
        if ("all" == c[1]) {
          g.P.hB(d.Kd);
          return;
        }
        if ("month" == c[1]) {
          g.P.hB(d.eB);
          return;
        }
        if ("3month" == c[1]) {
          g.P.hB(d.vH);
          return;
        }
      }
      if ("config" == c[0]) {
        if ("arrange" == c[1] || "grid" == c[1]) {
          d = 0;
          switch (c[1]) {
            case "arrange":
              d = z.Rf;
              break;
            case "grid":
              d = z.Xj;
          }
          e = b.B.u("history_table_config");
          e = e.Lj(d);
          b.B.u("history_table_config", e);
        }
        "seconds" == c[1] &&
          ((e = b.B.u("trade_table_config")),
          (e = e.Lj(a.sm.wj)),
          b.B.u("trade_table_config", e));
      } else if ("columns" == c[0]) {
        d = 0;
        switch (c[1]) {
          case "id":
            d = A.xi;
            break;
          case "comment":
            d = A.Qi;
            break;
          case "commission":
            d = A.ko;
            break;
          case "fee":
            d = A.oo;
            break;
          case "swap":
            d = A.xj;
        }
        e = b.B.u("history_table_columns");
        e = e.Lj(d);
        b.B.u("history_table_columns", e);
      } else {
        if ("volumes" == c[0]) {
          if ("lots" == c[1]) {
            b.B.u("history_table_volumes", a.$i.mn);
            return;
          }
          if ("amounts" == c[1]) {
            b.B.u("history_table_volumes", a.$i.Hl);
            return;
          }
        }
        if ("symbols" == c[0])
          if ("all" == c[1]) b.History.eu(), (w.sk = ""), w.W();
          else if ("current" == c[1]) {
            if (
              (c = a.uo.h()
                ? a.uo.Db()
                : a.fl.h()
                ? a.fl.Db()
                : a.yk.h()
                ? a.yk.Db()
                : a.am.h()
                ? a.am.Db()
                : null)
            )
              -1 !== c.indexOf("_") && (c = c.split("_")[0]),
                (d = b.History.Eu(c)) || (d = b.History.df(c)),
                d && (b.History.eu(d.l), (w.sk = d.l), w.W());
          } else b.History.eu(c[1]), (w.sk = c[1]), w.W();
      }
    }
  }
  function l() {
    w.W();
  }
  function e() {
    l();
  }
  var k = E.controls,
    h = E.V,
    b = h.la,
    a = h.view,
    g = h.control,
    d = E.ba.xa,
    f = E.Ma,
    c = E.ma.bn,
    z = (a.vo = { Rf: 1, Xj: 2 }),
    A = (a.cm = { xi: 1, Qi: 2, ko: 4, xj: 8, oo: 16 });
  A.Kd = A.xi | A.Qi | A.ko | A.xj | A.oo;
  var m = (a.vq = { Yp: 0, Fq: 1, Kd: 2, Kq: 3 }),
    u,
    q,
    w = (a.History = {
      fb: !1,
      sk: "",
      ha: function () {
        if (this.fb) return this;
        q = f(k.page.ge).b({ height: "100%" }).i("show", l);
        u = f(k.page.Wj)
          .vc([
            c("type_positions", d.cT),
            c("type_deals", d.VS),
            c("type_orders", d.bT),
            c("type_all", d.WS),
            "-",
            v(),
            c("volumes", d.jT, void 0, void 0, void 0, void 0, [
              c("volumes_lots", d.lT),
              c("volumes_amounts", d.kT),
            ]),
            "-",
            c("period_all", d.PS),
            c("period_3month", d.ZS),
            c("period_month", d.$S),
            "-",
            c("config_seconds", d.oD),
            c("config_arrange", d.BD),
            "-",
            c("columns", d.SS, void 0, void 0, void 0, void 0, [
              c("columns_id", d.Ou),
              c("columns_swap", d.Ix),
              c("columns_commission", d.Mu),
              c("columns_fee", d.Nu),
              c("columns_comment", d.Gx),
            ]),
          ])
          .i("select", r);
        a.uo.ha(q);
        a.fl.ha(q);
        a.yk.ha(q);
        a.am.ha(q);
        b.B.Vb("toolbox_height block", e);
        this.fb = !0;
        return this;
      },
      na: function () {
        if (!this.fb) return this;
        a.Jh.Uc("history", d.gT, "", q, u, !0);
        return this;
      },
      W: function () {
        if (!this.fb || !q.h()) return this;
        a.uo.h() && a.uo.W();
        a.fl.h() && a.fl.W();
        a.yk.h() && a.yk.W();
        a.am.h() && a.am.W();
        return this;
      },
      ql: function () {
        if (!this.fb) return this;
        var c = b.B.u("history_table_columns"),
          d = b.B.u("history_table_config") || 0,
          e = b.B.u("history_table_type") || m.Yp,
          f = b.B.u("history_table_volumes") || a.$i.mn,
          g = b.B.u("trade_table_config") || 0;
        u.ja({ id: "volumes_lots", checked: f == a.$i.mn })
          .ja({ id: "volumes_amounts", checked: f == a.$i.Hl })
          .ja({ id: "config_arrange", checked: !!(d & z.Rf) })
          .ja({ id: "config_seconds", checked: !!(g & a.sm.wj) })
          .ja({
            id: "columns_id",
            checked: !!(c & A.xi),
            visible: e != m.Kq && b.History.Ij,
          })
          .ja({
            id: "columns_comment",
            checked: !!(c & A.Qi),
            visible: e == m.Yp || e == m.Fq,
          })
          .ja({
            id: "columns_commission",
            checked: !!(c & A.ko),
            visible: e != m.Fq,
          })
          .ja({ id: "columns_fee", checked: !!(c & A.oo), visible: e != m.Fq })
          .ja({
            id: "columns_swap",
            checked: !!(c & A.xj),
            visible: e == m.Yp || e == m.Kq,
          })
          .ja({ id: "type_positions", checked: e == m.Kq })
          .ja({ id: "type_deals", checked: e == m.Yp })
          .ja({ id: "type_orders", checked: e == m.Fq })
          .ja({ id: "type_all", checked: e == m.Kd })
          .ja(v());
        a.fl.h() && a.fl.ql();
        a.yk.h() && a.yk.ql();
        a.am.h() && a.am.ql();
        return this;
      },
      yg: function (a) {
        if (!this.fb) return this;
        var b = a.Ed,
          c = a.Ek(),
          d = a.u(),
          e = c,
          f = !1,
          g,
          h;
        h = "all" == a.$j("id") ? 2 : 1;
        "-" == c.charAt(0) && ((e = c.substr(1)), (f = !0));
        g = b
          .map(function (a) {
            return a.id;
          })
          .indexOf(e);
        -1 < g &&
          ((b = d
            .filter(function (a) {
              return !a.ww;
            })
            .sort(function (a, b) {
              var c = parseFloat(
                  (a.cells && a.cells[h] && a.cells[h].content) || 0
                ),
                d = parseFloat(
                  (b.cells && b.cells[h] && b.cells[h].content) || 0
                ),
                e = (a.cells[g] && a.cells[g].content) || "",
                k = (b.cells[g] && b.cells[g].content) || "",
                l = 0,
                m = 0;
              a.cells[g] && void 0 !== a.cells[g].Sg && (e = a.cells[g].Sg);
              b.cells[g] && void 0 !== b.cells[g].Sg && (k = b.cells[g].Sg);
              a.cells[g] && void 0 !== a.cells[g].Sw && (l = a.cells[g].Sw);
              b.cells[g] && void 0 !== b.cells[g].Sw && (m = b.cells[g].Sw);
              isNaN(parseFloat(e)) || (e = parseFloat(e));
              isNaN(parseFloat(k)) || (k = parseFloat(k));
              if (f) {
                if (e > k) return -1;
                if (e < k) return 1;
                if (l > m) return -1;
                if (l < m) return 1;
              } else {
                if (e > k) return 1;
                if (e < k) return -1;
                if (l > m) return 1;
                if (l < m) return -1;
              }
              return c > d ? 1 : c < d ? -1 : 0;
            })),
          (d = d.filter(function (a) {
            return a.ww;
          })),
          a.u([].concat(b, d)));
        return this;
      },
      sv: function (a) {
        if (!this.fb) return this;
        var c = a.$j("id");
        if ((a = a.Ed))
          a.map(function (a) {
            b.B.u(
              "history_" + c + "_table_" + a.id + "_width",
              parseInt(a.width, 10)
            );
          }),
            (a = b.B.u("history_table_config")),
            a.ki(z.Rf) &&
              ((a = a.Mh(z.Rf, !1)), b.B.u("history_table_config", a));
        return this;
      },
      Hb: function (a, b, c) {
        var d = {},
          e = [];
        c && e.push(c);
        b &&
          ((a = ['<span class="i ', b, '">&nbsp;</span>', a].join("")),
          e.push("iconed"));
        d.content = a;
        d.className = e.join(" ");
        return d;
      },
    });
})();
(function () {
  function v() {
    var a = [];
    [
      [p.sq, "open_time"],
      [p.LG, "ticket"],
      [p.Qu, "type"],
      [p.Ru, "volume"],
      [p.Pu, "symbol"],
      [p.aT, "open_price"],
      [p.sq, "close_time"],
      [p.Lu, "close_price"],
      [p.Mu, "commission"],
      [p.Nu, "fee"],
      [p.Ix, "swap"],
      [p.fs, "profit"],
    ].map(function (b, c) {
      a.push({ content: b[0], id: b[1], align: 0 < c ? "right" : null });
    });
    return { ej: a };
  }
  function r() {
    var a = [],
      b = q.History.sk,
      c = u.History.ee;
    c &&
      ((c = c.slice()),
      c.map(function (c) {
        if (!((!c.pf() && c.Fj.ab()) || (b && c.l !== b))) {
          var d = a.length,
            e = [],
            f = "balance";
          c.pf()
            ? (0 < c.ya && (f = "equity_up"), 0 > c.ya && (f = "equity_down"))
            : (c.zb() && (f = "buy"), c.uc() && (f = "sell"));
          var g, h;
          h = 0;
          g = z.pj(c.Bp, !1, !0);
          e[h] = q.History.Hb(g, f);
          e[h].Sg = c.Bp;
          e[h].kf = e[h].content.split(g).join(z.pj(c.Bp, !0, !0));
          h = e.length;
          e[h] = q.History.Hb(c.ka);
          f = "";
          f = c.pf() ? w.Re.DX(c.da) : w.Re.Ls(c.da);
          h = e.length;
          e[h] = q.History.Hb(f);
          e[h].Sg = c.da;
          h = e.length;
          e[h] = q.History.Hb("");
          if (c.pf()) {
            if (
              ((e[h].colSpan = 5),
              (e[h].align = "left"),
              (f = u.History.Eu(c.ka)))
            )
              e[h].content = f.Eb;
          } else
            0 === c.pk.compare(c.Fj)
              ? ((e[h].content = q.F.Ea(c.pk)),
                (e[h].kf = q.F.Ea(q.F.um(c.pk, c.Ae))))
              : ((e[h].content = q.F.Ea(c.Fj) + " / " + q.F.Ea(c.pk)),
                (e[h].kf =
                  q.F.Ea(q.F.um(c.Fj, c.Ae)) +
                  " / " +
                  q.F.Ea(q.F.um(c.pk, c.Ae))));
          h = e.length;
          e[h] = q.History.Hb("");
          c.pf() || (e[h] = q.History.Hb(z.Kc(c.l.toLowerCase())));
          h = e.length;
          e[h] = q.History.Hb("");
          c.pf() || (e[h] = q.History.Hb(q.F.Z(c.Ft, c.j, 3)));
          h = e.length;
          e[h] = q.History.Hb("");
          c.pf() ||
            c.Fj.ab() ||
            ((e[h] = q.History.Hb(z.pj(c.Ej, !1, !0))),
            (e[h].Sg = c.Ej),
            (e[h].kf = z.pj(c.Ej, !0, !0)));
          h = e.length;
          e[h] = q.History.Hb("");
          c.pf() || (e[h] = q.History.Hb(q.F.Z(c.or, c.j, 3)));
          h = e.length;
          e[h] = q.History.Hb("");
          c.pf() ||
            (e[h] = q.History.Hb(
              ((c.Xd && c.Xd.normalize(c.Hc)) || 0).gc(c.Hc) || ""
            ));
          h = e.length;
          e[h] = q.History.Hb("");
          c.pf() ||
            (e[h] = q.History.Hb(
              ((c.uf && c.uf.normalize(c.Hc)) || 0).gc(c.Hc) || ""
            ));
          h = e.length;
          e[h] = q.History.Hb("");
          c.Fj.ab() ||
            (e[h] = q.History.Hb(
              ((c.pc && c.pc.normalize(c.Hc)) || 0).gc(c.Hc) || ""
            ));
          h = e.length;
          e[h] = q.History.Hb("");
          if (c.ya || c.pf())
            e[h] = q.History.Hb(
              ((c.ya && c.ya.normalize(c.Hc)) || 0).gc(c.Hc) || ""
            );
          h = {};
          h.cells = e;
          h.id = c.ka + "_" + c.da;
          e = [];
          e.push("#" + c.ka);
          c.pf() || e.push(c.oq());
          (c = c.nq()) && e.push(p.Hx + " " + c);
          h.title = e.join(", ");
          a[d] = h;
        }
      }),
      a.push(l()));
    return a;
  }
  function l() {
    var a = u.History.Br,
      b = { id: "total", className: "total", cells: [], ww: !0, draggable: !1 },
      c = "equity";
    0 < a.Ii && (c = "equity_up");
    0 > a.Ii && (c = "equity_down");
    var d = u.H.yc,
      e = {};
    e.content = e.kf = [
      '<span class="i ',
      c,
      '"></span>',
      p.fs,
      ": ",
      a.Ii.gc(d),
      "&nbsp;&nbsp;",
      p.IG,
      ": ",
      a.Qg.gc(d),
      "&nbsp;&nbsp;",
      p.JG,
      ": ",
      a.Mk.gc(d),
      "&nbsp;&nbsp;",
      p.MG,
      ": ",
      a.$t.gc(d),
      "&nbsp;&nbsp;",
      p.HG,
      ": ",
      a.Wd.gc(d),
    ].join("");
    e.className = "iconed";
    e.colSpan = 8;
    b.cells[0] = e;
    for (c = 0; 7 > c; c++) b.cells[b.cells.length] = { content: "" };
    e = {};
    e.content = a.Xd.gc(d);
    b.cells[b.cells.length] = e;
    e = {};
    e.content = a.uf.gc(d);
    b.cells[b.cells.length] = e;
    e = {};
    e.content = a.Tt.gc(d);
    b.cells[b.cells.length] = e;
    e = {};
    e.content = a.ya.gc(d);
    b.cells[b.cells.length] = e;
    e = { content: "" };
    b.cells[b.cells.length] = e;
    return b;
  }
  function e() {
    var a = (u.B.u("history_table_config") || 0).ki(q.vo.Rf),
      b = n.Ed;
    b &&
      (b.map(function (b) {
        b.width = null;
        if (!a) {
          var c = u.B.u("history_positions_table_" + b.id + "_width") || void 0;
          c && (b.width = c + "px");
        }
      }),
      n.Ba && n.W());
  }
  function k() {
    var a = u.B.u("history_table_type") == q.vq.Kq;
    n.h(a);
    a && x.W();
  }
  function h() {
    var a;
    u.B.u("history_table_volumes") == q.$i.Hl && (a = 1);
    var b = n.Ed.find(function (a) {
      return "volume" == a.id;
    });
    b && (b.Gj = a);
    n.Gh();
  }
  function b() {
    var a;
    u.B.u("trade_table_config") & q.sm.wj && (a = 1);
    var b = n.Ed.find(function (a) {
      return "open_time" == a.id;
    });
    b && (b.Gj = a);
    if (
      (b = n.Ed.find(function (a) {
        return "close_time" == a.id;
      }))
    )
      b.Gj = a;
    n.Gh();
  }
  function a() {
    q.History.ql();
  }
  function g() {
    var a = q.cm,
      b = u.B.u("history_table_columns");
    b & a.ko ? n.Og(8) : n.Jg(8);
    b & a.oo ? n.Og(9) : n.Jg(9);
    b & a.xj ? n.Og(10) : n.Jg(10);
  }
  function d() {
    q.History.sv(n);
  }
  function f() {
    u.B.u("history_" + n.$j("id") + "_table_sort", n.Ek());
    q.History.yg(n);
  }
  var c = E.controls,
    z = E.ma,
    A = E.Ma,
    m = E.V,
    u = m.la,
    q = m.view,
    w = m.control,
    p = E.ba.xa,
    n,
    x = (q.uo = {
      fb: !1,
      ha: function (l) {
        if (this.fb) return this;
        n = A(c.page.no, v())
          .b({
            position: "absolute",
            left: "0",
            right: "0",
            top: "0",
            bottom: "0",
          })
          .K("fixed odd grid no-border trade-table toolbox-table")
          .K("at-history-positions-table")
          .h(!1)
          .$j("id", "positions")
          .i("select", a)
          .i("resize", d)
          .i("sort", f);
        l.c(n);
        u.B.Vb("history_table_config", e);
        u.B.Vb("history_table_type", k);
        u.B.Vb("history_table_volumes", h);
        u.B.Vb("history_table_columns", g);
        u.B.Vb("trade_table_config", b);
        e();
        k();
        h();
        g();
        b();
        this.fb = !0;
        return this;
      },
      W: function () {
        if (!this.fb) return this;
        n.Ek(u.B.u("history_positions_table_sort") || "open_time").vc(r());
        q.History.yg(n);
        n.Gh();
        return this;
      },
      h: function (a) {
        if (!this.fb) return this;
        if (void 0 === a) return n.h();
        n.h(!!a);
        return this;
      },
      Db: function () {
        return this.fb ? n.Db() : this;
      },
    });
})();
(function () {
  function v() {
    var a = [];
    [
      [w.sq, "time"],
      [w.US, "deal"],
      [w.Ou, "id"],
      [w.KG, "order"],
      [w.Pu, "symbol"],
      [w.Qu, "type"],
      [w.XS, "direction"],
      [w.Ru, "volume"],
      [w.Lu, "close_price"],
      [w.Mu, "commission"],
      [w.Nu, "fee"],
      [w.Ix, "swap"],
      [w.fs, "profit"],
      [w.Gx, "comment"],
    ].map(function (b, c) {
      a.push({ content: b[0], id: b[1], align: 0 < c ? "right" : null });
    });
    return { ej: a };
  }
  function r() {
    var a = m.data.aq,
      b = [],
      c = 0,
      d = 0,
      e = 0,
      f = 0,
      g = 0,
      h = 0,
      k = 0,
      p = 0,
      r = 0,
      v = q.History.sk,
      w = u.History.fh;
    w &&
      ((w = w.slice()),
      w.map(function (l) {
        if (!v || l.l === v) {
          var w = b.length,
            A = m.data.bq,
            N = q.cm,
            H,
            S,
            Z = l.$u(),
            W = l.pf(),
            Y = u.B.u("history_table_columns"),
            V = [];
          H = l.Wl();
          V[0] = q.History.Hb(H, q.P.wG(l));
          V[0].Sg = l.Te;
          V[0].kf = V[0].content.split(H).join(l.Wl(!0));
          V[1] = q.History.Hb(l.Od);
          V[2] = q.History.Hb(z.Kc(l.uw));
          V[2].visible = !!(Y & N.xi);
          V[3] = q.History.Hb(l.Xf());
          V[4] = q.History.Hb(z.Kc(l.l.toLowerCase()));
          V[4].uh = l.l;
          W && (V[4].className = "col_span");
          Z && (H = u.O.Ka(l.l)) && H.yf && (V[4].title = H.yf);
          V[5] = q.History.Hb(l.Hu());
          V[5].Sg = l.aa;
          H = "";
          Z && (H = l.AG());
          V[6] = q.History.Hb(H);
          V[6].Sg = l.Nk;
          V[7] = q.History.Hb("");
          Z &&
            ((V[7].Sg = l.m),
            (V[7].content = q.F.Ea(l.m)),
            (V[7].kf = q.F.Ea(q.F.um(l.m, l.Ae))));
          W && (V[7].className = "col_span");
          H = "";
          S = void 0;
          if (Z)
            a: {
              if (
                ((H = q.F.Z(l.Jc, l.j, 3)), l && l.X && (Z = u.History.df(l.X)))
              ) {
                if (Z.ho == m.data.un.xs) {
                  S = "red";
                  break a;
                }
                if (Z.ho == m.data.un.ys) {
                  S = "green";
                  break a;
                }
              }
              S = "";
            }
          V[8] = q.History.Hb(H, "", S);
          W && (V[8].className = "col_span");
          V[9] = q.History.Hb((l.Xd && l.Xd.normalize(l.Hc).gc(l.Hc)) || "");
          V[9].Sg = l.Xd;
          V[9].visible = !!(Y & N.ko);
          W && (V[9].className = "col_span");
          V[10] = q.History.Hb((l.uf && l.uf.normalize(l.Hc).gc(l.Hc)) || "");
          V[10].Sg = l.uf;
          V[10].visible = !!(Y & N.oo);
          W && (V[10].className = "col_span");
          V[11] = q.History.Hb((l.pc && l.pc.normalize(l.Hc).gc(l.Hc)) || "");
          V[11].Sg = l.pc;
          V[11].visible = !!(Y & N.xj);
          V[12] = q.History.Hb("");
          if (l.Nk == A.Rl || l.Nk == A.Zr || l.ya)
            (V[12].content = l.ya.normalize(l.Hc).gc(l.Hc)), (V[12].Sg = l.ya);
          V[13] = q.History.Hb(z.Kc(l.Eb));
          V[13].visible = !!(Y & N.Qi);
          A = {};
          A.cells = V;
          A.id = l.Od;
          A.title = n.es(l);
          b[w] = A;
          w = l.Hc;
          V = l.aa;
          k = (k + l.pc).normalize(w);
          r = (r + l.uf).normalize(w);
          h = (h + l.Xd).normalize(w);
          g = (g + l.ya + l.pc + l.Xd + l.uf).normalize(w);
          l.$u()
            ? ((p = (p + l.ya).normalize(w)),
              (c = (c + l.ya + l.pc + l.Xd + l.uf).normalize(w)))
            : l.jH()
            ? (d = (d + l.ya).normalize(w))
            : V == a.Xm && 0 < l.ya
            ? (e = (e + l.ya).normalize(w))
            : V == a.Xm && 0 > l.ya
            ? (f = (f + l.ya).normalize(w))
            : l.pf() &&
              ((p = (p + l.ya).normalize(w)), (c = (c + l.ya).normalize(w)));
        }
      }),
      b.push(l(c, d, e, f, g, h, k, p, r)));
    return b;
  }
  function l(a, b, c, d, e, f, g, h, k) {
    var l = {
        id: "total",
        className: "total",
        cells: [],
        ww: !0,
        draggable: !1,
      },
      m = "equity";
    0 < a && (m = "equity_up");
    0 > a && (m = "equity_down");
    var n = u.H.yc,
      p = {};
    p.content = p.kf = [
      '<span class="i ',
      m,
      '"></span>',
      w.fs,
      ": ",
      a.gc(n),
      "&nbsp;&nbsp;",
      w.IG,
      ": ",
      b.gc(n),
      "&nbsp;&nbsp;",
      w.JG,
      ": ",
      c.gc(n),
      "&nbsp;&nbsp;",
      w.MG,
      ": ",
      d.gc(n),
      "&nbsp;&nbsp;",
      w.HG,
      ": ",
      e.gc(n),
    ].join("");
    p.className = "iconed";
    p.colSpan = 9;
    l.cells[0] = p;
    for (a = 0; 8 > a; a++) l.cells[l.cells.length] = { content: "" };
    p = {};
    p.content = f.gc(n);
    l.cells[l.cells.length] = p;
    p = {};
    p.content = k.gc(n);
    l.cells[l.cells.length] = p;
    p = {};
    p.content = g.gc(n);
    l.cells[l.cells.length] = p;
    p = {};
    p.content = h.gc(n);
    l.cells[l.cells.length] = p;
    p = { content: "" };
    l.cells[l.cells.length] = p;
    return l;
  }
  function e() {
    var a = (u.B.u("history_table_config") || 0).ki(q.vo.Rf),
      b = p.Ed;
    b &&
      (b.map(function (b) {
        b.width = null;
        if (!a) {
          var c = u.B.u("history_deals_table_" + b.id + "_width") || void 0;
          c && (b.width = c + "px");
        }
      }),
      p.Ba && p.W());
  }
  function k() {
    var a = u.B.u("history_table_type") == q.vq.Yp;
    p.h(a);
    a && n.W();
  }
  function h() {
    var a;
    u.B.u("history_table_volumes") == q.$i.Hl && (a = 1);
    var b = p.Ed.find(function (a) {
      return "volume" == a.id;
    });
    b && (b.Gj = a);
    p.Gh();
  }
  function b() {
    var a = q.cm,
      b = u.B.u("history_table_columns");
    0 !== (b & a.xi) && u.History.Ij ? p.Og(2) : p.Jg(2);
    b & a.Qi ? p.Og(12) : p.Jg(12);
    b & a.ko ? p.Og(9) : p.Jg(9);
    b & a.oo ? p.Og(10) : p.Jg(10);
    b & a.xj ? p.Og(11) : p.Jg(11);
  }
  function a() {
    q.History.ql();
  }
  function g() {
    q.History.sv(p);
  }
  function d() {
    u.B.u("history_deals_table_sort", p.Ek());
    q.History.yg(p);
  }
  function f() {
    var a;
    u.B.u("trade_table_config") & q.sm.wj && (a = 1);
    var b = p.Ed.find(function (a) {
      return "time" == a.id;
    });
    b && (b.Gj = a);
    p.Gh();
  }
  var c = E.controls,
    z = E.ma,
    A = E.Ma,
    m = E.V,
    u = m.la,
    q = m.view,
    w = E.ba.xa,
    p,
    n = (q.fl = {
      fb: !1,
      ha: function (l) {
        if (this.fb) return this;
        p = A(c.page.no, v())
          .b({
            position: "absolute",
            left: "0",
            right: "0",
            top: "0",
            bottom: "0",
          })
          .K("fixed odd grid no-border trade-table toolbox-table")
          .K("at-history-deals-table")
          .h(!1)
          .$j("id", "deals")
          .i("select", a)
          .i("resize", g)
          .i("sort", d);
        l.c(p);
        u.B.Vb("history_table_config", e);
        u.B.Vb("history_table_type", k);
        u.B.Vb("history_table_volumes", h);
        u.B.Vb("history_table_columns ", b);
        u.B.Vb("trade_table_config", f);
        e();
        k();
        h();
        b();
        f();
        this.fb = !0;
        return this;
      },
      W: function () {
        if (!this.fb) return this;
        p.Ek(u.B.u("history_deals_table_sort") || "open_time").vc(r());
        q.History.yg(p);
        p.Gh();
        return this;
      },
      ql: function () {
        b();
        return this;
      },
      h: function (a) {
        if (!this.fb) return this;
        if (void 0 === a) return p.h();
        p.h(!!a);
        return this;
      },
      Db: function () {
        return this.fb ? p.Db() : this;
      },
      es: function (a) {
        var b = [];
        b.push("#" + a.Od);
        a.Eb && b.push(z.Kc(a.Eb));
        b.push(a.oq());
        (a = a.nq()) && b.push(w.Hx + " " + a);
        return b.join(", ");
      },
    });
})();
(function () {
  function v() {
    var a = [];
    [
      [w.sq, "open_time"],
      [w.KG, "order"],
      [w.Ou, "id"],
      [w.Pu, "symbol"],
      [w.Qu, "type"],
      [w.Ru, "volume"],
      [w.Lu, "close_price"],
      [w.dT, "sl"],
      [w.iT, "tp"],
      [w.sq, "close_time"],
      [w.eT, "state"],
      [w.Gx, "comment"],
    ].map(function (b, c) {
      a.push({ content: b[0], id: b[1], align: 0 < c ? "right" : null });
    });
    return { ej: a };
  }
  function r() {
    var a = m.data.Io,
      b = [],
      c = 0,
      d = 0,
      e = 0,
      f = q.History.sk,
      g = u.History.Yd;
    g &&
      ((g = g.slice()),
      g.map(function (g) {
        if (!f || g.l === f) {
          var h = b.length,
            k = q.cm,
            l = u.B.u("history_table_columns"),
            m = [],
            p = g.pq();
          m[0] = q.History.Hb(p, q.P.Cx(g.yb));
          m[0].Sg = g.ij;
          m[0].kf = m[0].content.split(p).join(g.pq(!0));
          m[1] = q.History.Hb(g.Xf());
          m[2] = q.History.Hb(z.Kc(g.Mm || ""));
          m[2].visible = !!(l & k.xi);
          m[3] = q.History.Hb(z.Kc(g.l.toLowerCase()));
          m[3].uh = g.l;
          (p = u.O.Ka(g.l)) && p.yf && (m[3].title = p.yf);
          m[4] = q.History.Hb(g.Ju());
          m[4].Sg = g.yb;
          m[5] = q.History.Hb("");
          m[5].content = g.to(!0);
          m[5].kf = g.to(!1);
          p = m[5].content.split("/");
          m[5].Sw = parseFloat(p[0].trim());
          m[5].Sg = parseFloat(p[1].trim());
          m[6] = q.History.Hb(g.Iu(3), "", n.EG(g));
          m[7] = q.History.Hb((g.C && q.F.Z(g.C, g.j)) || "");
          m[8] = q.History.Hb((g.D && q.F.Z(g.D, g.j)) || "");
          m[9] = q.History.Hb(g.BG());
          m[9].Sg = g.Xw;
          m[9].kf = g.BG(!0);
          m[10] = q.History.Hb(g.Ex());
          m[10].Sg = g.qk;
          m[11] = q.History.Hb(z.Kc(g.Eb));
          m[11].visible = !!(l & k.Qi);
          k = {};
          k.cells = m;
          k.id = g.X;
          k.title = n.es(g);
          b[h] = k;
          g.qk == a.Eo && d++;
          g.qk == a.zs && e++;
          c++;
        }
      }),
      b.push(l(c, d, e)));
    return b;
  }
  function l(a, b, c) {
    var d = [],
      e = {};
    e.content = e.kf = [
      '<span class="i balance"></span>' + w.hT + ": ",
      a,
      "&nbsp;&nbsp;" + w.YS + ": ",
      b,
      "&nbsp;&nbsp;" + w.RS + ": ",
      c,
    ].join("");
    e.className = "iconed";
    e.colSpan = 12;
    d[d.length] = e;
    for (a = 0; 11 > a; a++) d[d.length] = { content: "" };
    a = { id: "total", className: "total" };
    a.cells = d;
    a.ww = !0;
    a.draggable = !1;
    return a;
  }
  function e() {
    var a = (u.B.u("history_table_config") || 0).ki(q.vo.Rf),
      b = p.Ed;
    b &&
      (b.map(function (b) {
        b.width = null;
        if (!a) {
          var c = u.B.u("history_orders_table_" + b.id + "_width") || void 0;
          c && (b.width = c + "px");
        }
      }),
      p.Ba && p.W());
  }
  function k() {
    var a = u.B.u("history_table_type") == q.vq.Fq;
    p.h(a);
    a && n.W();
  }
  function h() {
    var a;
    u.B.u("history_table_volumes") == q.$i.Hl && (a = 1);
    var b = p.Ed.find(function (a) {
      return "volume" == a.id;
    });
    b && (b.Gj = a);
    p.Gh();
  }
  function b() {
    var a = q.cm,
      b = u.B.u("history_table_columns");
    0 !== (b & a.xi) && u.History.Ij ? p.Og(2) : p.Jg(2);
    b & a.Qi ? p.Og(11) : p.Jg(11);
  }
  function a() {
    q.History.ql();
  }
  function g() {
    q.History.sv(p);
  }
  function d() {
    u.B.u("history_orders_table_sort", p.Ek());
    q.History.yg(p);
  }
  function f() {
    var a;
    u.B.u("trade_table_config") & q.sm.wj && (a = 1);
    p.Ed.forEach(function (b) {
      if ("open_time" == b.id || "close_time" == b.id) b.Gj = a;
    });
    p.Gh();
  }
  var c = E.controls,
    z = E.ma,
    A = E.Ma,
    m = E.V,
    u = m.la,
    q = m.view,
    w = E.ba.xa,
    p,
    n = (q.yk = {
      fb: !1,
      ha: function (l) {
        if (this.fb) return this;
        p = A(c.page.no, v())
          .b({
            position: "absolute",
            left: "0",
            right: "0",
            top: "0",
            bottom: "0",
          })
          .K("fixed odd grid no-border trade-table toolbox-table")
          .K("at-history-orders-table")
          .h(!1)
          .$j("id", "orders")
          .i("select", a)
          .i("resize", g)
          .i("sort", d);
        l.c(p);
        u.B.Vb("history_table_config", e);
        u.B.Vb("history_table_type", k);
        u.B.Vb("history_table_volumes", h);
        u.B.Vb("history_table_columns ", b);
        u.B.Vb("trade_table_config", f);
        e();
        k();
        h();
        b();
        f();
        this.fb = !0;
        return this;
      },
      W: function () {
        if (!this.fb) return this;
        p.Ek(u.B.u("history_orders_table_sort") || "open_time").vc(r());
        q.History.yg(p);
        p.Gh();
        return this;
      },
      ql: function () {
        b();
        return this;
      },
      h: function (a) {
        if (!this.fb) return this;
        if (void 0 === a) return p.h();
        p.h(!!a);
        return this;
      },
      Db: function () {
        return this.fb ? p.Db() : this;
      },
      es: function (a) {
        var b = [];
        b.push("#" + a.Xf());
        a.Eb && b.push(z.Kc(a.Eb));
        b.push(a.oq());
        (a = a.nq()) && b.push(w.Hx + " " + a);
        return b.join(", ");
      },
      EG: function (a) {
        return a
          ? a.ho == m.data.un.xs
            ? "red"
            : a.ho == m.data.un.ys
            ? "green"
            : ""
          : "";
      },
    });
})();
(function () {
  function v() {
    var a = [];
    [
      [p.sq, "time"],
      [p.Pu, "symbol"],
      [p.LG, "ticket"],
      [p.Ou, "id"],
      [p.Qu, "type"],
      [p.Ru, "volume"],
      [p.Lu, "close_price"],
      [p.Mu, "commission"],
      [p.Nu, "fee"],
      [p.fs, "profit"],
    ].map(function (b, c) {
      a.push({
        content: b[0],
        id: b[1],
        Qm: !1,
        align: 0 < c ? "right" : null,
      });
    });
    return { ej: a };
  }
  function r() {
    var a = [],
      b = 0,
      c = w.History.sk,
      d = q.History.Yd;
    d &&
      ((d = d.slice()),
      d.sort(k),
      d.map(function (d) {
        (c && d.l !== c) ||
          ((a[a.length] = l(d)),
          (d = q.History.qS(d.X)) &&
            d.map(function (c) {
              a.push(l(c));
              if (c.$u() || c.hU())
                b = (b + c.ya + c.pc + c.Xd).normalize(c.Hc);
            }));
      }));
    a.push(e(b));
    return a;
  }
  function l(a) {
    var b = u.data.bq,
      c = [],
      d = void 0 === a.Od,
      e = "";
    if (d)
      (e = a.pq()),
        (c[0] = w.History.Hb(e, w.P.Cx(a.yb))),
        (c[0].className += " order"),
        (c[0].kf = c[0].content.split(e).join(a.pq(!0))),
        (c[1] = w.History.Hb(A.Kc(a.l.toLowerCase()))),
        (c[1].uh = a.l),
        (c[2] = w.History.Hb(a.Xf())),
        (c[3] = w.History.Hb(A.Kc(a.Mm))),
        (c[4] = w.History.Hb(a.Ju())),
        (c[5] = w.History.Hb("")),
        (c[5].content = a.to(!0)),
        (c[5].kf = a.to(!1)),
        (c[6] = w.History.Hb(a.Iu(3), "", w.yk.EG(a))),
        (c[7] = w.History.Hb("")),
        (c[8] = w.History.Hb("")),
        (e = 0 === a.Ff.compare(a.wc) ? a.Ex() : A.Kc(a.Eb));
    else if (
      ((e = a.Wl()),
      (c[0] = w.History.Hb(e, w.P.wG(a))),
      (c[0].className += " deal"),
      (c[0].kf = c[0].content.split(e).join(a.Wl(!0))),
      (c[1] = w.History.Hb("")),
      (c[1].uh = a.l),
      (c[2] = w.History.Hb(a.Od)),
      (c[3] = w.History.Hb(A.Kc(a.uw))),
      (c[4] = w.History.Hb(a.AG())),
      (c[5] = w.History.Hb("")),
      (c[5].content = w.F.Ea(a.m)),
      (c[5].kf = w.F.Ea(w.F.um(a.m, a.Ae))),
      (c[6] = w.History.Hb(w.F.Z(a.Jc, a.j, 3))),
      (c[7] = w.History.Hb((a.Xd && a.Xd.normalize(a.Hc).gc(a.Hc)) || "")),
      (c[8] = w.History.Hb((a.uf || 0).normalize(a.Hc).gc(a.Hc) || "")),
      (e = ""),
      a.Nk == b.Rl || a.Nk == b.Zr || a.ya)
    )
      e = a.ya.normalize(a.Hc).gc(a.Hc);
    c[9] = w.History.Hb(e);
    (b = q.O.Ka(a.l)) && b.yf && (c[1].title = b.yf);
    b = {};
    b.cells = c;
    b.id = d ? a.X : a.Od;
    b.title = d ? w.yk.es(a) : w.fl.es(a);
    b.draggable = !1;
    return b;
  }
  function e(a) {
    var b = { id: "total", className: "total", cells: [] },
      c = {};
    c.content = c.kf = '<span class="i equity"></span>&nbsp;';
    c.className = "iconed";
    c.colSpan = 9;
    b.cells[0] = c;
    for (c = 0; 8 > c; c++) b.cells[b.cells.length] = { content: "" };
    c = {};
    c.content = a.gc(q.H.yc);
    b.cells[b.cells.length] = c;
    return b;
  }
  function k(a, b) {
    return a.ij > b.ij ? 1 : a.ij < b.ij ? -1 : 0;
  }
  function h() {
    var a = (q.B.u("history_table_config") || 0).ki(w.vo.Rf),
      b = n.Ed;
    b &&
      (b.map(function (b) {
        b.width = null;
        if (!a) {
          var c = q.B.u("history_all_table_" + b.id + "_width") || void 0;
          c && (b.width = c + "px");
        }
      }),
      n.Ba && n.W());
  }
  function b() {
    var a = q.B.u("history_table_type") == w.vq.Kd;
    n.h(a);
    a && x.W();
  }
  function a() {
    var a;
    q.B.u("history_table_volumes") == w.$i.Hl && (a = 1);
    var b = n.Ed.find(function (a) {
      return "volume" == a.id;
    });
    b && (b.Gj = a);
    n.Gh();
  }
  function g() {
    var a = w.cm,
      b = q.B.u("history_table_columns");
    0 !== (b & a.xi) && q.History.Ij ? n.Og(3) : n.Jg(3);
    b & a.ko ? n.Og(7) : n.Jg(7);
    b & a.oo ? n.Og(8) : n.Jg(8);
  }
  function d() {
    w.History.ql();
  }
  function f() {
    w.History.sv(n);
  }
  function c() {
    var a;
    q.B.u("trade_table_config") & w.sm.wj && (a = 1);
    var b = n.Ed.find(function (a) {
      return "time" == a.id;
    });
    b && (b.Gj = a);
    n.Gh();
  }
  var z = E.controls,
    A = E.ma,
    m = E.Ma,
    u = E.V,
    q = u.la,
    w = u.view,
    p = E.ba.xa,
    n,
    x = (w.am = {
      fb: !1,
      ha: function (e) {
        if (this.fb) return this;
        n = m(z.page.no, v())
          .b({
            position: "absolute",
            left: "0",
            right: "0",
            top: "0",
            bottom: "0",
          })
          .K(
            "fixed odd grid no-border trade-table toolbox-table history-all-table"
          )
          .K("at-history-all-table")
          .h(!1)
          .$j("id", "all")
          .i("select", d)
          .i("resize", f);
        e.c(n);
        q.B.Vb("history_table_config", h);
        q.B.Vb("history_table_type", b);
        q.B.Vb("history_table_volumes", a);
        q.B.Vb("history_table_columns ", g);
        q.B.Vb("trade_table_config", c);
        h();
        b();
        a();
        g();
        c();
        this.fb = !0;
        return this;
      },
      W: function () {
        if (!this.fb) return this;
        n.Ek(q.B.u("history_all_table_sort") || "open_time").vc(r());
        w.History.yg(n);
        n.Gh();
        return this;
      },
      ql: function () {
        g();
        return this;
      },
      h: function (a) {
        if (!this.fb) return this;
        if (void 0 === a) return n.h();
        n.h(!!a);
        return this;
      },
      Db: function () {
        return this.fb ? n.Db() : this;
      },
    });
})();
(function () {
  function v() {
    var a = k();
    H.Db(null);
    H.vc(a);
    Y.g(!a.length);
    V.g(!a.length);
  }
  function r(b, c) {
    var d = B.O.Ka(b);
    if (d) {
      if (R) {
        var e = d.tk;
        e && (e = e.substr(0, e.lastIndexOf("\\"))) && R.Db(e);
      }
      d.A ? c.vc(a(d)) : (B.O.tg(b, I), Q.O.YU([d.zf]));
    }
  }
  function l(a) {
    return 10 > a ? "0" + a : "" + a;
  }
  function e() {
    var a = [];
    a.push({ content: N.e_, id: "symbol", width: "120px" });
    a.push({ content: N.YY, id: "description", width: "240px" });
    a.push({ content: N.AJ, id: "expiration", align: "right" });
    return { ej: a };
  }
  function k() {
    var a = [],
      b = 1 < W.f().length,
      c = Z.s(),
      d = b ? W.f().toLowerCase() : R.Db(),
      e = new Date().getTime(),
      f,
      g = B.O.ri(),
      k;
    if (g)
      for (var l = 0, m = g.length; l < m; l++)
        if ((k = g[l])) {
          if (b) {
            if (
              -1 === k.l.toLowerCase().indexOf(d) &&
              -1 === k.yf.toLowerCase().indexOf(d) &&
              -1 === (k.jE || "").toLowerCase().indexOf(d) &&
              -1 === (k.pE || "").toLowerCase().indexOf(d)
            )
              continue;
            if (k.$b && k.$b < e && !c) continue;
          } else if (((f = d + "\\" + k.l), k.tk != f && k.tk != "\\" + f))
            continue;
          a.push(h(k, Q.O.bk(k.l)));
        }
    return a;
  }
  function h(a, b) {
    var c = {};
    c.id = a.l;
    c.cells = [];
    var d = { className: "iconed" };
    d.content = '<span class="i ' + (b ? " selected" : "") + '"></span>' + a.l;
    c.cells[0] = d;
    d = {};
    d.content = M.Kc(a.yf);
    c.cells[1] = d;
    var e = (d = { align: "right" }),
      f;
    if (0 < a.$b) {
      f = a.$b;
      var g = [];
      f = new Date(f);
      g.push(l(f.getUTCFullYear()));
      g.push(l(f.getUTCMonth() + 1));
      g.push(l(f.getUTCDate()));
      f = g.join(".");
    } else f = "";
    e.content = f;
    c.cells[2] = d;
    return c;
  }
  function b() {
    var a = [];
    a.push({ content: "", id: "0" });
    a.push({ content: "", id: "1" });
    a.push({ content: "", id: "2" });
    return { ej: a };
  }
  function a(a) {
    if (!a) return null;
    var b = 0,
      d = [],
      e = a.A || {},
      h,
      k,
      l,
      m;
    d.push({ id: "0", cells: [] });
    k = a.l;
    a.yf && (k += ", " + M.Kc(a.yf));
    a.YM && (k = ['<a target="_blank" href="', a.YM, '">', k, "</a>"].join(""));
    d.push(f(b++, k, !1, !0));
    a.yM && d.push(c(b++, N.sZ, a.yM, "str"));
    a.jE && d.push(c(b++, N.SY, a.jE, "str"));
    a.pE && d.push(c(b++, N.$Y, a.pE, "str"));
    a.HE && d.push(c(b++, N.LZ, L.O.CS(a.HE), "str"));
    a.qM && d.push(c(b++, N.nZ, L.O.xS(a.qM), "str"));
    a.qr && d.push(c(b++, N.XY, a.qr, "str"));
    d.push(c(b++, N.ZY, a.j, "num"));
    d.push(
      c(
        b++,
        N.VY,
        a.Bc.toLocaleString("fullwide", {
          minimumSignificantDigits: 1,
          useGrouping: !1,
        }),
        "num"
      )
    );
    a.Td() ||
      (0 < a.cN
        ? ((h = a.cN), a.A && a.A.cg !== Number.J && (h += a.A.cg), (k = h))
        : (k = N.RZ),
      d.push(c(b++, N.PZ, k, "num")),
      d.push(c(b++, N.VZ, e.Ah, "num")),
      d.push(c(b++, N.BZ, a.sw, "str")));
    d.push(c(b++, N.JZ, a.vt, "str"));
    d.push(c(b++, N.xJ, L.O.sG(a.Zd), "str"));
    if (a.Td())
      d.push(c(b++, N.CJ, e.Ji.toFixed(3), "num")),
        d.push(c(b++, N.uv, L.O.Fx(e.Rh), "num")),
        d.push(c(b++, N.yJ, L.O.FG(a.bo), "str"));
    else {
      (a.kU() || a.nH()) && a.tt && d.push(c(b++, N.RY, a.tt, "str"));
      a.nH() &&
        (d.push(c(b++, N.GZ, L.O.AS(a.bN), "num")),
        d.push(c(b++, N.FZ, L.O.zS(a.bN), "num")),
        d.push(c(b++, N.IZ, a.M4.toFixed(a.j), "num")));
      a.mh() ||
        (d.push(c(b++, N.f_, a.Ta.toFixed(a.j), "num")),
        d.push(c(b++, N.g_, L.F.Zm(a.Qf, 8), "num")));
      a.ls() &&
        (0 < a.Mi && d.push(c(b++, N.eZ, a.Mi.toFixed(a.kk), "num")),
        0 < a.Zk && d.push(c(b++, N.QY, a.Zk.toFixed(a.kk), "num")));
      a.Zd != D.data.Pc.Gk
        ? (0 < e.bb && d.push(c(b++, N.pZ, L.F.Zm(e.bb, 8), "num")),
          0 < e.ub && d.push(c(b++, N.AZ, L.F.Zm(e.ub, 8), "num")))
        : (0 < e.bb && d.push(c(b++, N.qZ, L.F.Zm(e.bb, 8), "num")),
          0 < e.ub && d.push(c(b++, N.rZ, L.F.Zm(e.ub, 8), "num")));
      B.H.Kg() &&
        (e.At & D.data.aI.DH
          ? d.push(c(b++, N.DJ, N.CZ, "str"))
          : 0 < e.wp && d.push(c(b++, N.DJ, L.F.Zm(e.wp, 8), "num")));
      d.push(c(b++, N.yJ, L.O.FG(a.bo), "str"));
      d.push(z(b++, N.DZ, N.oZ, N.zZ, "", !0));
      for (l = 0; 8 > l; l++)
        d.push(
          z(b++, L.O.yS(l), e.me[l].toFixed(7), e.ne[l].toFixed(7), "num")
        );
      0 < e.Ji && d.push(c(b++, N.CJ, e.Ji.toFixed(3), "num"));
      d.push(c(b++, N.uv, L.O.Fx(e.Rh), "num"));
      if (e.Rh > D.data.Yi.$q) {
        d.push(c(b++, N.aZ, L.O.tS(e.$d), "num"));
        d.push(c(b++, N.iZ, L.O.wS(a.L4), "num"));
        k = "";
        switch (e.oi & D.data.Ci.yx) {
          case D.data.Ci.hG:
            k = N.jD;
            break;
          case D.data.Ci.yx:
            k = N.gD;
            break;
          default:
            for (
              h = [D.data.Ci.cl, D.data.Ci.dl], l = 0, m = h.length;
              l < m;
              l++
            )
              e.oi & h[l] && (k.length && (k += ", "), (k += L.O.uS(h[l])));
        }
        d.push(c(b++, N.fZ, k, "str"));
        k = "";
        switch (e.Ni & D.data.ai.vK) {
          case D.data.ai.l0:
            k = N.jD;
            break;
          case D.data.ai.vK:
            k = N.gD;
            break;
          default:
            for (
              h = [D.data.ai.An, D.data.ai.zn, D.data.ai.Wq, D.data.ai.Xq],
                l = 0,
                m = h.length;
              l < m;
              l++
            )
              e.Ni & h[l] && (k.length && (k += ", "), (k += L.O.GS(h[l])));
        }
        d.push(c(b++, N.AJ, k, "str"));
        k = "";
        switch (e.ad & D.data.dd.kI) {
          case D.data.dd.YW:
            k = N.jD;
            break;
          case D.data.dd.kI:
            k = N.gD;
            break;
          default:
            for (
              h = [
                D.data.dd.Gq,
                D.data.dd.zo,
                D.data.dd.Ao,
                D.data.dd.ws,
                D.data.dd.Lg,
                D.data.dd.Mg,
              ],
                l = 0,
                m = h.length;
              l < m;
              l++
            )
              e.ad & h[l] && (k.length && (k += ", "), (k += L.O.BS(h[l])));
        }
        d.push(c(b++, N.HZ, k, "str"));
        d.push(c(b++, N.xZ, L.F.Ea(e.mj, !0), "num"));
        d.push(c(b++, N.wZ, L.F.Ea(e.lj, !0), "num"));
        d.push(c(b++, N.yZ, L.F.Ea(e.sg, !0), "num"));
        e.Lr.lf(Long.Ga) && d.push(c(b++, N.vZ, L.F.Ea(e.Lr, !0), "num"));
      }
      e.Ip > D.data.Fk.JY &&
        ((k = L.O.ES(e.Ip)),
        e.Ip == D.data.Fk.tJ && (k = a.sw),
        e.Ip == D.data.Fk.uJ && (k = a.currency),
        d.push(c(b++, N.d_, k, "num")),
        d.push(c(b++, N.$Z, L.F.Zm(e.Uw, 8), "num")),
        d.push(c(b++, N.c_, L.F.Zm(e.Vw, 8), "num")),
        0 <= e.Ut &&
          7 >= e.Ut &&
          d.push(
            c(
              b++,
              N.WZ,
              [N.LJ, N.JJ, N.NJ, N.OJ, N.MJ, N.IJ, N.KJ, N.p_][e.Ut],
              "cal"
            )
          ));
      a.aN && d.push(c(b++, N.i_, M.pj(a.aN, !1, !0).substr(0, 16), "cal"));
      a.$b && d.push(c(b++, N.h_, M.pj(a.$b, !1, !0).substr(0, 16), "cal"));
    }
    d.push(z(b++, N.MZ, N.KZ, N.uv, "", !0, !0));
    h = [N.LJ, N.JJ, N.NJ, N.OJ, N.MJ, N.IJ, N.KJ];
    l = 0;
    for (m = h.length; l < m; l++)
      d.push(z(b++, h[l], A(a.RM.EE[l]), A(a.RM.VE[l]), "cal", void 0, !0));
    return (d = d.concat(g(a)));
  }
  function g(a) {
    var b = D.data.dK,
      c = [];
    a = B.pm.DG(a.zf);
    var e, g;
    if (a && a.length) {
      c.push(f("100", N.QZ, !0));
      c.push(z("101", N.TZ, N.UZ, N.SZ, "", !0, !0));
      for (var h = 0, k = a.length; h < k; h++)
        if ((e = a[h])) {
          g = "";
          switch (e.Cw) {
            case b.HH:
              g = e.bb.toFixed(2) + " / " + e.ub.toFixed(2);
              break;
            case b.qB:
              g = N.EZ;
              break;
            case b.FH:
              g =
                N.TY + ": " + e.bb.toFixed(0) + "% / " + e.ub.toFixed(0) + "%";
              break;
            case b.GH:
              g = N.UY + ": " + e.bb.toFixed(0) + " / " + e.ub.toFixed(0);
          }
          c.push(z(102 + h + "", d(e.qp), d(e.rp), g, "str", void 0, !0));
        }
    }
    return c;
  }
  function d(a) {
    var b = D.data.cK,
      c = "",
      d;
    if (!a || !a.length) return "";
    for (var e = 0, f = a.length; e < f; e++)
      (d = a[e]),
        c && (c += ", "),
        (c =
          d.mode === b.xH
            ? c + (d.l + " (" + d.Rm.toFixed(5) + ")")
            : d.Jp && d.Kp
            ? c +
              (d.l +
                " " +
                M.Du(d.Jp, !0) +
                " - " +
                M.Du(d.Kp, !0) +
                " (" +
                d.Rm.toFixed(5) +
                ")")
            : d.Jp
            ? c +
              (d.l +
                " " +
                N.tZ +
                " " +
                M.Du(d.Jp, !0) +
                " (" +
                d.Rm.toFixed(5) +
                ")")
            : d.Kp
            ? c +
              (d.l +
                " " +
                N.uZ +
                " " +
                M.Du(d.Kp, !0) +
                " (" +
                d.Rm.toFixed(5) +
                ")")
            : c + (d.l + " (" + d.Rm.toFixed(5) + ")"));
    return c;
  }
  function f(a, b, c, d) {
    !0 !== d && (b = M.Kc(b));
    c && (b = "<b>" + b + "</b>");
    c = {};
    c.content = b;
    c.colSpan = 3;
    b = {};
    b.id = a;
    b.cells = [c];
    return b;
  }
  function c(a, b, c, d) {
    var e = {};
    d
      ? ((e.className = "iconed"),
        (b = '<span class="i ' + d + '"></span>' + M.Kc(b)))
      : (b = M.Kc(b));
    e.content = b;
    b = {};
    b.content = M.Kc(c);
    b.align = "right";
    b.colSpan = 2;
    c = {};
    c.id = a.toString();
    c.cells = [e, b];
    return c;
  }
  function z(a, b, c, d, e, f, g) {
    b = M.Kc(b);
    c = M.Kc(c);
    d = M.Kc(d);
    f &&
      ((b = "<b>" + b + "</b>"),
      (c = "<b>" + c + "</b>"),
      (d = "<b>" + d + "</b>"));
    f = {};
    e &&
      ((f.className = "iconed"), (b = '<span class="i ' + e + '"></span>' + b));
    f.content = b;
    b = {};
    b.content = c;
    b.align = !0 === g ? "left" : "right";
    c = {};
    c.content = d;
    c.align = !0 === g ? "left" : "right";
    d = {};
    d.id = a.toString();
    d.cells = [f, b, c];
    return d;
  }
  function A(a) {
    for (var b = "", c, d = 0, e = a.length; d < e; d++)
      (c = a[d]) &&
        (c.open || c.close) &&
        (b.length && (b += ", "),
        (b =
          1440 <= c.open
            ? b +
              (l(Math.floor(c.open / 60) % 24) +
                ":" +
                l(Math.floor(c.open % 60)) +
                "-" +
                l(Math.floor((c.close / 60) % 24)) +
                ":" +
                l(Math.floor(c.close % 60)))
            : 1440 < c.close
            ? b +
              (l(Math.floor(c.open / 60)) +
                ":" +
                l(Math.floor(c.open % 60)) +
                "-" +
                l(Math.floor((c.close / 60) % 24)) +
                ":" +
                l(Math.floor(c.close % 60)))
            : b +
              (l(Math.floor(c.open / 60)) +
                ":" +
                l(Math.floor(c.open % 60)) +
                "-" +
                l(Math.floor(c.close / 60)) +
                ":" +
                l(Math.floor(c.close % 60)))));
    return b;
  }
  function m() {
    W.f("");
    H.Db(null);
    H.vc([]);
    S.Db(null);
    S.vc([]);
    Y.g(!0);
    V.g(!0);
    v();
  }
  function u() {}
  function q(a) {
    r(a, S);
  }
  function w(a) {
    var b = B.O.Ka(a);
    b &&
      (Q.O.bk(a) ? Q.O.pl(a) : Q.O.Xi(a),
      B.Ib.Vg().length == Q.O.ak ? H.vc(k()) : H.Zg(h(b, Q.O.bk(a))));
  }
  function p(a) {
    "keyup" == a.type && (W.y3 = W.f());
    if ("change" != a.type || W.f() != W.y3)
      H.Db(null), H.vc([]), S.Db(null), S.vc([]), v();
  }
  function n() {
    1 < W.f().length && v();
  }
  function x() {
    var a = H.Db(),
      b;
    if (a)
      Q.O.Xi(a),
        (b = B.O.Ka(a)) &&
          (B.Ib.Vg().length == Q.O.ak ? H.vc(k()) : H.Zg(h(b, Q.O.bk(a))));
    else if ((b = H.iq().slice())) {
      var c = b.map(function (a) {
        return a.id;
      });
      c && Q.O.Bv(c, !0);
      for (var d = 0, e = c.length; d < e; d++)
        (a = c[d]) && (b = B.O.Ka(a)) && H.Zg(h(b, Q.O.bk(a)));
    }
  }
  function C() {
    var a = H.Db(),
      b;
    if (a) Q.O.pl(a), (b = B.O.Ka(a)) && H.Zg(h(b, Q.O.bk(a)));
    else if ((b = H.iq().slice())) {
      var c = b.map(function (a) {
        return a.id;
      });
      c && Q.O.KD(c);
      for (var d = 0, e = c.length; d < e; d++)
        (a = c[d]) && (b = B.O.Ka(a)) && H.Zg(h(b, Q.O.bk(a)));
    }
  }
  function O() {
    T.oa();
  }
  function I(b, c) {
    B.O.xe(b, I);
    S.vc(a(c));
  }
  function G() {
    ha.oa();
  }
  var F = E.va,
    y = E.controls,
    M = E.ma,
    D = E.V,
    L = D.view,
    B = D.la,
    Q = D.control,
    N = E.ba.xa,
    K = E.Ma,
    P = (L.Ss = {});
  P.ha = function () {
    if (P.ua) return P;
    var a = { position: "absolute", right: "8px", width: "84px" };
    R = K(y.page.dL)
      .b({
        position: "absolute",
        left: "8px",
        top: "8px",
        width: "200px",
        height: "486px",
      })
      .i("select", m)
      .i("dblclick", u);
    var c = K(y.page.Text);
    W = K(y.input.Text)
      .b({ position: "absolute", left: "220px", top: "8px", width: "300px" })
      .i("change", p)
      .i("keyup", p)
      .i("paste", p);
    Z = K(y.input.pa)
      .o("symbols-config-expired")
      .b({
        position: "absolute",
        left: "526px",
        top: "13px",
      })
      .i("change", n);
    var d = K(y.page.I, "symbols-config-expired")
      .Text(N.OZ)
      .b({ position: "absolute", left: "542px", top: "12px" });
    H = K(y.page.Yo, e())
      .T(!0)
      .Iq(!0)
      .rq(!0)
      .Av(!0)
      .K("borders symbols-list")
      .b({
        position: "absolute",
        left: "220px",
        top: "38px",
        right: "100px",
        height: "200px",
      })
      .i("select", q)
      .i("doubleclick", w);
    S = K(y.page.Yo, b())
      .T(!0)
      .Iq(!0)
      .rq(!0)
      .K("no-header borders symbols-info")
      .b({
        position: "absolute",
        left: "220px",
        top: "246px",
        right: "100px",
        height: "250px",
      });
    Y = K(y.input.Ua).Text(N.NZ).g(!0).b(a).b({ top: "38px" }).i("click", x);
    V = K(y.input.Ua).Text(N.mZ).g(!0).b(a).b({ top: "66px" }).i("click", C);
    ea = K(y.input.Ua).Text(N.zJ).b(a).b({ bottom: "9px" }).i("click", O);
    T = K(y.page.Window, { title: N.j_, width: 800, height: 546 })
      .Uc(F.body)
      .c(R)
      .c(H)
      .c(S)
      .c(Z)
      .c(d)
      .c(W)
      .c(c)
      .c(Y)
      .c(V)
      .c(ea)
      .b({ "z-index": "15001" })
      .oa();
    P.ua = !0;
    return P;
  };
  P.na = function () {
    if (!P.ua) return P;
    var a = L.ce.Me,
      b = a("symbols"),
      c,
      d,
      e,
      f,
      g,
      h = {};
    c = { id: "terminal" };
    c.icon = a("terminal");
    c.label = "MetaTrader 5";
    c.items = [];
    for (var a = B.Us.nG().slice(), k = 0, l = a.length; k < l; k++)
      if ((d = a[k]))
        (g = d = d.vf),
          (f = d.substr(0, d.lastIndexOf("\\"))),
          -1 < d.indexOf("\\") && (f = d.substr(0, d.lastIndexOf("\\"))),
          -1 < d.indexOf("\\") && (d = d.substr(d.lastIndexOf("\\") + 1)),
          (e = h[g] || {}),
          (e.id = g),
          (e.icon = b),
          (e.label = d),
          (h[g] = e),
          f
            ? (h[f] || (h[f] = {}),
              h[f].items || (h[f].items = []),
              h[f].items.push(e))
            : c.items.push(e);
    R.vc(c);
    T.na();
    H.vc([]);
    S.vc([]);
    return P;
  };
  P.oa = function () {
    if (!P.ua) return P;
    T.oa();
    return P;
  };
  P.sD = function (a) {
    ha ||
      ((fa = K(y.page.Yo, b())
        .T(!0)
        .Iq(!0)
        .rq(!0)
        .K("no-header borders symbols-info")
        .b({ margin: "8px", height: "400px" })),
      (aa = K(y.input.Ua)
        .Text(N.zJ)
        .b({
          position: "absolute",
          bottom: "8px",
          left: "50%",
          width: "84px",
          "margin-left": "-42px",
        })
        .b({ bottom: "8px" })
        .i("click", G)),
      (ha = K(y.page.Window, { title: "Symbols", width: 800, height: 600 })
        .Uc(F.body)
        .c(fa)
        .c(aa)
        .b({ "z-index": "15001" })
        .oa()));
    ha.na();
    r(a, fa);
    ha.Fe([a, " ", N.WY].join("")).$l(fa.Gf().offsetHeight + 86);
  };
  var T, R, H, S, Z, W, Y, V, ea, ha, fa, aa;
})();
(function () {
  function v() {
    if (I.ua) return I;
    if (!G) {
      G = O(u.page.Window, { title: "Order", width: 786, height: 394 })
        .Uc(m.body)
        .i("close", f)
        .oa();
      var a = {
          position: "absolute",
          width: "85px",
          left: "334px",
          "text-align": "right",
          "line-height": "23px",
        },
        b = {
          position: "absolute",
          left: "426px",
          width: "323px",
          height: "22px",
        };
      G.c(
        (D = O(u.L.A2).b({
          position: "absolute",
          left: "8px",
          top: "8px",
          width: "305px",
          height: "333px",
          "border-color": "#ABADB3",
        }))
      );
      G.c(
        O(u.page.Text, "order-dialog-symbol")
          .Text(C.yX + ":")
          .b(a)
          .b({ top: "8px" })
      );
      G.c(
        (F = O(u.input.of)
          .o("order-dialog-symbol")
          .b(b)
          .b({ top: "8px" })
          .i("change", c))
      );
      G.c(
        O(u.page.Text, "order-dialog-type")
          .Text(C.uI + ":")
          .b(a)
          .b({ top: "36px" })
      );
      G.c(
        (y = O(u.input.of)
          .o("order-dialog-type")
          .b(b)
          .b({ top: "36px" })
          .i("change", z))
      );
      G.c(
        (M = O(u.page.ge).b({
          position: "absolute",
          border: "1px solid #DDDDDD",
          right: "8px",
          top: "75px",
          width: "440px",
          height: "266px",
        }))
      );
    }
    p.Ds.ha(M, F, y, D);
    p.Es.ha(M, F, y, D);
    p.Js.ha(M, F, y, D);
    p.Is.ha(M, F, y, D);
    p.Cs.ha(M, F, y, D);
    p.Hs.ha(M, F, y, D);
    p.Gs.ha(M, F, y, D);
    p.Jq.ha(M, F, y, D);
    I.ua = !0;
    return I;
  }
  function r(a) {
    I.ua || v();
    a instanceof q.data.bi
      ? ((L = a), (L.Oh = !1))
      : ((L = new q.data.bi()), (L.m = Long.Ga.La()), (L.l = a || ""));
    !x.Wc.Kg(n.H) && (a = n.P.Ul(a)) && (L.Ya = a.ka);
    k();
  }
  function l(a, b, c) {
    I.ua || v();
    var d = q.data.Fc;
    if (a && !a.m.ab()) {
      var e = n.O.Ka(a.l);
      e &&
        ((L = new q.data.bi()),
        (L.l = a.l),
        (L.Ya = a.ka),
        (L.aa = d.yj),
        (L.C = x.pd.We(void 0 !== b ? b : a.Mb, e.Ta, e.j)),
        (L.D = x.pd.We(void 0 !== c ? c : a.Qb, e.Ta, e.j)),
        k());
    }
  }
  function e() {
    G && G.oa();
    p.Ds.oa();
    p.Is.oa();
    p.Es.oa();
    p.Js.oa();
    p.Cs.oa();
    p.Hs.oa();
    p.Gs.oa();
    p.Jq.oa();
  }
  function k() {
    B = L.Th();
    var a = q.control.bL;
    if (!L.l) {
      var c = !1,
        d;
      switch (n.B.u("trade_symbol_mode")) {
        case a.SJ:
          if ((a = n.ra.nd())) (L.l = a.symbol), (c = !0);
          break;
        case a.s_:
          (d = n.B.u("trade_symbol_default")) &&
            (a = n.O.Ka(d)) &&
            a.hl() &&
            ((L.l = d), (c = !0));
          break;
        case a.t_:
          (d = n.B.u("trade_symbol_last")) &&
            (a = n.O.Ka(d)) &&
            a.hl() &&
            ((L.l = d), (c = !0));
      }
      if (!c && (c = n.Ib.Vg())) {
        d = 0;
        for (var e = c.length; d < e; d++)
          if ((a = n.O.Ka(c[d])) && a.hl()) {
            L.l = a.l;
            break;
          }
      }
    }
    b();
    a = w.rb;
    if (a.WG() && a.ey() && x.P.ih() && n.Ib.A_() && L && L.l && n.Ib.z_(L.l)) {
      G.Fe("Order").na();
      a = [];
      d = n.Ib.Vg();
      var f;
      if (d)
        for (var h = 0, k = d.length; h < k; h++)
          (e = d[h]) &&
            (f = n.O.Ka(e)) &&
            f.hl() &&
            ((c = {}),
            (c.value = e),
            f.yf ? (c.label = [e, f.yf].join(", ")) : (c.label = e),
            a.push(c));
      F.de(a).g(!1);
      g(L.l);
    }
  }
  function h() {
    var b = q.data.dd,
      c = q.data.Tf,
      d = q.data.Fc,
      e = [],
      f = n.O.Ka(L.l);
    if (f && f.A) {
      if (0 != (f.A.ad & b.Gq))
        switch (f.A.$d) {
          case c.bl:
            if (f.A.yh.ab() || L.m.Cl(f.A.yh)) {
              e.push({ value: d.zg, label: C.ZW });
              break;
            }
          case c.Sl:
            e.push({ value: d.Yg, label: C.uX });
            break;
          case c.wk:
            e.push({ value: d.Ih, label: C.$W });
            break;
          case c.Eg:
            e.push({ value: d.qh, label: C.XW });
        }
      (f.gl(b.zo) || f.gl(b.Ao) || f.gl(b.ws)) &&
        e.push({ value: d.Pg, label: C.eX });
      (f.gl(b.Lg) || f.gl(b.Mg)) &&
        B.l == L.l &&
        (b = n.P.Ui(f.l, L.Ya)) &&
        (e.push({ value: d.yj, label: C.cX }), a(b));
      if (x.P.G2() && x.P.$K(f) && (b = n.P.fg(L.Ya)) && b.l == f.l) {
        f = !1;
        c = n.P.mq(b.l);
        if (c.length)
          for (var g = 0, h = c.length; g < h; g++)
            if (c[g] && b.aa != c[g].aa) {
              f = !0;
              break;
            }
        f && (e.push({ value: d.Zi, label: C.UW }), a(b));
      }
      (L.aa != d.Di && L.aa != d.dk) ||
        B.l != L.l ||
        !(b = n.P.df(B.X)) ||
        (e.push({ value: d.Di, label: C.bX }), G.Fe(C.dX + ": " + x.Re.AI(b)));
      y.de(e).g(!1);
    }
  }
  function b() {
    var a = q.data.Fc,
      b = q.data.Tf;
    if (!(L.aa >= a.Pg)) {
      var c = n.O.Ka(L.l);
      if (!c) {
        var d = n.Ib.Vg();
        d && d.length && (c = n.O.Ka(d[0])) && (L.l = c.l);
      }
      if (c)
        switch (c.A.$d) {
          case b.Sl:
            L.aa = a.Yg;
            break;
          case b.bl:
            L.aa = a.zg;
            break;
          case b.wk:
            L.aa = a.Ih;
            break;
          case b.Eg:
            L.aa = a.qh;
        }
    }
  }
  function a(a) {
    G.Fe(C.fX + ": " + x.Re.Ko(a));
  }
  function g(a) {
    if (a) {
      L.l = a;
      F.f(a);
      if ((a = n.O.Ka(L.l)))
        D.u(n.wa.aF(L.l) || [])
          .cq(a.j)
          .ph(null)
          .rh(null)
          .Entry(null)
          .cY()
          .W(),
          n.wa.tg(L.l, A);
      h();
      b();
      d(L.aa);
    }
  }
  function d(a) {
    var b = q.data.Fc,
      c = !1,
      d = y.de();
    if (d)
      for (var e = 0, f = d.length; e < f; e++)
        if (d[e] && d[e].value == a) {
          c = !0;
          break;
        }
    c || (a = (d && d[0] && d[0].value) || null);
    y.f(a);
    p.Ds.oa();
    p.Is.oa();
    p.Es.oa();
    p.Cs.oa();
    p.Js.oa();
    p.Hs.oa();
    p.Gs.oa();
    p.Jq.oa();
    switch (a) {
      case b.Yg:
        p.Is.na(L);
        break;
      case b.zg:
        p.Ds.na(L);
        break;
      case b.Ih:
        p.Es.na(L);
        break;
      case b.qh:
        p.Cs.na(L);
        break;
      case b.Pg:
        p.Hs.na(L);
        break;
      case b.yj:
        p.Js.na(L);
        break;
      case b.Di:
        p.Gs.na(L);
        break;
      case b.Zi:
        p.Jq.na(L);
    }
  }
  function f() {
    e();
  }
  function c() {
    g(F.f());
  }
  function z() {
    d(parseInt(y.f()));
  }
  function A(a) {
    a == L.l && D.W();
  }
  var m = E.va,
    u = E.controls,
    q = E.V,
    w = E.ba,
    p = q.view,
    n = q.la,
    x = q.control,
    C = E.ba.xa,
    O = E.Ma,
    I = (p.Jb = {});
  I.ha = v;
  I.na = r;
  I.G_ = function (a) {
    a && (I.ua || v(), (L = a), (L.Oh = !1), k());
  };
  I.I_ = function (a, b, c, d, e, f) {
    I.ua || v();
    var g = q.data.Fc,
      h = q.data.ai,
      l = q.data.yi;
    if (a) {
      var m = n.O.Ka(a);
      m &&
        ((L = new q.data.bi()),
        (L.l = a),
        (L.m = (b && b.La()) || Long.Ga.La()),
        (L.aa = g.Pg),
        (L.N = x.pd.We(d || 0, m.Ta, m.j)),
        (L.C = x.pd.We(e || 0, m.Ta, m.j)),
        (L.D = x.pd.We(f || 0, m.Ta, m.j)),
        (L.da = c),
        m.A.Ni & h.An ? (L.sd = h.il) : m.A.Ni & h.zn && (L.sd = h.sn),
        (L.fe = l.Fh),
        k());
    }
  };
  I.zv = function (a) {
    I.ua || v();
    L = new q.data.bi();
    L.l = a.l;
    L.m = a.m.La();
    L.Ya = a.ka;
    k();
  };
  I.Rs = l;
  I.Mca = function (a, b, c) {
    I.ua || v();
    (a = n.P.Ul(a)) && l(a, b, c);
  };
  I.Tq = function (a, b, c, d, e) {
    I.ua || v();
    var f = q.data.Fc,
      g = q.data.eb;
    if ((a = n.P.df(a))) {
      a = a.Th();
      var h = n.O.Ka(a.l);
      if (h) {
        var l = b ? b - a.N : 0;
        a.C && (a.C = (a.C + l).normalize(a.j));
        a.D && (a.D = (a.D + l).normalize(a.j));
        if (a.yb == g.hd || a.type == g.jd) a.Na = (a.Na + l).normalize(a.j);
        L = new q.data.bi();
        L.l = a.l;
        L.aa = f.Di;
        L.X = a.X;
        L.N = x.pd.We(b ? b : a.N, h.Ta, h.j);
        L.Na = x.pd.We(c ? c : a.Na, h.Ta, h.j);
        L.C = x.pd.We(d ? d : a.C, h.Ta, h.j);
        L.D = x.pd.We(e ? e : a.D, h.Ta, h.j);
        L.sd = a.sd;
        L.$b = a.$b;
        L.da = a.yb;
        k();
      }
    }
  };
  I.Qs = function (a, b) {
    I.ua || v();
    var c = q.data.Fc,
      d = q.data.za;
    G.De() && r(a.l);
    var e = a.aa;
    if (
      e == y.f() ||
      (e == c.Yg && y.f() == c.zg) ||
      (e == c.zg && b && b.Ca == d.jm) ||
      (e == c.ck && y.f() == c.Yg) ||
      (e == c.dk && y.f() == c.Di)
    )
      switch (y.f()) {
        case c.Yg:
        case c.ck:
          p.Is.Ai(a, b);
          break;
        case c.zg:
          p.Ds.Ai(a, b);
          break;
        case c.Ih:
          p.Es.Ai(a, b);
          break;
        case c.qh:
          p.Cs.Ai(a, b);
          break;
        case c.Pg:
          p.Hs.Ai(a, b);
          break;
        case c.yj:
          p.Js.Ai(a, b);
          break;
        case c.Di:
        case c.dk:
          p.Gs.Ai(a, b);
          break;
        case c.Zi:
          p.Jq.Ai(a, b);
      }
  };
  I.AX = function (a) {
    var b = q.data.za;
    switch (a.Ca) {
      case b.qe:
      case b.uj:
      case b.vj:
        break;
      case b.jm:
        w.je.lJ(!0);
        break;
      case b.Xc:
      case b.hm:
      case b.Dk:
      case b.jg:
        w.je.Za();
        break;
      default:
        w.je.Error(!0);
    }
  };
  I.oa = e;
  I.QF = function (a, b) {
    L = a;
    h();
    d(b);
  };
  var G, F, y, M, D, L, B;
})();
(function () {
  var v = E.V,
    r = v.view,
    l = v.control,
    e = E.ba.xa,
    k = r.Jb || {};
  k.$m = function (e, b, a, g, d, f) {
    var c = v.data.Fc,
      k = [];
    switch (e.aa) {
      case c.ck:
        k.push("prices for");
        k.push(" ", e.l);
        k.push(" ", r.F.Ea(e.m));
        break;
      case c.Yg:
        k.push("#", b.X);
        k.push(" request ", l.Re.Jo(e.da));
        k.push(' <span class="vol">', r.F.Ea(b.m), "</span>");
        k.push(" ", e.l);
        k.push(' at <span class="price">', r.F.Z(b.ia, a.j), "</span>");
        break;
      case c.zg:
        k.push("#", b.X);
        k.push(" instant ", l.Re.Jo(e.da));
        k.push(' <span class="vol">', r.F.Ea(b.m), "</span>");
        k.push(" ", e.l);
        k.push(' at <span class="price">', r.F.Z(b.ia, a.j), "</span>");
        break;
      case c.Ih:
        k.push("#", b.X);
        k.push(" market ", l.Re.Jo(e.da));
        k.push(' <span class="vol">', r.F.Ea(e.m), "</span>");
        k.push(" ", e.l);
        k.push(' at <span class="price">', r.F.Z(b.ia, a.j), "</span>");
        break;
      case c.qh:
        k.push("#", b.X);
        k.push(" exchange ", l.Re.Jo(e.da));
        k.push(' <span class="vol">', r.F.Ea(e.m), "</span>");
        k.push(" ", e.l);
        k.push(' at <span class="price">', r.F.Z(b.ia, a.j), "</span>");
        break;
      case c.Pg:
        k.push("#", b.X);
        k.push(" ", l.Re.Jo(e.da));
        k.push(' <span class="vol">', r.F.Ea(e.m), "</span>");
        k.push(" ", e.l);
        k.push(' at <span class="price">', l.Re.PB(e.N, e.Na, a.j), "</span>");
        b = [];
        e.C && b.push(" sl: ", r.F.Z(e.C, a.j));
        e.D && b.push(" tp: ", r.F.Z(e.D, a.j));
        b.length && k.push("\n", b.join(""));
        break;
      case c.yj:
        k.push("modify");
        g.ka && g.ka && k.push(" #", g.ka);
        k.push(" ", l.Re.Ls(g.aa));
        k.push(' <span class="vol">', r.F.Ea(g.m), "</span>");
        k.push(" ", g.l);
        k.push("<br/>sl: ", r.F.Z(e.C, a.j));
        k.push(" tp: ", r.F.Z(e.D, a.j));
        break;
      case c.Di:
        k.push("#", f.Xf());
        k.push(" ", l.Re.Jo(e.da));
        k.push(' <span class="vol">', r.F.Ea(f.wc), "</span>");
        k.push(" ", e.l);
        k.push(' at <span class="price">', l.Re.PB(e.N, e.Na, a.j), "</span>");
        k.push("<br/>sl: ", r.F.Z(e.C, a.j));
        k.push(" tp: ", r.F.Z(e.D, a.j));
        break;
      case c.dk:
        k.push("cancel #", f.Xf());
        k.push(" ", l.Re.Jo(f.yb));
        k.push(' <span class="vol">', r.F.Ea(f.wc), "</span>");
        k.push(" ", f.l);
        k.push(' at <span class="price">', l.Re.PB(f.N, f.Na, a.j), "</span>");
        b = [];
        e.C && b.push(" sl: ", r.F.Z(f.C, a.j));
        e.D && b.push(" tp: ", r.F.Z(f.D, a.j));
        b.length && k.push("\n", b.join(""));
        break;
      case c.Zi:
        k.push("close position"),
          k.push(" #", g.ka),
          k.push(" ", l.Re.Ls(g.aa)),
          k.push(' <span class="vol">', r.F.Ea(g.m), "</span>"),
          k.push(" ", g.l),
          k.push("\nby position #", d.ka),
          k.push(" ", l.Re.Ls(d.aa)),
          k.push(' <span class="vol">', r.F.Ea(d.m), "</span>"),
          k.push(" ", d.l);
    }
    k = k.join("");
    k = k.split('<span class="vol">').join("");
    k = k.split('<span class="price">').join("");
    return (k = k.split("</span>").join(""));
  };
  k.Ug = function (h) {
    var b = v.data.za,
      a = {};
    a[b.Cb] = e.SK;
    a[b.jl] = e.SK;
    a[b.gm] = e.PK;
    a[b.nv] = e.RK;
    a[b.CI] = e.RK;
    a[b.DI] = e.QK;
    a[b.FI] = e.QK;
    a[b.GI] = e.r1;
    a[b.HI] = e.s1;
    a[b.II] = e.t1;
    a[b.RB] = e.p1;
    a[b.EI] = e.q1;
    a[b.qe] = e.Q1;
    a[b.uj] = e.u1;
    a[b.vj] = e.d2;
    a[b.jm] = e.h2;
    a[b.Sq] = e.a2;
    a[b.Ms] = e.f2;
    a[b.ov] = e.y1;
    a[b.jg] = e.Y1;
    a[b.Xc] = e.C1;
    a[b.hm] = e.E1;
    a[b.Dk] = e.D1;
    a[b.NI] = e.F1;
    a[b.ZI] = e.j2;
    a[b.Xg] = e.I1;
    a[b.im] = e.P1;
    a[b.qf] = e.N1;
    a[b.Qe] = e.O1;
    a[b.ml] = e.l2;
    a[b.UI] = e.V1;
    a[b.VI] = e.W1;
    a[b.pv] = e.b2;
    a[b.Mo] = e.c2;
    a[b.TB] = e.K1;
    a[b.WI] = e.X1;
    a[b.$I] = e.k2;
    a[b.KI] = e.x1;
    a[b.JI] = e.v1;
    a[b.OI] = e.G1;
    a[b.Lo] = e.L1;
    a[b.MI] = e.B1;
    a[b.RI] = e.R1;
    a[b.TI] = e.T1;
    a[b.kl] = e.M1;
    a[b.ll] = e.Z1;
    a[b.OX] = e.J1;
    a[b.LI] = e.A1;
    a[b.SI] = e.S1;
    a[b.YI] = e.g2;
    a[b.UB] = e.U1;
    a[b.WB] = e.i2;
    a[b.SB] = e.z1;
    a[b.XI] = e.e2;
    a[b.QI] = e.H1;
    return a[h] || e.PK;
  };
  k.b9 = function (e) {
    if (!e) return "";
    var b = '<span class="' + (-1 < e.indexOf("sell") ? "red" : "blue") + '">';
    e = e.split('<span class="vol">').join(b);
    e =
      -1 !== e.indexOf("sell stop limit")
        ? e.split("sell stop limit").join(b + "sell stop limit</span>")
        : -1 !== e.indexOf("sell limit")
        ? e.split("sell limit").join(b + "sell limit</span>")
        : e.split("sell").join(b + "sell</span>");
    return (e =
      -1 !== e.indexOf("buy stop limit")
        ? e.split("buy stop limit").join(b + "buy stop limit</span>")
        : -1 !== e.indexOf("buy limit")
        ? e.split("buy limit").join(b + "buy limit</span>")
        : e.split("buy").join(b + "buy</span>"));
  };
})();
(function () {
  function v(c) {
    var d = O.data.Fc;
    if (
      c &&
      (ba && G.wa.xe(ba.l, n),
      (ca = c),
      (ca.Oh = !1),
      (ca.aa = d.zg),
      (ka = c.Th()),
      (oa = {}),
      (ba = G.O.Ka(c.l)))
    ) {
      da = null;
      c.Ya &&
        (da = G.P.Ui(ba.l, c.Ya)) &&
        !da.m.ab() &&
        (da.Mb || da.Qb) &&
        G.B.u("trade_stops_mode", O.control.lg.tv);
      ca.m.ab() &&
        ((c = Long.ec(G.B.u("trade_lots_last"))),
        c.ab() && (c = ba.A.mj),
        (ca.m = c));
      c = O.control.Jv;
      ca.Qh = 0;
      switch (G.B.u("trade_deviation_mode")) {
        case c.tx:
          ca.Qh = G.B.u("trade_deviation_default") || 0;
          break;
        case c.vu:
          ca.Qh = G.B.u("trade_deviation_last") || 0;
      }
      ba && G.wa.tg(ba.l, n);
      ra = G.wa.u(ba.l);
      V.Text(a(ra || {}, ba)).b({ "margin-top": "0" });
      P.f(F.Wa.od(ca.m));
      P.T(F.Wa.En(ba.A.sg));
      P.Y(F.Wa.od(ba.A.sg));
      P.Fa(0);
      P.mc(F.Wa.od(ba.A.lj));
      W.f(ca.Qh || "0");
      Z.f("");
      b(O.data.za.jl);
      da && da.Mb && !ca.C && (ca.C = da.Mb);
      da && da.Qb && !ca.D && (ca.D = da.Qb);
      c = O.control.lg;
      0 == (ba.A.ad & O.data.dd.Mg)
        ? (S.g(!0), H.g(!0))
        : G.B.u("trade_stops_mode") == c.kg
        ? (H.h(!1).o("_order-ie-dialog-tp"),
          S.h(!0).o("order-ie-dialog-tp"),
          S.f(Math.abs((ca.D || 0) - ca.N) * ba.Xk),
          S.T(0),
          S.Y(1),
          S.Fa(0),
          S.Fa(Number.MAX_VALUE),
          (sa = !0))
        : (S.h(!1).o("_order-ie-dialog-tp"),
          H.h(!0).o("order-ie-dialog-tp"),
          (H.jc = !ca.D),
          H.f(ca.D || 0),
          H.T(ba.j),
          H.Y(Math.pow(10, -ba.j)),
          H.Fa(0),
          H.mc(Number.MAX_VALUE),
          (sa = !1));
      c = O.control.lg;
      0 == (ba.A.ad & O.data.dd.Lg)
        ? (R.g(!0), T.g(!0))
        : G.B.u("trade_stops_mode") == c.kg
        ? (T.h(!1).o("_order-ie-dialog-sl"),
          R.h(!0).o("order-ie-dialog-sl"),
          R.f(Math.abs((ca.C || 0) - ca.N) * ba.Xk),
          R.T(0),
          R.Y(1),
          R.Fa(0),
          R.mc(Number.MAX_VALUE),
          (na = !0))
        : (R.h(!1).o("_order-ie-dialog-sl"),
          T.h(!0).o("order-ie-dialog-sl"),
          (T.jc = !ca.C),
          T.f(ca.C || 0),
          T.T(ba.j),
          T.Y(Math.pow(10, -ba.j)),
          T.Fa(0),
          T.mc(Number.MAX_VALUE),
          (na = !1));
      Q.ph(ca.C);
      Q.rh(ca.D);
      Q.Entry(0);
      Q.W();
      r();
      B.g(!1);
      N.g(!1);
      K && K.h(!0);
      g();
    }
  }
  function r() {
    var a = F.kd.Ll(ba, ca.m) && 0 <= Math.floor(ca.Qh);
    ha.g(!a).K("blue", !a).K("empty", a);
    ea.g(!a).K("red", !a).K("empty", a);
    a = F.kd.Ll(ba, ca.m, !1) && 0 <= Math.floor(ca.Qh);
    h(a);
  }
  function l(a, c, d) {
    var f = O.control.lg,
      g = O.control.$f,
      h = O.data.za,
      l = O.data.Fc,
      m = O.data.rm,
      p = O.data.eb,
      q = O.data.yi,
      u = G.B.u("trade_stops_mode");
    ca.aa = l.qh;
    ca.j = ba.j;
    ca.fe = q.Eh;
    a
      ? ((ca.da = p.Ja),
        (ca.N = c.dc),
        u == f.kg &&
          (na && R.f() && (ca.C = (ca.N - R.f() * ba.Fb).normalize(ba.j)),
          sa && S.f() && (ca.D = (ca.N + S.f() * ba.Fb).normalize(ba.j))),
        !F.Wc.Kg(G.H) &&
          da &&
          !da.m.ab() &&
          da.uc() &&
          (0 === ca.m.compare(da.m) && (ca.C = ca.D = 0),
          ca.m.lf(da.m) && ca.C == da.Mb && ca.D == da.Qb && (ca.C = ca.D = 0)))
      : ((ca.da = p.Va),
        (ca.N = c.vb),
        u == f.kg &&
          (na && R.f() && (ca.C = (ca.N + R.f() * ba.Fb).normalize(ba.j)),
          sa && S.f() && (ca.D = (ca.N - S.f() * ba.Fb).normalize(ba.j))),
        !F.Wc.Kg(G.H) &&
          da &&
          !da.m.ab() &&
          da.zb() &&
          (0 === ca.m.compare(da.m) && (ca.C = ca.D = 0),
          ca.m.lf(da.m) &&
            ca.C == da.Mb &&
            ca.D == da.Qb &&
            (ca.C = ca.D = 0)));
    b(h.qe);
    k();
    ca.Eb = Z.f();
    G.wa.xe(ba.l, n);
    d
      ? ((ca.Ef |= m.To), (ca.C = ca.D = 0))
      : (G.B.u("trade_symbol_last", ca.l),
        G.B.u("trade_lots_last", ca.m.toString()),
        G.B.u("trade_deviation_last", ca.Qh),
        (ca.Ef = m.Cv),
        (ca.Ya = ""));
    B.g(!0);
    N.g(!0);
    a = g.Bd(ca);
    a != h.Cb && ((oa = {}), (oa.Ca = a), e());
  }
  function e() {
    b(O.data.za.Xc);
    V.Text(I.Jb.Ug(oa.Ca)).b({ "margin-top": "0" });
    C.je.Error();
  }
  function k() {
    V.Text(y.xg + "<br/>" + y.Bo).b({ "margin-top": "0" });
  }
  function h(a) {
    var b = !1;
    a && ca.Ya && (b = !!G.P.Ui(ba.l, ca.Ya));
    a && b && da && !ca.m.ab() && ca.m.Cl(da.m)
      ? ((a = da.Th()),
        (a.m = ca.m.La()),
        F.ci.Rq(ba, ra, a, 0, 0),
        fa.g(!1).K("empty", !0).K("yellow"),
        fa.Text(
          [y.jv + " ", F.Re.Ko(a, !1), " ", y.OW, " ", I.F.Z(a.Oc, a.j)].join(
            ""
          )
        ))
      : (fa.g(!0).K("empty").K("yellow", !0), fa.Text("&nbsp;"));
  }
  function b(a) {
    var b = O.data.dd,
      c = O.data.za,
      d,
      e,
      f;
    switch (a) {
      case c.qe:
        d = !0;
        f = e = c = a = !1;
        break;
      case c.jm:
        d = !0;
        a = !1;
        c = !0;
        f = e = !1;
        break;
      case c.Xc:
        d = !0;
        c = a = !1;
        e = !0;
        f = !1;
        break;
      default:
        (a = d = !0), (e = c = !1), (f = !0);
    }
    V.h(d);
    ha.h(a);
    ea.h(a);
    fa.h(a);
    W.h(a);
    Y.h(a);
    aa.h(c);
    X.h(c);
    U.h(c);
    ga.h(e);
    P.g(!f);
    0 != (ba.A.ad & b.Lg) ? (na ? R.g(!f) : T.g(!f)) : (R.g(!0), T.g(!0));
    0 != (ba.A.ad & b.Mg) ? (sa ? S.g(!f) : H.g(!f)) : (S.g(!0), H.g(!0));
    Z.g(!f);
    W.g(!f);
  }
  function a(a, b) {
    if (!a) return "";
    var c = [],
      d = b.j || 0,
      e = 0,
      f = (a.dc || 0).toFixed(d),
      g = (a.vb || 0).toFixed(d);
    b.Zd == O.data.Pc.Ei && f && g && (3 == d || 5 == d) && (e = 1);
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">',
      g.substr(0, g.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:20px;letter-spacing:1px;">',
      g.substr(g.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">&nbsp;/&nbsp;</span>'
    );
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">',
      f.substr(0, f.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:20px;letter-spacing:1px;">',
      f.substr(f.length - e),
      "</span>"
    );
    return c.join("");
  }
  function g() {
    var a = O.data.Fc;
    ca.m = F.Wa.zj(P.f());
    h(!0);
    r();
    !ba.A.yh.ab() && ca.m.lf(ba.A.yh) && I.Jb.QF(ca, a.Yg);
  }
  function d(a) {
    this.jc &&
      a &&
      ((a = a.type.toLowerCase()),
      ("mousewheel" != a && "mousedown" != a && "dommousescroll" != a) ||
        this.f(ra.vb));
    ca.C = this.f();
    this == T && ((T.jc = !ca.C), Q.ph(ca.C), Q.W());
  }
  function f(a) {
    this.jc &&
      a &&
      ((a = a.type.toLowerCase()),
      ("mousewheel" != a && "mousedown" != a && "dommousescroll" != a) ||
        this.f(ra.vb));
    this.jc = !1;
    ca.D = this.f();
    this == H && ((H.jc = !ca.D), Q.rh(ca.D), Q.W());
  }
  function c() {
    var a = parseInt(W.f());
    isNaN(a) && (a = 0);
    ca.Qh = a;
    r();
  }
  function z() {
    l(!1, ra, !1);
  }
  function A() {
    l(!0, ra, !1);
  }
  function m() {
    da && !da.m.ab() && ((ca.C = ca.D = 0), l(da.uc(), ra, !0));
  }
  function u() {
    var a = O.data.rm,
      b = O.data.eb;
    clearTimeout(va);
    l(ca.da == b.Ja, oa, !!(ca.Ef & a.To));
  }
  function q() {
    var a = O.data.za;
    clearTimeout(va);
    oa.Ca = a.pv;
    e();
  }
  function w() {
    var a = O.data.za;
    oa.Ca == a.Xc || oa.Ca == a.ll ? I.Jb.oa() : v(ka);
  }
  function p() {}
  function n() {
    ca &&
      !ca.He &&
      ((ra = G.wa.u(ca.l)),
      V.Text(a(ra, ba)).b({ "margin-top": "0" }),
      h(!0),
      r());
  }
  var x = E.controls,
    C = E.ba,
    O = E.V,
    I = O.view,
    G = O.la,
    F = O.control,
    y = E.ba.xa,
    M = E.Ma,
    D = (I.Ds = {});
  D.ha = function (a, b, e, h) {
    D.ua ||
      ((L = a),
      (B = b),
      (N = e),
      (Q = h),
      L.c((K = M(x.page.ge).h(!1))),
      (a = { position: "absolute", right: "345px", "line-height": "23px" }),
      (b = {
        position: "absolute",
        left: "103px",
        width: "323px",
        height: "22px",
      }),
      K.c(
        M(x.page.Text, "order-ie-dialog-volume")
          .Text(y.As + ":")
          .b(a)
          .b({ top: "10px" })
      ),
      K.c(
        (P = M(x.input.Number)
          .o("order-ie-dialog-volume")
          .b(b)
          .b({ top: "10px", width: "97px" })
          .i("change", g))
      ),
      K.c(
        M(x.page.Text, "order-ie-dialog-sl")
          .Text(y.Do + ":")
          .b(a)
          .b({ top: "41px" })
      ),
      K.c(
        (T = M(x.input.Number)
          .o("order-ie-dialog-sl")
          .b(b)
          .b({ top: "41px", width: "97px" })
          .i("change", d)
          .h(!1))
      ),
      K.c(
        (R = M(x.input.Number)
          .o("_order-ie-dialog-sl")
          .b(b)
          .b({ top: "41px", width: "97px" })
          .i("change", d)
          .h(!1))
      ),
      K.c(
        M(x.page.Text, "order-ie-dialog-tp")
          .Text(y.Fo + ":")
          .b(a)
          .b({ top: "41px", left: "auto", right: "118px" })
      ),
      K.c(
        (H = M(x.input.Number)
          .o("order-ie-dialog-tp")
          .b(b)
          .b({
            top: "41px",
            width: "97px",
            left: "auto",
            right: "14px",
          })
          .i("change", f)
          .h(!1))
      ),
      K.c(
        (S = M(x.input.Number)
          .o("_order-ie-dialog-tp")
          .b(b)
          .b({ top: "41px", width: "97px", left: "auto", right: "14px" })
          .i("change", f)
          .h(!1))
      ),
      K.c(
        M(x.page.Text, "order-ie-dialog-comment")
          .Text(y.vs + ":")
          .b(a)
          .b({ top: "72px" })
      ),
      K.c(
        (Z = M(x.input.Text)
          .o("order-ie-dialog-comment")
          .b(b)
          .b({ top: "72px" }))
      ),
      K.c(
        (Y = M(x.page.Text, "order-ie-dialog-deviation")
          .Text(y.WW + ":")
          .b(a)
          .b({ top: "103px" }))
      ),
      K.c(
        (W = M(x.input.Text)
          .o("order-ie-dialog-deviation")
          .K("order-ie-dialog-deviation")
          .u("012345678".split(""))
          .b(b)
          .b({
            top: "103px",
            width: "97px",
          })
          .i("change", c))
      ),
      K.c(
        (U = M(x.page.Text)
          .Text(y.vX)
          .h(!1)
          .b({
            position: "absolute",
            top: "125px",
            "text-align": "center",
            left: "0",
            right: "0",
            "font-size": "18px",
          }))
      ),
      K.c(
        (V = M(x.page.Text)
          .Text("0.00000 / 0.00000")
          .b({
            position: "absolute",
            top: "149px",
            "text-align": "center",
            left: "0",
            right: "0",
            "font-size": "16px",
          }))
      ),
      K.c(
        (ea = M(x.input.Ua)
          .Text("Sell")
          .K("empty")
          .g(!0)
          .b({
            position: "absolute",
            left: "16px",
            top: "198px",
            width: "192px",
            height: "22px",
          })
          .i("click", z))
      ),
      K.c(
        (ha = M(x.input.Ua)
          .Text("Buy")
          .K("empty")
          .g(!0)
          .b({
            position: "absolute",
            right: "16px",
            top: "198px",
            width: "192px",
            height: "22px",
          })
          .i("click", A))
      ),
      K.c(
        (fa = M(x.input.Ua)
          .Text("&nbsp;")
          .K("empty")
          .g(!0)
          .b({
            position: "absolute",
            left: "16px",
            width: "408px",
            top: "230px",
            height: "22px",
          })
          .i("click", m))
      ),
      K.c(
        (ga = M(x.input.Ua)
          .Text(y.pn)
          .h(!1)
          .b({
            position: "absolute",
            left: "16px",
            width: "408px",
            top: "230px",
            height: "22px",
          })
          .i("click", w))
      ),
      K.c(
        M(x.input.Ua)
          .Text(y.qn)
          .h(!1)
          .b({
            position: "absolute",
            right: "16px",
            width: "198px",
            top: "230px",
            height: "22px",
          })
          .i("click", p)
      ),
      K.c(
        (aa = M(x.input.Ua)
          .Text(y.PW)
          .h(!1)
          .K("blue")
          .b({
            position: "absolute",
            left: "16px",
            width: "198px",
            top: "230px",
            height: "22px",
          })
          .i("click", u))
      ),
      K.c(
        (X = M(x.input.Ua)
          .Text(y.SW)
          .h(!1)
          .K("red")
          .b({
            position: "absolute",
            right: "16px",
            width: "198px",
            top: "230px",
            height: "22px",
          })
          .i("click", q))
      ),
      (D.ua = !0));
  };
  D.na = v;
  D.oa = function () {
    K && K.h(!1);
    ba && G.wa.xe(ba.l, n);
    ka = sa = na = ra = oa = ca = da = ba = null;
    clearTimeout(va);
    va = null;
  };
  D.Ai = function (c, d) {
    var f = O.data.za;
    (ca && ca.He == c.He) || v(c);
    oa = d;
    switch (oa.Ca) {
      case f.qe:
        k();
        break;
      case f.uj:
        V.Text(y.xg + "<br/>" + y.yo).b({ "margin-top": "0" });
        break;
      case f.vj:
        V.Text(y.xg + "<br/>" + y.Co).b({ "margin-top": "0" });
        break;
      case f.jm:
        f = G.O.Ka(ca.l);
        b(O.data.za.jm);
        V.Text(a(oa, f)).b({ "margin-top": "0" });
        C.je.lJ();
        va = setTimeout(q, 1e3 * f.A.Vt);
        break;
      case f.Xc:
      case f.hm:
      case f.Dk:
      case f.jg:
        b(O.data.za.Xc);
        f = I.Jb.Ug(oa.Ca);
        oa.Eb && (f += "(" + oa.Eb + ")");
        var g = I.Jb.$m(ca, oa, ba, da, da, new O.data.ig());
        V.Text([g, f].join("<br/>")).b({ "margin-top": "-14px" });
        C.je.Za();
        break;
      default:
        e();
    }
  };
  var L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha,
    fa,
    aa,
    X,
    ga,
    U,
    ba,
    da,
    ca,
    ka,
    oa,
    ra,
    na,
    sa,
    va;
})();
(function () {
  function v(c) {
    var d = n.data.Fc,
      e = n.data.eb;
    c &&
      (W && C.wa.xe(W.l, q),
      (V = c),
      (V.Oh = !1),
      (V.aa = d.yj),
      (ea = {}),
      (W = C.O.Ka(c.l))) &&
      ((Y = C.P.Ui(W.l, c.Ya)),
      Y || (Y = C.History.vG(W.l, c.Ya)) || (Y = new n.data.Tg()),
      V.C || V.D || ((V.C = Y.Mb), (V.D = Y.Qb), (V.da = Y.zb() ? e.Ja : e.Va)),
      (c = n.data.dd),
      (d = n.data.za),
      W && C.wa.tg(W.l, q),
      D.ph(null),
      D.rh(null),
      D.Entry(null),
      W.A.ad & c.Lg &&
        (Q.Fa(0),
        Q.mc(Number.MAX_VALUE),
        Q.T(W.j),
        Q.Y(Math.pow(10, -W.j)),
        Q.f(V.C),
        (Q.jc = !V.C),
        N.Fa(-Number.MAX_VALUE),
        N.mc(Number.MAX_VALUE),
        N.T(0),
        N.Y(1),
        N.f(0),
        D.ph(V.C)),
      W.A.ad & c.Mg &&
        (K.Fa(0),
        K.mc(Number.MAX_VALUE),
        K.T(W.j),
        K.Y(Math.pow(10, -W.j)),
        K.f(V.D),
        (K.jc = !V.D),
        P.Fa(-Number.MAX_VALUE),
        P.mc(Number.MAX_VALUE),
        P.T(0),
        P.Y(1),
        P.f(0),
        D.rh(V.D)),
      k(),
      (ha = C.wa.u(W.l)),
      H.Text(g(ha || {}, W)),
      S.Text(I.wX.split("%POINTS%").join(W.A.Ah) + ". " + I.xX),
      Y.zb() ? T.K("blue").K("red", !0) : T.K("red").K("blue", !0),
      a(d.jl),
      D.W(),
      b(),
      r(),
      B && B.h(!0));
  }
  function r() {
    var a = n.data.za,
      a = !!C.P.Ui(W.l, V.Ya) && O.ct.Tr(V, !1) == a.Cb;
    T.g(!a).K("empty", a);
  }
  function l() {
    Z.Text(I.xg + "<br/>" + I.Bo);
  }
  function e() {
    a(n.data.za.Xc);
    Z.Text(x.Jb.Ug(ea.Ca));
    p.je.Error();
  }
  function k() {
    var a = n.data.dd,
      b = 0,
      c = 0,
      b = 0,
      d = (Y.Jc || 0).normalize(W.j);
    Y.zb() &&
      ((b = W.Ta ? W.Ta : W.Fb),
      (c = ((K.f() - d) / b).normalize(0)),
      (b = ((d - Q.f()) / b).normalize(0)));
    Y.uc() &&
      ((b = W.Ta ? W.Ta : W.Fb),
      (c = ((d - K.f()) / b).normalize(0)),
      (b = ((Q.f() - d) / b).normalize(0)));
    0 != (W.A.ad & a.Mg) && K.f() && P.f() != c && P.f(c);
    0 != (W.A.ad & a.Lg) && Q.f() && N.f() != b && N.f(b);
  }
  function h() {
    var a = n.data.dd,
      b = 0,
      c = 0,
      d = (Y.Jc || 0).normalize(W.j);
    Y.zb() &&
      (W.Ta
        ? ((b = d + P.f() * W.Ta),
          (b = (Math.ceil(b / W.Ta) * W.Ta).normalize(W.j)),
          (c = d - N.f() * W.Ta),
          (c = (Math.ceil(c / W.Ta) * W.Ta).normalize(W.j)))
        : ((b = (d + P.f() * W.Fb).normalize(W.j)),
          (c = (d - N.f() * W.Fb).normalize(W.j))));
    Y.uc() &&
      (W.Ta
        ? ((b = d - P.f() * W.Ta),
          (b = (Math.ceil(b / W.Ta) * W.Ta).normalize(W.j)),
          (c = d + N.f() * W.Ta),
          (c = (Math.ceil(c / W.Ta) * W.Ta).normalize(W.j)))
        : ((b = (d - P.f() * W.Fb).normalize(W.j)),
          (c = (d + N.f() * W.Fb).normalize(W.j))));
    0 != (W.A.ad & a.Mg) &&
      P.f() &&
      ((d = W.Ta ? W.Ta : Math.pow(10, -W.j - 1)),
      0 <= b && Math.abs(b - K.f()) >= d && K.f(b));
    0 != (W.A.ad & a.Lg) &&
      N.f() &&
      ((d = W.Ta ? W.Ta : Math.pow(10, -W.j - 1)),
      0 <= c && Math.abs(c - Q.f()) >= d && Q.f(c));
  }
  function b() {
    var a = Y.Th();
    a.Mb = V.C;
    a.Qb = V.D;
    T.Text(I.hI + " " + O.Re.Ko(a));
  }
  function a(a) {
    var b = n.data.dd,
      c = n.data.za,
      d = n.data.Tf,
      e,
      f,
      g;
    switch (a) {
      case c.qe:
        f = c = a = !1;
        g = !0;
        e = !1;
        break;
      case c.Xc:
        a = !1;
        c = !0;
        f = !1;
        g = !0;
        e = !1;
        break;
      default:
        (a = !0), (c = !1), (f = !0), (g = !1), (e = !0);
    }
    T.h(a);
    H.h(f);
    Z.h(g);
    W.A.$d != d.Eg ? S.h(f) : S.h(!1);
    R.h(c);
    0 != (W.A.ad & b.Lg) ? (N.g(!e), Q.g(!e)) : (N.g(!0), Q.g(!0));
    0 != (W.A.ad & b.Mg) ? (P.g(!e), K.g(!e)) : (P.g(!0), K.g(!0));
  }
  function g(a, b) {
    if (!a) return "";
    var c = [],
      d = b.j || 0,
      e = 0,
      f = (a.dc || 0).toFixed(d),
      g = (a.vb || 0).toFixed(d);
    b.Zd == n.data.Pc.Ei && f && g && (3 == d || 5 == d) && (e = 1);
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">',
      g.substr(0, g.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:20px;letter-spacing:1px;">',
      g.substr(g.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">&nbsp;/&nbsp;</span>'
    );
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">',
      f.substr(0, f.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:20px;letter-spacing:1px;">',
      f.substr(f.length - e),
      "</span>"
    );
    return c.join("");
  }
  function d(a) {
    this.jc &&
      a &&
      ((a = a.type.toLowerCase()),
      ("mousewheel" != a && "mousedown" != a && "dommousescroll" != a) ||
        this.f(ha.vb));
    V.C = this.f();
    Q.jc = !V.C;
    b();
    k();
    D.ph(V.C);
    D.W();
    r();
  }
  function f() {
    h();
    V.C = Q.f();
    b();
    D.ph(V.C);
    D.W();
    r();
  }
  function c(a) {
    this.jc &&
      a &&
      ((a = a.type.toLowerCase()),
      ("mousewheel" != a && "mousedown" != a && "dommousescroll" != a) ||
        this.f(ha.vb));
    V.D = this.f();
    K.jc = !V.D;
    b();
    k();
    D.rh(V.D);
    D.W();
    r();
  }
  function z() {
    h();
    V.D = K.f();
    b();
    D.rh(V.D);
    D.W();
    r();
  }
  function A() {
    var b = n.control.$f,
      c = n.data.za,
      d = n.data.Fc;
    C.wa.xe(W.l, q);
    a(c.qe);
    l();
    V.aa = d.yj;
    V.Ya = Y.ka;
    V.m = Y.m.La();
    V.j = W.j;
    V.C = Q.f();
    V.D = K.f();
    M.g(!0);
    L.g(!0);
    b = b.Bd(V);
    b != c.Cb && ((ea = {}), (ea.Ca = b), e());
  }
  function m() {
    x.Jb.oa();
  }
  function u() {}
  function q() {
    V && !V.He && (ha = C.wa.u(V.l)) && (H.Text(g(ha, W)), r());
  }
  var w = E.controls,
    p = E.ba,
    n = E.V,
    x = n.view,
    C = n.la,
    O = n.control,
    I = E.ba.xa,
    G = E.Ma,
    F = (x.Js = {});
  F.ha = function (a, b, e, g) {
    if (!F.ua) {
      y = a;
      M = b;
      L = e;
      D = g;
      y.c((B = G(w.page.ge).h(!1)));
      a = { position: "absolute", right: "345px", "line-height": "23px" };
      b = {
        position: "absolute",
        left: "103px",
        width: "105px",
        height: "22px",
      };
      e = { position: "absolute", left: "344px", "line-height": "23px" };
      g = {
        position: "absolute",
        left: "232px",
        width: "105px",
        height: "22px",
      };
      var h = { position: "absolute", left: "16px", height: "22px" },
        k = {
          position: "absolute",
          "text-align": "center",
          left: "0",
          right: "0",
        };
      B.c(
        G(w.page.Text, "order-sltp-dialog-sl")
          .Text(I.Do + ":")
          .b(a)
          .b({ top: "10px" })
      );
      B.c(
        (Q = G(w.input.Number)
          .o("order-sltp-dialog-sl")
          .b(b)
          .b({ top: "10px" })
          .i("change", d))
      );
      B.c(
        G(w.page.Text, "order-sltp-dialog-sl-points")
          .Text(I.mI)
          .b(e)
          .b({ top: "10px" })
      );
      B.c(
        (N = G(w.input.Number)
          .o("order-sltp-dialog-sl-points")
          .b(g)
          .b({ top: "10px" })
          .i("change", f))
      );
      B.c(
        G(w.page.Text, "order-sltp-dialog-tp")
          .Text(I.Fo + ":")
          .b(a)
          .b({ top: "41px" })
      );
      B.c(
        (K = G(w.input.Number)
          .o("order-sltp-dialog-tp")
          .b(b)
          .b({ top: "41px" })
          .i("change", c))
      );
      B.c(
        G(w.page.Text, "order-sltp-dialog-tp-points")
          .Text(I.mI)
          .b(e)
          .b({ top: "41px" })
      );
      B.c(
        (P = G(w.input.Number)
          .o("order-sltp-dialog-tp-points")
          .b(g)
          .b({ top: "41px" })
          .i("change", z))
      );
      B.c(
        (H = G(w.page.Text)
          .Text("0.00000 / 0.00000")
          .b(k)
          .b({ top: "90px", "font-size": "16px" }))
      );
      B.c((S = G(w.page.Text).Text("").b(k).b({ top: "178px" })));
      B.c(
        (Z = G(w.page.Text).Text("").b(k).b({
          top: "132px",
          "font-size": "18px",
        }))
      );
      B.c(
        (T = G(w.input.Ua)
          .Text("&nbsp;")
          .g(!0)
          .b(h)
          .b({ width: "408px", top: "146px" })
          .i("click", A))
      );
      B.c(
        (R = G(w.input.Ua)
          .Text(I.pn)
          .h(!1)
          .b(h)
          .b({ width: "408px", top: "230px" })
          .i("click", m))
      );
      B.c(
        G(w.input.Ua)
          .Text(I.qn)
          .h(!1)
          .b(h)
          .b({ width: "198px", top: "230px", right: "16px", left: "auto" })
          .i("click", u)
      );
      F.ua = !0;
    }
  };
  F.na = v;
  F.oa = function () {
    B && B.h(!1);
    W && C.wa.xe(W.l, q);
    ha = ea = V = Y = W = null;
  };
  F.Ai = function (b, c) {
    (V && V.He == b.He) || v(b);
    var d = n.data.za;
    ea = c;
    switch (ea.Ca) {
      case d.qe:
        l();
        break;
      case d.uj:
        Z.Text(I.xg + "<br/>" + I.yo);
        break;
      case d.vj:
        Z.Text(I.xg + "<br/>" + I.Co);
        break;
      case d.Xc:
      case d.jg:
        a(n.data.za.Xc);
        d = x.Jb.Ug(ea.Ca);
        ea.Eb && (d += "(" + ea.Eb + ")");
        var f = x.Jb.$m(V, ea, W, Y, Y, new n.data.ig());
        Z.Text([f, d].join("<br/>"));
        p.je.Za();
        break;
      default:
        e();
    }
  };
  var y, M, D, L, B, Q, N, K, P, T, R, H, S, Z, W, Y, V, ea, ha;
})();
(function () {
  function v(c) {
    var d = O.data.Fc;
    if (
      c &&
      (X && G.wa.xe(X.l, n),
      (U = c),
      (U.Oh = !1),
      (U.aa = d.Ih),
      (ba = c.Th()),
      (da = {}),
      (X = G.O.Ka(c.l)))
    ) {
      ga = null;
      c.Ya && (ga = G.P.Ui(X.l, c.Ya));
      ga &&
        !ga.m.ab() &&
        (ga.Mb || ga.Qb) &&
        G.B.u("trade_stops_mode", O.control.lg.tv);
      U.m.ab() &&
        ((c = Long.ec(G.B.u("trade_lots_last"))),
        c.ab() && (c = X.A.mj),
        (U.m = c));
      X && G.wa.tg(X.l, n);
      ca = G.wa.u(X.l);
      W.Text(a(ca || {}, X)).b({ "margin-top": "0" });
      P.f(F.Wa.od(U.m));
      P.T(F.Wa.En(X.A.sg));
      P.Y(F.Wa.od(X.A.sg));
      P.Fa(0);
      P.mc(F.Wa.od(X.A.lj));
      Z.f();
      c = O.data.Ci;
      var d = O.data.yi,
        e = [],
        f = X.A.oi;
      f & c.cl && e.push({ value: d.Eh, label: "Fill or Kill" });
      f & c.dl && e.push({ value: d.fm, label: "Immediate or Cancel" });
      fa.de(e);
      1 >= e.length ? (fa.g(!0), e.length && (U.fe = e[0].value)) : fa.g(!1);
      fa.f() || fa.f(e[0].value);
      A();
      b(O.data.za.jl);
      ga && ga.Mb && !U.C && (U.C = ga.Mb);
      ga && ga.Qb && !U.D && (U.D = ga.Qb);
      c = O.control.lg;
      0 == (X.A.ad & O.data.dd.Mg)
        ? (S.g(!0), H.g(!0))
        : G.B.u("trade_stops_mode") == c.kg
        ? (H.h(!1).o("_order-me-dialog-tp"),
          S.h(!0).o("order-me-dialog-tp"),
          S.f(Math.abs((U.D || 0) - U.N) * X.Xk),
          S.T(0),
          S.Y(1),
          S.Fa(0),
          S.Fa(Number.MAX_VALUE),
          (oa = !0))
        : (S.h(!1).o("_order-me-dialog-tp"),
          H.h(!0).o("order-me-dialog-tp"),
          (H.jc = !U.D),
          H.f(U.D || 0),
          H.T(X.j),
          H.Y(Math.pow(10, -X.j)),
          H.Fa(0),
          H.mc(Number.MAX_VALUE),
          (oa = !1));
      c = O.control.lg;
      0 == (X.A.ad & O.data.dd.Lg)
        ? (R.g(!0), T.g(!0))
        : G.B.u("trade_stops_mode") == c.kg
        ? (T.h(!1).o("_order-me-dialog-sl"),
          R.h(!0).o("order-me-dialog-sl"),
          R.f(Math.abs((U.C || 0) - U.N) * X.Xk),
          R.T(0),
          R.Y(1),
          R.Fa(0),
          R.mc(Number.MAX_VALUE),
          (ka = !0))
        : (R.h(!1).o("_order-me-dialog-sl"),
          T.h(!0).o("order-me-dialog-sl"),
          (T.jc = !U.C),
          T.f(U.C || 0),
          T.T(X.j),
          T.Y(Math.pow(10, -X.j)),
          T.Fa(0),
          T.mc(Number.MAX_VALUE),
          (ka = !1));
      Q.ph(U.C);
      Q.rh(U.D);
      Q.Entry(0);
      Q.W();
      h(!0);
      B.g(!1);
      N.g(!1);
      K && K.h(!0);
    }
  }
  function r() {
    var a = F.kd.Ll(X, U.m);
    V.g(!a).K("blue", !a).K("empty", a);
    Y.g(!a).K("red", !a).K("empty", a);
    a = F.kd.Ll(X, U.m, !1);
    h(a);
  }
  function l() {
    aa.Text(y.xg + "<br/>" + y.Bo);
  }
  function e() {
    b(O.data.za.Xc);
    aa.Text(I.Jb.Ug(da.Ca)).b({ "margin-top": "0" });
    C.je.Error();
  }
  function k(a, c) {
    var d = O.control.lg,
      f = O.control.$f,
      g = O.data.za,
      h = O.data.Fc,
      k = O.data.rm,
      m = O.data.eb,
      p = G.B.u("trade_stops_mode"),
      q = G.wa.u(X.symbol);
    U.aa = h.Ih;
    U.j = X.j;
    U.N = 0;
    a
      ? ((U.da = m.Ja),
        p == d.kg &&
          (ka && R.f()
            ? (U.C = (q.Xe - R.f() * X.Fb).normalize(X.j))
            : (U.C = 0),
          oa && S.f()
            ? (U.D = (q.Xe + S.f() * X.Fb).normalize(X.j))
            : (U.D = 0)),
        !F.Wc.Kg(G.H) &&
          ga &&
          !ga.m.ab() &&
          ga.uc() &&
          (U.m.compare(ga.m) && (U.C = U.D = 0),
          U.m.lf(ga.m) && U.C == ga.Mb && U.D == ga.Qb && (U.C = U.D = 0)))
      : ((U.da = m.Va),
        p == d.kg &&
          (ka && R.f()
            ? (U.C = (q.Ye + R.f() * X.Fb).normalize(X.j))
            : (U.C = 0),
          oa && S.f()
            ? (U.D = (q.Ye - S.f() * X.Fb).normalize(X.j))
            : (U.D = 0)),
        !F.Wc.Kg(G.H) &&
          ga &&
          !ga.m.ab() &&
          ga.zb() &&
          (0 === U.m.compare(ga.m) && (U.C = U.D = 0),
          U.m.lf(ga.m) && U.C == ga.Mb && U.D == ga.Qb && (U.C = U.D = 0)));
    b(g.qe);
    l();
    U.Eb = Z.f();
    G.wa.xe(X.l, n);
    c
      ? ((U.Ef |= k.To), (U.C = U.D = 0))
      : (G.B.u("trade_symbol_last", U.l),
        G.B.u("trade_lots_last", U.m.toString()),
        (U.Ef = k.Cv),
        (U.Ya = ""));
    B.g(!0);
    N.g(!0);
    d = f.Bd(U);
    d != g.Cb && ((da = {}), (da.Ca = d), e());
  }
  function h(a) {
    var b = !1;
    a && U.Ya && (b = !!G.P.Ui(X.l, U.Ya));
    a && b && ga && !U.m.ab() && U.m.Cl(ga.m)
      ? ((a = ga.Th()),
        (a.m = U.m.La()),
        ea.g(!1).K("empty", !0).K("yellow"),
        ea.Text(["Close ", F.Re.Ko(a, !1), " by Market"].join("")))
      : (ea.g(!0).K("empty").K("yellow", !0), ea.Text("&nbsp;"));
  }
  function b(a) {
    var b = O.data.dd,
      c = O.data.za,
      d,
      e,
      f;
    switch (a) {
      case c.qe:
        c = !1;
        f = !0;
        e = d = a = !1;
        break;
      case c.Xc:
        c = !1;
        f = !0;
        a = !1;
        d = !0;
        e = !1;
        break;
      default:
        (c = !0), (f = !1), (a = !0), (d = !1), (e = !0);
    }
    W.h(c);
    aa.h(f);
    V.h(a);
    Y.h(a);
    ea.h(a);
    ha.h(d);
    P.g(!e);
    0 != (X.A.ad & b.Lg) ? (ka ? R.g(!e) : T.g(!e)) : (R.g(!0), T.g(!0));
    0 != (X.A.ad & b.Mg) ? (oa ? S.g(!e) : H.g(!e)) : (S.g(!0), H.g(!0));
    Z.g(!e);
  }
  function a(a, b) {
    if (!a) return "";
    var c = [],
      d = b.j || 0,
      e = 0,
      f = (a.dc || 0).toFixed(d),
      g = (a.vb || 0).toFixed(d);
    b.Zd == O.data.Pc.Ei && f && g && (3 == d || 5 == d) && (e = 1);
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">',
      g.substr(0, g.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:20px;letter-spacing:1px;">',
      g.substr(g.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">&nbsp;/&nbsp;</span>'
    );
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">',
      f.substr(0, f.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:20px;letter-spacing:1px;">',
      f.substr(f.length - e),
      "</span>"
    );
    return c.join("");
  }
  function g() {
    U.m = F.Wa.zj(P.f());
    r();
  }
  function d(a) {
    T.jc &&
      a &&
      ((a = a.type.toLowerCase()),
      ("mousewheel" != a && "mousedown" != a && "dommousescroll" != a) ||
        T.f(ca.vb));
    U.C = T.f();
    T.jc = !U.C;
    Q.ph(U.C);
    Q.W();
    r();
  }
  function f() {
    U.C = R.f();
  }
  function c(a) {
    H.jc &&
      a &&
      ((a = a.type.toLowerCase()),
      ("mousewheel" != a && "mousedown" != a && "dommousescroll" != a) ||
        H.f(ca.vb));
    U.D = H.f();
    H.jc = !U.D;
    Q.rh(U.D);
    Q.W();
    r();
  }
  function z() {
    U.D = S.f();
  }
  function A() {
    U.fe = fa.f();
  }
  function m() {
    k(!1, !1);
  }
  function u() {
    k(!0, !1);
  }
  function q() {
    ga && !ga.m.ab() && ((U.C = U.D = 0), k(ga.uc(), !0));
  }
  function w() {
    var a = O.data.za;
    da.Ca == a.Xc || da.Ca == a.ll || da.Ca == a.jg ? I.Jb.oa() : v(ba);
  }
  function p() {}
  function n() {
    U && !U.He && ((ca = G.wa.u(U.l)), W.Text(a(ca, X)), h(!0), r());
  }
  var x = E.controls,
    C = E.ba,
    O = E.V,
    I = O.view,
    G = O.la,
    F = O.control,
    y = E.ba.xa,
    M = E.Ma,
    D = (I.Es = {});
  D.ha = function (a, b, e, h) {
    D.ua ||
      ((L = a),
      (B = b),
      (N = e),
      (Q = h),
      L.c((K = M(x.page.ge).h(!1))),
      (a = { position: "absolute", right: "345px", "line-height": "23px" }),
      (b = {
        position: "absolute",
        left: "103px",
        width: "323px",
        height: "22px",
      }),
      (e = {
        position: "absolute",
        "text-align": "center",
        left: "0",
        right: "0",
      }),
      (h = {
        position: "absolute",
        width: "192px",
        height: "22px",
      }),
      K.c(
        M(x.page.Text, "order-me-dialog-volume")
          .Text(y.As + ":")
          .b(a)
          .b({ top: "10px" })
      ),
      K.c(
        (P = M(x.input.Number)
          .o("order-me-dialog-volume")
          .b(b)
          .b({ top: "10px", width: "148px" })
          .i("change", g))
      ),
      K.c(
        M(x.page.Text, "order-me-dialog-sl")
          .Text(y.Do + ":")
          .b(a)
          .b({ top: "41px" })
      ),
      K.c(
        (T = M(x.input.Number)
          .o("order-me-dialog-sl")
          .b(b)
          .b({ top: "41px", width: "97px" })
          .i("change", d)
          .h(!0))
      ),
      K.c(
        (R = M(x.input.Number)
          .o("_order-me-dialog-sl")
          .b(b)
          .b({ top: "41px", width: "97px" })
          .i("change", f)
          .h(!1))
      ),
      K.c(
        M(x.page.Text, "order-me-dialog-tp")
          .Text(y.Fo + ":")
          .b(a)
          .b({ top: "41px", left: "auto", right: "118px" })
      ),
      K.c(
        (H = M(x.input.Number)
          .o("order-me-dialog-tp")
          .b(b)
          .b({ top: "41px", width: "97px", left: "auto", right: "14px" })
          .i("change", c)
          .h(!0))
      ),
      K.c(
        (S = M(x.input.Number)
          .o("_order-me-dialog-tp")
          .b(b)
          .b({ top: "41px", width: "97px", left: "auto", right: "14px" })
          .i("change", z)
          .h(!1))
      ),
      K.c(
        M(x.page.Text, "order-me-dialog-fill")
          .Text(y.yB + ":")
          .b(a)
          .b({ top: "72px" })
      ),
      K.c(
        (fa = M(x.input.of)
          .o("order-me-dialog-fill")
          .b(b)
          .b({ top: "72px" })
          .i("change", A))
      ),
      K.c(
        M(x.page.Text, "order-me-dialog-comment")
          .Text(y.vs + ":")
          .b(a)
          .b({ top: "103px" })
      ),
      K.c(
        (Z = M(x.input.Text)
          .o("order-me-dialog-comment")
          .b(b)
          .b({ top: "103px" }))
      ),
      K.c(
        (W = M(x.page.Text)
          .Text("0.00000 / 0.00000")
          .b(e)
          .b({ top: "144px", "font-size": "16px" }))
      ),
      K.c((aa = M(x.page.Text).b(e).b({ top: "145px", "font-size": "16px" }))),
      K.c(
        (Y = M(x.input.Ua)
          .Text("Sell by Market")
          .K("empty")
          .g(!0)
          .b(h)
          .b({ left: "16px", top: "198px" })
          .i("click", m))
      ),
      K.c(
        (V = M(x.input.Ua)
          .Text("Buy by Market")
          .K("empty")
          .g(!0)
          .b(h)
          .b({ right: "16px", top: "198px" })
          .i("click", u))
      ),
      K.c(
        (ea = M(x.input.Ua)
          .Text("&nbsp;")
          .K("empty")
          .g(!0)
          .b(h)
          .b({ left: "16px", width: "408px", top: "230px" })
          .i("click", q))
      ),
      K.c(
        (ha = M(x.input.Ua)
          .Text(y.pn)
          .h(!1)
          .b(h)
          .b({ left: "16px", width: "408px", top: "230px" })
          .i("click", w))
      ),
      K.c(
        M(x.input.Ua)
          .Text(y.qn)
          .h(!1)
          .b(h)
          .b({ right: "16px", width: "198px", top: "230px" })
          .i("click", p)
      ),
      (D.ua = !0));
  };
  D.na = v;
  D.oa = function () {
    K && K.h(!1);
    X && G.wa.xe(X.l, n);
    oa = ka = ca = da = U = ga = X = null;
  };
  D.Ai = function (a, c) {
    var d = O.data.za;
    (U && U.He == a.He) || v(a);
    da = c;
    switch (da.Ca) {
      case d.qe:
        l();
        break;
      case d.uj:
        aa.Text(y.xg + "<br/>" + y.yo);
        break;
      case d.vj:
        aa.Text(y.xg + "<br/>" + y.Co);
        break;
      case d.Xc:
      case d.hm:
      case d.Dk:
      case d.jg:
        b(O.data.za.Xc);
        d = I.Jb.Ug(da.Ca);
        da.Eb && (d += "(" + da.Eb + ")");
        var f = I.Jb.$m(U, da, X, ga, ga, new O.data.ig());
        aa.Text([f, d].join("<br/>"));
        C.je.Za();
        break;
      default:
        e();
    }
  };
  var L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha,
    fa,
    aa,
    X,
    ga,
    U,
    ba,
    da,
    ca,
    ka,
    oa;
})();
(function () {
  function v(b) {
    var c = C.data.Fc;
    b &&
      ((X = b),
      (X.Oh = !1),
      (X.aa = c.Yg),
      (ga = b.Th()),
      (U = {}),
      (fa = I.O.Ka(b.l))) &&
      ((aa = null),
      b.Ya && (aa = I.P.Ui(fa.l, b.Ya)),
      aa &&
        !aa.m.ab() &&
        (aa.Mb || aa.Qb) &&
        I.B.u("trade_stops_mode", C.control.lg.tv),
      X.m.ab() &&
        ((b = Long.ec(I.B.u("trade_lots_last"))),
        b.ab() && (b = fa.A.mj),
        (X.m = b)),
      Z.Text("Please request"),
      K.f(G.Wa.od(X.m)),
      K.T(G.Wa.En(fa.A.sg)),
      K.Y(G.Wa.od(fa.A.sg)),
      K.Fa(0),
      K.mc(G.Wa.od(fa.A.lj)),
      S.f(""),
      aa && aa.Mb && !X.C && (X.C = aa.Mb),
      aa && aa.Qb && !X.D && (X.D = aa.Qb),
      (b = C.control.lg),
      0 == (fa.A.ad & C.data.dd.Mg)
        ? (H.g(!0), R.g(!0))
        : I.B.u("trade_stops_mode") == b.kg
        ? (R.h(!1).o("_order-re-dialog-tp"),
          H.h(!0).o("order-re-dialog-tp"),
          H.f(Math.abs((X.D || 0) - X.N) * fa.Xk),
          H.T(0),
          H.Y(1),
          H.Fa(0),
          H.Fa(Number.MAX_VALUE),
          (ca = !0))
        : (H.h(!1).o("_order-re-dialog-tp"),
          R.h(!0).o("order-re-dialog-tp"),
          (R.jc = !X.D),
          R.f(X.D || 0),
          R.T(fa.j),
          R.Y(Math.pow(10, -fa.j)),
          R.Fa(0),
          R.mc(Number.MAX_VALUE),
          (ca = !1)),
      (b = C.control.lg),
      0 == (fa.A.ad & C.data.dd.Lg)
        ? (T.g(!0), P.g(!0))
        : I.B.u("trade_stops_mode") == b.kg
        ? (P.h(!1).o("_order-re-dialog-sl"),
          T.h(!0).o("order-re-dialog-sl"),
          T.f(Math.abs((X.C || 0) - X.N) * fa.Xk),
          T.T(0),
          T.Y(1),
          T.Fa(0),
          T.mc(Number.MAX_VALUE),
          (da = !0))
        : (T.h(!1).o("_order-re-dialog-sl"),
          P.h(!0).o("order-re-dialog-sl"),
          (P.jc = !X.C),
          P.f(X.C || 0),
          P.T(fa.j),
          P.Y(Math.pow(10, -fa.j)),
          P.Fa(0),
          P.mc(Number.MAX_VALUE),
          (da = !1)),
      h(C.data.za.jl),
      B.ph(X.C),
      B.rh(X.D),
      B.Entry(0),
      B.W(),
      r(),
      L.g(!1),
      Q.g(!1),
      N && N.h(!0),
      a());
  }
  function r() {
    var a = G.kd.Ll(fa, X.m);
    V.g(!a).K("blue", !a).K("empty", a);
    Y.g(!a).K("red", !a).K("empty", a);
    a = G.kd.Ll(fa, X.m, !1);
    W.g(!a);
    var b = !1;
    a && X.Ya && (b = !!I.P.Ui(fa.l, X.Ya));
    a && b && aa && !X.m.ab() && X.m.Cl(aa.m)
      ? ((a = aa.Th()),
        (a.m = X.m.La()),
        G.ci.Rq(fa, I.wa.u(X.l), a, 0, 0),
        (b = Y.h()),
        ea.g(!b).K("empty", b).K("yellow", !b),
        ea.Text(["Close ", G.Re.Ko(a, !1), " at ", O.F.Z(a.Oc, a.j)].join("")))
      : (ea.g(!0).K("empty").K("yellow", !0), ea.Text("&nbsp;"));
  }
  function l() {
    Z.Text("Please wait...<br/>Order has been placed in queue");
  }
  function e() {
    h(C.data.za.Xc);
    Z.Text(O.Jb.Ug(U.Ca));
    x.je.Error();
  }
  function k(a, b) {
    var c = C.control.lg,
      d = C.control.$f,
      f = C.data.za,
      g = C.data.Fc,
      k = C.data.rm,
      m = C.data.eb,
      n = C.data.yi,
      p = I.B.u("trade_stops_mode");
    X.aa = g.Yg;
    X.j = fa.j;
    X.fe = n.Eh;
    a
      ? ((X.da = m.Ja),
        (X.N = U.dc),
        p == c.kg &&
          (da && T.f() && (X.C = (X.N - T.f() * fa.Fb).normalize(fa.j)),
          ca && H.f() && (X.D = (X.N + H.f() * fa.Fb).normalize(fa.j))),
        !G.Wc.Kg(I.H) &&
          aa &&
          !aa.m.ab() &&
          aa.uc() &&
          (0 === X.m.compare(aa.m) && (X.C = X.D = 0),
          X.m.lf(aa.m) && X.C == aa.Mb && X.D == aa.Qb && (X.C = X.D = 0)))
      : ((X.da = m.Va),
        (X.N = U.vb),
        p == c.kg &&
          (da && T.f() && (X.C = (X.N + T.f() * fa.Fb).normalize(fa.j)),
          ca && H.f() && (X.D = (X.N - H.f() * fa.Fb).normalize(fa.j))),
        !G.Wc.Kg(I.H) &&
          aa &&
          !aa.m.ab() &&
          aa.zb() &&
          (0 === X.m.compare(aa.m) && (X.C = X.D = 0),
          X.m.lf(aa.m) && X.C == aa.Mb && X.D == aa.Qb && (X.C = X.D = 0)));
    h(f.qe);
    l();
    X.Eb = S.f();
    b
      ? ((X.Ef |= k.To), (X.C = X.D = 0))
      : (I.B.u("trade_symbol_last", X.l),
        I.B.u("trade_lots_last", X.m.toString()),
        (X.Ef = k.Cv),
        (X.Ya = ""));
    L.g(!0);
    Q.g(!0);
    c = d.Bd(X);
    c != f.Cb && ((U = {}), (U.Ca = c), e());
  }
  function h(a) {
    var b = C.data.dd,
      c = C.data.za,
      d,
      e,
      f,
      g;
    switch (a) {
      case c.qe:
        g = f = e = d = c = a = !1;
        break;
      case c.Sq:
        a = !1;
        e = c = !0;
        f = d = !1;
        g = !0;
        break;
      case c.Xc:
        e = c = a = !1;
        d = !0;
        g = f = !1;
        break;
      default:
        (a = !0), (c = !1), (e = !0), (d = !1), (f = !0), (g = !1);
    }
    W.h(a);
    V.h(c);
    V.g(!g);
    Y.h(c);
    Y.g(!g);
    ea.h(e);
    ea.g(!g);
    ha.h(d);
    0 != (fa.A.ad & b.Lg) ? (da ? T.g(!f) : P.g(!f)) : (T.g(!0), P.g(!0));
    0 != (fa.A.ad & b.Mg) ? (ca ? H.g(!f) : R.g(!f)) : (H.g(!0), R.g(!0));
    K.g(!f);
    S.g(!f);
  }
  function b(a, b) {
    if (!a) return "";
    var c = [],
      d = b.j || 0,
      e = 0,
      f = (a.dc || 0).toFixed(d),
      g = (a.vb || 0).toFixed(d);
    b.Zd == C.data.Pc.Ei && f && g && (3 == d || 5 == d) && (e = 1);
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">',
      g.substr(0, g.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:20px;letter-spacing:1px;">',
      g.substr(g.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">&nbsp;/&nbsp;</span>'
    );
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">',
      f.substr(0, f.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:20px;letter-spacing:1px;">',
      f.substr(f.length - e),
      "</span>"
    );
    return c.join("");
  }
  function a() {
    var a = C.data.Tf,
      b = C.data.Fc;
    X.m = G.Wa.zj(K.f());
    r();
    fa.A.$d == a.bl && !fa.A.yh.ab() && X.m.Cl(fa.A.yh) && O.Jb.QF(X, b.zg);
  }
  function g(a) {
    if (P.jc && a) {
      a = a.type.toLowerCase();
      var b = I.wa.u(fa.l);
      !b ||
        ("mousewheel" != a && "mousedown" != a && "dommousescroll" != a) ||
        P.f(b.vb);
    }
    X.C = P.f();
    P.jc = !X.C;
    B.ph(X.C);
    B.W();
    r();
  }
  function d() {
    X.C = T.f();
  }
  function f(a) {
    if (R.jc && a) {
      a = a.type.toLowerCase();
      var b = I.wa.u(fa.l);
      !b ||
        ("mousewheel" != a && "mousedown" != a && "dommousescroll" != a) ||
        R.f(b.vb);
    }
    X.D = R.f();
    R.jc = !X.D;
    B.rh(X.D);
    B.W();
    r();
  }
  function c() {
    X.D = H.f();
  }
  function z() {
    clearTimeout(ba);
    k(!1, !1);
  }
  function A() {
    clearTimeout(ba);
    k(!0, !1);
  }
  function m() {
    aa && !aa.m.ab() && ((X.C = X.D = 0), k(aa.uc(), !0));
  }
  function u() {
    var a = C.control.$f,
      b = C.data.za,
      c = C.data.Fc;
    h(b.qe);
    l();
    X.aa = c.ck;
    X.j = fa.j;
    L.g(!0);
    Q.g(!0);
    a = a.Bd(X);
    a != b.Cb && ((U = {}), (U.Ca = a), e());
  }
  function q() {
    var a = C.data.za;
    U.Ca == a.Xc || U.Ca == a.ll ? O.Jb.oa() : v(ga);
  }
  function w() {}
  function p() {
    var a = C.data.za;
    clearTimeout(ba);
    U.Ca = a.pv;
    e();
  }
  var n = E.controls,
    x = E.ba,
    C = E.V,
    O = C.view,
    I = C.la,
    G = C.control,
    F = E.ba.xa,
    y = E.Ma,
    M = (O.Is = {});
  M.ha = function (b, e, h, k) {
    M.ua ||
      ((D = b),
      (L = e),
      (Q = h),
      (B = k),
      D.c((N = y(n.page.ge).h(!1))),
      (b = { position: "absolute", right: "345px", "line-height": "23px" }),
      (e = {
        position: "absolute",
        left: "103px",
        width: "323px",
        height: "22px",
      }),
      (h = { position: "absolute", width: "192px", height: "22px" }),
      N.c(
        y(n.page.Text, "order-re-dialog-volume")
          .Text(F.As + ":")
          .b(b)
          .b({ top: "10px" })
      ),
      N.c(
        (K = y(n.input.Number)
          .o("order-re-dialog-volume")
          .b(e)
          .b({ top: "10px", width: "97px" })
          .i("change", a))
      ),
      N.c(
        y(n.page.Text, "order-re-dialog-sl")
          .Text(F.Do + ":")
          .b(b)
          .b({ top: "41px" })
      ),
      N.c(
        (P = y(n.input.Number)
          .o("order-re-dialog-sl")
          .b(e)
          .b({ top: "41px", width: "97px" })
          .i("change", g)
          .h(!0))
      ),
      N.c(
        (T = y(n.input.Number)
          .o("_order-re-dialog-sl")
          .b(e)
          .b({ top: "41px", width: "97px" })
          .i("change", d)
          .h(!1))
      ),
      N.c(
        y(n.page.Text, "order-re-dialog-tp")
          .Text(F.Fo + ":")
          .b(b)
          .b({ top: "41px", left: "auto", right: "118px" })
      ),
      N.c(
        (R = y(n.input.Number)
          .o("order-re-dialog-tp")
          .b(e)
          .b({ top: "41px", width: "97px", left: "auto", right: "14px" })
          .i("change", f)
          .h(!0))
      ),
      N.c(
        (H = y(n.input.Number)
          .o("_order-re-dialog-tp")
          .b(e)
          .b({ top: "41px", width: "97px", left: "auto", right: "14px" })
          .i("change", c)
          .h(!1))
      ),
      N.c(
        y(n.page.Text, "order-re-dialog-comment")
          .Text(F.vs + ":")
          .b(b)
          .b({ top: "72px" })
      ),
      N.c(
        (S = y(n.input.Text)
          .o("order-re-dialog-comment")
          .b(e)
          .b({ top: "72px" }))
      ),
      N.c(
        (Z = y(n.page.Text)
          .Text("0.00000 / 0.00000")
          .b({
            position: "absolute",
            "text-align": "center",
            left: "0",
            right: "0",
          })
          .b({ top: "144px", "font-size": "16px" }))
      ),
      N.c(
        (W = y(n.input.Ua)
          .Text(F.tX)
          .b(h)
          .b({ left: "16px", top: "198px", width: "408px" })
          .i("click", u))
      ),
      N.c(
        (Y = y(n.input.Ua)
          .Text("Sell")
          .K("empty")
          .g(!0)
          .h(!1)
          .b(h)
          .b({ left: "16px", top: "198px" })
          .i("click", z))
      ),
      N.c(
        (V = y(n.input.Ua)
          .Text("Buy")
          .K("empty")
          .g(!0)
          .h(!1)
          .b(h)
          .b({ right: "16px", top: "198px" })
          .i("click", A))
      ),
      N.c(
        (ea = y(n.input.Ua)
          .Text("&nbsp;")
          .K("empty")
          .g(!0)
          .b(h)
          .b({ left: "16px", width: "408px", top: "230px" })
          .i("click", m))
      ),
      N.c(
        (ha = y(n.input.Ua)
          .Text(F.pn)
          .h(!1)
          .b(h)
          .b({
            left: "16px",
            width: "408px",
            top: "230px",
          })
          .i("click", q))
      ),
      N.c(
        y(n.input.Ua)
          .Text(F.qn)
          .h(!1)
          .b(h)
          .b({ right: "16px", width: "198px", top: "230px" })
          .i("click", w)
      ),
      (M.ua = !0));
  };
  M.na = v;
  M.oa = function () {
    N && N.h(!1);
    ga = ca = da = U = X = aa = fa = null;
    clearTimeout(ba);
    ba = null;
  };
  M.Ai = function (a, c) {
    var d = C.data.za;
    (X && X.He == a.He) || v(a);
    U = c;
    switch (U.Ca) {
      case d.qe:
        l();
        break;
      case d.uj:
        Z.Text("Please wait...<br/>Order has been placed in queue");
        break;
      case d.vj:
        Z.Text("Please wait...<br/>Order is being processed by the server");
        break;
      case d.Sq:
        h(C.data.za.Sq);
        r();
        Z.Text(b(U, fa));
        ba = setTimeout(p, 1e3 * fa.A.Vt);
        x.je.Za();
        break;
      case d.Xc:
      case d.hm:
      case d.Dk:
      case d.jg:
        h(C.data.za.Xc);
        d = O.Jb.Ug(U.Ca);
        U.Eb && (d += "(" + U.Eb + ")");
        var f = O.Jb.$m(X, U, fa, aa, aa, new C.data.ig());
        Z.Text([f, d].join("<br/>"));
        x.je.Za();
        break;
      default:
        e();
    }
  };
  var D,
    L,
    B,
    Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha,
    fa,
    aa,
    X,
    ga,
    U,
    ba,
    da,
    ca;
})();
(function () {
  function v(b) {
    var c = G.data.Fc;
    if (
      b &&
      (U && y.wa.xe(U.l, C),
      (da = b),
      (da.Oh = !1),
      (da.aa = c.qh),
      (ca = b.Th()),
      (da.Ef |= c.Uo),
      (ka = {}),
      (U = y.O.Ka(b.l)))
    ) {
      ba = null;
      b.Ya && (ba = y.P.Ui(U.l, b.Ya));
      ba &&
        !ba.m.ab() &&
        (ba.Mb || ba.Qb) &&
        y.B.u("trade_stops_mode", G.control.lg.tv);
      da.m.ab() &&
        ((b = Long.ec(y.B.u("trade_lots_last"))),
        b.ab() && (b = U.A.mj),
        (da.m = b));
      U && y.wa.tg(U.l, C);
      oa = y.wa.u(U.l);
      V.Text(d(oa || {}, U)).b({ "margin-top": "0" });
      R.f(M.Wa.od(da.m));
      R.T(M.Wa.En(U.A.sg));
      R.Y(M.Wa.od(U.A.sg));
      R.Fa(0);
      R.mc(M.Wa.od(U.A.lj));
      Y.f("");
      b = G.data.Ci;
      var c = G.data.yi,
        e = [];
      e.push({ value: c.Fh, label: D.BJ });
      var h = U.A.oi;
      h & b.cl && e.push({ value: c.Eh, label: D.hD });
      h & b.dl && e.push({ value: c.fm, label: D.iD });
      X.de(e);
      1 >= e.length ? (X.g(!0), e.length && (da.fe = e[0].value)) : X.g(!1);
      X.f() || X.f(e[0].value);
      u();
      g(G.data.za.jl);
      ba && ba.Mb && !da.C && (da.C = ba.Mb);
      ba && ba.Qb && !da.D && (da.D = ba.Qb);
      b = G.control.lg;
      0 == (U.A.ad & G.data.dd.Mg)
        ? (W.g(!0), Z.g(!0))
        : y.B.u("trade_stops_mode") == b.kg
        ? (Z.h(!1).o("_order-ee-dialog-tp"),
          W.h(!0).o("order-ee-dialog-tp"),
          W.f(Math.abs((da.D || 0) - da.N) * U.Xk),
          W.T(0),
          W.Y(1),
          W.Fa(0),
          W.Fa(Number.MAX_VALUE),
          (na = !0))
        : (W.h(!1).o("_order-ee-dialog-tp"),
          Z.h(!0).o("order-ee-dialog-tp"),
          (Z.jc = !da.D),
          Z.f(da.D || 0),
          Z.T(U.j),
          Z.Y(Math.pow(10, -U.j)),
          Z.Fa(0),
          Z.mc(Number.MAX_VALUE),
          (na = !1));
      b = G.control.lg;
      0 == (U.A.ad & G.data.dd.Lg)
        ? (S.g(!0), H.g(!0))
        : y.B.u("trade_stops_mode") == b.kg
        ? (H.h(!1).o("_order-ee-dialog-sl"),
          S.h(!0).o("order-ee-dialog-sl"),
          S.f(Math.abs((da.C || 0) - da.N) * U.Xk),
          S.T(0),
          S.Y(1),
          S.Fa(0),
          S.mc(Number.MAX_VALUE),
          (ra = !0))
        : (S.h(!1).o("_order-ee-dialog-sl"),
          H.h(!0).o("order-ee-dialog-sl"),
          (H.jc = !da.C),
          H.f(da.C || 0),
          H.T(U.j),
          H.Y(Math.pow(10, -U.j)),
          H.Fa(0),
          H.mc(Number.MAX_VALUE),
          (ra = !1));
      K.ph(da.C);
      K.rh(da.D);
      K.Entry(0);
      K.W();
      a(!0);
      N.g(!1);
      P.g(!1);
      T && T.h(!0);
      f();
    }
  }
  function r() {
    ga.Text(D.xg + "<br/>" + D.Bo);
  }
  function l() {
    var a = G.data.za;
    U && y.wa.xe(U.l, C);
    g(a.Xc);
    a = F.Jb.Ug(ka.Ca);
    ka.Eb && (a += "(" + ka.Eb + ")");
    var b = F.Jb.$m(da, ka, U, ba, ba, new G.data.ig());
    ga.Text([b, a].join("<br/>"));
    I.je.Za();
  }
  function e() {
    g(G.data.za.Xc);
    ga.Text(F.Jb.Ug(ka.Ca)).b({ "margin-top": "0" });
    I.je.Error();
  }
  function k() {
    var b = M.kd.Ll(U, da.m);
    ha.g(!b).K("blue", !b).K("empty", b);
    ea.g(!b).K("red", !b).K("empty", b);
    b = M.kd.Ll(U, da.m, !1);
    a(b);
  }
  function h(a, b) {
    var c = G.control.lg,
      d = G.control.$f,
      f = G.data.za,
      h = G.data.Fc,
      k = G.data.eb,
      l = G.data.rm,
      m = y.B.u("trade_stops_mode"),
      n = y.wa.u(U.symbol);
    da.aa = h.qh;
    da.j = U.j;
    da.Ef = l.Uo;
    da.N = 0;
    a
      ? ((da.da = k.Ja),
        m == c.kg &&
          (ra && S.f()
            ? (da.C = (n.Xe - S.f() * U.Fb).normalize(U.j))
            : (da.C = 0),
          na && W.f()
            ? (da.D = (n.Xe + W.f() * U.Fb).normalize(U.j))
            : (da.D = 0)),
        !M.Wc.Kg(y.H) &&
          ba &&
          !ba.m.ab() &&
          ba.uc() &&
          (0 === da.m.compare(ba.m) && (da.C = da.D = 0),
          da.m.lf(ba.m) && da.C == ba.Mb && da.D == ba.Qb && (da.C = da.D = 0)))
      : ((da.da = k.Va),
        m == c.kg &&
          (ra && S.f()
            ? (da.C = (n.Ye + S.f() * U.Fb).normalize(U.j))
            : (da.C = 0),
          na && W.f()
            ? (da.D = (n.Ye - W.f() * U.Fb).normalize(U.j))
            : (da.D = 0)),
        !M.Wc.Kg(y.H) &&
          ba &&
          !ba.m.ab() &&
          ba.zb() &&
          (0 === da.m.compare(ba.m) && (da.C = da.D = 0),
          da.m.lf(ba.m) &&
            da.C == ba.Mb &&
            da.D == ba.Qb &&
            (da.C = da.D = 0)));
    g(f.qe);
    r();
    da.Eb = Y.f();
    y.wa.xe(U.l, C);
    b
      ? ((da.Ef |= l.To), (da.C = da.D = 0))
      : (y.B.u("trade_symbol_last", da.l),
        y.B.u("trade_lots_last", da.m.toString()),
        (da.Ef = l.Cv),
        (da.Ya = ""));
    N.g(!0);
    P.g(!0);
    c = d.Bd(da);
    c != f.Cb && ((ka = {}), (ka.Ca = c), e());
  }
  function b(a) {
    void 0 === a && (a = !0);
    var c = G.data.za,
      d = G.data.Io;
    if (ka.X && ka.Ca == c.jg) {
      var f = y.P.df(ka.X);
      if (f)
        switch (f.qk) {
          case d.rn:
          case d.Eo:
            ka.Ca = c.jg;
            l();
            return;
          case d.Hq:
            l();
            return;
        }
      else if ((f = y.History.df(ka.X)))
        switch (f.qk) {
          case d.rn:
          case d.Eo:
            ka.Ca = c.jg;
            l();
            return;
          case d.zs:
            f.Eb && (ka.Eb = f.Eb);
            0 === f.Ff.compare(f.wc) ? (ka.Ca = c.ov) : (ka.Ca = c.Dk);
            e();
            return;
          case d.lv:
            f.Eb && (ka.Eb = f.Eb);
            ka.Ca = c.Ms;
            e();
            return;
        }
      a
        ? setTimeout(function () {
            b(!1);
          }, 500)
        : l();
    }
  }
  function a(a) {
    var b = !1;
    a && da.Ya && (b = !!y.P.Ui(U.l, da.Ya));
    a && b && ba && !da.m.ab() && da.m.Cl(ba.m) && (ba.zb() || ba.uc())
      ? ((a = ba.Th()),
        (a.m = da.m.La()),
        M.ci.Rq(U, oa, a, 0, 0),
        fa.g(!1).K("empty", !0).K("yellow"),
        fa.Text([D.jv + " ", M.Re.Ko(a, !1)].join("")))
      : (fa.g(!0).K("empty").K("yellow", !0), fa.Text("&nbsp;"));
  }
  function g(a) {
    var b = G.data.dd,
      c = G.data.za,
      d,
      e,
      f;
    switch (a) {
      case c.qe:
        c = !1;
        f = !0;
        e = d = a = !1;
        break;
      case c.Xc:
        c = !1;
        f = !0;
        a = !1;
        d = !0;
        e = !1;
        break;
      default:
        (c = !0), (f = !1), (a = !0), (d = !1), (e = !0);
    }
    V.h(c);
    ga.h(f);
    ha.h(a);
    ea.h(a);
    fa.h(a);
    aa.h(d);
    R.g(!e);
    1 < X.de().length && X.g(!e);
    0 != (U.A.ad & b.Lg) ? (ra ? S.g(!e) : H.g(!e)) : (S.g(!0), H.g(!0));
    0 != (U.A.ad & b.Mg) ? (na ? W.g(!e) : Z.g(!e)) : (W.g(!0), Z.g(!0));
    Y.g(!e);
  }
  function d(a, b) {
    if (!a) return "";
    var c = [],
      d = b.j || 0,
      e = 0,
      f = (a.dc || 0).toFixed(d),
      g = (a.vb || 0).toFixed(d);
    b.Zd == G.data.Pc.Ei && f && g && (3 == d || 5 == d) && (e = 1);
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">',
      g.substr(0, g.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:20px;letter-spacing:1px;">',
      g.substr(g.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">&nbsp;/&nbsp;</span>'
    );
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">',
      f.substr(0, f.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:20px;letter-spacing:1px;">',
      f.substr(f.length - e),
      "</span>"
    );
    return c.join("");
  }
  function f() {
    da.m = M.Wa.zj(R.f());
    if (!da.m.ab() && ba && ba.m.Jm(da.m)) {
      var a = ba.Th();
      a.m = da.m.La();
      fa.g(!1).K("empty", !0).K("yellow");
      fa.Text([D.jv + " ", M.Re.Ko(a, !1)].join(""));
    } else fa.g(!0).K("empty", !1).K("yellow", !0), fa.Text("");
    k();
  }
  function c(a) {
    H.jc &&
      a &&
      ((a = a.type.toLowerCase()),
      ("mousewheel" != a && "mousedown" != a && "dommousescroll" != a) ||
        H.f(oa.vb));
    da.C = H.f();
    H.jc = !da.C;
    K.ph(da.C);
    K.W();
    k();
  }
  function z() {
    da.C = S.f();
  }
  function A(a) {
    Z.jc &&
      a &&
      ((a = a.type.toLowerCase()),
      ("mousewheel" != a && "mousedown" != a && "dommousescroll" != a) ||
        Z.f(oa.vb));
    da.D = Z.f();
    Z.jc = !da.D;
    K.rh(da.D);
    K.W();
    k();
  }
  function m() {
    da.D = W.f();
  }
  function u() {
    da.fe = parseInt(X.f(), 10);
  }
  function q() {
    h(!1, !1);
  }
  function w() {
    h(!0, !1);
  }
  function p() {
    ba && !ba.m.ab() && ((da.C = da.D = 0), h(ba.uc(), !0));
  }
  function n() {
    var a = G.data.za;
    ka.Ca == a.Xc || ka.Ca == a.ll ? F.Jb.oa() : v(ca);
  }
  function x() {}
  function C() {
    da && !da.He && ((oa = y.wa.u(da.l)), V.Text(d(oa, U)), a(!0), k());
  }
  var O = E.controls,
    I = E.ba,
    G = E.V,
    F = G.view,
    y = G.la,
    M = G.control,
    D = E.ba.xa,
    L = E.Ma,
    B = (F.Cs = {});
  B.ha = function (a, b, d, e) {
    B.ua ||
      ((Q = a),
      (N = b),
      (P = d),
      (K = e),
      Q.c((T = L(O.page.ge).h(!1))),
      (a = { position: "absolute", right: "345px", "line-height": "23px" }),
      (b = {
        position: "absolute",
        left: "103px",
        width: "323px",
        height: "22px",
      }),
      (d = {
        position: "absolute",
        "text-align": "center",
        left: "0",
        right: "0",
      }),
      (e = { position: "absolute", width: "192px", height: "22px" }),
      T.c(
        L(O.page.Text, "order-me-dialog-volume")
          .Text(D.As + ":")
          .b(a)
          .b({ top: "10px" })
      ),
      T.c(
        (R = L(O.input.Number)
          .o("order-ee-dialog-volume")
          .b(b)
          .b({ top: "10px", width: "148px" })
          .i("change", f))
      ),
      T.c(
        L(O.page.Text, "order-ee-dialog-sl")
          .Text(D.Do + ":")
          .b(a)
          .b({ top: "41px" })
      ),
      T.c(
        (H = L(O.input.Number)
          .o("order-ee-dialog-sl")
          .b(b)
          .b({ top: "41px", width: "97px" })
          .i("change", c)
          .h(!0))
      ),
      T.c(
        (S = L(O.input.Number)
          .o("_order-ee-dialog-sl")
          .b(b)
          .b({ top: "41px", width: "97px" })
          .i("change", z)
          .h(!1))
      ),
      T.c(
        L(O.page.Text, "order-ee-dialog-tp")
          .Text(D.Fo + ":")
          .b(a)
          .b({ top: "41px", left: "auto", right: "118px" })
      ),
      T.c(
        (Z = L(O.input.Number)
          .o("order-ee-dialog-tp")
          .b(b)
          .b({ top: "41px", width: "97px", left: "auto", right: "14px" })
          .i("change", A)
          .h(!0))
      ),
      T.c(
        (W = L(O.input.Number)
          .o("_order-ee-dialog-tp")
          .b(b)
          .b({ top: "41px", width: "97px", left: "auto", right: "14px" })
          .i("change", m)
          .h(!1))
      ),
      T.c(
        L(O.page.Text, "order-ee-dialog-fill")
          .Text(D.yB + ":")
          .b(a)
          .b({ top: "72px" })
      ),
      T.c(
        (X = L(O.input.of)
          .o("order-ee-dialog-fill")
          .b(b)
          .b({ top: "72px" })
          .i("change", u))
      ),
      T.c(
        L(O.page.Text, "order-ee-dialog-comment")
          .Text(D.vs + ":")
          .b(a)
          .b({ top: "103px" })
      ),
      T.c(
        (Y = L(O.input.Text)
          .o("order-ee-dialog-comment")
          .b(b)
          .b({ top: "103px" }))
      ),
      T.c(
        (V = L(O.page.Text)
          .Text("0.00000 / 0.00000")
          .b(d)
          .b({ top: "144px", "font-size": "16px" }))
      ),
      T.c((ga = L(O.page.Text).b(d).b({ top: "145px", "font-size": "16px" }))),
      T.c(
        (ea = L(O.input.Ua)
          .Text("Sell")
          .K("empty")
          .g(!0)
          .b(e)
          .b({ left: "16px", top: "198px" })
          .i("click", q))
      ),
      T.c(
        (ha = L(O.input.Ua)
          .Text("Buy")
          .K("empty")
          .g(!0)
          .b(e)
          .b({ right: "16px", top: "198px" })
          .i("click", w))
      ),
      T.c(
        (fa = L(O.input.Ua)
          .Text("&nbsp;")
          .K("empty")
          .g(!0)
          .b(e)
          .b({
            left: "16px",
            width: "408px",
            top: "230px",
          })
          .i("click", p))
      ),
      T.c(
        (aa = L(O.input.Ua)
          .Text(D.pn)
          .h(!1)
          .b(e)
          .b({ left: "16px", width: "408px", top: "230px" })
          .i("click", n))
      ),
      T.c(
        L(O.input.Ua)
          .Text(D.qn)
          .h(!1)
          .b(e)
          .b({ right: "16px", width: "198px", top: "230px" })
          .i("click", x)
      ),
      (B.ua = !0));
  };
  B.na = v;
  B.oa = function () {
    T && T.h(!1);
    U && y.wa.xe(U.l, C);
    na = ra = oa = ka = ca = da = ba = U = null;
  };
  B.Ai = function (a, c) {
    var d = G.data.za;
    (da && da.He == a.He) || v(a);
    ka = c;
    switch (ka.Ca) {
      case d.qe:
        r();
        break;
      case d.uj:
        ga.Text(D.xg + "<br/>" + D.yo);
        break;
      case d.vj:
        ga.Text(D.xg + "<br/>" + D.Co);
        break;
      case d.Xc:
      case d.hm:
      case d.Dk:
        l();
        break;
      case d.jg:
        b();
        break;
      default:
        e();
    }
  };
  var Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha,
    fa,
    aa,
    X,
    ga,
    U,
    ba,
    da,
    ca,
    ka,
    oa,
    ra,
    na;
})();
(function () {
  function v(e) {
    var f = D.data.Fc,
      h = D.data.eb;
    if (e) {
      ma && B.wa.xe(ma.l, F);
      ia = e;
      ia.Oh = !1;
      ia.aa = f.Pg;
      if (void 0 === ia.da || ia.da < h.Lc || ia.da > h.jd)
        (ia.da = h.Lc), (ia.N = 0);
      ya = {};
      if ((ma = B.O.Ka(e.l))) {
        Fa = null;
        e.Ya && (Fa = B.P.Ui(ma.l, e.Ya));
        ia.m.ab() &&
          ((e = Long.ec(B.B.u("trade_lots_last"))),
          e.ab() && (e = ma.A.mj),
          (ia.m = e));
        ma && B.wa.tg(ma.l, F);
        Da = B.wa.u(ma.l);
        na.Text(d(Da || {}, ma)).b({ "margin-top": "0" });
        Y.f(Q.Wa.od(ia.m));
        Y.T(Q.Wa.En(ma.A.sg));
        Y.Y(Q.Wa.od(ma.A.sg));
        Y.Fa(0);
        Y.mc(Q.Wa.od(ma.A.lj));
        aa.Fa(0);
        aa.mc(Number.MAX_VALUE);
        aa.Y(Math.pow(10, -ma.j));
        aa.T(ma.j);
        aa.f(ia.N || 0);
        aa.jc = !ia.N;
        X.Fa(0);
        X.mc(Number.MAX_VALUE);
        X.Y(Math.pow(10, -ma.j));
        X.T(ma.j);
        X.f(ia.Na || 0);
        X.jc = !ia.Na;
        ca.f("");
        g(D.data.za.jl);
        e = D.data.eb;
        e = [
          [e.Lc, "Buy Limit"],
          [e.Zc, "Sell Limit"],
          [e.we, "Buy Stop"],
          [e.Ee, "Sell Stop"],
          [e.hd, "Buy Stop Limit"],
          [e.jd, "Sell Stop Limit"],
        ];
        for (var h = [], k = 0, l = e.length; k < l; k++)
          (f = e[k]) &&
            Q.kd.Wm(ma, f[0]) &&
            h.push({ value: f[0], label: f[1] });
        W.de(h);
        W.f(ia.da);
        c();
        a();
        b();
        e = D.control.lg;
        0 == (ma.A.ad & D.data.dd.Mg)
          ? (fa.g(!0), ha.g(!0))
          : B.B.u("trade_stops_mode") == e.kg
          ? (ha.h(!1).o("_order-po-dialog-tp"),
            fa.h(!0).o("order-po-dialog-tp"),
            fa.f(Math.abs((ia.D || 0) - ia.N) * ma.Xk),
            fa.T(0),
            fa.Y(1),
            fa.Fa(0),
            fa.Fa(Number.MAX_VALUE),
            (Ia = !0))
          : (fa.h(!1).o("_order-po-dialog-tp"),
            ha.h(!0).o("order-po-dialog-tp"),
            (ha.jc = !ia.D),
            ha.f(ia.D || 0),
            ha.T(ma.j),
            ha.Y(Math.pow(10, -ma.j)),
            ha.Fa(0),
            ha.mc(Number.MAX_VALUE),
            (Ia = !1));
        e = D.control.lg;
        0 == (ma.A.ad & D.data.dd.Lg)
          ? (ea.g(!0), V.g(!0))
          : B.B.u("trade_stops_mode") == e.kg
          ? (V.h(!1).o("_order-po-dialog-sl"),
            ea.h(!0).o("order-po-dialog-sl"),
            ea.f(Math.abs((ia.C || 0) - ia.N) * ma.Xk),
            ea.T(0),
            ea.Y(1),
            ea.Fa(0),
            ea.mc(Number.MAX_VALUE),
            (Ba = !0))
          : (ea.h(!1).o("_order-po-dialog-sl"),
            V.h(!0).o("order-po-dialog-sl"),
            (V.jc = !ia.C),
            V.f(ia.C || 0),
            V.T(ma.j),
            V.Y(Math.pow(10, -ma.j)),
            V.Fa(0),
            V.mc(Number.MAX_VALUE),
            (Ba = !1));
        H.ph(ia.C);
        H.rh(ia.D);
        H.Entry(ia.N);
        H.W();
        R.g(!1);
        S.g(!1);
        Z && Z.h(!0);
      }
    }
  }
  function r() {
    na.Text(N.xg + "<br/>" + N.Bo);
  }
  function l() {
    g(D.data.za.Xc);
    na.Text(L.Jb.Ug(ya.Ca));
    M.je.Error();
  }
  function e() {
    g(D.data.za.Xc);
    var a = L.Jb.Ug(ya.Ca);
    ya.Eb && (a += "(" + ya.Eb + ")");
    var b = L.Jb.$m(ia, ya, ma, Fa, Fa, new D.data.ig());
    na.Text([b, a].join("<br/>"));
    M.je.Za();
  }
  function k() {
    var a = D.data.za,
      b = ia.Th(),
      a = Q.ct.Tr(b, !1) == a.Cb;
    va.g(!a).K("empty", a);
  }
  function h(a) {
    void 0 === a && (a = !0);
    var b = D.data.za,
      c = D.data.Io;
    if (ya.X && ya.Ca == b.jg) {
      var d = B.P.df(ya.X);
      if (d)
        switch (d.qk) {
          case c.rn:
          case c.Eo:
            ya.Ca = b.jg;
            e();
            return;
          case c.Hq:
            e();
            return;
        }
      else if ((d = B.History.df(ya.X)))
        switch (d.qk) {
          case c.rn:
          case c.Eo:
            ya.Ca = b.jg;
            e();
            return;
          case c.zs:
            d.Eb && (ya.Eb = d.Eb);
            0 === d.Ff.compare(d.wc) ? (ya.Ca = b.ov) : (ya.Ca = b.Dk);
            l();
            return;
          case c.lv:
            d.Eb && (ya.Eb = d.Eb);
            ya.Ca = b.Ms;
            l();
            return;
        }
      a
        ? setTimeout(function () {
            h(!1);
          }, 500)
        : e();
    }
  }
  function b() {
    var a = D.data.Ci,
      b = D.data.yi,
      c = D.data.Tf,
      d = D.data.eb,
      a = [
        [a.cl, b.Eh, N.hD],
        [a.dl, b.fm, N.iD],
      ],
      e = [];
    e.push({ value: b.Fh, label: N.BJ });
    if (
      ma.A.$d == c.Eg &&
      (ia.da == d.Lc || ia.da == d.Zc || ia.da == d.hd || ia.da == d.jd)
    )
      for (c = 0, d = a.length; c < d; c++)
        (b = a[c]) && ma.A.oi & b[0] && e.push({ value: b[1], label: b[2] });
    oa.de(e);
    1 >= e.length
      ? (oa.h(!1), ra.h(!1), e.length && (ia.fe = e[0].value))
      : (oa.h(!0), ra.h(!0));
    oa.f() || oa.f(e[0].value);
    A();
  }
  function a() {
    var a = D.data.yi,
      b = D.data.ai,
      c = D.data.tj;
    if (ia.fe == a.Eh || ia.fe == a.fm) ga.g(!0), ba.g(!0);
    else {
      for (
        var a = [
            [b.An, c.il, N.kD],
            [b.zn, c.sn, N.nD],
            [b.Wq, c.Bk, N.lD],
            [b.Xq, c.Ck, N.mD],
          ],
          c = [],
          d = 0,
          e = a.length;
        d < e;
        d++
      )
        (b = a[d]) && ma.A.Ni & b[0] && c.push({ value: b[1], label: b[2] });
      ga.de(c);
      1 >= c.length
        ? (ga.g(!0), ba.g(!0), c.length && ((ia.sd = c[0].value), (ia.$b = 0)))
        : (ga.g(!1), ba.g(!1));
      ba.K("notime", !0);
      ga.f(c[0].value);
      x();
    }
  }
  function g(a) {
    var b = D.data.dd,
      c = D.data.za,
      d = D.data.tj,
      e,
      f;
    switch (a) {
      case c.qe:
        e = f = c = a = !1;
        break;
      case c.Xc:
        a = !1;
        c = !0;
        e = f = !1;
        break;
      default:
        (a = !0), (c = !1), (e = f = !0);
    }
    va.h(a);
    sa.h(c);
    W.g(!e);
    Y.g(!e);
    X.g(!e);
    aa.g(!e);
    0 != (ma.A.ad & b.Lg) ? (Ba ? ea.g(!e) : V.g(!e)) : (ea.g(!0), V.g(!0));
    0 != (ma.A.ad & b.Mg) ? (Ia ? fa.g(!e) : ha.g(!e)) : (fa.g(!0), ha.g(!0));
    1 < (ga.de() || []).length &&
      (ga.g(!e),
      ga.h(f),
      U.h(f),
      ia.sd == d.Bk || ia.sd == d.Ck ? ba.g(!e) : ba.g(!0),
      ba.h(f),
      da.h(f));
    oa.g(!e);
    ca.g(!e);
    ca.h(f);
    ka.h(f);
    na.b({ top: f ? "190px" : "156px" });
  }
  function d(a, b) {
    if (!a) return "";
    var c = [],
      d = b.j || 0,
      e = 0,
      f = (a.dc || 0).toFixed(d),
      g = (a.vb || 0).toFixed(d);
    b.Zd == D.data.Pc.Ei && f && g && (3 == d || 5 == d) && (e = 1);
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">',
      g.substr(0, g.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:20px;letter-spacing:1px;">',
      g.substr(g.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">&nbsp;/&nbsp;</span>'
    );
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">',
      f.substr(0, f.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:20px;letter-spacing:1px;">',
      f.substr(f.length - e),
      "</span>"
    );
    return c.join("");
  }
  function f() {
    return (
      new Date().getTime() +
      6e4 * new Date().getTimezoneOffset() +
      1e3 * (B.H.Yw + 3600 * B.H.tw)
    );
  }
  function c() {
    var a = D.data.eb;
    ia.da = parseInt(W.f(), 10);
    ia.da == a.hd || ia.da == a.jd ? X.g(!1) : X.g(!0);
    ia.da == a.Lc || ia.da == a.we || ia.da == a.hd
      ? va.K("blue").K("red", !0)
      : va.K("blue", !0).K("red");
    b();
    k();
  }
  function z() {
    ia.m = Q.Wa.zj(Y.f());
    k();
  }
  function A() {
    ia.fe = parseInt(oa.f(), 10);
    a();
    k();
  }
  function m(a) {
    if (aa.jc && a) {
      a = a.type.toLowerCase();
      var b = B.wa.u(ma.l);
      !b ||
        ("mousewheel" != a && "mousedown" != a && "dommousescroll" != a) ||
        aa.f(b.vb);
    }
    ia.N = aa.f();
    aa.jc = !ia.N;
    H.Entry(ia.N);
    H.W();
    k();
  }
  function u(a) {
    if (X.jc && a) {
      a = a.type.toLowerCase();
      var b = B.wa.u(ma.l);
      !b ||
        ("mousewheel" != a && "mousedown" != a && "dommousescroll" != a) ||
        X.f(b.vb);
    }
    ia.Na = X.f();
    X.jc = !ia.Na;
    k();
  }
  function q(a) {
    if (V.jc && a) {
      a = a.type.toLowerCase();
      var b = B.wa.u(ma.l);
      !b ||
        ("mousewheel" != a && "mousedown" != a && "dommousescroll" != a) ||
        V.f(b.vb);
    }
    ia.C = V.f();
    V.jc = !ia.C;
    H.ph(ia.C);
    H.W();
    k();
  }
  function w() {
    ia.C = ea.f();
    k();
  }
  function p(a) {
    if (ha.jc && a) {
      a = a.type.toLowerCase();
      var b = B.wa.u(ma.l);
      !b ||
        ("mousewheel" != a && "mousedown" != a && "dommousescroll" != a) ||
        ha.f(b.vb);
    }
    ia.D = ha.f();
    ha.jc = !ia.D;
    H.rh(ia.D);
    H.W();
    k();
  }
  function n() {
    ia.D = fa.f();
    k();
  }
  function x() {
    var a = D.data.tj;
    ia.sd = parseInt(ga.f(), 10);
    switch (ia.sd) {
      case a.il:
        ba.g(!0);
        ia.$b = 0;
        ba.f(f());
        break;
      case a.sn:
        ba.g(!0);
        ba.K("notime");
        ia.$b || (ia.$b = f() + 6e5);
        ba.f(ia.$b);
        break;
      case a.Bk:
        ba.g(!1);
        ba.K("notime", !0);
        ia.$b || (ia.$b = f() + 6e5);
        ba.f(ia.$b);
        break;
      case a.Ck:
        ba.g(!1), ba.K("notime"), ia.$b || (ia.$b = f() + 6e5), ba.f(ia.$b);
    }
    k();
  }
  function C() {
    ia.$b = ba.f();
    ia.$b -= 6e4 * new Date().getTimezoneOffset();
    ia.$b = 6e4 * Math.floor(ia.$b / 6e4);
    k();
  }
  function O() {
    var a = D.control.$f,
      b = D.data.za,
      c = D.data.tj;
    ia.aa = D.data.Fc.Pg;
    ia.j = ma.j;
    g(b.qe);
    r();
    ia.Eb = ca.f();
    ia.sd == c.Bk || ia.sd == c.Ck
      ? ((ia.$b = ba.f()),
        (ia.$b -= 6e4 * new Date().getTimezoneOffset()),
        (ia.$b = 6e4 * Math.floor(ia.$b / 6e4)))
      : (ia.$b = 0);
    var c = ia,
      d = D.control.lg,
      e = D.data.eb;
    if (B.B.u("trade_stops_mode") == d.kg)
      switch (ia.da) {
        case e.Lc:
        case e.we:
          Ba && ea.f() && (c.C = (c.N - ea.f() * ma.Fb).normalize(ma.j));
          Ia && fa.f() && (c.D = (c.N + fa.f() * ma.Fb).normalize(ma.j));
          break;
        case e.hd:
          Ba && ea.f() && (c.C = (c.Na - ea.f() * ma.Fb).normalize(ma.j));
          Ia && fa.f() && (c.D = (c.Na + fa.f() * ma.Fb).normalize(ma.j));
          break;
        case e.Zc:
        case e.Ee:
          Ba && ea.f() && (c.C = (c.N + ea.f() * ma.Fb).normalize(ma.j));
          Ia && fa.f() && (c.D = (c.N - fa.f() * ma.Fb).normalize(ma.j));
          break;
        case e.jd:
          Ba && ea.f() && (c.C = (c.Na + ea.f() * ma.Fb).normalize(ma.j)),
            Ia && fa.f() && (c.D = (c.Na - fa.f() * ma.Fb).normalize(ma.j));
      }
    B.B.u("trade_lots_last", ia.m.toString());
    B.wa.xe(ma.l, F);
    R.g(!0);
    S.g(!0);
    a = a.Bd(ia);
    a != b.Cb && ((ya = {}), (ya.Ca = a), l());
  }
  function I() {
    var a = D.data.za;
    ya.Ca == a.Xc || ya.Ca == a.jg || ya.Ca == a.ll ? L.Jb.oa() : v(ia);
  }
  function G() {}
  function F() {
    ia && !ia.He && ((Da = B.wa.u(ia.l)), na.Text(d(Da, ma)), k());
  }
  var y = E.controls,
    M = E.ba,
    D = E.V,
    L = D.view,
    B = D.la,
    Q = D.control,
    N = E.ba.xa,
    K = E.Ma,
    P = (L.Hs = {});
  P.ha = function (a, b, d, e) {
    if (!P.ua) {
      T = a;
      R = b;
      S = d;
      H = e;
      T.c((Z = K(y.page.ge).h(!1)));
      a = { position: "absolute", right: "345px", "line-height": "23px" };
      b = { position: "absolute", right: "142px", "line-height": "23px" };
      d = {
        position: "absolute",
        left: "103px",
        width: "97px",
        height: "22px",
      };
      e = {
        position: "absolute",
        width: "123px",
        height: "22px",
        right: "14px",
      };
      var f = { position: "absolute", width: "192px", height: "22px" };
      Z.c(
        K(y.page.Text, "order-po-dialog-type")
          .Text(N.uI + ":")
          .b(a)
          .b({ top: "10px" })
      );
      Z.c(
        (W = K(y.input.of)
          .o("order-po-dialog-type")
          .b(d)
          .b({ top: "10px", width: "97px" })
          .i("change", c))
      );
      Z.c(
        K(y.page.Text, "order-po-dialog-volume")
          .Text(N.As + ":")
          .b(a)
          .b({ top: "40px" })
      );
      Z.c(
        (Y = K(y.input.Number)
          .o("order-po-dialog-volume")
          .b(d)
          .b({ top: "40px", width: "97px" })
          .i("change", z))
      );
      Z.c(
        (ra = K(y.page.Text, "order-po-dialog-fill")
          .Text(N.yB + ":")
          .b(b)
          .b({ top: "40px" }))
      );
      Z.c(
        (oa = K(y.input.of)
          .o("order-po-dialog-fill")
          .b(e)
          .b({ top: "40px" })
          .i("change", A)
          .h(!0))
      );
      Z.c(
        K(y.page.Text, "order-po-dialog-price")
          .Text(N.nI + ":")
          .b(a)
          .b({ top: "70px" })
      );
      Z.c(
        (aa = K(y.input.Number)
          .o("order-po-dialog-price")
          .b(d)
          .b({ top: "70px" })
          .i("change", m)
          .h(!0))
      );
      Z.c(
        K(y.page.Text, "order-po-dialog-trigger")
          .Text(N.tI + ":")
          .b(b)
          .b({ top: "70px" })
      );
      Z.c(
        (X = K(y.input.Number)
          .o("order-po-dialog-trigger")
          .b(e)
          .b({ top: "70px" })
          .i("change", u)
          .h(!0))
      );
      Z.c(
        K(y.page.Text, "order-po-dialog-sl")
          .Text(N.Do + ":")
          .b(a)
          .b({ top: "100px" })
      );
      Z.c(
        (V = K(y.input.Number)
          .o("order-po-dialog-sl")
          .b(d)
          .b({ top: "100px", width: "97px" })
          .i("change", q)
          .h(!0))
      );
      Z.c(
        (ea = K(y.input.Number)
          .o("_order-po-dialog-sl")
          .b(d)
          .b({ top: "100px", width: "97px" })
          .i("change", w)
          .h(!1))
      );
      Z.c(
        K(y.page.Text, "order-po-dialog-tp")
          .Text(N.Fo + ":")
          .b(b)
          .b({ top: "100px" })
      );
      Z.c(
        (ha = K(y.input.Number)
          .o("order-po-dialog-tp")
          .b(e)
          .b({ top: "100px" })
          .i("change", p)
          .h(!0))
      );
      Z.c(
        (fa = K(y.input.Number)
          .o("_order-po-dialog-tp")
          .b(e)
          .b({ top: "100px" })
          .i("change", n)
          .h(!1))
      );
      Z.c(
        (U = K(y.page.Text, "order-po-dialog-expiration-mode")
          .Text(N.iI + ":")
          .b(a)
          .b({ top: "130px" }))
      );
      Z.c(
        (ga = K(y.input.of)
          .o("order-po-dialog-expiration-mode")
          .b(d)
          .b({ top: "130px", width: "97px" })
          .i("change", x)
          .h(!0))
      );
      Z.c(
        (da = K(y.page.Text, "order-po-dialog-expiration")
          .Text(N.jI + ":")
          .b(b)
          .b({ top: "130px" }))
      );
      Z.c((ba = K(y.input.Date).b(e).b({ top: "130px" }).i("change", C).h(!0)));
      Z.c(
        (ka = K(y.page.Text, "order-po-dialog-comment")
          .Text(N.vs + ":")
          .b(a)
          .b({ top: "160px" }))
      );
      Z.c(
        (ca = K(y.input.Text).o("order-po-dialog-comment").b(d).b({
          top: "160px",
          width: "323px",
        }))
      );
      Z.c(
        (na = K(y.page.Text)
          .Text("0.00000 / 0.00000")
          .b({
            position: "absolute",
            "text-align": "center",
            left: "0",
            right: "0",
          })
          .b({ top: "190px", "font-size": "16px" }))
      );
      Z.c(
        (va = K(y.input.Ua)
          .Text(N.RW)
          .K("empty")
          .g(!0)
          .b(f)
          .b({ left: "16px", width: "408px", top: "230px" })
          .i("click", O))
      );
      Z.c(
        (sa = K(y.input.Ua)
          .Text(N.pn)
          .h(!1)
          .b(f)
          .b({ left: "16px", width: "408px", top: "230px" })
          .i("click", I))
      );
      Z.c(
        K(y.input.Ua)
          .Text(N.qn)
          .h(!1)
          .b(f)
          .b({ right: "16px", width: "198px", top: "230px" })
          .i("click", G)
      );
      P.ua = !0;
    }
  };
  P.na = v;
  P.oa = function () {
    Z && Z.h(!1);
    ma && B.wa.xe(ma.l, F);
    Ia = Ba = Da = ya = ia = Fa = ma = null;
  };
  P.Ai = function (a, b) {
    var c = D.data.za;
    (ia && ia.He == a.He) || v(a);
    ya = b;
    switch (ya.Ca) {
      case c.qe:
        r();
        break;
      case c.uj:
        na.Text(N.xg + "<br/>" + N.yo);
        break;
      case c.vj:
        na.Text(N.xg + "<br/>" + N.Co);
        break;
      case c.Xc:
        e();
        break;
      case c.jg:
        h();
        break;
      default:
        l();
    }
  };
  var T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha,
    fa,
    aa,
    X,
    ga,
    U,
    ba,
    da,
    ca,
    ka,
    oa,
    ra,
    na,
    sa,
    va,
    ma,
    Fa,
    ia,
    ya,
    Da,
    Ba,
    Ia;
})();
(function () {
  function v(c) {
    if (
      c &&
      (U && y.wa.xe(U.l, C),
      (ca = c),
      (ca.Oh = !1),
      (ka = {}),
      (da = y.P.df(ca.X)),
      da || (da = y.History.df(ca.X)) || (da = new G.data.ig()),
      (U = y.O.Ka(c.l)))
    ) {
      ba = null;
      c.Ya && (ba = y.P.Ui(U.l, c.Ya));
      ca.N ||
        ca.Na ||
        ca.C ||
        ca.D ||
        ((ca.l = da.l),
        (ca.N = da.N),
        (ca.Na = da.Na),
        (ca.C = da.C),
        (ca.D = da.D),
        (ca.sd = da.sd),
        (ca.$b = da.$b),
        (ca.da = da.type));
      c = G.data.eb;
      U && y.wa.tg(U.l, C);
      oa = y.wa.u(U.l);
      ha.Text(a(oa || {}, U)).b({ "margin-top": "0" });
      W.Fa(0);
      W.mc(Number.MAX_VALUE);
      W.Y(Math.pow(10, -U.j));
      W.T(U.j);
      W.f(ca.N);
      W.jc = !ca.N;
      Y.Fa(0);
      Y.mc(Number.MAX_VALUE);
      Y.Y(Math.pow(10, -U.j));
      Y.T(U.j);
      Y.f(ca.Na);
      Y.jc = !ca.Na;
      b(G.data.za.jl);
      for (
        var d = G.data.ai,
          f = G.data.tj,
          d = [
            [d.An, f.il, D.kD],
            [d.zn, f.sn, D.nD],
            [d.Wq, f.Bk, D.lD],
            [d.Xq, f.Ck, D.mD],
          ],
          g = [],
          h = 0,
          k = d.length;
        h < k;
        h++
      )
        (f = d[h]) && U.A.Ni & f[0] && g.push({ value: f[1], label: f[2] });
      V.de(g).f(ca.sd);
      1 >= g.length
        ? (V.g(!0), ea.g(!0), g.length && ((ca.sd = g[0].value), (ca.$b = 0)))
        : (V.g(!1), ea.g(!1));
      ea.K("notime", !0);
      V.f() || V.f(g[0].value);
      u();
      ga.Text(D.gX.split("%POINTS%").join(U.A.Ah) + ".\n" + D.hX);
      d = G.control.lg;
      f = G.data.eb;
      g = U.Fb;
      if (0 != (U.A.ad & G.data.dd.Mg))
        if (y.B.u("trade_stops_mode") != d.kg)
          Z.h(!1).o("_order-mo-dialog-tp"),
            S.h(!0).o("order-mo-dialog-tp"),
            S.f(ca.D || 0),
            S.T(U.j),
            S.Y(Math.pow(10, -U.j)),
            S.Fa(0),
            S.mc(Number.MAX_VALUE),
            (S.jc = !ca.D),
            (na = !1);
        else {
          switch (ca.da) {
            case f.Lc:
            case f.we:
              ca.D && na.f(((ca.D - ca.N) / g).normalize(0));
              break;
            case f.hd:
              ca.D && na.f(((ca.D - ca.Na) / g).normalize(0));
              break;
            case f.Zc:
            case f.Ee:
              ca.D && na.f(((ca.N - ca.D) / g).normalize(0));
              break;
            case f.jd:
              ca.D && na.f(((ca.N - ca.D) / g).normalize(0));
          }
          S.h(!1).o("_order-mo-dialog-tp");
          Z.h(!0).o("order-mo-dialog-tp");
          Z.T(0);
          Z.Y(1);
          Z.Fa(0);
          Z.Fa(Number.MAX_VALUE);
          na = !0;
        }
      d = G.control.lg;
      f = G.data.eb;
      g = U.Fb;
      if (0 != (U.A.ad & G.data.dd.Lg))
        if (y.B.u("trade_stops_mode") != d.kg)
          H.h(!1).o("_order-mo-dialog-sl"),
            R.h(!0).o("order-mo-dialog-sl"),
            R.f(ca.C || 0),
            R.T(U.j),
            R.Y(Math.pow(10, -U.j)),
            R.Fa(0),
            R.mc(Number.MAX_VALUE),
            (R.jc = !ca.C),
            (ra = !1);
        else {
          switch (ca.da) {
            case f.Lc:
            case f.we:
              ca.C && H.f(((ca.N - ca.C) / g).normalize(0));
              break;
            case f.hd:
              ca.C && H.f(((ca.Na - ca.C) / g).normalize(0));
              break;
            case f.Zc:
            case f.Ee:
              ca.C && H.f(((ca.C - ca.N) / g).normalize(0));
              break;
            case f.jd:
              ca.C && H.f(((ca.C - ca.N) / g).normalize(0));
          }
          R.h(!1).o("_order-mo-dialog-sl");
          H.h(!0).o("order-mo-dialog-sl");
          H.T(0);
          H.Y(1);
          H.Fa(0);
          H.mc(Number.MAX_VALUE);
          ra = !0;
        }
      ca.da == c.hd || ca.da == c.jd ? Y.g(!1) : Y.g(!0);
      K.ph(ca.C);
      K.rh(ca.D);
      K.Entry(ca.N);
      K.W();
      e();
      N.g(!1);
      P.g(!1);
      T && T.h(!0);
    }
  }
  function r() {
    ha.Text(D.xg + "<br/>" + D.Bo);
  }
  function l() {
    b(G.data.za.Xc);
    ha.Text(F.Jb.Ug(ka.Ca));
    I.je.Error();
  }
  function e() {
    var a = G.data.za,
      b = G.data.Fc,
      c = !!y.P.df(ca.X),
      d = ca.Th();
    k(d);
    h(d);
    d.aa = b.Di;
    var e = c && M.ct.Tr(d, !1) == a.Cb;
    aa.g(!e).K("empty", e);
    d.aa = b.dk;
    e = c && M.ct.Tr(d, !1) == a.Cb;
    X.g(!e).K("empty", e);
  }
  function k(a) {
    var b = G.control.lg,
      c = G.data.eb;
    if (y.B.u("trade_stops_mode") == b.kg)
      switch ((ra && (a.C = 0), na && (a.D = 0), ca.da)) {
        case c.Lc:
        case c.we:
          ra && H.f() && (a.C = (a.N - H.f() * U.Fb).normalize(U.j));
          na && Z.f() && (a.D = (a.N + Z.f() * U.Fb).normalize(U.j));
          break;
        case c.hd:
          ra && H.f() && (a.C = (a.Na - H.f() * U.Fb).normalize(U.j));
          na && Z.f() && (a.D = (a.Na + Z.f() * U.Fb).normalize(U.j));
          break;
        case c.Zc:
        case c.Ee:
          ra && H.f() && (a.C = (a.N + H.f() * U.Fb).normalize(U.j));
          na && Z.f() && (a.D = (a.N - Z.f() * U.Fb).normalize(U.j));
          break;
        case c.jd:
          ra && H.f() && (a.C = (a.Na + H.f() * U.Fb).normalize(U.j)),
            na && Z.f() && (a.D = (a.Na - Z.f() * U.Fb).normalize(U.j));
      }
  }
  function h(a) {
    var b = G.data.tj;
    if (a.sd == b.Bk || a.sd == b.Ck)
      (a.$b = ea.f()),
        (a.$b -= 6e4 * new Date().getTimezoneOffset()),
        (a.$b = 6e4 * Math.floor(a.$b / 6e4));
  }
  function b(a) {
    var b = G.data.dd,
      c = G.data.Tf,
      d = G.data.za,
      e = G.data.tj,
      f;
    switch (a) {
      case d.qe:
        f = d = a = !1;
        break;
      case d.Xc:
        a = !1;
        d = !0;
        f = !1;
        break;
      default:
        (a = !0), (d = !1), (f = !0);
    }
    aa.h(a);
    X.h(a);
    U.A.$d != c.Eg ? ga.h(a) : ga.h(!1);
    fa.h(d);
    0 != (U.A.ad & b.Lg) ? (ra ? H.g(!f) : R.g(!f)) : (H.g(!0), R.g(!0));
    0 != (U.A.ad & b.Mg) ? (na ? Z.g(!f) : S.g(!f)) : (Z.g(!0), S.g(!0));
    Y.g(!f);
    W.g(!f);
    1 < (V.de() || []).length &&
      (V.g(!f), ca.sd == e.Bk || ca.sd == e.Ck ? ea.g(!f) : ea.g(!0));
  }
  function a(a, b) {
    if (!a) return "";
    var c = [],
      d = b.j || 0,
      e = 0,
      f = (a.dc || 0).toFixed(d),
      g = (a.vb || 0).toFixed(d);
    b.Zd == G.data.Pc.Ei && f && g && (3 == d || 5 == d) && (e = 1);
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">',
      g.substr(0, g.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:20px;letter-spacing:1px;">',
      g.substr(g.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">&nbsp;/&nbsp;</span>'
    );
    c.push(
      '<span style="font-size:24px;letter-spacing:1px;">',
      f.substr(0, f.length - e),
      "</span>"
    );
    c.push(
      '<span style="font-size:20px;letter-spacing:1px;">',
      f.substr(f.length - e),
      "</span>"
    );
    return c.join("");
  }
  function g() {
    return (
      new Date().getTime() +
      6e4 * new Date().getTimezoneOffset() +
      1e3 * (y.H.Yw + 3600 * y.H.tw)
    );
  }
  function d(a) {
    if (W.jc && a) {
      a = a.type.toLowerCase();
      var b = y.wa.u(U.l);
      !b ||
        ("mousewheel" != a && "mousedown" != a && "dommousescroll" != a) ||
        W.f(b.vb);
    }
    ca.N = W.f();
    W.jc = !ca.N;
    K.Entry(ca.N);
    K.W();
    e();
  }
  function f(a) {
    Y.jc &&
      a &&
      ((a = a.type.toLowerCase()),
      "mousewheel" == a || "mousedown" == a || "dommousescroll" == a) &&
      (ca.N ? Y.f(ca.N) : (a = y.wa.u(U.l)) && Y.f(a.vb));
    ca.Na = Y.f();
    Y.jc = !ca.Na;
    e();
  }
  function c(a) {
    R.jc &&
      a &&
      ((a = a.type.toLowerCase()),
      "mousewheel" == a || "mousedown" == a || "dommousescroll" == a) &&
      (ca.N ? R.f(ca.N) : (a = y.wa.u(U.l)) && R.f(a.vb));
    ca.C = R.f();
    R.jc = !ca.C;
    K.ph(ca.C);
    K.W();
    e();
  }
  function z() {
    k(ca);
    K.ph(ca.C);
    K.W();
    e();
  }
  function A(a) {
    S.jc &&
      a &&
      ((a = a.type.toLowerCase()),
      "mousewheel" == a || "mousedown" == a || "dommousescroll" == a) &&
      (ca.N ? S.f(ca.N) : (a = y.wa.u(U.l)) && S.f(a.vb));
    ca.D = S.f();
    S.jc = !ca.D;
    K.rh(ca.D);
    K.W();
    e();
  }
  function m() {
    k(ca);
    K.rh(ca.D);
    K.W();
    e();
  }
  function u() {
    var a = G.data.tj;
    ca.sd = parseInt(V.f(), 10);
    switch (ca.sd) {
      case a.il:
        ea.g(!0);
        ea.f(g());
        break;
      case a.sn:
        ea.g(!0);
        ea.K("notime");
        ca.$b
          ? ea.f(ca.$b + 6e4 * new Date().getTimezoneOffset())
          : ea.f(g() + 6e5);
        break;
      case a.Bk:
        ea.g(!1);
        ea.K("notime", !0);
        ca.$b
          ? ea.f(ca.$b + 6e4 * new Date().getTimezoneOffset())
          : ea.f(g() + 6e5);
        break;
      case a.Ck:
        ea.g(!1),
          ea.K("notime"),
          ca.$b
            ? ea.f(ca.$b + 6e4 * new Date().getTimezoneOffset())
            : ea.f(g() + 6e5);
    }
    e();
  }
  function q() {
    e();
  }
  function w() {
    var a = G.control.$f,
      c = G.data.Fc,
      d = G.data.za;
    y.wa.xe(U.l, C);
    b(d.qe);
    r();
    ca.aa = c.Di;
    ca.da = da.yb;
    ca.m = da.Ff.La();
    ca.j = U.j;
    h(ca);
    k(ca);
    N.g(!0);
    P.g(!0);
    a = a.Bd(ca);
    a != d.Cb && ((ka = {}), (ka.Ca = a), l());
  }
  function p() {
    var a = G.control.$f,
      c = G.data.Fc,
      d = G.data.za;
    y.wa.xe(U.l, C);
    b(d.qe);
    r();
    ca.aa = c.dk;
    ca.da = da.yb;
    ca.m = da.Ff.La();
    ca.j = U.j;
    aa.h(!1);
    X.h(!1);
    N.g(!0);
    P.g(!0);
    a = a.Bd(ca);
    a != d.Cb && ((ka = {}), (ka.Ca = a), l());
  }
  function n() {
    var a = G.data.za;
    ka.Ca == a.Xc || ka.Ca == a.ll || ka.Ca == a.jg ? F.Jb.oa() : v(ca);
  }
  function x() {}
  function C() {
    ca && !ca.He && ((oa = y.wa.u(ca.l)), ha.Text(a(oa, U)), e());
  }
  var O = E.controls,
    I = E.ba,
    G = E.V,
    F = G.view,
    y = G.la,
    M = G.control,
    D = E.ba.xa,
    L = E.Ma,
    B = (F.Gs = {});
  B.ha = function (a, b, e, g) {
    if (!B.ua) {
      Q = a;
      N = b;
      P = e;
      K = g;
      Q.c((T = L(O.page.ge).h(!1)));
      a = { position: "absolute", right: "345px", "line-height": "23px" };
      b = { position: "absolute", right: "142px", "line-height": "23px" };
      e = {
        position: "absolute",
        left: "103px",
        width: "97px",
        height: "22px",
      };
      g = {
        position: "absolute",
        width: "123px",
        height: "22px",
        right: "14px",
      };
      var h = {
          position: "absolute",
          "text-align": "center",
          left: "10px",
          right: "10px",
        },
        k = { position: "absolute", width: "192px", height: "22px" };
      T.c(
        L(O.page.Text, "order-mo-dialog-price")
          .Text(D.nI + ":")
          .b(a)
          .b({ top: "10px" })
      );
      T.c(
        (W = L(O.input.Number)
          .o("order-mo-dialog-price")
          .b(e)
          .b({ top: "10px" })
          .i("change", d)
          .h(!0))
      );
      T.c(
        L(O.page.Text, "order-mo-dialog-trigger")
          .Text(D.tI + ":")
          .b(b)
          .b({ top: "10px" })
      );
      T.c(
        (Y = L(O.input.Number)
          .o("order-mo-dialog-trigger")
          .b(g)
          .b({ top: "10px" })
          .i("change", f)
          .h(!0))
      );
      T.c(
        L(O.page.Text, "order-mo-dialog-sl")
          .Text(D.Do + ":")
          .b(a)
          .b({ top: "40px" })
      );
      T.c(
        (R = L(O.input.Number)
          .o("order-mo-dialog-sl")
          .b(e)
          .b({ top: "40px", width: "97px" })
          .i("change", c)
          .h(!0))
      );
      T.c(
        (H = L(O.input.Number)
          .o("_order-mo-dialog-sl")
          .b(e)
          .b({ top: "40px", width: "97px" })
          .i("change", z)
          .h(!1))
      );
      T.c(
        L(O.page.Text, "order-mo-dialog-tp")
          .Text(D.Fo + ":")
          .b(b)
          .b({ top: "40px" })
      );
      T.c(
        (S = L(O.input.Number)
          .o("order-mo-dialog-tp")
          .b(g)
          .b({ top: "40px" })
          .i("change", A)
          .h(!0))
      );
      T.c(
        (Z = L(O.input.Number)
          .o("_order-mo-dialog-tp")
          .b(g)
          .b({ top: "40px" })
          .i("change", m)
          .h(!1))
      );
      T.c(
        L(O.page.Text, "order-po-dialog-expiration-mode")
          .Text(D.iI + ":")
          .b(a)
          .b({ top: "70px" })
      );
      T.c(
        (V = L(O.input.of)
          .o("order-po-dialog-expiration-mode")
          .b(e)
          .b({ top: "70px", width: "97px" })
          .i("change", u)
          .h(!0))
      );
      T.c(
        L(O.page.Text, "order-po-dialog-expiration")
          .Text(D.jI + ":")
          .b(b)
          .b({ top: "70px" })
      );
      T.c((ea = L(O.input.Date).b(g).b({ top: "70px" }).i("change", q).h(!0)));
      T.c(
        (ha = L(O.page.Text)
          .Text("0.00000 / 0.00000")
          .b(h)
          .b({ top: "130px", "font-size": "16px" }))
      );
      T.c((ga = L(O.page.Text).b(h).b({ top: "222px", "font-size": "11px" })));
      T.c(
        (aa = L(O.input.Ua)
          .Text(D.hI)
          .K("blue empty")
          .g(!0)
          .b(k)
          .b({ left: "16px", width: "198px", top: "190px" })
          .i("click", w))
      );
      T.c(
        (X = L(O.input.Ua)
          .Text(D.QW)
          .K("red empty")
          .g(!0)
          .b(k)
          .b({ right: "16px", width: "198px", top: "190px" })
          .i("click", p))
      );
      T.c(
        (fa = L(O.input.Ua)
          .Text(D.pn)
          .h(!1)
          .b(k)
          .b({ left: "16px", width: "408px", top: "230px" })
          .i("click", n))
      );
      T.c(
        L(O.input.Ua)
          .Text(D.qn)
          .h(!1)
          .b(k)
          .b({ right: "16px", width: "198px", top: "230px" })
          .i("click", x)
      );
      B.ua = !0;
    }
  };
  B.na = v;
  B.oa = function () {
    T && T.h(!1);
    U && y.wa.xe(U.l, C);
    na = ra = oa = ka = ca = ba = U = null;
  };
  B.Ai = function (a, c) {
    var d = G.data.za;
    (ca && ca.He == a.He) || v(a);
    ka = c;
    switch (ka.Ca) {
      case d.qe:
        r();
        break;
      case d.uj:
        ha.Text(D.xg + "<br/>" + D.yo);
        break;
      case d.vj:
        ha.Text(D.xg + "<br/>" + D.Co);
        break;
      case d.Xc:
      case d.jg:
        b(G.data.za.Xc);
        d = F.Jb.Ug(ka.Ca);
        ka.Eb && (d += "(" + ka.Eb + ")");
        var e = F.Jb.$m(ca, ka, U, ba, ba, da);
        ha.Text([e, d].join("<br/>"));
        I.je.Za();
        break;
      default:
        l();
    }
  };
  var Q,
    N,
    K,
    P,
    T,
    R,
    H,
    S,
    Z,
    W,
    Y,
    V,
    ea,
    ha,
    fa,
    aa,
    X,
    ga,
    U,
    ba,
    da,
    ca,
    ka,
    oa,
    ra,
    na;
})();
(function () {
  function v(a) {
    var b = m.data.Fc;
    a &&
      (L && q.wa.xe(L.l, c),
      (Q = a),
      (Q.Oh = !1),
      (Q.aa = b.Zi),
      (N = {}),
      (D = q.O.Ka(a.l))) &&
      ((L = null),
      a.Ya &&
        ((L = q.P.fg(a.Ya)),
        L || (L = q.History.Bx(a.Ya)) || (L = new m.data.Tg())),
      C.g(!1),
      O.g(!1),
      I && I.h(!0),
      h(m.data.za.jl),
      k(),
      q.wa.tg(L.l, c));
  }
  function r() {
    M.Text(w.xg + "<br/>" + w.Bo);
  }
  function l() {
    h(m.data.za.Xc);
    M.Text(u.Jb.Ug(N.Ca));
    A.je.Error();
  }
  function e() {
    if (q.P.fg(Q.Ya) && G.Db()) {
      var a = q.P.fg(Q.Nj);
      if (a) {
        y.Text(w.VW + " #" + L.ka + " " + w.TW + " #" + a.ka);
        y.g(!1);
        y.K("empty", !0).K("yellow");
        return;
      }
    }
    y.Text("&nbsp");
    y.g(!0);
    y.K("empty").K("yellow", !0);
  }
  function k(b) {
    if (q.P.fg(L.ka)) {
      for (var c = q.P.mq(L.l), d, f = 0, g = c.length; f < g; f++)
        (d = c[f]) && d.aa == L.aa && (c.splice(f, 1), f--);
      for (var f = [], h, k, l = 0, m = c.length; l < m; l++)
        if ((d = c[l]))
          (g = {}),
            (g.id = d.ka),
            (g.cells = []),
            (k = "balance"),
            d.zb() && (k = "buy"),
            d.uc() && (k = "sell"),
            (h = { className: "iconed" }),
            (h.content = ['<span class="i ', k, '">&nbsp;</span>', d.ka].join(
              ""
            )),
            g.cells.push(h),
            (h = {}),
            (h.content = u.F.Ea(d.m)),
            g.cells.push(h),
            (h = {}),
            (h.content = u.F.Z(d.Jc, d.j)),
            g.cells.push(h),
            (h = {}),
            (h.content = u.F.Z(d.Oc, d.j)),
            g.cells.push(h),
            (h = {}),
            (h.content = (d.ya || 0).gc(d.Hc)),
            g.cells.push(h),
            b ? G.Zg(g) : f.push(g);
      b || (G.vc(f), G.Db(f[0] && f[0].id), a.call(G));
    } else G.vc([]), G.Db(null), a.call(G);
    e();
  }
  function h(a) {
    var b = m.data.za,
      c,
      d;
    switch (a) {
      case b.qe:
        c = b = a = !1;
        d = !0;
        break;
      case b.Xc:
        a = !1;
        b = !0;
        c = !1;
        d = !0;
        break;
      default:
        (a = !0), (b = !1), (c = !0), (d = !1);
    }
    y.h(a);
    M.h(d);
    G.h(c);
    F.h(b);
  }
  function b() {
    var a = [];
    a.push({ id: "ticket", content: w.UK });
    a.push({ id: "volume", content: w.VK, align: "right", width: "70px" });
    a.push({ id: "price", content: w.KK, align: "right", width: "70px" });
    a.push({ id: "market", content: w.aX, align: "right", width: "70px" });
    a.push({ id: "profit", content: w.$s, align: "right", width: "70px" });
    return { ej: a };
  }
  function a() {
    Q.Nj = G.Db();
    e();
  }
  function g() {
    var a = m.control.$f,
      b = m.data.za,
      c = m.data.Fc;
    h(b.qe);
    r();
    Q.aa = c.Zi;
    Q.Ya = L.ka;
    Q.j = D.j;
    B = q.P.fg(Q.Nj);
    C.g(!0);
    O.g(!0);
    a = a.Bd(Q);
    a != b.Cb && ((N = {}), (N.Ca = a), l());
  }
  function d() {
    var a = m.data.za;
    N.Ca == a.Xc || N.Ca == a.ll || N.Ca == a.jg ? u.Jb.oa() : v(Q);
  }
  function f() {}
  function c() {
    k(!0);
  }
  var z = E.controls,
    A = E.ba,
    m = E.V,
    u = m.view,
    q = m.la,
    w = E.ba.xa,
    p = E.Ma,
    n = (u.Jq = {});
  n.ha = function (c, e, h) {
    n.ua ||
      ((x = c),
      (C = e),
      (O = h),
      x.c((I = p(z.page.ge).h(!1))),
      (c = { position: "absolute", width: "192px", height: "22px" }),
      I.c(
        (G = p(z.page.Yo, b())
          .K("borders close-by trade-table toolbox-table")
          .Av(!0)
          .b({
            position: "absolute",
            left: "16px",
            width: "404px",
            top: "10px",
            height: "208px",
          })
          .i("select", a))
      ),
      I.c(
        (M = p(z.page.Text).b({
          position: "absolute",
          top: "100px",
          "text-align": "center",
          left: "10px",
          right: "10px",
          "font-size": "16px",
        }))
      ),
      I.c(
        (y = p(z.input.Ua)
          .Text(w.jv)
          .K("empty")
          .g(!0)
          .b(c)
          .b({
            left: "16px",
            width: "408px",
            top: "230px",
          })
          .i("click", g))
      ),
      I.c(
        (F = p(z.input.Ua)
          .Text(w.pn)
          .h(!1)
          .b(c)
          .b({ left: "16px", width: "408px", top: "230px" })
          .i("click", d))
      ),
      I.c(
        p(z.input.Ua)
          .Text(w.qn)
          .h(!1)
          .b(c)
          .b({ right: "16px", width: "198px", top: "230px" })
          .i("click", f)
      ),
      (n.ua = !0));
  };
  n.na = v;
  n.oa = function () {
    I && I.h(!1);
    L && q.wa.xe(L.l, c);
    N = Q = L = D = null;
  };
  n.W = function () {
    if (!n.ua || !I.h() || !G.h()) return n;
    v(Q);
    return n;
  };
  n.Ai = function (a, b) {
    var c = m.data.za;
    (Q && Q.He == a.He) || v(a);
    N = b;
    switch (N.Ca) {
      case c.qe:
        r();
        break;
      case c.uj:
        M.Text(w.xg + "<br/>" + w.yo);
        break;
      case c.vj:
        M.Text(w.xg + "<br/>" + w.Co);
        break;
      case c.Xc:
      case c.jg:
        h(m.data.za.Xc);
        c = u.Jb.Ug(N.Ca);
        N.Eb && (c += "(" + N.Eb + ")");
        var d = u.Jb.$m(Q, N, D, L, B, new m.data.ig());
        M.Text([d, c].join("<br/>"));
        A.je.Za();
        break;
      default:
        l();
    }
  };
  var x, C, O, I, G, F, y, M, D, L, B, Q, N;
})();
(function () {
  function v() {
    if (A.ua) return A;
    q = z(b.page.Text)
      .Text(m.split("%COMPANY%").join(d.H.pr || "Unknown company"))
      .b({
        position: "absolute",
        top: "10px",
        left: "10px",
        right: "10px",
        bottom: "44px",
        "overflow-y": "scroll",
        border: "1px solid #ABADB3",
        background: "#ffffff",
        padding: "5px",
        "white-space": "normal",
      });
    n = z(b.input.pa)
      .b({ position: "absolute", left: "10px", bottom: "20px" })
      .o("one-click-accept")
      .i("change", l);
    var a = z(b.page.I, "one-click-accept")
      .Text(c.fI)
      .b({ position: "absolute", left: "28px", bottom: "20px" });
    w = z(b.input.Ua)
      .Text(c.gI)
      .b({ position: "absolute", bottom: "10px", right: "96px", width: "80px" })
      .i("click", e);
    p = z(b.input.Ua)
      .Text(c.dI)
      .b({ position: "absolute", bottom: "10px", right: "10px", width: "80px" })
      .i("click", k);
    u = z(b.page.Window, { title: c.cI, width: 490, height: 340 })
      .Uc(h.body)
      .c(q)
      .c(n)
      .c(a)
      .c(w)
      .c(p)
      .i("close", k)
      .oa();
    A.ua = !0;
    return A;
  }
  function r() {
    A.ua || v();
    u.oa();
    return A;
  }
  function l() {
    w.g(!n.s());
  }
  function e() {
    f.H.HB(!0);
    g.rf.Dd();
    r();
    x && x();
  }
  function k() {
    A.reject = !0;
    r();
    C && C();
  }
  var h = E.va,
    b = E.controls,
    a = E.V,
    g = a.view,
    d = a.la,
    f = a.control,
    c = E.ba.xa,
    z = E.Ma,
    A = (g.Go = {});
  A.ha = v;
  A.na = function (a, b) {
    A.ua || v();
    x = a;
    C = b;
    u.na();
    n.s(!1).M("change");
    return A;
  };
  A.oa = r;
  var m = c.eI,
    u,
    q,
    w,
    p,
    n,
    x,
    C;
})();
(function () {
  function v() {
    if (f.ua) return f;
    z = d(h.page.Text)
      .Text(g.LS)
      .b({
        position: "absolute",
        top: "10px",
        left: "10px",
        right: "10px",
        bottom: "64px",
        "overflow-y": "scroll",
        border: "1px solid #ABADB3",
        background: "#ffffff",
        padding: "5px",
        "white-space": "normal",
      });
    u = d(h.input.pa)
      .b({ position: "absolute", left: "10px", bottom: "44px" })
      .o("high-risk-accept")
      .i("change", l);
    var a = d(h.page.I, "high-risk-accept")
      .Text(g.OS)
      .b({ position: "absolute", left: "28px", bottom: "44px" });
    A = d(h.input.Ua)
      .Text(g.MS)
      .$j("id", "high-risk-ok")
      .b({
        position: "absolute",
        bottom: "10px",
        right: "96px",
        width: "80px",
      })
      .i("click", e);
    m = d(h.input.Ua)
      .$j("id", "high-risk-cancel")
      .Text(g.KS)
      .b({ position: "absolute", bottom: "10px", right: "10px", width: "80px" })
      .i("click", e);
    c = d(h.page.Window, { title: g.NS, width: 490, height: 340 })
      .Uc(k.body)
      .c(z)
      .c(u)
      .c(a)
      .c(A)
      .c(m)
      .i("close", e)
      .oa();
    f.ua = !0;
    return f;
  }
  function r() {
    f.ua || v();
    c.oa();
    return f;
  }
  function l() {
    A.g(!u.s());
  }
  function e() {
    var b = "high-risk-ok" === this.$j("id");
    a.H.mJ(b);
    r();
    q && q(b);
  }
  var k = E.va,
    h = E.controls,
    b = E.V,
    a = b.control,
    g = E.ba.xa,
    d = E.Ma,
    f = (b.view.AT = {});
  f.ha = v;
  f.na = function (a) {
    f.ua || v();
    q = a;
    c.na();
    u.s(!1).M("change");
    return f;
  };
  f.oa = r;
  var c, z, A, m, u, q;
})();
(function () {
  function v() {
    if (A.ua) return A;
    q = z(b.page.Text)
      .Text(m.split("%COMPANY%").join(d.H.pr || "Unknown company"))
      .b({
        position: "absolute",
        top: "10px",
        left: "10px",
        right: "10px",
        bottom: "44px",
        "overflow-y": "scroll",
        border: "1px solid #ABADB3",
        background: "#ffffff",
        padding: "5px",
        "white-space": "normal",
      });
    n = z(b.input.pa)
      .b({ position: "absolute", left: "10px", bottom: "20px" })
      .o("one-click-accept")
      .i("change", l);
    var a = z(b.page.I, "one-click-accept")
      .Text(c.fI)
      .b({ position: "absolute", left: "28px", bottom: "20px" });
    w = z(b.input.Ua)
      .Text(c.gI)
      .b({ position: "absolute", bottom: "10px", right: "96px", width: "80px" })
      .i("click", e);
    p = z(b.input.Ua)
      .Text(c.dI)
      .b({ position: "absolute", bottom: "10px", right: "10px", width: "80px" })
      .i("click", k);
    u = z(b.page.Window, { title: c.cI, width: 490, height: 340 })
      .Uc(h.body)
      .c(q)
      .c(n)
      .c(a)
      .c(w)
      .c(p)
      .i("close", k)
      .oa();
    A.ua = !0;
    return A;
  }
  function r() {
    A.ua || v();
    u.oa();
    return A;
  }
  function l() {
    w.g(!n.s());
  }
  function e() {
    f.H.HB(!0);
    g.rf.Dd();
    r();
    x && x();
  }
  function k() {
    A.reject = !0;
    r();
    C && C();
  }
  var h = E.va,
    b = E.controls,
    a = E.V,
    g = a.view,
    d = a.la,
    f = a.control,
    c = E.ba.xa,
    z = E.Ma,
    A = (g.Go = {});
  A.ha = v;
  A.na = function (a, b) {
    A.ua || v();
    x = a;
    C = b;
    u.na();
    n.s(!1).M("change");
    return A;
  };
  A.oa = r;
  var m = c.eI,
    u,
    q,
    w,
    p,
    n,
    x,
    C;
})();
(function () {
  function v() {
    if (aa.ua) return aa;
    a: {
      var a = window.location.search,
        b;
      if (a && 1 < a.length && (a = a.substr(1)))
        for (var a = a.split("&"), c = 0, d = a.length; c < d; c++)
          if ((b = a[c]))
            if (
              ((b = b.split("=")),
              b.length && "demo_all_servers" == b[0] && "1" == b[1])
            ) {
              Ya = !0;
              break a;
            }
      Ya = !1;
    }
    Ja = V.Bb.Ww;
    Va = V.Wc ? 5 : 4;
    a: {
      if ((a = window.location.search) && 1 < a.length && (a = a.substr(1)))
        for (a = a.split("&"), c = 0, d = a.length; c < d; c++)
          if ((b = a[c]))
            if (
              ((b = b.split("=")),
              b.length && "demo_show_phone" == b[0] && "1" == b[1])
            ) {
              ua = !0;
              break a;
            }
      ua = !1;
    }
    ga = S(P.page.Text).b({
      position: "absolute",
      top: "0",
      left: "0",
      right: "0",
      height: "60px",
      background: "#ffffff",
      "border-bottom": "1px solid #A0A0A0",
    });
    a = {
      position: "absolute",
      width: "96px",
      "text-align": "right",
      "margin-top": "5px",
    };
    b = { position: "absolute", left: "100px", right: "100px" };
    var c = {
        position: "absolute",
        width: "72px",
        bottom: "10px",
        right: "10px",
      },
      d = { position: "absolute", left: "0", right: "0" },
      e = { position: "absolute", left: "100px", right: "100px" },
      f = 80;
    Ca = S(P.page.I, "account-servers")
      .Text(H.$F + ":")
      .b(a)
      .b({ top: f + "px" });
    xa = S(P.input.of)
      .de([
        {
          label: "MetaTrader 5",
          value: "5",
        },
        { label: "MetaTrader 4", value: "4" },
      ])
      .f(String(Va))
      .g(!Ja)
      .b(b)
      .b({ top: f + "px", width: "100px" })
      .i("change", p);
    ja = S(P.input.of)
      .o("account-servers")
      .b(b)
      .b({ top: f + "px", width: "234px", "margin-left": "104px" })
      .h(!Ya)
      .i("change", C);
    za = S(P.input.Text)
      .zx()
      .gx()
      .o("account-servers")
      .f("MetaQuotes-Demo")
      .b(b)
      .b({ top: f + "px", width: "234px", "margin-left": "104px" })
      .h(Ya)
      .i("select", O)
      .i("keydown", F)
      .i("blur", I)
      .i("focus", G);
    Ma = S(P.page.Text)
      .Text('<img src="/trade/res/i/terminal/ajax-loader.gif"/>')
      .b(b)
      .b({
        top: f + 3 + "px",
        left: "442px",
      })
      .Fe(H.yQ)
      .h(!1);
    f += 30;
    Qa = S(P.page.Text)
      .b(b)
      .b({ top: f + "px" })
      .h(!1);
    U = S(P.page.I, "account-first-name")
      .Text(H.uQ + ":")
      .b(a)
      .b({ top: f + "px" });
    ba = S(P.input.Text)
      .Nq(H.YF)
      .o("account-first-name")
      .f("")
      .b(b)
      .b({ top: f + "px", width: "220px" })
      .i("change", w);
    f += 30;
    da = S(P.page.I, "account-second-name")
      .Text(H.FQ + ":")
      .b(a)
      .b({ top: f + "px" });
    ca = S(P.input.Text)
      .Nq(H.YF)
      .o("account-second-name")
      .f("")
      .b(b)
      .b({ top: f + "px", width: "220px" })
      .i("change", w);
    f += 30;
    ka = S(P.page.I, "account-email")
      .Text(H.tQ + ":")
      .b(a)
      .b({
        top: f + "px",
      });
    oa = S(P.input.Text)
      .Nq("name@company.com")
      .o("account-email")
      .f("")
      .b(b)
      .b({ width: "220px", top: f + "px" })
      .i("change", w);
    ra = S(P.input.Text)
      .Nq(H.WF)
      .f("")
      .b(b)
      .b({ top: f + "px", width: "113px", "margin-left": "225px" })
      .i("change", w);
    f += 30;
    na = S(P.page.I, "account-phone")
      .Text("Phone:")
      .b(a)
      .b({ top: f + "px" });
    sa = S(P.input.Text, "combobox")
      .o("account-phone")
      .u(K.zu.pS())
      .f("")
      .b(b)
      .b({ top: f + "px", width: "75px" })
      .i("change", w);
    va = S(P.input.Text)
      .f("")
      .b(b)
      .b({ top: f + "px", width: "140px", "margin-left": "80px" })
      .i("change", w);
    ma = S(P.input.Text)
      .Nq(H.WF)
      .f("")
      .b(b)
      .b({ top: f + "px", width: "113px", "margin-left": "225px" })
      .i("change", w);
    f += 34;
    La = S(P.input.pa)
      .o("account-hedge")
      .g(!0)
      .b(b)
      .b("right", "auto")
      .b({ top: f + "px" })
      .i("change", n);
    la = S(P.page.I, "account-hedge")
      .Text(H.IQ)
      .b(b)
      .b({ top: f - 1 + "px", "margin-left": "17px" });
    f += 20;
    Fa = S(P.page.I, "account-type")
      .Text(H.VF + ":")
      .b(a)
      .b({ top: f + "px" });
    ia = S(P.input.of)
      .o("account-type")
      .b(b)
      .b({ top: f + "px", width: "338px" })
      .i("change", w)
      .i("change", x);
    f += 30;
    ya = S(P.page.I, "account-deposit")
      .Text(H.XF + ":")
      .b(a)
      .b({ top: f + "px" });
    Da = S(P.input.Text)
      .o("account-deposit")
      .u("3000 5000 10000 25000 50000 100000 500000 1000000 5000000".split(" "))
      .f("100000")
      .b(b)
      .b({ top: f + "px", width: "120px" })
      .i("change", w);
    Ba = S(P.page.Text)
      .Text("")
      .b(b)
      .b({ top: f + "px", "margin-left": "124px", "margin-top": "5px" });
    Ia = S(P.page.I, "account-leverage")
      .Text(H.xQ + ":")
      .b(a)
      .b({ top: f + "px", "margin-left": "218px" });
    Ka = S(P.input.of)
      .o("account-leverage")
      .b(b)
      .b({ top: f + "px", width: "120px", "margin-left": "218px" })
      .i("change", w);
    Pa = S(P.page.Text).b(b).b({ bottom: "104px" }).Text("");
    f += 36;
    Ha = S(P.page.Text, "account-accept")
      .b(e)
      .b({ top: f + "px" });
    f += 20;
    Ga = S(P.page.Text, "account-accept")
      .b(e)
      .b({ top: f + "px" });
    f += 26;
    Aa = S(P.input.pa)
      .o("account-accept")
      .b(b)
      .b({ bottom: "73px" })
      .b({ right: "auto" })
      .i("change", w);
    Ea = S(P.page.I, "account-accept")
      .Text(H.iQ)
      .b(b)
      .b({ bottom: "60px", "margin-left": "17px" });
    (N.eh && N.sr) ||
      ((f += 46),
      (Ua = S(P.page.Text)
        .b({
          position: "absolute",
          left: "40px",
          right: "40px",
          top: Ja ? "340px" : "316px",
          textAlign: "center",
          color: "#dd0000",
        })
        .Text(z())));
    Wa = S(P.page.Text)
      .b({
        position: "absolute",
        left: "0",
        right: "0",
        height: "1px",
        background: "#ffffff",
        "border-top": "1px solid #A0A0A0",
      })
      .b({ bottom: "44px" });
    ta = S(P.input.Ua).Text(H.mQ).b(c).b({ right: "90px" }).i("click", M);
    Na = S(P.input.Ua).Text(H.lQ).b(c).b({ right: "90px" }).i("click", D);
    "de" == K.xa.Db() && ta.b({ width: "120px" });
    Sa = S(P.input.Ua).Text(H.kQ).b(c).i("click", y);
    wa = S(P.page.Text).b(d).b({ top: "78px" });
    pa = S(P.page.Text).b(d).b({ top: "168px" });
    a = f + 60;
    (N.eh && N.sr) || (a += 44);
    X = S(P.page.Window, { title: H.HQ, width: 540, height: a + 100, Qk: !0 })
      .i("close", q)
      .Uc(Q.body)
      .c(ga)
      .c(xa)
      .c(ja)
      .c(za)
      .c(Ca)
      .c(Ma)
      .c(U)
      .c(ba)
      .c(da)
      .c(ca)
      .c(ka)
      .c(oa)
      .c(ra)
      .c(na)
      .c(sa)
      .c(va)
      .c(ma)
      .c(la)
      .c(La)
      .c(Fa)
      .c(ia)
      .c(ya)
      .c(Da)
      .c(Ba)
      .c(Ia)
      .c(Ka)
      .c(Ha)
      .c(Ga)
      .c(Ea)
      .c(Ea)
      .c(Aa)
      .c(Pa)
      .c(Qa)
      .c(wa)
      .c(pa)
      .c(Wa)
      .c(ta)
      .c(Sa)
      .c(Na)
      .K("at-open-account-form")
      .oa();
    Ua && X.c(Ua);
    Za = { mt4: [], mt5: [] };
    fb = { 4: {}, 5: {} };
    cb = { 4: {}, 5: {} };
    Oa = { 4: {}, 5: {} };
    Ta = { 4: {}, 5: {} };
    Ra = { 4: {}, 5: {} };
    bb = { 4: {}, 5: {} };
    Ya &&
      K.du.get(
        "https://trade.mql5.com/trade/suggest",
        { all: 1 },
        { Ew: L, onerror: B }
      );
    aa.ua = !0;
    return aa;
  }
  function r(a) {
    void 0 === a && (a = !0);
    aa.ua || v();
    aa.state = "form";
    ga.Text(
      [
        '<div style="padding:14px 14px 0 14px;font-weight:bold;font-size:11px;">',
        H.sQ,
        '</div><div style="padding:2px 24px 0 24px;font-size:11px;">',
        H.AQ,
        "</div>",
      ].join("")
    );
    wa.h(!1);
    pa.h(!1);
    U.h(!0);
    ba.h(!0).g(!1);
    da.h(!0);
    ca.h(!0).g(!1);
    ka.h(!0);
    oa.h(!0).g(!1);
    ra.h(!1);
    na.h(ua);
    sa.h(ua).g(!1);
    va.h(ua).g(!1);
    ma.h(!1);
    la.h(!0);
    La.h(!0).g(!0);
    var b = g();
    Fa.h(!0);
    ia.h(!0)
      .g(!1)
      .de(b)
      .f((b && b[0] && b[0].value) || "");
    b = d();
    Ia.h(!0);
    Ka.h(!0)
      .g(!1)
      .de(b)
      .f((b && b[0]) || "");
    Ca.h(!0);
    ja.h(!Ya).g(!1);
    za.h(Ya).g(!1).K("invalid", !0).Fe("");
    Ma.h(!1);
    xa.h(!0);
    Ha.h(!1);
    Ga.h(!1);
    Ea.h(!0);
    Aa.h(!0);
    Qa.h(!1);
    ya.h(!0);
    Da.h(!0).g(!1);
    Ba.h(!0);
    Na.h(!1);
    ta.h(!0);
    Sa.g(!1);
    !aa.Cm && a && X.na();
    if (a) {
      ea.fc.Xt && ba.f(ea.fc.Xt);
      ea.fc.Yt && ca.f(ea.fc.Yt);
      ea.fc.Wt && oa.f(ea.fc.Wt);
      a: {
        if (
          N.Pd &&
          (b = window.localStorage.demo) &&
          b.indexOf &&
          0 === b.indexOf("{") &&
          (b = JSON.parse(b))
        )
          break a;
        b = null;
      }
      if (b) {
        b.first_name && ba.f(b.first_name);
        b.second_name && ca.f(b.second_name);
        b.email && oa.f(b.email);
        b.deposit && Da.f(b.deposit);
        var c = b.leverage,
          e;
        if ((e = c))
          a: {
            e = Ka.de();
            var f;
            if (e)
              for (var h = 0, k = e.length; h < k; h++)
                if (((f = e[h]), f.value == c)) {
                  e = !0;
                  break a;
                }
            e = !1;
          }
        e && Ka.f(c);
        (c = b.phone_code) && sa.f(c);
        (b = b.phone_number) && va.f(b);
      }
      (N.eh && N.sr) ||
        (ja.g(!0),
        oa.g(!0),
        sa.g(!0),
        va.g(!0),
        La.g(!0),
        Da.g(!0),
        ia.g(!0),
        Ka.g(!0),
        ba.g(!0),
        ca.g(!0),
        ta.g(!0),
        Aa.g(!0),
        X.b("height", "450px"));
      p();
    }
    w();
    a && ba.jb();
    return aa;
  }
  function l(a, b, c, e, f) {
    var h = xa.f();
    fb[h][a] = b;
    cb[h][a] = c;
    Oa[h][a] = e;
    Ta[h][a] = f;
    a = g();
    ia.de(a).f((a && a[0] && a[0].value) || "");
    Ba.Text("");
    a = d();
    Ka.de(a).f((a && a[0] && a[0].value) || "");
    f && !sa.f() && sa.f(K.zu.oS(f.country));
    La.s(!1);
  }
  function e(a, b, c) {
    Ma.h(!1);
    var d = xa.f();
    Ra[d][a] = b;
    if ((bb[d][a] = c))
      ba.h(!1),
        ca.h(!1),
        oa.h(!1),
        sa.h(!1),
        va.h(!1),
        La.h(!1),
        ia.h(!1),
        Da.h(!1),
        Ka.h(!1),
        U.h(!1),
        da.h(!1),
        ka.h(!1),
        la.h(!1),
        na.h(!1),
        Fa.h(!1),
        ya.h(!1),
        Ia.h(!1),
        Ba.h(!1),
        Ha.h(!1),
        Ga.h(!1),
        Aa.h(!1),
        Ea.h(!1),
        (b = Oa[xa.f()][a] || ""),
        Qa.Text(H.jQ.split("%COMPANY%").join(b)).h(!0);
    else if (b && b.length) {
      for (var e = (d = !0), f = !1, g = 0, h = b.length; g < h; g++)
        if ((c = b[g]))
          2 == c.cj && ((f = !0), (e = !1)), 2 != c.cj && (d = !1);
      La.s(f).g(d || e);
      n();
    }
    w();
    if (aa.Cm) {
      c = xa.f();
      if (
        (b = Ra[c][a]) &&
        b.length &&
        (a = Ta[c][a]) &&
        (c = K.zu.mS(a.country)) &&
        -1 < ["EUR", "CHF", "JPY", "GBP"].indexOf(c)
      )
        for (d = La.s(), e = 0, f = b.length; e < f; e++)
          if ((a = b[e]) && a.currency.toUpperCase() == c) {
            if ((d && 2 != a.cj) || (!d && 2 == a.cj)) La.s(!d), n();
            ia.f(a.vf);
            break;
          }
      ta.g() || M();
    }
  }
  function k() {
    aa.ua || v();
    y();
    return aa;
  }
  function h() {
    var a = za.f();
    if (a) {
      var b = za.u();
      if (b)
        for (var c = 0, d = b.length; c < d; c++)
          if (a == b[c]) {
            C();
            za.K("invalid", !0).Fe("");
            w();
            return;
          }
    }
    "MetaQuotes-Demo" != a &&
      (za.K("invalid"),
      a &&
        (za
          .K("invalid")
          .Fe(
            "Web Terminal is not supported by this MetaTrader Server. Please contact your broker to update server."
          ),
        ea.U.Wb(
          ea.U.Ab.ERROR,
          ea.U.types.Ak,
          "Web Terminal is not supported by this MetaTrader Server. Please contact your broker to update server.",
          !1,
          !0
        )));
    w();
  }
  function b(a) {
    var b = a.vf,
      c;
    a: {
      c = b;
      var d = Ra[xa.f()][A()];
      if (d)
        for (var e, f = 0, g = d.length; f < g; f++)
          if ((e = d[f]) && e.vf == c) {
            c = e;
            break a;
          }
      c = null;
    }
    c && (b = c.sE);
    c = [];
    c.push(
      '<table cellpadding="0" cellspacing="0" style="width:100%;"><tbody>'
    );
    c.push(
      '<tr><td style="width:96px;text-align:right;font-size:11px;">',
      H.BQ,
      ':</td><td style="padding-left:4px;font-size:11px;" class="at-account-name">',
      fa([a.qE, a.GE].join(" ")),
      "</td></tr>"
    );
    c.push(
      '<tr><td style="height:6px;"></td><td style="height:6px;"></td></tr>'
    );
    c.push(
      '<tr><td style="width:96px;text-align:right;font-size:11px;">',
      H.VF,
      ':</td><td style="padding-left:4px;font-size:11px;" class="at-account-type">',
      fa(a.Ze ? b : b.split("demo").join("")),
      " (1:",
      fa(a.Dl),
      ")</td></tr>"
    );
    c.push(
      '<tr><td style="height:6px;"></td><td style="height:6px;"></td></tr>'
    );
    c.push(
      '<tr><td style="width:96px;text-align:right;font-size:11px;">',
      H.XF,
      ':</td><td style="padding-left:4px;font-size:11px;" class="at-account-deposit">',
      fa(a.Mk),
      "</td></tr>"
    );
    c.push(
      '<tr><td style="height:6px;"></td><td style="height:6px;"></td></tr>'
    );
    c.push(
      '<tr><td style="width:96px;text-align:right;font-size:11px;">',
      H.$F,
      ':</td><td style="padding-left:4px;font-size:11px;" class="at-account-server">',
      fa(a.nf),
      " (",
      4 == a.version ? "MetaTrader 4" : "MetaTrader 5",
      ")</td></tr>"
    );
    c.push("</tbody></table>");
    return c.join("");
  }
  function a(a, b) {
    var c = [],
      d;
    if (0 != a.Ca)
      return (
        (d =
          5 == b.version ? (a.J3 ? H.oQ : 1025 == a.Ca ? H.GQ : H.ZF) : H.ZF),
        (d = d.split("%COMPANY%").join(Oa[b.version][b.nf] || "")),
        c.push(
          '<table cellpadding="0" cellspacing="0" style="width:100%;"><tbody>'
        ),
        c.push(
          '<tr><td style="width:96px;">&nbsp;</td><td style="padding-left:4px;padding-right:20px;font-size:11px;color: #cc0000;">',
          d,
          "</td></tr>"
        ),
        c.push("</tbody></table>"),
        c.join("")
      );
    c.push(
      '<table cellpadding="0" cellspacing="0" style="width:100%;"><tbody>'
    );
    c.push(
      '<tr><td style="width:96px;text-align:right;font-size:11px;">',
      H.zQ,
      ':</td><td class="selected-enabled at-account-login" style="padding-left:4px;font-size:11px;font-weight:bold;">',
      fa(a.ga),
      "</td></tr>"
    );
    c.push(
      '<tr><td style="height:6px;"></td><td style="height:6px;"></td></tr>'
    );
    c.push(
      '<tr><td style="width:96px;text-align:right;font-size:11px;">',
      H.CQ,
      ':</td><td class="selected-enabled at-account-password" style="padding-left:4px;font-size:11px;font-weight:bold;">',
      fa(a.mf),
      "</td></tr>"
    );
    c.push(
      '<tr><td style="height:6px;"></td><td style="height:6px;"></td></tr>'
    );
    c.push(
      '<tr><td style="width:96px;text-align:right;font-size:11px;">',
      H.wQ,
      ':</td><td style="padding-left:4px;font-size:11px;"><b class="selected-enabled at-account-investor" style="font-size:11px;">',
      fa(a.sM),
      "</b>&nbsp;&nbsp;&nbsp;(",
      H.DQ,
      ")</td></tr>"
    );
    c.push(
      '<tr><td style="height:6px;"></td><td style="height:6px;"></td></tr>'
    );
    c.push(
      '<tr><td style="width:96px;text-align:right;font-size:11px;">&nbsp;</td><td style="padding-left:4px;font-size:11px;">',
      H.vQ,
      "</td></tr>"
    );
    c.push("</tbody></table>");
    return c.join("");
  }
  function g() {
    var a = [],
      b = A(),
      c = Ra[xa.f()][b];
    if (c && c.length) {
      for (var d = La.s(), e, f = 0, g = c.length; f < g; f++)
        if ((b = c[f])) {
          if (void 0 !== b.cj) {
            if (d && 2 != b.cj) continue;
            if (!d && 2 == b.cj) continue;
          }
          b.sE.trim()
            ? (e = b.sE)
            : ((e = b.vf), (e = e.split("\\")), (e = e[e.length - 1]));
          a.push({ value: b.vf, label: e });
        }
      return a;
    }
    if ((c = fb[xa.f()][b]) && c.length) {
      f = 0;
      for (g = c.length; f < g; f++)
        (b = c[f]) && a.push({ value: b, label: b });
      return a;
    }
    a.push({ value: "forex", label: "forex" });
    return a;
  }
  function d() {
    var a = [],
      b = A();
    if ((b = cb[xa.f()][b]))
      for (var c = 0, d = b.length; c < d; c++)
        (lev = b[c]) && a.push({ value: lev, label: lev });
    a.length || a.push({ value: 100, label: "100" });
    return a;
  }
  function f() {
    var a = [],
      b = parseInt(xa.f(), 10),
      c = ha.$c.fj,
      d;
    if (
      c &&
      c.length &&
      (c = c.filter(function (a) {
        return !!a.demo;
      }))
    )
      for (var e = 0, f = c.length; e < f; e++)
        (d = c[e]) &&
          d.mt == b &&
          (d = d.name) &&
          a.push({ value: d, label: d });
    a.length || a.push({ value: "MetaQuotes-Demo", label: "MetaQuotes-Demo" });
    return a;
  }
  function c() {
    var a = xa.f(),
      b = A(),
      c = {};
    c.nf = b;
    c.version = a;
    c.qE = ba.f();
    c.GE = ca.f();
    c.rr = oa.f();
    var d = parseInt(Da.f(), 10);
    isNaN(d) && (d = 1e5);
    var e = parseInt(Ka.f(), 10);
    isNaN(e) && (e = 100);
    c.Mk = Math.min(d || 0, 2147483647);
    c.Dl = e;
    c.qr = "";
    c.kE = "";
    c.XM = "";
    c.iN = "";
    c.RL = "";
    c.It = "";
    aa.Cm && (c.lr = !0);
    sa.h() && (c.It = sa.f() + va.f());
    ma.h() && (c.u4 = parseInt(ma.f(), 10));
    ra.h() && (c.N3 = parseInt(ra.f(), 10));
    if ((d = Ta[a][b]))
      d.country && (c.qr = K.zu.nS(d.country)), d.city && (c.kE = d.city);
    d = ia.f();
    if ((b = Ra[a][b]) && b.length)
      for (var e = 0, f = b.length; e < f; e++)
        if (b[e] && b[e].vf == d) return (c.vf = d), (c.Ze = 1), c;
    c.vf = d;
    4 == a && (c.vf = ["demo", d].join(""));
    return c;
  }
  function z() {
    var a = H.BH;
    N.Rj || (a = a.split("%TECH%").join(H.zH));
    N.eh || (a = a.split("%TECH%").join(H.AH));
    N.sr || (a = a.split("%TECH%").join(H.CH));
    return a;
  }
  function A() {
    return Ya ? za.f() : ja.f();
  }
  function m() {
    var a = ia.f(),
      b = Ra[xa.f()][A()];
    if (b)
      for (var c, d = 0, e = b.length; d < e; d++)
        if ((c = b[d]) && c.vf == a) return c;
  }
  function u(a) {
    var b = T.kq(a),
      c = A();
    b.type = "demo";
    b.acp = N.K3;
    b.server = c;
    b["interface"] = H.B_();
    if (5 == xa.f()) {
      var d = K.bd.so("utm_campaign") || "",
        e = K.bd.so("utm_source") || "";
      if (e || d)
        e || (e = K.bd.Uh()),
          d || (d = ""),
          (b.utm_campaign = d),
          (b.utm_source = e);
    }
    (c = Oa[xa.f()][c] || "") && (b.label = c);
    return T.xq(a, b);
  }
  function q() {
    y();
  }
  function w() {
    if (Qa.h()) ta.g(!1);
    else {
      var a = !0,
        b;
      ba.K("invalid", !0);
      ca.K("invalid", !0);
      oa.K("invalid", !0);
      Ma.h() && (a = !1);
      za.h() && Q.wg(za.Gf(), "invalid") && (a = !1);
      b = ba.f().trim();
      (b && R.uH(b)) || ((a = !1), ba.K("invalid"));
      aa.Cm ||
        ((b = ca.f().trim()),
        (b && R.uH(b)) || ((a = !1), ca.K("invalid")),
        (b = oa.f().trim()),
        (b && R.kH(b)) || ((a = !1), oa.K("invalid")),
        Aa.h() && !Aa.s() && (a = !1));
      ma.h() && ((b = ma.f()), ma.K("invalid", !!b), b || (a = !1));
      ra.h() && ((b = ra.f()), ra.K("invalid", !!b), b || (a = !1));
      (b = m()) &&
        b.Ze & 4 &&
        ((b = parseInt(sa.f(), 10)),
        sa.K("invalid", !isNaN(b)),
        isNaN(b) && (a = !1),
        (b = parseInt(va.f(), 10)),
        va.K("invalid", !isNaN(b)),
        isNaN(b) && (a = !1));
      ta.g(!a);
    }
  }
  function p() {
    La.s(!1).g(4 == xa.f());
    if (Ya)
      za.u(Za["mt" + xa.f().toString() || []]),
        arguments.length && za.f("").jb(),
        O();
    else {
      var a = f() || [];
      ja.de(a).f(a && a[0] && a[0].value);
      C();
    }
  }
  function n() {
    var a = g();
    ia.de(a).f(a && a[0] && a[0].value);
    x();
  }
  function x() {
    (ma.h() || ra.h()) && V.fc.Xp();
    Ba.Text("");
    var a = m();
    if (a) {
      a.currency ? Ba.Text(a.currency) : Ba.Text("");
      a.eM ? Da.f(a.eM) : Da.f("100000");
      a.fM ? Ka.f(a.fM) : Ka.f("100");
      ma.h(!1);
      ra.h(!1);
      a.Ze & 4
        ? (na.h(!0), sa.h(!0), va.h(!0))
        : ua || (na.h(!1), sa.h(!1), va.h(!1));
      Pa.Text("").h(!1);
      var b = [0, H.gF],
        c = [1, H.gF],
        d = [3, H.SN],
        e = [8, H.TN],
        f;
      f = H.Db();
      f =
        -1 < "en|ru|es|pt|zh|ar|cs|fr|it|de|el|id|jp|pl|tr".indexOf(f)
          ? f
          : "en";
      var g, h, k, l;
      if (a) {
        var a = a.SL || [],
          n;
        if (a) {
          for (var p = 0, q = a.length; p < q; p++)
            if ((n = a[p]))
              if (
                (g ||
                  (n.kw == c[0] && ((g = n.url), (h = c[1])),
                  n.kw == d[0] && ((g = n.url), (h = d[1]))),
                k || n.kw != e[0] || ((k = n.url), (l = e[1])),
                g && k)
              )
                break;
          if (!g)
            for (c = 0, d = a.length; c < d; c++)
              if (((n = a[c]), n.kw == b[0] && n.url)) {
                h = n.H3;
                g = n.url;
                break;
              }
        }
      }
      h && l
        ? (Aa.s(!1).h(!0),
          Ea.h(!0),
          Ha.h(!0).Text(
            "<a style='font-size: 11px;' href='" +
              g.split("[lang]").join(f) +
              "' target='_blank'>" +
              h +
              "</a>"
          ),
          Ga.h(!0).Text(
            "<a style='font-size: 11px;' href='" +
              k.split("[lang]").join(f) +
              "' target='_blank'>" +
              l +
              "</a>"
          ))
        : h && !l
        ? (Aa.s(!1).h(!0),
          Ea.h(!0),
          Ha.h(!1),
          Ga.h(!0).Text(
            "<a style='font-size: 11px;' href='" +
              g.split("[lang]").join(f) +
              "' target='_blank'>" +
              h +
              "</a>"
          ))
        : !h && l
        ? (Aa.s(!1).h(!0),
          Ea.h(!0),
          Ha.h(!1),
          Ga.h(!0).Text(
            "<a style='font-size: 11px;' href='" +
              k.split("[lang]").join(f) +
              "' target='_blank'>" +
              l +
              "</a>"
          ))
        : (Ha.h(!1), Ga.h(!1), Aa.s(!1).h(!0), Ea.h(!0));
    }
  }
  function C() {
    (ma.h() || ra.h()) && V.fc.Xp();
    r(!1);
    var a = A();
    if (a && !Ra[xa.f()][a]) V.fc.ha(a, xa.f()), Ma.h(!0), w();
    else {
      var b = xa.f();
      l(a, fb[b][a] || [], cb[b][a] || [], Oa[b][a] || [], Ta[b][a] || []);
      e(a, Ra[b][a] || [], bb[b][a] || "");
    }
  }
  function O() {
    (ma.h() || ra.h()) && V.fc.Xp();
    aa.VL || T.al(h, 100);
  }
  function I() {
    O();
  }
  function G() {
    za.K("invalid", !0).Fe("");
  }
  function F(a) {
    za.K("invalid", !0).Fe("");
    a && 13 === a.keyCode && za.Up();
  }
  function y() {
    aa.state = "hidden";
    aa.Cm = !1;
    aa.VL = !1;
    pa.Zv = null;
    pa.WD = null;
    pa.pt = null;
    pa.FL = null;
    pa.uL = null;
    pa.rt = null;
    pa.lL = null;
    pa.DL = null;
    pa.Sv = null;
    pa.dw = null;
    X.oa();
    V.fc.Xp();
  }
  function M() {
    var a = A(),
      b = xa.f();
    if ((a = bb[b][a]))
      aa.Cm ? (X.na(), (aa.Cm = !1)) : (window.open(u(a), "_blank"), k());
    else {
      aa.state = "wait";
      ga.Text(
        [
          '<div style="padding:14px 14px 0 14px;font-weight:bold;font-size:11px;">',
          H.EQ,
          '</div><div style="padding:2px 24px 0 24px;font-size:11px;">',
          H.JQ,
          "</div>",
        ].join("")
      );
      oa.g(!0);
      sa.g(!0);
      va.g(!0);
      Da.g(!0);
      ia.g(!0);
      Ka.g(!0);
      ja.g(!0);
      za.g(!0);
      La.g(!0);
      ma.h() && ma.g(!0);
      ra.h() && ra.g(!0);
      ta.g(!0);
      Sa.g(!0);
      var a = oa.f(),
        b = Da.f(),
        d = Ka.f(),
        e = sa.f(),
        f = va.f();
      ba.f();
      ca.f();
      if (N.Pd) {
        var g = {};
        g.email = a;
        g.deposit = b;
        g.leverage = d;
        g.phone_code = e;
        g.phone_number = f;
        window.localStorage.demo = window.JSON.stringify(g);
      }
      (a = m()) &&
      ((a.Ze & 8 && !a.qa) || (a.Ze & 4 && !a.Yb)) &&
      !ma.h() &&
      !ra.h()
        ? V.fc.O2(c())
        : V.fc.TF(c());
    }
  }
  function D() {
    pa.rt == Va &&
      pa.dw &&
      (ea.U.Wb(
        ea.U.Ab.Za,
        ea.U.types.Kd,
        ["'", pa.dw, "': account deleted from the local browser storage"].join(
          ""
        )
      ),
      ha.$c.iJ(pa.dw, pa.pt));
    ha.$c.uN(
      pa.Zv,
      pa.pt,
      pa.WD,
      pa.FL,
      pa.uL,
      pa.rt,
      pa.lL,
      pa.DL,
      pa.Sv,
      pa.d3,
      pa.rt != Va
        ? function () {
            var a = window.location.href,
              b = T.kq(a);
            "no_autologin" == b.startup_mode &&
              ((b.startup_mode = null), delete b.startup_mode);
            b.version = pa.rt;
            b.login = pa.Zv;
            b.trade_server = pa.pt;
            b.referrer = K.bd.Uh();
            K.bd.Yr(function (c) {
              b.ref = c;
              window.location.href = T.xq(a, b);
            });
          }
        : function () {
            ea.Bb.Vj(
              {
                ga: pa.Zv,
                mf: pa.WD,
                nf: pa.pt,
              },
              !1
            ).Um();
            aa.Cm || ea.Bb.na();
            y();
          }
    );
  }
  function L(a) {
    Za = window.JSON.parse(a) || {};
    p();
  }
  function B() {
    Za = { mt4: ["MetaQuotes-Demo"], mt5: ["MetaQuotes-Demo"] };
    p();
  }
  var Q = E.va,
    N = E.Qa,
    K = E.ba,
    P = E.controls,
    T = E.ma,
    R = E.gN,
    H = K.xa,
    S = E.Ma,
    Z = E.V,
    W = E.Un,
    Y = Z.control.Wc ? 5 : 4,
    V = 5 == Y ? Z.control : W.control,
    ea = 5 == Y ? Z.view : W.view,
    ha = 5 == Y ? Z.la : W.la,
    fa = T.Kc,
    aa = (ea.fc = {});
  aa.ha = v;
  aa.Ps = r;
  aa.Qs = function (c, d) {
    aa.ua || v();
    aa.state = "result";
    U.h(!1);
    ba.h(!1);
    da.h(!1);
    ca.h(!1);
    ka.h(!1);
    oa.h(!1);
    ra.h(!1);
    na.h(!1);
    sa.h(!1);
    va.h(!1);
    ma.h(!1);
    Fa.h(!1);
    ia.h(!1);
    Ka.h(!1);
    Ia.h(!1);
    Ca.h(!1);
    ja.h(!1);
    za.h(!1);
    xa.h(!1);
    La.h(!1);
    la.h(!1);
    ya.h(!1);
    Da.h(!1);
    Ba.h(!1);
    Ea.h(!1);
    Aa.h(!1);
    Ha.h(!1);
    Ga.h(!1);
    Pa.h(!1);
    ta.h(!1);
    wa.h(!0).Text(b(d));
    pa.h(!0).Text(a(c, d));
    Na.h(0 == c.Ca);
    Sa.g(!1);
    pa.Zv = c.ga;
    pa.WD = c.mf;
    pa.pt = d.nf;
    pa.FL = d.name;
    pa.uL = d.rr;
    pa.rt = d.version;
    pa.lL = d.Mk;
    pa.DL = d.Dl;
    pa.Sv = d.vf;
    pa.d3 = d.Ze;
    pa.dw = d.mr;
    Na.jb();
    aa.Cm && Na.h() && D();
    return aa;
  };
  aa.rD = l;
  aa.J_ = e;
  aa.H_ = function (a, b) {
    Sa.g(!1);
    ta.g(!1);
    ja.g(!1);
    za.g(!1);
    ba.g(!1);
    ca.g(!1);
    La.g(!1);
    ia.g(!1);
    Da.g(!1);
    Ka.g(!1);
    if (!1 === a)
      ma.h(!1), ra.h(!1), sa.g(!1), va.g(!1), oa.g(!1), Pa.Text(H.nQ).h(!0);
    else {
      var c = m();
      c &&
        ((c.qa = !b.rr),
        (c.Yb = !b.It),
        c.qa && c.Yb
          ? M()
          : (c.Ze & 4 && !c.Yb && ma.h(!0).g(!1).f(""),
            c.Ze & 8 && !c.qa && ra.h(!0).g(!1).f(""),
            w(),
            (c = c.Ze),
            Pa.Text(c & 8 && c & 4 ? H.rQ : c & 8 ? H.pQ : c & 4 ? H.qQ : "").h(
              !0
            )));
    }
  };
  aa.oa = k;
  aa.bF = function (a, b, c, d, e, f, g, h, k) {
    aa.Cm = !0;
    if (void 0 !== a && void 0 !== b) {
      aa.VL = !0;
      var l = {};
      l.nf = b;
      l.version = a;
      l.name = c;
      l.rr = d;
      l.Mk = f;
      l.Dl = g;
      l.vf = e;
      l.Ze = h;
      l.lr = !0;
      l.mr = k;
      V.fc.TF(l);
    } else aa.ua || v(), r(), ba.f() || ba.f("MetaTrader " + xa.f() + " Demo");
  };
  var X,
    ga,
    U,
    ba,
    da,
    ca,
    ka,
    oa,
    ra,
    na,
    sa,
    va,
    ma,
    Fa,
    ia,
    ya,
    Da,
    Ba,
    Ia,
    Ka,
    xa,
    Ca,
    ja,
    za,
    Ma,
    La,
    la,
    Wa,
    wa,
    pa,
    Pa,
    Ua,
    ta,
    Na,
    Sa,
    Qa,
    Aa,
    Ea,
    Ga,
    Ha,
    Ja,
    Va,
    ua,
    Ya,
    Za,
    fb,
    cb,
    Oa,
    Ta,
    Ra,
    bb;
})();
(function () {
  function v() {
    if (d.ua) return d;
    var b = g(h.page.Text)
        .Text(a.TU)
        .b({
          position: "absolute",
          top: "16px",
          left: "8px",
          right: "8px",
          "text-align": "center",
        }),
      u = g(h.page.I, "logout-confirm")
        .Text(a.UU)
        .b({ position: "absolute", left: "120px", top: "44px" }),
      q = g(h.page.Text).b({
        position: "absolute",
        bottom: "44px",
        left: "10px",
        right: "10px",
        height: "1px",
        background: "#A0A0A0",
        "border-bottom": "1px solid #FFFFFF",
      });
    A = g(h.input.pa)
      .o("logout-confirm")
      .s(!1)
      .b({ position: "absolute", left: "102px", top: "46px" });
    c = g(h.input.Ua)
      .Text(a.VU)
      .i("click", e)
      .b({
        position: "absolute",
        bottom: "10px",
        right: "50%",
        "margin-right": "4px",
        width: "80px",
      });
    z = g(h.input.Ua)
      .Text(a.SU)
      .i("click", l)
      .b({
        position: "absolute",
        bottom: "10px",
        left: "50%",
        "margin-left": "4px",
        width: "80px",
      });
    f = g(h.page.Window, { title: a.RU, width: 360, height: 150, Qk: !0 })
      .Uc(k.body)
      .c(b)
      .c(u)
      .c(q)
      .c(A)
      .c(c)
      .c(z)
      .oa();
    d.ua = !0;
    return d;
  }
  function r() {
    d.ua || v();
    f && f.oa();
    return d;
  }
  function l() {
    r();
  }
  function e() {
    b.control.Bb.Ql(A.s());
    r();
  }
  var k = E.va,
    h = E.controls,
    b = E.V,
    a = E.ba.xa,
    g = E.Ma,
    d = (E.V.view.$U = {});
  d.ha = v;
  d.na = function () {
    d.ua || v();
    f && f.na();
    A.s(!1);
    c.jb();
    return d;
  };
  d.oa = r;
  var f, c, z, A;
})();
(function () {
  function v() {
    if (f.ua) return f;
    var a = d(h.page.Text)
      .Text(g.BU)
      .b({
        position: "absolute",
        top: "16px",
        left: "12px",
        right: "12px",
        "text-align": "left",
      });
    z = d(h.input.Ua)
      .Text(g.AU)
      .i("click", e)
      .b({
        position: "absolute",
        bottom: "10px",
        right: "50%",
        "margin-right": "4px",
        width: "100px",
      });
    A = d(h.input.Ua)
      .Text(g.zU)
      .i("click", l)
      .b({
        position: "absolute",
        bottom: "10px",
        left: "50%",
        "margin-left": "4px",
        width: "100px",
      });
    var b = 160,
      q = g.Db();
    if ("de" == q || "pt" == q || "uz" == q) b += 20;
    if ("pl" == q || "id" == q || "fr" == q || "ms" == q || "uk" == q) b += 10;
    c = d(h.page.Window, { title: g.CU, width: 380, height: b, Qk: !0 })
      .Uc(k.body)
      .c(a)
      .c(z)
      .c(A)
      .oa();
    f.ua = !0;
    return f;
  }
  function r() {
    f.ua || v();
    c && c.oa();
    return f;
  }
  function l() {
    r();
  }
  function e() {
    r();
    var c = window.location.href,
      d = b.kq(c);
    "no_autologin" == d.startup_mode &&
      ((d.startup_mode = null), delete d.startup_mode);
    d.referrer = a.bd.Uh();
    a.bd.Yr(function (a) {
      d.ref = a;
      window.location.href = b.xq(c, d);
    });
  }
  var k = E.va,
    h = E.controls,
    b = E.ma,
    a = E.ba,
    g = E.ba.xa,
    d = E.Ma,
    f = (E.V.view.xa = {});
  f.ha = v;
  f.na = function () {
    f.ua || v();
    c && c.na();
    setTimeout(function () {
      z.jb();
    }, 100);
    return f;
  };
  f.oa = r;
  var c, z, A;
})();
(function () {
  function v() {
    if (!na.ua) {
      var b = {
          position: "absolute",
          color: "#666",
          "margin-left": "26px",
          "margin-bottom": ea.Sn ? "1px" : ea.wf ? "2px" : "0",
        },
        c = { position: "absolute", bottom: "0" },
        d = { position: "absolute" },
        e = { margin: "3px 0 3px 3px" };
      Ma = ca(ha.input.io).Fe(da.EN).K("x16").i("click", W).b(e);
      La = ca(ha.input.io).Fe(da.JN).K("x16").i("click", Y).b(e);
      var e = ca(ha.page.ge)
          .b({ background: "#F9F9F9", "border-bottom": "1px solid #CFCFCF" })
          .c(Ma)
          .c(La),
        f = ca(ha.page.Text).b({
          position: "absolute",
          left: 0,
          right: 0,
          top: 0,
          bottom: 0,
          background: "#ffffff",
        });
      ma = ca(ha.page.Yo, g())
        .T(!0)
        .Iq(!1)
        .K("books")
        .b({ position: "absolute", left: 0, right: 0, "margin-bottom": "50px" })
        .i("select", T)
        .i("doubleclick", R);
      Fa = ca(ha.input.Number)
        .o("books-sl")
        .Y(1)
        .Fa(0)
        .mc(Number.MAX_VALUE)
        .K("book")
        .K("short-value")
        .b(d)
        .b({ left: "0", width: "33%" })
        .i("change", y)
        .i("keydown", y)
        .i("keyup", y);
      ya = ca(ha.input.Number)
        .o("books-tp")
        .Y(1)
        .Fa(0)
        .mc(Number.MAX_VALUE)
        .K("book")
        .K("short-value")
        .b(d)
        .b({ right: "0", width: "33%" })
        .i("change", M)
        .i("keydown", M)
        .i("keyup", y);
      Ba = ca(ha.input.Number)
        .o("books-vol")
        .K("book")
        .b(d)
        .b({ left: "33%", width: "34%" })
        .i("change", D)
        .i("keydown", D)
        .i("keyup", y);
      ia = ca(ha.page.Text).Text("sl").b(b).b({ left: "0" });
      Da = ca(ha.page.Text).Text("tp").b(b).b({ left: "67%" });
      Ia = ca(ha.page.Text).Text("vol").b(b).b({ left: "33%" });
      Ka = ca(ha.input.Ua)
        .Text("Sell")
        .b(c)
        .b({ left: "0", width: "33%" })
        .K("red")
        .i("click", L);
      xa = ca(ha.input.Ua)
        .Text("Buy")
        .b(c)
        .b({ width: "33%", right: "0" })
        .K("blue")
        .i("click", B);
      Ca = ca(ha.input.Ua)
        .Text(da.DN)
        .b(c)
        .b({
          left: "33%",
          width: "34%",
        })
        .K("yellow")
        .i("click", Q);
      va = ca(ha.input.of)
        .b({
          position: "absolute",
          bottom: "24px",
          left: "0",
          width: "100%",
          height: "25px",
        })
        .i("change", N);
      za = ca(ha.page.Wj).b({ "z-index": 15010 }).vc(q()).i("select", H);
      ja = ca(ha.page.ge)
        .Wj(za)
        .c(f)
        .c(ma)
        .b({
          position: "absolute",
          left: "1px",
          right: "1px",
          top: "36px",
          bottom: "50px",
        });
      sa = ca(ha.page.Window, { title: "", width: 320, height: 600, Qk: !1 })
        .b({ "z-index": "14999" })
        .Uc(V.body)
        .c(e)
        .c(ja)
        .c(va)
        .c(Fa)
        .c(ia)
        .c(ya)
        .c(Da)
        .c(Ba)
        .c(Ia)
        .c(Ka)
        .c(xa)
        .c(Ca)
        .i("close", I)
        .i("move", G)
        .i("doubleclick", F)
        .oa();
      if ((b = ma && ma.Gf())) fa.i(b, "mousedown", K), fa.i(b, "mouseup", P);
      ga.B.Vb(
        "block symbols_table_columns market_watch_width books_width toolbox_height",
        S
      );
      ga.B.Vb("books_table_config", Z);
      b = aa.rb;
      b.Ke(b.mb.XH, O);
      b.Ke(b.mb.gv, O);
      b.Ke(b.mb.TH, O);
      fa.i(V.window, "resize", a);
      na.ua = !0;
      (b = ga.B.u("books")) && ga.O.Vb(b, n, void 0, !1);
    }
  }
  function r(a) {
    na.ua || v();
    I(!0);
    la = ga.O.Ka(a);
    if (!la) return na;
    U.fd.Xi(a);
    ga.fd.tg(a, x);
    la.Yk || ga.wa.tg(a, C);
    sa.na();
    l();
    ga.B.u("books", a);
    ga.B.oj("block");
    return na;
  }
  function l() {
    sa.Fe(la.l + ", " + la.yf).Le(!!(ga.B.u("books_table_config") & oa.Sr));
    a();
    la.Yk ? ma.Og(0) : ma.Jg(0);
    var c = Long.ec(ga.B.u("trade_lots_last"));
    c.ab() && (c = la.A.mj);
    var d = la.A ? U.Wa.En(la.A.sg) : 1;
    Ba.f(U.Wa.od(c))
      .T(d)
      .Y(la.A ? U.Wa.od(la.A.sg) : 1)
      .Fa(0)
      .mc(la.A ? U.Wa.od(la.A.lj) : 1)
      .K("short-value", 4 < d);
    Ia.b({ "margin-left": 4 < d ? "5px" : "26px" });
    var c = [],
      d = ga.P.mq(la.l),
      f;
    if (d)
      for (var g = 0, h = d.length; g < h; g++)
        (f = d[g]) && c.push({ value: f.ka, label: f.gk() });
    va.de(c)
      .f((c && c[0] && c[0].value) || null)
      .h(1 < c.length);
    Ca.g(!c.length).K("yellow", !c.length).K("empty", c.length);
    Fa.b({ top: "" });
    ya.b({ top: "" });
    c = 2 > c.length;
    Fa.b({ bottom: c ? "24px" : "49px" });
    ya.b({ bottom: c ? "24px" : "49px" });
    Ba.b({ bottom: c ? "24px" : "49px" });
    ia.b({ bottom: c ? "27px" : "52px" });
    Da.b({ bottom: c ? "27px" : "52px" });
    Ia.b({ bottom: c ? "27px" : "52px" });
    ja.b({ bottom: c ? "46px" : "71px" });
    e();
    c = !U.P.ih() || !la.hl();
    Ka.g(c).K("red", c).K("empty", !c);
    xa.g(c).K("blue", c).K("empty", !c);
    Fa.g(c);
    ya.g(c);
    Ba.g(c);
    c && Ca.g(!0).K("yellow", !0).K("empty");
    k();
    b();
  }
  function e() {
    pa = ga.P.fg(va.f());
    Pa = ga.P.Gu(la.l);
  }
  function k() {
    if (la && la.A) {
      var a = X.data.bm,
        b = Math.pow(10, la.j),
        c,
        e,
        f = [],
        g = Wa || 10;
      c = !la.Yk;
      var h;
      h = 0 < la.Ta ? (la.Ta * b).normalize(0) : (la.Fb * b).normalize(0);
      if (c) {
        if ((c = ga.wa.u(la.l))) {
          var k,
            l,
            n = (c.Xe * b).normalize(0),
            p = (c.Ye * b).normalize(0);
          c = n;
          0 < la.A.Ah &&
            ((c = (p + h * (la.A.Ah - 1)).normalize(0)), c < n && (c = n));
          e = {};
          e.m = Long.Ga.La();
          e.ia = n;
          e.Rb = a.If;
          f.push(d(e));
          if ((e = f[f.length - 1]))
            (e.cells[0].className += " sep"),
              (e.cells[1].className += " sep"),
              (e.cells[2].className += " sep");
          pa &&
            pa.m.lf(Long.Ga) &&
            (pa.Mb &&
              ((k = (pa.Mb * b).normalize(0)),
              k > n &&
                k < c + h &&
                ((e = {}),
                (e.m = Long.Ga.La()),
                (e.ia = k),
                (e.Rb = a.If),
                f.splice(0, 0, d(e)))),
            pa.Qb &&
              ((k = (pa.Qb * b).normalize(0)),
              k > n &&
                k < c + h &&
                ((e = {}),
                (e.m = Long.Ga.La()),
                (e.ia = k),
                (e.Rb = a.If),
                f.splice(0, 0, d(e)))));
          k = 0;
          for (var q = Pa.length; k < q; k++)
            if ((e = Pa[k]))
              (l = (e.N * b).normalize(0)),
                l > n &&
                  l < c + h &&
                  ((e = {}),
                  (e.m = Long.Ga.La()),
                  (e.ia = l),
                  (e.Rb = a.If),
                  f.length < g && f.splice(0, 0, d(e)));
          for (; f.length < g; )
            (e = {}),
              (e.m = Long.Ga.La()),
              (e.ia = (c += h).normalize(0)),
              (e.Rb = a.If),
              f.splice(0, 0, d(e));
          c = p;
          0 < la.A.Ah &&
            ((c = n),
            c > (h * (la.A.Ah - 1)).normalize(0) &&
              (c = (c - h * (la.A.Ah - 1)).normalize(0)),
            c > p && (c = p));
          e = {};
          e.m = Long.Ga.La();
          e.ia = p;
          e.Rb = a.Yf;
          f.push(d(e));
          pa &&
            pa.m.lf(Long.Ga) &&
            (pa.Mb &&
              ((k = (pa.Mb * b).normalize(0)),
              k < p &&
                k > c - h &&
                ((e = {}),
                (e.m = Long.Ga.La()),
                (e.ia = k),
                (e.Rb = a.Yf),
                f.push(d(e)))),
            pa.Qb &&
              ((k = (pa.Qb * b).normalize(0)),
              k < p &&
                k > c - h &&
                ((e = {}),
                (e.m = Long.Ga.La()),
                (e.ia = k),
                (e.Rb = a.Yf),
                f.push(d(e)))));
          k = 0;
          for (q = Pa.length; k < q; k++)
            if ((e = Pa[k]))
              (l = (e.N * b).normalize(0)),
                l < p &&
                  l > c - h &&
                  ((e = {}),
                  (e.m = Long.Ga.La()),
                  (e.ia = l),
                  (e.Rb = a.Yf),
                  f.length < 2 * g && f.push(d(e)));
          for (; f.length < 2 * g; )
            (e = {}),
              (e.m = Long.Ga.La()),
              (e.ia = (c -= h).normalize(0)),
              (e.Rb = a.Yf),
              f.push(d(e));
        }
      } else if (
        (e = ga.fd.u(la.l)) &&
        e.Wk &&
        (c = e.Wk.slice()) &&
        c.length
      ) {
        b = c
          .filter(function (b) {
            return b.Rb == a.If || b.Rb == a.Zl;
          })
          .sort(u);
        n = c
          .filter(function (b) {
            return b.Rb == a.Yf || b.Rb == a.Yl;
          })
          .sort(m);
        e = ga.B.u("books_table_config");
        c = !!(e & oa.mo);
        var r = !!(e & oa.Mv),
          v = h,
          w = b[0] ? b[0].ia - h : 0,
          x = n[0] ? n[0].ia + h : 0;
        c &&
          r &&
          ((e = w - x),
          0 < e &&
            e + 2 * g > wa &&
            ((v = Math.floor(e / Math.floor(0.4 * wa))),
            v < h && (v = h),
            (g = Math.floor((wa - e / v) / 2))));
        b.length = Math.min(b.length, g);
        n.length = Math.min(n.length, g);
        l = b.reduce(function (a, b) {
          return b.m.lf(a) ? b.m.La() : a;
        }, Long.Ga);
        l = n.reduce(function (a, b) {
          return b.m.lf(a) ? b.m.La() : a;
        }, Long.Ga);
        if (c) {
          var y;
          if (b)
            for (q = k = 0; k < g; k++, q++)
              if ((c = b[q])) {
                p = c.ia;
                if (0 !== q)
                  for (y = b[q - 1].ia; p != y + h && k < g; )
                    (e = {}),
                      (e.m = Long.Ga.La()),
                      (e.ia = y += h),
                      (e.Rb = a.If),
                      f.splice(0, 0, d(e)),
                      k++;
                e = d(c, l);
                f.splice(0, 0, e);
                0 == q &&
                  ((e.cells[0].className += " sep"),
                  (e.cells[1].className += " sep"),
                  (e.cells[2].className += " sep"));
              } else
                (e = {}),
                  (e.m = Long.Ga.La()),
                  (e.ia = p += h),
                  (e.Rb = a.If),
                  f.splice(0, 0, d(e));
          if (r) {
            if (w > x) {
              for (; w >= x; )
                (e = {}),
                  (e.m = Long.Ga.La()),
                  (e.ia = w),
                  (e.Rb = a.Yj),
                  f.push(d(e)),
                  (w -= v);
              w != x &&
                (f.splice(f.length - 1, 1),
                (e = {}),
                (e.m = Long.Ga.La()),
                (e.ia = x),
                (e.Rb = a.Yj),
                f.push(d(e)));
              if ((e = f[f.length - 1]))
                (e.cells[0].className += " sep"),
                  (e.cells[1].className += " sep"),
                  (e.cells[2].className += " sep");
            }
          } else
            (e = { ia: null }),
              (e.type = a.Yj),
              (e.cells = [
                { content: "", className: "spread sep" },
                {
                  content:
                    '<span class="i"></span><span class="i"></span><span class="i"></span>',
                  className: "spread sep",
                },
                { content: "", className: "spread sep" },
              ]),
              f.push(e);
          if (n)
            for (q = k = 0; k < g; k++, q++)
              if ((c = n[q])) {
                p = c.ia;
                if (0 !== q)
                  for (y = n[q - 1].ia; p != y - h && k < g; )
                    (e = {}),
                      (e.m = Long.Ga.La()),
                      (e.ia = y -= h),
                      (e.Rb = a.Yf),
                      f.push(d(e)),
                      k++;
                e = d(c, l);
                f.push(e);
              } else
                (e = {}),
                  (e.m = Long.Ga.La()),
                  (e.ia = p -= h),
                  (e.Rb = a.Yf),
                  f.push(d(e));
        } else {
          k = h = p = 0;
          q = b.length;
          for (r = 0; k < q; k++, r++)
            if ((c = b[k])) p++, (e = d(c, l)), f.splice(0, 0, e);
          if ((e = f[f.length - 1]))
            (e.cells[0].className += " sep"),
              (e.cells[1].className += " sep"),
              (e.cells[2].className += " sep");
          k = 0;
          q = n.length;
          for (r = 0; k < q; k++, r++)
            if ((c = n[k])) h++, (e = d(c, l)), f.push(e);
          if (p < g || h < g) {
            if (p < g)
              for (c = 0, k = g - p; c < k; c++)
                (e = {
                  ia: null,
                  type: null,
                  cells: [
                    { content: "", className: "empty" },
                    {
                      content: "",
                      className: "empty",
                    },
                    { content: "", className: "empty" },
                  ],
                }),
                  f.splice(0, 0, e);
            if (h < g)
              for (c = 0, g = g - h; c < g; c++)
                (e = {
                  ia: null,
                  type: null,
                  cells: [
                    { content: "", className: "empty" },
                    { content: "", className: "empty" },
                    { content: "", className: "empty" },
                  ],
                }),
                  f.push(e);
          }
        }
      }
      for (; f.length < wa; )
        (e = {
          ia: null,
          type: null,
          cells: [
            { content: "", className: "back" },
            { content: "", className: "back" },
            { content: "", className: "back" },
          ],
        }),
          f.push(e);
      k = 0;
      for (q = f.length; k < q; k++) if ((e = f[k])) (e.id = k), ma.Zg(e);
    }
  }
  function h(a) {
    var b = X.data.eb,
      c = ga.wa.u(la.l),
      d = 0,
      e = 0;
    c &&
      (a &&
        c.Xe &&
        (0 < Fa.f() && (d = (c.Xe - Fa.f() * la.Fb).normalize(la.j)),
        0 < ya.f() && (e = (c.Xe + ya.f() * la.Fb).normalize(la.j))),
      !a &&
        c.Ye &&
        (0 < Fa.f() && (d = (c.Ye + Fa.f() * la.Fb).normalize(la.j)),
        0 < ya.f() && (e = (c.Ye - ya.f() * la.Fb).normalize(la.j))),
      U.Ag.LB(la.l, U.Wa.zj(Ba.f()), a ? b.Ja : b.Va, a ? c.Xe : c.Ye, d, e));
  }
  function b() {
    var a = X.data.bm;
    za.ja({ id: "sell_limit", visible: !1 });
    za.ja({ id: "buy_limit", visible: !1 });
    za.ja({ id: "sep_limit", visible: !1 });
    za.ja({ id: "sell_stop", visible: !1 });
    za.ja({ id: "buy_stop", visible: !1 });
    za.ja({ id: "sep_stop", visible: !1 });
    var b = !U.P.ih() || !la.hl(),
      c = ma.Db();
    if (!isNaN(c) && ((c = ma.iq()[c]), !b && c && c.ia)) {
      var b = la.j,
        b = (c.ia / Math.pow(10, b)).toFixed(b),
        c = c.type,
        d = Ba.f().toFixed(2);
      za.ja({ id: "sell_limit", visible: c == a.If || c == a.Zl || c == a.Yj })
        .Yh("sell_limit", "Sell Limit " + d)
        .Vi("sell_limit", b);
      za.ja({ id: "buy_limit", visible: c == a.Yf || c == a.Yl || c == a.Yj })
        .Yh("buy_limit", "Buy Limit " + d)
        .Vi("buy_limit", b);
      za.ja({ id: "sep_limit", visible: !!c || c == a.Yj });
      za.ja({ id: "sell_stop", visible: c == a.Yf || c == a.Yl })
        .Yh("sell_stop", "Sell Stop " + d)
        .Vi("sell_stop", b);
      za.ja({ id: "buy_stop", visible: c == a.If || c == a.Zl })
        .Yh("buy_stop", "Buy Stop " + d)
        .Vi("buy_stop", b);
      za.ja({ id: "sep_stop", visible: !!c });
    }
    a = ga.B.u("books_table_config");
    za.ja({ id: "extended_mode", checked: !!(a & oa.mo), visible: !!la.Yk });
    za.ja({
      id: "with_spread",
      checked: !!(a & oa.Mv),
      visible: !!(a & oa.mo),
    });
    za.ja({ id: "volume_in_points", checked: !!(a & oa.Lv) });
    za.ja({ id: "in_separate_window", checked: !(a & oa.Sr) });
    b = !la.Yk;
    Ma.g(b)
      .ie(ba.ce.Me("extended_mode", b))
      .s(!!(a & oa.mo) && !b);
    b = !(a & oa.mo);
    La.g(b)
      .ie(ba.ce.Me("spread", b))
      .s(!!(a & oa.Mv) && !b);
  }
  function a() {
    if (sa && !sa.De()) {
      var a, b, d, e;
      sa.Le()
        ? ((b = ba.rf.Vo + ba.rf.an()),
          (d = ba.Bi.Dq()),
          (e = ba.Bi.RN() - 2),
          (a = ba.Bi.QN()),
          sa.Aq(a).$o(b).jo(d).Nv(e).$l("").b("z-index", "9000"))
        : ((a = ga.B.u("books_window_left")),
          (b = ga.B.u("books_window_top")),
          (d = Math.min(46 * (la.Yk || 10) + 186, window.innerHeight - 50)),
          sa.Nv(340).$l(d).b("z-index", "14999"),
          void 0 !== a && void 0 !== b ? sa.$o(b).Aq(a).jo("") : sa.bI());
      Wa = la.Yk;
      a = Math.floor(ja.Gf().offsetHeight / 23 / 2);
      Wa > a && (Wa = a);
      wa = 2 * a;
      ma.vc(c(a));
    }
  }
  function g() {
    var a = [];
    a.push({ id: "volume", content: da.LN, align: "center" });
    a.push({ id: "price", content: da.IN, align: "center" });
    a.push({ id: "trade", content: da.KN, align: "center" });
    return { ej: a };
  }
  function d(a, b) {
    var c = X.data.bm,
      d = "",
      e = a.Rb,
      g = !!(ga.B.u("books_table_config") & oa.Lv);
    switch (e) {
      case c.If:
      case c.Zl:
        d += " red";
        break;
      case c.Yf:
      case c.Yl:
        d += " blue";
    }
    c = {};
    c.ia = a.ia;
    c.type = e;
    c.cells = [];
    if (a.m && !a.m.ab()) {
      e =
        '<div class="bar" style="width:' +
        a.m.Ki(Long.ec("100")).Al(b).toString() +
        '%;">&nbsp;</div><div class="vol">';
      if (la.mh())
        if (g) e += U.Wa.od(a.m).gc(la.kk);
        else
          var h = U.Wa.od(a.m.Al(Long.ec(la.Bc + ""))),
            g = U.Wa.En(la.A.sg),
            k = U.Wa.YK(h),
            g = Math.max(g, k),
            e = e + h.gc(g);
      else e += ba.F.ro(U.Wa.od(a.m));
      e += "</div>";
    } else e = "";
    h = {};
    h.content = e;
    h.className = "volume " + d;
    c.cells.push(h);
    g = la.j;
    e = (a.ia / Math.pow(10, g)).normalize(g);
    h = {};
    h.content = e.toFixed(g);
    h.className = "price " + d;
    c.cells.push(h);
    c.cells.push(f(a, a));
    return c;
  }
  function f(a, b) {
    var c = X.data.eb,
      d = X.data.bm,
      e = {},
      f = "",
      g = "",
      h = !!(ga.B.u("books_table_config") & oa.Lv),
      k = ra.WK,
      l = a.Rb == d.Yf,
      m = a.Rb == d.If,
      d = a.Rb == d.Yj;
    pa &&
      pa.m &&
      pa.m.lf(Long.Ga) &&
      (0 < pa.Mb &&
        (pa.Mb * Math.pow(10, pa.j)).normalize(0) == b.ia &&
        (f.length && (f += ", "),
        (f += z(ra.w2) + " "),
        (f = la.mh()
          ? h
            ? f + ba.F.ro(U.Wa.od(pa.m))
            : f + ba.F.yu(U.Wa.Uf(pa.m, la.Bc), !0)
          : f + ba.F.ro(U.Wa.od(pa.m), !0)),
        g || (g = "yellow")),
      0 < pa.Qb &&
        (pa.Qb * Math.pow(10, pa.j)).normalize(0) == b.ia &&
        (f.length && (f += ", "),
        (f += z(ra.x2) + " "),
        (f = la.mh()
          ? h
            ? f + ba.F.ro(U.Wa.od(pa.m))
            : f + ba.F.yu(U.Wa.Uf(pa.m, la.Bc), !0)
          : f + ba.F.ro(U.Wa.od(pa.m), !0)),
        g || (g = "yellow")));
    if (Pa)
      for (var n, q = 0, r = Pa.length; q < r; q++)
        if ((n = Pa[q]))
          if (((k = (n.N * Math.pow(10, n.j)).normalize(0)), k == b.ia)) {
            switch (n.yb) {
              case c.Lc:
                k = a.ia != b.ia ? (l || d ? ra.DD : ra.ED) : ra.DD;
                g || (g = "blue");
                break;
              case c.we:
                k = a.ia != b.ia ? (m ? ra.ED : ra.DD) : ra.ED;
                g || (g = "blue");
                break;
              case c.Zc:
                k = a.ia != b.ia ? (m || d ? ra.FD : ra.GD) : ra.FD;
                g || (g = "red");
                break;
              case c.Ee:
                k = a.ia != b.ia ? (l ? ra.GD : ra.FD) : ra.GD;
                g || (g = "red");
                break;
              default:
                k = ra.WK;
            }
            0 < f.length && (f += ", ");
            f += z(k) + " ";
            f = la.mh()
              ? h
                ? f + ba.F.ro(U.Wa.od(n.Ff))
                : f + ba.F.yu(U.Wa.Uf(n.wc, la.Bc), !0)
              : f + ba.F.ro(U.Wa.od(n.Ff), !0);
          }
    c = w(a);
    h = p(a);
    e.className = "trade " + g;
    a: if (((g = X.data.Fc), (l = X.data.eb), (m = X.data.bm), w(a))) {
      k = new X.data.bi();
      k.aa = g.Pg;
      k.l = la.l;
      k.j = la.j;
      switch (a.Rb) {
        case m.If:
          k.da = l.Zc;
          break;
        case m.Yf:
          k.da = l.Ee;
          break;
        case m.Yj:
          k.da = l.Zc;
          break;
        default:
          g = void 0;
          break a;
      }
      k.m = U.Wa.zj(Ba.f());
      k.N = (a.ia / Math.pow(10, la.j)).normalize(la.j);
      0 < Fa.f() && (k.C = (k.N + Fa.f() * la.Fb).normalize(la.j));
      0 < ya.f() && (k.D = (k.N - ya.f() * la.Fb).normalize(la.j));
      g = U.Re.OB(k);
    } else g = "";
    g =
      '<div class="but sell' +
      (c ? "" : " disabled") +
      '" title="' +
      g +
      '"><span></span></div><div class="but buy' +
      (h ? "" : " disabled") +
      '" title="';
    a: if (((c = X.data.Fc), (h = X.data.eb), (l = X.data.bm), p(a))) {
      m = new X.data.bi();
      m.aa = c.Pg;
      m.l = la.l;
      m.j = la.j;
      switch (a.Rb) {
        case l.If:
          m.da = h.we;
          break;
        case l.Yf:
          m.da = h.Lc;
          break;
        case l.Yj:
          m.da = h.Lc;
          break;
        default:
          c = void 0;
          break a;
      }
      m.m = U.Wa.zj(Ba.f());
      m.N = (a.ia / Math.pow(10, la.j)).normalize(la.j);
      0 < Fa.f() && (m.C = (m.N + Fa.f() * la.Fb).normalize(la.j));
      0 < ya.f() && (m.D = (m.N - ya.f() * la.Fb).normalize(la.j));
      c = U.Re.OB(m);
    } else c = "";
    e.content = g + c + '"><span></span></div>' + f;
    return e;
  }
  function c(a) {
    for (var b = [], c = 0, d = 0; d < a; d++)
      b.push({
        id: c++,
        cells: [
          { className: "empty", content: "" },
          { className: "empty", content: "" },
          { className: "empty", content: "" },
        ],
      });
    b[b.length - 1].cells[0].className += " sep";
    b[b.length - 1].cells[1].className += " sep";
    b[b.length - 1].cells[2].className += " sep";
    for (d = 0; d < a; d++)
      b.push({
        id: c++,
        cells: [
          { className: "empty", content: "" },
          { className: "empty", content: "" },
          { className: "empty", content: "" },
        ],
      });
    return b;
  }
  function z(a) {
    return "sl tp SL SS BL BS N/A".split(" ")[a];
  }
  function A(a) {
    for (; a; ) {
      if ("div" == V.md(a) && V.wg(a, "but")) return a;
      a = V.Ad(a);
    }
    return null;
  }
  function m(a, b) {
    return a.ia < b.ia ? 1 : a.ia > b.ia ? -1 : 0;
  }
  function u(a, b) {
    return a.ia > b.ia ? 1 : a.ia < b.ia ? -1 : 0;
  }
  function q() {
    var a = ba.ce.Me,
      b = [];
    b.push(ka("buy_limit", "Buy Limit", a("buy_limit")));
    b.push(ka("sell_limit", "Sell Limit", a("sell_limit")));
    b.push({ id: "sep_limit", ji: !0 });
    b.push(ka("sell_stop", "Sell Stop", a("sell_limit")));
    b.push(ka("buy_stop", "Buy Stop", a("buy_limit")));
    b.push({ id: "sep_stop", ji: !0 });
    b.push(ka("extended_mode", da.FN));
    b.push(ka("with_spread", da.VJ));
    b.push(ka("volume_in_points", da.HN));
    b.push(ka("in_separate_window", da.GN));
    return b;
  }
  function w(a) {
    var b = X.data.Yi,
      c = X.data.bm,
      d = X.data.dd,
      e = X.data.Tf,
      f = !1;
    if (
      !(
        U.P.ih() &&
        la.hl() &&
        la.A &&
        (la.A.Rh == b.Ev ||
          la.A.Rh == b.Fv ||
          (pa && pa.m.lf(Long.Ga) && pa.zb()))
      )
    )
      return !1;
    if (a) {
      f = !U.$f.CG(a.ia);
      switch (a.Rb) {
        case c.If:
        case c.Yj:
          f = la.gl(d.zo);
          break;
        case c.Yf:
          f = la.gl(d.Ao);
      }
      if ((b = ga.wa.u(la.l)))
        (b = (b.Ye * Math.pow(10, la.j)).normalize(0)),
          f &&
            la.A.$d != e.Eg &&
            0 < la.A.Ah &&
            (f = b >= a.ia + la.A.Ah || b + la.A.Ah <= a.ia);
    }
    return f;
  }
  function p(a) {
    var b = X.data.Yi,
      c = X.data.bm,
      d = X.data.dd,
      e = X.data.Tf,
      f = !1;
    if (
      !(
        U.P.ih() &&
        la.hl() &&
        la.A &&
        (la.A.Rh == b.Ev ||
          la.A.Rh == b.Fv ||
          (pa && pa.m.lf(Long.Ga) && pa.uc()))
      )
    )
      return !1;
    if (a) {
      f = !U.$f.CG(a.ia);
      switch (a.Rb) {
        case c.Yf:
        case c.Yj:
          f = la.gl(d.zo);
          break;
        case c.If:
          f = la.gl(d.Ao);
      }
      if ((b = ga.wa.u(la.l)))
        (b = (b.Xe * Math.pow(10, la.j)).normalize(0)),
          f &&
            la.A.$d != e.Eg &&
            0 < la.A.Ah &&
            (f = b >= a.ia + la.A.Ah || b + la.A.Ah <= a.ia);
    }
    return f;
  }
  function n() {
    if (sa.De()) {
      var a = ga.B.u("books");
      a && r(a);
    }
  }
  function x() {
    k();
  }
  function C() {
    k();
  }
  function O() {
    sa && !sa.De() && l();
  }
  function I(a) {
    la &&
      (U.fd.pl(la.l),
      ga.fd.Ng(la.l, x),
      ga.wa.xe(la.l, C),
      ga.O.Ng(la.l, n),
      (la = null),
      a ||
        setTimeout(function () {
          ga.B.u("books", 0);
          ga.B.oj("block");
        }));
  }
  function G() {
    sa &&
      !sa.Le() &&
      (ga.B.u("books_window_left", sa.Aq()),
      ga.B.u("books_window_top", sa.$o()));
  }
  function F() {
    var a = ga.B.u("books_table_config"),
      a = a.Lj(oa.Sr);
    ga.B.u("books_table_config", a);
    ga.B.oj("block");
  }
  function y() {
    var a = Fa.gH();
    a && ia.h(4 > a.value.length);
  }
  function M() {
    var a = ya.gH();
    a && Da.h(4 > a.value.length);
  }
  function D() {}
  function L() {
    h(!1);
  }
  function B() {
    h(!0);
  }
  function Q() {
    pa && U.Ag.KB(pa);
  }
  function N() {
    e();
  }
  function K(a) {
    ma.sL = null;
    ma.rL = null;
    if ((a = a.target) && (a = A(a)) && !V.wg(a, "disabled")) {
      var b = V.Ad(V.Ad(V.Ad(V.Ad(a))));
      b && ((ma.sL = b.rowIndex), (ma.rL = a.className));
    }
  }
  function P(a) {
    if (!a.button && (a = a.target)) {
      var b = A(a);
      if (
        b &&
        b.className == ma.rL &&
        !V.wg(b, "disabled") &&
        (a = V.Ad(V.Ad(V.Ad(V.Ad(b))))) &&
        a.rowIndex == ma.sL &&
        (a = parseFloat(
          V.Xb(V.Xb(V.Vl(V.Ad(V.Ad(V.Ad(b)))))).innerHTML
        ).normalize(la.j)) &&
        (b = b.title)
      ) {
        var c = X.data.eb,
          d;
        -1 !== b.indexOf("sell limit") && (d = c.Zc);
        -1 !== b.indexOf("sell stop") && (d = c.Ee);
        -1 !== b.indexOf("buy limit") && (d = c.Lc);
        -1 !== b.indexOf("buy stop") && (d = c.we);
        if (d) {
          var c = (b = 0),
            e = U.Wa.zj(Ba.f());
          0 < Fa.f() && (b = a + Fa.f() * la.Fb);
          0 < ya.f() && (c = a + ya.f() * la.Fb);
          U.Ag.IB(la.l, e, d, a, 0, b, c);
        }
      }
    }
  }
  function T() {
    b();
  }
  function R(a) {
    var b = X.data.bm,
      c = ma.iq();
    c && (a = c[a]) && (a.type == b.Yj ? H("with_spread") : H("extended_mode"));
  }
  function H(a, b) {
    if ("in_separate_window" == a) F();
    else if (
      "extended_mode" == a ||
      "volume_in_points" == a ||
      "with_spread" == a
    ) {
      var c = 0;
      "extended_mode" == a && (c = oa.mo);
      "volume_in_points" == a && (c = oa.Lv);
      "with_spread" == a && (c = oa.Mv);
      var d = ga.B.u("books_table_config"),
        d = d.Lj(c);
      ga.B.u("books_table_config", d);
      c == oa.mo && ga.B.oj("block");
    } else if (
      ((d = X.data.eb),
      "sell_limit" == a && (c = d.Zc),
      "sell_stop" == a && (c = d.Ee),
      "buy_limit" == a && (c = d.Lc),
      "buy_stop" == a && (c = d.we),
      c)
    ) {
      var e = (d = 0),
        f = U.Wa.zj(Ba.f()),
        g = parseFloat(b.key);
      0 < Fa.f() && (d = g + Fa.f() * la.Fb);
      0 < ya.f() && (e = g + ya.f() * la.Fb);
      U.Ag.IB(la.l, f, c, g, 0, d, e);
    }
  }
  function S() {
    sa.De() || l();
  }
  function Z() {
    if (!sa.De()) {
      k();
      b();
      var a = !!(ga.B.u("books_table_config") & oa.Sr);
      sa.Le() != a && (sa.Le(a), l());
    }
  }
  function W() {
    H("extended_mode");
  }
  function Y() {
    H("with_spread");
  }
  var V = E.va,
    ea = E.Qa,
    ha = E.controls,
    fa = E.oc,
    aa = E.ba,
    X = E.V,
    ga = X.la,
    U = X.control,
    ba = X.view,
    da = E.ba.xa,
    ca = E.Ma,
    ka = E.ma.bn,
    oa = (ba.fF = {});
  oa.mo = 1;
  oa.Lv = 2;
  oa.Sr = 4;
  oa.Mv = 8;
  var ra = { w2: 0, x2: 1, FD: 2, GD: 3, DD: 4, ED: 5, WK: 6 },
    na = (E.V.view.fd = {});
  na.ha = v;
  na.na = r;
  na.oa = function () {
    sa && sa.oa();
    I();
  };
  na.De = function () {
    return !sa || sa.De() ? !0 : !1;
  };
  na.Le = function () {
    return sa && sa.Le();
  };
  na.Dd = function () {
    if (!sa || sa.De()) return na;
    l();
    return na;
  };
  var sa,
    va,
    ma,
    Fa,
    ia,
    ya,
    Da,
    Ba,
    Ia,
    Ka,
    xa,
    Ca,
    ja,
    za,
    Ma,
    La,
    la,
    Wa,
    wa,
    pa,
    Pa;
})();
(function () {
  function v() {
    var a = A.B.u("market_watch_width");
    void 0 === a && (a = m.Ib.rG());
    return a;
  }
  function r() {
    var a = 4,
      b = A.B.u("toolbox_height");
    void 0 === b && (b = 234);
    m.Jh.De() || (a += b + 3);
    b = m.rf.an();
    250 > f.window.innerHeight - a - b - m.rf.Vo &&
      (a = f.window.innerHeight - b - m.rf.Vo - 250);
    return a;
  }
  function l() {
    var a = A.B.u("books_width");
    void 0 === a && (a = 334);
    return a;
  }
  function e() {
    var a = A.B.u("toolbox_height");
    void 0 === a && (a = 234);
    var b = f.window.innerHeight - r() + 3;
    f.window.innerHeight - a - 4 < b && (a = f.window.innerHeight - b - 3);
    return a;
  }
  function k() {
    var a = v(),
      b = l(),
      c = e(),
      d = A.B.u("block") || 0;
    f.$a(w, {
      left: 4 + a + "px",
      bottom: c * Number(!m.Jh.De()) + 4 + "px",
      top: m.rf.an() + "px",
      display: !m.Ib.De() && m.Ib.Le() ? "block" : "none",
    });
    f.$a(p, {
      left: (a + 4) * Number(!m.Ib.De() && m.Ib.Le()) + 3 + b + "px",
      bottom: c * Number(!m.Jh.De()) + 4 + "px",
      top: m.rf.an() + "px",
      display: !m.fd.De() && m.fd.Le() ? "block" : "none",
    });
    f.$a(q, { bottom: 4 + c + "px", display: d.ki(2) ? "block" : "none" });
  }
  function h() {
    k();
  }
  function b() {
    k();
  }
  function a(a) {
    n = { target: this };
    this == w &&
      ((n.left = parseInt(w.style.left, 10)), (n.zE = a.clientX - n.left));
    this == p &&
      ((n.left = parseInt(p.style.left, 10)), (n.zE = a.clientX - n.left));
    this == q &&
      ((n.bottom = parseInt(w.style.bottom, 10)),
      (n.E3 = window.innerHeight - a.clientY - n.bottom));
    f.$a(this, "z-index", "100000");
    f.hb(this, "press");
    c.i(f.window, "mousemove", g);
    c.i(f.window, "mouseup", d);
  }
  function g(a) {
    if (n && n.target) {
      a.preventDefault();
      var b = n.target,
        c,
        d;
      f.hb(b, "hover");
      b == w &&
        ((d = window.innerWidth - 100),
        f.$a(w, "left", Math.min(Math.max(a.clientX - n.zE, 334), d) + "px"),
        f.$a(f.body, "cursor", "w-resize"));
      b == p &&
        ((c = (v() + 3) * Number(!m.Ib.De() && m.Ib.Le()) + 337),
        (d = window.innerWidth - 100),
        f.$a(p, "left", Math.min(Math.max(a.clientX - n.zE, c), d) + "px"),
        f.$a(f.body, "cursor", "w-resize"));
      b == q &&
        ((c = 70),
        (d = window.innerHeight - m.rf.an() - m.rf.Vo - 250),
        f.$a(
          q,
          "bottom",
          Math.min(d, Math.max(c, window.innerHeight - a.clientY - n.E3)) + "px"
        ),
        f.$a(f.body, "cursor", "s-resize"));
    }
  }
  function d() {
    if (n && n.target) {
      var a = n.target,
        b;
      a == w &&
        ((b = parseInt(w.style.left, 10)),
        3 < Math.abs(b - n.left) && A.B.u("market_watch_width", b));
      a == p &&
        ((b = parseInt(p.style.left, 10)),
        3 < Math.abs(b - n.left) &&
          A.B.u(
            "books_width",
            b - (3 + v()) * Number(!m.Ib.De() && m.Ib.Le())
          ));
      a == q &&
        ((b = parseInt(q.style.bottom, 10)),
        3 < Math.abs(b - n.bottom) &&
          A.B.u("toolbox_height", parseInt(q.style.bottom, 10)));
      f.$a(a, "z-index", "");
      f.hb(a, "press", !0);
      f.hb(a, "hover", !0);
      f.$a(f.body, "cursor", "default");
      c.hc(f.window, "mousemove", g);
      c.hc(f.window, "mouseup", d);
    }
  }
  var f = E.va,
    c = E.oc,
    z = E.V,
    A = z.la,
    m = z.view,
    u = (E.V.view.Bi = {});
  u.ha = function () {
    if (u.ua) return u;
    w = f.sb("div");
    f.hb(w, "page-sizer ver");
    f.tb(f.body, w);
    c.i(w, "mousedown", a);
    p = f.sb("div");
    f.hb(p, "page-sizer ver");
    f.tb(f.body, p);
    c.i(p, "mousedown", a);
    q = f.sb("div");
    f.hb(q, "page-sizer hor");
    f.tb(f.body, q);
    c.i(q, "mousedown", a);
    k();
    A.B.Vb(
      "block books_table_config toolbox_height market_watch_width books_width symbols_table_columns",
      h
    );
    k();
    c.i(f.window, "resize", b);
    u.ua = !0;
    return u;
  };
  u.dca = 3;
  u.aV = 4;
  u.wB = v;
  u.Dq = r;
  u.E2 = e;
  u.RN = l;
  u.QN = function () {
    var a = 4;
    m.Ib.Le() && !m.Ib.De() && (a += m.Bi.wB() + 3);
    return a;
  };
  u.NP = function () {
    var a = 4;
    !m.Ib.De() && m.Ib.Le() && (a += v() + 3);
    !m.fd.De() && m.fd.Le() && (a += l() + 3);
    return a;
  };
  var q, w, p, n;
})();
(function () {
  function v() {
    var a = {
        position: "absolute",
        width: "130px",
        left: "0",
        textAlign: "right",
        "margin-top": "5px",
      },
      b = { position: "absolute", width: "110px", left: "135px" },
      c = { position: "absolute", left: "135px" },
      f = { position: "absolute", bottom: "10px", width: "80px" };
    n = q(d.page.Text)
      .Text(u.hF.split("%MIN%").join(A.H.st || 8))
      .b({ padding: "14px" });
    var m = q(d.page.Text, "change-password-login")
      .Text(u.ZN + ":")
      .b(a)
      .b({ top: "54px" });
    x = q(d.input.Text)
      .o("change-password-login")
      .f("")
      .g(!0)
      .b(b)
      .b({ top: "54px" });
    var r = q(d.page.Text, "change-password-current")
        .Text(u.WN + ":")
        .b(a)
        .b({ top: "84px" }),
      v = q(d.page.Text)
        .Text(u.XN)
        .b(a)
        .b({ top: "84px", left: "252px", width: "auto", textAlign: "left" });
    C = q(d.input.Text, "password")
      .o("change-password-current")
      .f("")
      .b(b)
      .b({ top: "84px" })
      .i("keydown", l)
      .i("keyup", l)
      .i("change", l)
      .i("keydown", e);
    O = q(d.input.No, "change-password-type")
      .o("change-password-master")
      .b(c)
      .b({ top: "118px" });
    var z = q(d.page.Text, "change-password-master").Text(u.$N).b(a).b({
      top: "118px",
      left: "154px",
      width: "auto",
      textAlign: "left",
      "margin-top": "-1px",
    });
    I = q(d.input.No, "change-password-type")
      .o("change-password-investor")
      .b(c)
      .b({ top: "138px" });
    var c = q(d.page.Text, "change-password-investor")
        .Text(u.YN)
        .b(a)
        .b({
          top: "138px",
          left: "154px",
          width: "auto",
          textAlign: "left",
          "margin-top": "-1px",
        }),
      D = q(d.page.Text, "change-password-new")
        .Text(u.aO + ":")
        .b(a)
        .b({ top: "164px" });
    G = q(d.input.Text, "password")
      .o("change-password-new")
      .f("")
      .b(b)
      .b({ top: "164px" })
      .i("keydown", l)
      .i("keyup", l)
      .i("change", l)
      .i("keydown", e);
    a = q(d.page.Text, "change-password-confirm")
      .Text(u.VN + ":")
      .b(a)
      .b({ top: "164px", "margin-left": "250px", width: "100px" });
    F = q(d.input.Text, "password")
      .o("change-password-confirm")
      .f("")
      .b(b)
      .b({ top: "164px", "margin-left": "220px" })
      .i("keydown", l)
      .i("keyup", l)
      .i("change", l)
      .i("keydown", e);
    b = q(d.page.Text).b({
      position: "absolute",
      bottom: "42px",
      left: "10px",
      right: "10px",
      height: "1px",
      background: "#A0A0A0",
      "border-bottom": "1px solid #FFFFFF",
    });
    y = q(d.input.Ua)
      .Text(u.bO)
      .b(f)
      .b({ right: "50%", "margin-right": "3px" })
      .i("click", k);
    M = q(d.input.Ua)
      .Text(u.UN)
      .b(f)
      .b({
        left: "50%",
        "margin-left": "3px",
      })
      .i("click", h);
    p = q(d.page.Window, { title: u.cO, width: 480, height: 280, Qk: !0 })
      .Uc(g.body)
      .c(n)
      .c(m)
      .c(x)
      .c(r)
      .c(v)
      .c(C)
      .c(O)
      .c(z)
      .c(I)
      .c(c)
      .c(D)
      .c(G)
      .c(a)
      .c(F)
      .c(b)
      .c(y)
      .c(M)
      .oa();
    w.ua = !0;
    return w;
  }
  function r(a) {
    D = a;
  }
  function l() {
    var a = !0;
    D = null;
    C.f() && c.vg.bG(C.f().Bf(), r);
    G.K("invalid", !0);
    var b;
    if ((b = G.f())) {
      b = G.f();
      var d = A.H.st || 8;
      if (!b || b.length < d) b = !1;
      else {
        for (var e = (d = 0), f = 0, g, h = 0, k = b.length; h < k; h++)
          (g = b.charAt(h)) &&
            (isNaN(parseInt(g, 10))
              ? g.toUpperCase() != g.toLowerCase() &&
                (g == g.toUpperCase()
                  ? (f = 1)
                  : g == g.toLowerCase() && (e = 1))
              : (d = 1));
        b = 2 <= d + f + e;
      }
      b = !b;
    }
    b && ((a = !1), G.K("invalid"));
    F.K("invalid", !0);
    F.f() || (a = !1);
    F.f() && F.f() !== G.f() && ((a = !1), F.K("invalid"));
    y.g(!a);
  }
  function e(a) {
    a && 13 == a.keyCode && (y.g() || k());
  }
  function k() {
    if (C.f() && D.Df() == A.H.LM.Df()) {
      var a = c.rb;
      a.Ke(a.mb.us, b);
      m.Bb.iu(G.f(), I.s());
    } else
      C.jb().Gb(),
        (a = z.U),
        a.Wb(a.Ab.ERROR, A.H.oe, "current password error", !0, !0);
  }
  function h() {
    p.oa();
  }
  function b(d) {
    var e = c.rb;
    e.vn(e.mb.us, b);
    var f = z.U,
      g = "master",
      h = !0;
    I.s() && ((g = "investor"), (h = !1));
    d == e.Je.Za
      ? (h &&
          A.$c.Dx(A.H.ga, A.H.oe, function (a) {
            a && A.$c.qD(G.f());
          }),
        f.Wb(
          f.Ab.Za,
          f.types.Kd,
          ["change of ", g, " password completed"].join(""),
          !0,
          !0
        ),
        h && (e.Ke(e.mb.nn, a), m.Bb.Ql()),
        p.oa())
      : f.Wb(
          f.Ab.Za,
          f.types.Kd,
          ["change of ", g, " password failed"].join(""),
          !0,
          !0
        );
  }
  function a(b) {
    var d = c.rb;
    d.vn(d.mb.nn, a);
    b == d.Je.Za && z.Bb.Vj({ ga: x.f(), mf: G.f(), nf: L }).Um().na();
  }
  var g = E.va,
    d = E.controls,
    f = E.V,
    c = E.ba,
    z = f.view,
    A = f.la,
    m = f.control,
    u = E.ba.xa,
    q = E.Ma,
    w = (z.iu = {});
  w.ha = v;
  w.na = function () {
    w.ua || v();
    p.na();
    n.Text(u.hF.split("%MIN%").join(A.H.st || 8));
    L = A.H.oe;
    x.f(String(A.H.ga));
    O.s(!0);
    C.jb();
    y.g(!0);
    C.f("");
    G.f("");
    F.f("");
    l();
    return w;
  };
  w.oa = function () {
    w.ua || v();
    p.oa();
    return w;
  };
  var p, n, x, C, O, I, G, F, y, M, D, L;
})();
(function () {
  function v() {
    if (q.ua) return q;
    var b = {
        position: "absolute",
        width: "160px",
        left: "0",
        textAlign: "right",
        "margin-top": "5px",
      },
      c = { position: "absolute", width: "130px", left: "165px" },
      d = { position: "absolute", bottom: "10px", width: "80px" };
    p = u(g.page.Text).b({ padding: "14px" });
    var f = u(g.page.Text, "reset-password-login")
      .Text(m.IX + ":")
      .b(b)
      .b({ top: "64px" });
    n = u(g.input.Text)
      .o("reset-password-login")
      .f("")
      .g(!0)
      .b(c)
      .b({ top: "64px" });
    var h = u(g.page.Text, "reset-password-new")
        .Text(m.JX + ":")
        .b(b)
        .b({ top: "94px" }),
      v = u(g.page.Text)
        .Text(m.HX)
        .b(b)
        .b({ top: "94px", "text-align": "left", left: "300px", width: "auto" });
    x = u(g.input.Text, "password")
      .o("reset-password-new")
      .f("")
      .b(c)
      .b({ top: "94px" })
      .i("keydown", r)
      .i("keyup", r)
      .i("change", r)
      .i("keydown", l);
    b = u(g.page.Text, "reset-password-confirm")
      .Text(m.GX + ":")
      .b(b)
      .b({ top: "124px" });
    C = u(g.input.Text, "password")
      .o("reset-password-confirm")
      .f("")
      .b(c)
      .b({ top: "124px" })
      .i("keydown", r)
      .i("keyup", r)
      .i("change", r)
      .i("keydown", l);
    c = u(g.page.Text).b({
      position: "absolute",
      bottom: "42px",
      left: "10px",
      right: "10px",
      height: "1px",
      background: "#A0A0A0",
      "border-bottom": "1px solid #FFFFFF",
    });
    O = u(g.input.Ua)
      .Text(m.KX)
      .b(d)
      .b({ right: "50%", "margin-right": "3px" })
      .i("click", e);
    I = u(g.input.Ua)
      .Text(m.FX)
      .b(d)
      .b({ left: "50%", "margin-left": "3px" })
      .i("click", k);
    w = u(g.page.Window, { title: m.MX, width: 470, height: 240, Qk: !0 })
      .Uc(a.body)
      .c(p)
      .c(f)
      .c(n)
      .c(h)
      .c(x)
      .c(v)
      .c(b)
      .c(C)
      .c(c)
      .c(O)
      .c(I)
      .i("close", k)
      .oa();
    q.ua = !0;
    return q;
  }
  function r() {
    var a = !0;
    x.K("invalid", !0);
    var b;
    if ((b = x.f())) {
      b = x.f();
      var c = z.H.st || 8;
      if (!b || b.length < c) b = !1;
      else {
        for (var d = (c = 0), e = 0, f, g = 0, h = b.length; g < h; g++)
          (f = b.charAt(g)) &&
            (isNaN(parseInt(f, 10))
              ? f.toUpperCase() != f.toLowerCase() &&
                (f == f.toUpperCase()
                  ? (e = 1)
                  : f == f.toLowerCase() && (d = 1))
              : (c = 1));
        b = 2 <= c + e + d;
      }
      b = !b;
    }
    b && ((a = !1), x.K("invalid"));
    C.K("invalid", !0);
    C.f() || (a = !1);
    C.f() && C.f() !== x.f() && ((a = !1), C.K("invalid"));
    O.g(!a);
  }
  function l(a) {
    a && 13 == a.keyCode && (O.g() || e());
  }
  function e() {
    var a = f.rb;
    a.Ke(a.mb.us, h);
    A.Bb.iu(x.f());
  }
  function k() {
    w.oa();
    A.Bb.Ql();
  }
  function h(a) {
    var d = f.rb;
    d.vn(d.mb.us, h);
    var e = c.U;
    a == d.Je.Za
      ? (e.Wb(
          e.Ab.Za,
          e.types.Kd,
          "master password has been successfully changed, you can set investor password in the terminal settings",
          !0,
          !0
        ),
        d.Ke(d.mb.nn, b),
        A.Bb.Ql(),
        w.oa())
      : e.Wb(
          e.Ab.Za,
          e.types.Kd,
          ["failed to change password [", a, "]"].join(""),
          !0,
          !0
        );
  }
  function b(a) {
    var d = f.rb;
    d.vn(d.mb.nn, b);
    a == d.Je.Za && c.Bb.Vj({ ga: n.f(), mf: x.f(), nf: G }).Um().na();
  }
  var a = E.va,
    g = E.controls,
    d = E.V,
    f = E.ba,
    c = d.view,
    z = d.la,
    A = d.control,
    m = E.ba.xa,
    u = E.Ma,
    q = (c.mY = {});
  q.ha = v;
  q.na = function (a, b) {
    q.ua || v();
    w.na();
    p.Text(m.LX.split("%MIN%").join(z.H.st || 8));
    G = b;
    n.f(a);
    O.g(!0);
    x.f("").jb();
    C.f("");
    r();
    var d = c.U;
    d.Wb(d.Ab.Fn, G, "master password must be changed", !0, !0);
    return q;
  };
  q.oa = function () {
    q.ua || v();
    w.oa();
    return q;
  };
  var w, p, n, x, C, O, I, G;
})();
(function () {
  function v() {
    if (g.ua) return g;
    var f = h.xa.Db(),
      c = a(k.page.Text)
        .Text("MetaQuotes Software Corp.")
        .b({
          position: "absolute",
          top: "16px",
          left: "170px",
          right: "10px",
          "font-weight": "bold",
          "font-size": "12px",
        }),
      r = a(k.page.Text)
        .Text(
          '<img src="/trade/res/i/terminal/mt5_big_logo.png" width="123" height="141"/>'
        )
        .b({ position: "absolute", top: "10px", left: "18px" }),
      v = a(k.page.Text)
        .Text("MetaTrader 5 WebTerminal<br>Version: 5.00 rev 268<br>" + mb)
        .b({
          position: "absolute",
          bottom: "14px",
          left: "1px",
          width: "155px",
          "text-align": "center",
        }),
      m = a(k.page.Text)
        .Text(
          "MetaTrader 5 is designed for trading in financial markets, conducting technical analysis and using automated trading programs."
        )
        .b({ position: "absolute", top: "46px", left: "170px", right: "10px" }),
      u = a(k.page.Text)
        .Text(
          '<a target="_blank" href="http://www.metaquotes.net?utm_source=mt5webterminal&utm_campaign=' +
            f +
            '.about.box" style="font-size: 11px;">www.metaquotes.net</a><div></div><a target="_blank" href="https://www.mql5.com?utm_source=mt5webterminal&utm_campaign=' +
            f +
            '.about.box" style="font-size: 11px;">www.mql5.com</a>'
        )
        .b({ position: "absolute", top: "86px", left: "170px", right: "10px" }),
      q = a(k.page.Text)
        .Text(
          "Notice: this computer program is protected by copyright laws and international treaties. Unauthorized reproduction or distribution of this program or any portion of it, may result in severe civil and criminal penalties and will be prosecuted to the maximum extent possible under the law."
        )
        .b({
          position: "absolute",
          top: "130px",
          left: "170px",
          right: "10px",
          "font-size": "10px",
        }),
      f = a(k.page.Text)
        .Text(
          '<a target="_blank" href="http://www.metaquotes.net/licenses/webterminal?utm_source=mt5webterminal&utm_campaign=' +
            f +
            '.about.box" style="font-size: 11px;">Copyright 2001-' +
            nb +
            ", MetaQuotes Software Corp.</a>"
        )
        .b({
          position: "absolute",
          bottom: "14px",
          left: "170px",
          right: "10px",
        }),
      w = a(k.page.Text).b({
        position: "absolute",
        left: "156px",
        top: "16px",
        bottom: "16px",
        width: "1px",
        background: "#A0A0A0",
      }),
      p = a(k.input.Ua)
        .Text(b.kN)
        .i("click", l)
        .b({
          position: "absolute",
          bottom: "10px",
          right: "10px",
          width: "75px",
        });
    d = a(k.page.Window, { title: b.lN, width: 520, height: 256, Qk: !0 })
      .K("white")
      .Uc(e.body)
      .c(r)
      .c(v)
      .c(c)
      .c(m)
      .c(u)
      .c(q)
      .c(f)
      .c(p)
      .c(w)
      .oa();
    g.ua = !0;
    return g;
  }
  function r() {
    g.ua || v();
    d && d.oa();
    return g;
  }
  function l() {
    r();
  }
  var e = E.va,
    k = E.controls,
    h = E.controls,
    b = E.ba.xa,
    a = E.Ma,
    g = (E.V.view.pN = {});
  g.ha = v;
  g.na = function () {
    g.ua || v();
    d && d.na();
    return g;
  };
  g.oa = r;
  var d;
})();
var mb = "08 Jun 2021",
  nb = "2021";
(function () {
  function v() {
    var b = window.__webtrader_params;
    window.xr();
    m = b || {};
    b = m.demo_leverage;
    !b ||
      ("string" !== typeof b && "number" !== typeof b) ||
      (m.demo_leverage = [b]);
    m.ga = m.login;
    m.Np = m.trade_server;
    m.rfa = m.signal_server;
    m.sfa = m.ssl;
    m.fj = m.servers;
    m.$n = m.startup_mode;
    c.fc.WE = (m.user && m.user.name) || "";
    c.fc.Xt = (m.user && m.user.first_name) || "";
    c.fc.Yt = (m.user && m.user.second_name) || "";
    c.fc.Wt = (m.user && m.user.email) || "";
    c.fc.WE && !d.dB(c.fc.WE) && (c.fc.WE = "");
    c.fc.Xt && !d.dB(c.fc.Xt) && (c.fc.Xt = "");
    c.fc.Yt && !d.dB(c.fc.Yt) && (c.fc.Yt = "");
    c.fc.Wt && !d.kH(c.fc.Wt) && (c.fc.Wt = "");
    c.fc.cx = m.utm_source || "";
    c.fc.bx = m.utm_campaign || "";
    A.Bb.Ww = !!m.switch_platform;
    A.Bb.$n = m.startup_mode;
    c.Bb.w4 = void 0 === m.save_password ? !0 : m.save_password;
    c.Bb.fj =
      (m.fj || []).filter(function (a) {
        return 5 === a.mt;
      }) || [];
    z.$c.fj = m.fj || [];
    a.Wg.ha(m.gwt_servers);
    "0" === m.ga && (m.ga = "");
    b = [];
    b.push(["login: ", m.login || "not specified"].join(""));
    b.push(["trade_server: ", m.trade_server || "not specified"].join(""));
    b.push(
      [
        "servers: ",
        c.Bb.fj.reduce(function (a, b) {
          a && (a += ", ");
          return (a += b.name);
        }, "") || "not specified",
      ].join("")
    );
    c.U.Wb(
      c.U.Ab.Za,
      c.U.types.ae,
      ["Initializing start (", b.join(", "), ")"].join("")
    );
    a.vg.cU(r);
  }
  function r(a) {
    a
      ? c.U.Wb(c.U.Ab.ERROR, c.U.types.ae, "Error initializing crypto api")
      : c.U.Wb(
          c.U.Ab.Za,
          c.U.types.ae,
          "Initializing crypto api was successful"
        );
    f.Im.aS.Oo();
    f.Im.bS.Oo();
    f.Im.cS.Oo();
    f.Im.dS.Oo(l);
  }
  function l() {
    a.bd.ha(e);
    a.xo.ha(!1);
  }
  function e() {
    var d = [];
    a.bd.Uh() &&
      d.push("referrer: " + a.bd.Uh() + (a.bd.JD() ? " (trusted)" : ""));
    d.push("language: " + h.wE);
    d.push("timezone: GMT" + b.HS());
    d.push("default charset: " + h.defaultCharset);
    d.push(
      "localStorage: " +
        h.Pd +
        (h.Pd ? " (remaining space: " + b.DS(h.o4) + ")" : "")
    );
    d.push("indexedDB: " + !!h.indexedDB);
    d.push("cookie: " + !!document.cookie);
    d.push("webGL: " + h.yd);
    d.push("user-Agent: " + navigator.userAgent);
    c.U.Wb(
      c.U.Ab.Za,
      c.U.types.ae,
      "Initializing environment was successful (" + d.join(", ") + ")"
    );
    z.$c.fH(void 0, void 0, k);
  }
  function k(b) {
    b
      ? c.U.Wb(c.U.Ab.ERROR, c.U.types.ae, "Error initializing local storage")
      : c.U.Wb(
          c.U.Ab.Za,
          c.U.types.ae,
          "Initializing local storage was successful"
        );
    b = z.$c.bs(5) || [];
    var d;
    a.bd.xT("callback") && (a.xo.XU(), a.xo.ZJ(b));
    if ("no_ui" !== A.Bb.$n)
      if (
        (c.U.Wb(
          c.U.Ab.Za,
          c.U.types.Kd,
          ["MetaTrader Web Trader started (rev. 268, ", mb, ")"].join("")
        ),
        A.Bb.Ho())
      )
        a.xo.ZJ(b), A.Bb.ha(), c.Bb.ha().Lf().na();
      else if (
        (a.je.ha(),
        A.Bb.ha(),
        a.Tl.PushEvent("MetaTrader+5+Web+Run+Start"),
        g.hb(g.body, "gray"),
        c.rf.ha(),
        c.Ib.ha(),
        c.Jh.ha(),
        c.ce.ha(),
        c.O.ha(),
        c.nj.ha(),
        c.U.ha(),
        c.xc.ha(),
        c.Bi.ha(),
        (d = a.vg.IH(m.utm_source || window.location.hostname).Df()),
        z.B.u("referrer", d),
        z.B.sj(),
        z.ra.u("referrer", d),
        z.ra.sj(),
        c.Ib.xv("symbols"),
        m.ga && (z.H.ga = m.ga),
        m.Np && (z.H.oe = m.Np),
        c.Bb.ha().Lf(),
        "no_autologin" !== A.Bb.$n)
      ) {
        var e = { ga: m.ga, nf: m.Np };
        if (e.ga || e.nf)
          if ((c.Bb.Vj(e, a.bd.JD()).na(), e.ga)) {
            c.Bb.Um();
            return;
          }
        var f = a.bd.wx();
        if (b)
          for (var h = 0, k = b.length; h < k; h++)
            if (
              (d = b[h]) &&
              d.ga &&
              d.Pf &&
              d.mf !== z.$c.IW &&
              (!a.bd.mH() || (d.xE && -1 !== d.xE.split(",").indexOf(f + "")))
            ) {
              e.ga = d.ga;
              e.nf = d.Pf;
              c.Bb.Vj(e, a.bd.JD()).na(d.Li).Um();
              return;
            }
        "create_demo" === A.Bb.$n
          ? c.fc.bF()
          : "open_demo" === A.Bb.$n
          ? c.fc.Ps()
          : c.Bb.na();
      }
  }
  var h = E.Qa,
    b = E.ma,
    a = E.ba,
    g = E.va,
    d = E.gN,
    f = E.V,
    c = f.view,
    z = f.la,
    A = f.control,
    m;
  window.load = function () {
    v();
    window.__webtrader_params = null;
  };
  h.tM || (E.ha(), (E = window.J = void 0));
})();
